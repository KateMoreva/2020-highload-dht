<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (7,620 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (32 samples, 0.42%)</title><rect x="10.0" y="915.0" width="5.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.04%)</title><rect x="10.0" y="899.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="10.5" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.5" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (20 samples, 0.26%)</title><rect x="10.8" y="899.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.8" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (19 samples, 0.25%)</title><rect x="10.9" y="883.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.9" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.08%)</title><rect x="11.1" y="867.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.1" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="11.2" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.2" y="862.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.04%)</title><rect x="11.5" y="851.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="14.5" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (12 samples, 0.16%)</title><rect x="12.0" y="867.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.0" y="878.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (2 samples, 0.03%)</title><rect x="12.2" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.2" y="862.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (4 samples, 0.05%)</title><rect x="12.5" y="851.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.5" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.04%)</title><rect x="13.3" y="851.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="16.3" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="13.3" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="16.3" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.04%)</title><rect x="13.3" y="819.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.3" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="13.9" y="899.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.9" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (5 samples, 0.07%)</title><rect x="14.2" y="899.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="17.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="15.0" y="915.0" width="1.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="18.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="15.0" y="899.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="18.0" y="910.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="15.4" y="899.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="18.4" y="910.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.3 (6 samples, 0.08%)</title><rect x="15.7" y="899.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="18.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="16.0" y="883.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="16.0" y="867.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="19.0" y="878.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="16.3" y="851.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.3" y="862.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="16.3" y="835.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="19.3" y="846.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="16.3" y="819.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="19.3" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (14 samples, 0.18%)</title><rect x="16.7" y="915.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="19.7" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="17.0" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.0" y="910.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="17.0" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.0" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="17.3" y="899.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="20.3" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (8 samples, 0.10%)</title><rect x="17.6" y="899.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="20.6" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5,142 samples, 67.48%)</title><rect x="18.8" y="915.0" width="796.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.8" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5,142 samples, 67.48%)</title><rect x="18.8" y="899.0" width="796.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.8" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5,142 samples, 67.48%)</title><rect x="18.8" y="883.0" width="796.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.8" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (10 samples, 0.13%)</title><rect x="20.4" y="867.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.13%)</title><rect x="20.4" y="851.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (10 samples, 0.13%)</title><rect x="20.4" y="835.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (9 samples, 0.12%)</title><rect x="20.5" y="819.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (9 samples, 0.12%)</title><rect x="20.5" y="803.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (9 samples, 0.12%)</title><rect x="20.5" y="787.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.03%)</title><rect x="21.9" y="867.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="21.9" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (2 samples, 0.03%)</title><rect x="21.9" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (2 samples, 0.03%)</title><rect x="21.9" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (894 samples, 11.73%)</title><rect x="22.2" y="867.0" width="138.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.2" y="878.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (886 samples, 11.63%)</title><rect x="23.0" y="851.0" width="137.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.0" y="862.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (6 samples, 0.08%)</title><rect x="24.2" y="835.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (705 samples, 9.25%)</title><rect x="25.2" y="835.0" width="109.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.2" y="846.0">java/util/con..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (24 samples, 0.31%)</title><rect x="26.9" y="819.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (23 samples, 0.30%)</title><rect x="30.6" y="819.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.6" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (3 samples, 0.04%)</title><rect x="32.0" y="803.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="35.0" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (11 samples, 0.14%)</title><rect x="32.5" y="803.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="35.5" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.09%)</title><rect x="32.8" y="787.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="35.8" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.07%)</title><rect x="32.8" y="771.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="35.8" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.07%)</title><rect x="32.8" y="755.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="35.8" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="33.1" y="739.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="36.1" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="33.5" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="36.5" y="782.0"></text>
</g>
<g>
<title>Klass::class_loader() const (2 samples, 0.03%)</title><rect x="33.8" y="787.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="36.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (10 samples, 0.13%)</title><rect x="34.2" y="819.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (10 samples, 0.13%)</title><rect x="34.2" y="803.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.2" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.04%)</title><rect x="35.2" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.2" y="798.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (3 samples, 0.04%)</title><rect x="35.2" y="771.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="38.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (27 samples, 0.35%)</title><rect x="35.7" y="819.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.04%)</title><rect x="36.9" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.04%)</title><rect x="36.9" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.04%)</title><rect x="36.9" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.9" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.04%)</title><rect x="36.9" y="755.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="39.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="37.1" y="739.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="40.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="37.1" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="40.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="37.1" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="40.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (16 samples, 0.21%)</title><rect x="37.4" y="803.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (16 samples, 0.21%)</title><rect x="37.4" y="787.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (3 samples, 0.04%)</title><rect x="38.3" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (7 samples, 0.09%)</title><rect x="38.8" y="771.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (7 samples, 0.09%)</title><rect x="38.8" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (7 samples, 0.09%)</title><rect x="38.8" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (20 samples, 0.26%)</title><rect x="39.9" y="819.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.26%)</title><rect x="39.9" y="803.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.17%)</title><rect x="40.5" y="787.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.17%)</title><rect x="40.5" y="771.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.17%)</title><rect x="40.5" y="755.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.5" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="40.5" y="739.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="43.5" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.13%)</title><rect x="41.0" y="739.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="44.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.13%)</title><rect x="41.0" y="723.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="44.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.13%)</title><rect x="41.0" y="707.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="44.0" y="718.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.09%)</title><rect x="41.4" y="691.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="44.4" y="702.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.09%)</title><rect x="41.4" y="675.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="44.4" y="686.0"></text>
</g>
<g>
<title>futex_wake_op (7 samples, 0.09%)</title><rect x="41.4" y="659.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="44.4" y="670.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.07%)</title><rect x="41.7" y="643.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="44.7" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.07%)</title><rect x="41.7" y="627.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="44.7" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.07%)</title><rect x="41.7" y="611.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="44.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.04%)</title><rect x="42.5" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (590 samples, 7.74%)</title><rect x="43.0" y="819.0" width="91.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.0" y="830.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.03%)</title><rect x="43.1" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (587 samples, 7.70%)</title><rect x="43.4" y="803.0" width="90.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.4" y="814.0">jdk/intern..</text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.10%)</title><rect x="47.6" y="787.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="50.6" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="48.9" y="787.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="51.9" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (5 samples, 0.07%)</title><rect x="49.3" y="787.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="52.3" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (518 samples, 6.80%)</title><rect x="50.1" y="787.0" width="80.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="53.1" y="798.0">Unsafe_Park</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (4 samples, 0.05%)</title><rect x="53.7" y="771.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="56.7" y="782.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.05%)</title><rect x="54.3" y="771.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="57.3" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (65 samples, 0.85%)</title><rect x="54.9" y="771.0" width="10.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="57.9" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (11 samples, 0.14%)</title><rect x="61.1" y="755.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="64.1" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (12 samples, 0.16%)</title><rect x="63.0" y="755.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="66.0" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.08%)</title><rect x="65.0" y="771.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="68.0" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (9 samples, 0.12%)</title><rect x="65.9" y="771.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="68.9" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (4 samples, 0.05%)</title><rect x="67.3" y="771.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="70.3" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (107 samples, 1.40%)</title><rect x="67.9" y="771.0" width="16.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="70.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.63%)</title><rect x="77.1" y="755.0" width="7.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="80.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 0.60%)</title><rect x="77.1" y="739.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="80.1" y="750.0"></text>
</g>
<g>
<title>sys_futex (23 samples, 0.30%)</title><rect x="80.6" y="723.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.6" y="734.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.25%)</title><rect x="80.8" y="707.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="83.8" y="718.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.16%)</title><rect x="81.4" y="691.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="84.4" y="702.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.07%)</title><rect x="82.3" y="675.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="85.3" y="686.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="83.2" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="86.2" y="702.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="83.7" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="86.7" y="718.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="84.2" y="739.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="87.2" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (252 samples, 3.31%)</title><rect x="84.5" y="771.0" width="39.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="87.5" y="782.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (175 samples, 2.30%)</title><rect x="96.4" y="755.0" width="27.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="99.4" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (173 samples, 2.27%)</title><rect x="96.4" y="739.0" width="26.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="99.4" y="750.0">d..</text>
</g>
<g>
<title>sys_futex (157 samples, 2.06%)</title><rect x="98.9" y="723.0" width="24.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.9" y="734.0">s..</text>
</g>
<g>
<title>do_futex (151 samples, 1.98%)</title><rect x="99.5" y="707.0" width="23.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="102.5" y="718.0">d..</text>
</g>
<g>
<title>futex_wait (139 samples, 1.82%)</title><rect x="101.1" y="691.0" width="21.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="104.1" y="702.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (96 samples, 1.26%)</title><rect x="102.3" y="675.0" width="14.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="105.3" y="686.0"></text>
</g>
<g>
<title>schedule (86 samples, 1.13%)</title><rect x="103.8" y="659.0" width="13.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="106.8" y="670.0"></text>
</g>
<g>
<title>__schedule (79 samples, 1.04%)</title><rect x="104.9" y="643.0" width="12.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="107.9" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (73 samples, 0.96%)</title><rect x="105.9" y="627.0" width="11.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="108.9" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (29 samples, 0.38%)</title><rect x="117.2" y="675.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="120.2" y="686.0"></text>
</g>
<g>
<title>get_futex_key (9 samples, 0.12%)</title><rect x="118.7" y="659.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="121.7" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.9 (2 samples, 0.03%)</title><rect x="119.8" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="122.8" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (10 samples, 0.13%)</title><rect x="120.1" y="659.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="123.1" y="670.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.07%)</title><rect x="121.7" y="675.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="124.7" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="122.6" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="125.6" y="702.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="122.9" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="125.9" y="718.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="123.2" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="126.2" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.05%)</title><rect x="123.5" y="771.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="126.5" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="124.1" y="771.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="127.1" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.07%)</title><rect x="124.4" y="771.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="127.4" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.08%)</title><rect x="125.4" y="771.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="128.4" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (5 samples, 0.07%)</title><rect x="126.3" y="771.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="129.3" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (14 samples, 0.18%)</title><rect x="127.1" y="771.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="130.1" y="782.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.04%)</title><rect x="129.2" y="771.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="132.2" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (3 samples, 0.04%)</title><rect x="129.9" y="771.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="132.9" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.07%)</title><rect x="130.3" y="787.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="133.3" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (21 samples, 0.28%)</title><rect x="131.1" y="787.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="134.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (13 samples, 0.17%)</title><rect x="134.3" y="835.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (12 samples, 0.16%)</title><rect x="134.5" y="819.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.05%)</title><rect x="134.5" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.07%)</title><rect x="135.1" y="803.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.07%)</title><rect x="135.1" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.07%)</title><rect x="135.1" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.07%)</title><rect x="135.1" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.1" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.07%)</title><rect x="135.1" y="739.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="138.1" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="135.3" y="723.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="138.3" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="135.6" y="723.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="138.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.04%)</title><rect x="135.9" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.04%)</title><rect x="135.9" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.04%)</title><rect x="135.9" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="135.9" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="135.9" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (153 samples, 2.01%)</title><rect x="136.4" y="835.0" width="23.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.4" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (152 samples, 1.99%)</title><rect x="136.5" y="819.0" width="23.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.5" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (147 samples, 1.93%)</title><rect x="137.1" y="803.0" width="22.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.1" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (145 samples, 1.90%)</title><rect x="137.4" y="787.0" width="22.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.4" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (145 samples, 1.90%)</title><rect x="137.4" y="771.0" width="22.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.4" y="782.0">j..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.05%)</title><rect x="137.8" y="755.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="140.8" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="138.5" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="141.5" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (33 samples, 0.43%)</title><rect x="138.8" y="755.0" width="5.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="141.8" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (9 samples, 0.12%)</title><rect x="139.1" y="739.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="142.1" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (9 samples, 0.12%)</title><rect x="140.5" y="739.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="143.5" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.05%)</title><rect x="141.9" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="144.9" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (6 samples, 0.08%)</title><rect x="142.7" y="739.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="145.7" y="750.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="143.6" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="146.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (102 samples, 1.34%)</title><rect x="144.0" y="755.0" width="15.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="147.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 1.13%)</title><rect x="146.4" y="739.0" width="13.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="149.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (83 samples, 1.09%)</title><rect x="146.4" y="723.0" width="12.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="149.4" y="734.0"></text>
</g>
<g>
<title>sys_futex (75 samples, 0.98%)</title><rect x="147.7" y="707.0" width="11.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="150.7" y="718.0"></text>
</g>
<g>
<title>do_futex (71 samples, 0.93%)</title><rect x="147.8" y="691.0" width="11.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="150.8" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock (6 samples, 0.08%)</title><rect x="147.8" y="675.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="150.8" y="686.0"></text>
</g>
<g>
<title>futex_wake_op (65 samples, 0.85%)</title><rect x="148.8" y="675.0" width="10.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="151.8" y="686.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="149.7" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="152.7" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="150.1" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="153.1" y="670.0"></text>
</g>
<g>
<title>wake_up_q (53 samples, 0.70%)</title><rect x="150.6" y="659.0" width="8.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="153.6" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (52 samples, 0.68%)</title><rect x="150.8" y="643.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="153.8" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (52 samples, 0.68%)</title><rect x="150.8" y="627.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="153.8" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (3 samples, 0.04%)</title><rect x="158.8" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="161.8" y="702.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="159.3" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="162.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (3 samples, 0.04%)</title><rect x="160.2" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$66/1288711039.run (4,225 samples, 55.45%)</title><rect x="160.8" y="867.0" width="654.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.8" y="878.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$66/1288711039.run</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (4,223 samples, 55.42%)</title><rect x="161.1" y="851.0" width="654.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.1" y="862.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="161.1" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="161.1" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="161.1" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.1" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="161.1" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.09%)</title><rect x="161.4" y="835.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.08%)</title><rect x="161.6" y="819.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.6" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="161.9" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="161.9" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.9" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="161.9" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="161.9" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="161.9" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.isProxied (42 samples, 0.55%)</title><rect x="162.5" y="835.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (42 samples, 0.55%)</title><rect x="162.5" y="819.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="163.2" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (21 samples, 0.28%)</title><rect x="163.6" y="803.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (7 samples, 0.09%)</title><rect x="163.6" y="787.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="164.4" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.18%)</title><rect x="164.7" y="787.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.05%)</title><rect x="165.6" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.05%)</title><rect x="165.6" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.6" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.05%)</title><rect x="165.6" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="166.2" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.18%)</title><rect x="166.9" y="803.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.18%)</title><rect x="166.9" y="787.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.08%)</title><rect x="167.5" y="771.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.5" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="167.6" y="755.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="170.6" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="168.0" y="755.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="171.0" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="168.4" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.4" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="168.7" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="171.7" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="168.7" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="171.7" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="168.7" y="723.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="171.7" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="168.7" y="707.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="171.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (4,171 samples, 54.74%)</title><rect x="169.0" y="835.0" width="645.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.0" y="846.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.putMethod (4,170 samples, 54.72%)</title><rect x="169.2" y="819.0" width="645.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.2" y="830.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.putMethod</text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="178.0" y="803.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="181.0" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="178.0" y="787.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="181.0" y="798.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.08%)</title><rect x="178.5" y="803.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="181.5" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="179.7" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.10%)</title><rect x="180.0" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.09%)</title><rect x="181.3" y="803.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (6 samples, 0.08%)</title><rect x="182.4" y="803.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="183.3" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.3" y="814.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.07%)</title><rect x="183.6" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.6" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (5 samples, 0.07%)</title><rect x="183.6" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.hasNext (3 samples, 0.04%)</title><rect x="184.4" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.07%)</title><rect x="184.8" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.04%)</title><rect x="185.6" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (12 samples, 0.16%)</title><rect x="186.2" y="803.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.2" y="814.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (4 samples, 0.05%)</title><rect x="187.5" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (4 samples, 0.05%)</title><rect x="187.5" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (23 samples, 0.30%)</title><rect x="188.1" y="803.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (21 samples, 0.28%)</title><rect x="188.4" y="787.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (20 samples, 0.26%)</title><rect x="188.5" y="771.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (19 samples, 0.25%)</title><rect x="188.5" y="755.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (19 samples, 0.25%)</title><rect x="188.5" y="739.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.5" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (16 samples, 0.21%)</title><rect x="188.5" y="723.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (14 samples, 0.18%)</title><rect x="188.7" y="707.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (7 samples, 0.09%)</title><rect x="188.9" y="691.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$72/998018245.accept (7 samples, 0.09%)</title><rect x="188.9" y="675.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.9" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="188.9" y="659.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="188.9" y="643.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="189.0" y="627.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="189.0" y="611.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.07%)</title><rect x="189.2" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$68/1567649937.test (6 samples, 0.08%)</title><rect x="189.9" y="691.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$putMethod$3 (3 samples, 0.04%)</title><rect x="190.4" y="675.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.04%)</title><rect x="190.4" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (3 samples, 0.04%)</title><rect x="191.0" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (3 samples, 0.04%)</title><rect x="191.0" y="707.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$71/901477378.get (3 samples, 0.04%)</title><rect x="191.0" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="191.0" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.0" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="191.2" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.2" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="191.2" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="191.2" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.2" y="638.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.03%)</title><rect x="191.2" y="611.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="194.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (3 samples, 0.04%)</title><rect x="191.6" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.6" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="192.4" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="195.4" y="814.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="192.4" y="787.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="195.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.correctReplication (561 samples, 7.36%)</title><rect x="192.9" y="803.0" width="86.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.9" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (553 samples, 7.26%)</title><rect x="193.2" y="787.0" width="85.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="196.2" y="798.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.08%)</title><rect x="193.7" y="771.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="193.7" y="755.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="193.7" y="739.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (534 samples, 7.01%)</title><rect x="194.6" y="771.0" width="82.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="197.6" y="782.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.16%)</title><rect x="194.6" y="755.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.6" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="194.9" y="739.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="197.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.08%)</title><rect x="195.5" y="739.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.04%)</title><rect x="195.5" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="195.7" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="196.0" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="196.1" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="196.1" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (522 samples, 6.85%)</title><rect x="196.4" y="755.0" width="80.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.4" y="766.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (522 samples, 6.85%)</title><rect x="196.4" y="739.0" width="80.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.4" y="750.0">one/nio/n..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="196.4" y="723.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="199.4" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="196.4" y="707.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="199.4" y="718.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="196.8" y="723.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="199.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (513 samples, 6.73%)</title><rect x="197.4" y="723.0" width="79.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.4" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (511 samples, 6.71%)</title><rect x="197.7" y="707.0" width="79.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.7" y="718.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.17%)</title><rect x="198.8" y="691.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="201.8" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="199.5" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="202.5" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.08%)</title><rect x="199.9" y="675.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="202.9" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.03%)</title><rect x="200.5" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="203.5" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="200.8" y="691.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="203.8" y="702.0"></text>
</g>
<g>
<title>send (487 samples, 6.39%)</title><rect x="201.4" y="691.0" width="75.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="204.4" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (466 samples, 6.12%)</title><rect x="204.7" y="675.0" width="72.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="207.7" y="686.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (465 samples, 6.10%)</title><rect x="204.7" y="659.0" width="72.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="207.7" y="670.0">do_sysca..</text>
</g>
<g>
<title>sys_sendto (451 samples, 5.92%)</title><rect x="206.8" y="643.0" width="69.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="209.8" y="654.0">sys_sen..</text>
</g>
<g>
<title>SYSC_sendto (450 samples, 5.91%)</title><rect x="206.8" y="627.0" width="69.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="209.8" y="638.0">SYSC_se..</text>
</g>
<g>
<title>sock_sendmsg (435 samples, 5.71%)</title><rect x="207.4" y="611.0" width="67.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="210.4" y="622.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (426 samples, 5.59%)</title><rect x="207.6" y="595.0" width="66.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="210.6" y="606.0">inet_se..</text>
</g>
<g>
<title>tcp_sendmsg (425 samples, 5.58%)</title><rect x="207.8" y="579.0" width="65.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="210.8" y="590.0">tcp_sen..</text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.03%)</title><rect x="208.1" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="211.1" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (419 samples, 5.50%)</title><rect x="208.7" y="563.0" width="64.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="211.7" y="574.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="209.5" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.5" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="209.5" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="212.5" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.04%)</title><rect x="209.8" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.8" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.04%)</title><rect x="209.8" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="212.8" y="542.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="210.2" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (13 samples, 0.17%)</title><rect x="210.5" y="547.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="213.5" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.17%)</title><rect x="210.5" y="531.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (4 samples, 0.05%)</title><rect x="211.0" y="515.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="214.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="211.2" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="214.2" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.05%)</title><rect x="211.6" y="515.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="214.6" y="526.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="212.2" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="215.2" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="212.7" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="215.7" y="558.0"></text>
</g>
<g>
<title>tcp_push (381 samples, 5.00%)</title><rect x="213.0" y="547.0" width="59.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="216.0" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (379 samples, 4.97%)</title><rect x="213.0" y="531.0" width="58.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.0" y="542.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (379 samples, 4.97%)</title><rect x="213.0" y="515.0" width="58.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.0" y="526.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (358 samples, 4.70%)</title><rect x="214.3" y="499.0" width="55.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="217.3" y="510.0">__tcp..</text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="214.9" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="217.9" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (347 samples, 4.55%)</title><rect x="215.2" y="483.0" width="53.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="218.2" y="494.0">ip_qu..</text>
</g>
<g>
<title>ip_local_out (345 samples, 4.53%)</title><rect x="215.3" y="467.0" width="53.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="218.3" y="478.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (75 samples, 0.98%)</title><rect x="215.6" y="451.0" width="11.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="218.6" y="462.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (3 samples, 0.04%)</title><rect x="216.0" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="219.0" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (3 samples, 0.04%)</title><rect x="216.4" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="219.4" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="216.9" y="435.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="219.9" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="217.4" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="220.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (62 samples, 0.81%)</title><rect x="217.7" y="435.0" width="9.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="220.7" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.09%)</title><rect x="218.1" y="419.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="221.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.07%)</title><rect x="218.4" y="403.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="221.4" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (10 samples, 0.13%)</title><rect x="219.2" y="419.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="222.2" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.12%)</title><rect x="219.4" y="403.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="222.4" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (4 samples, 0.05%)</title><rect x="220.8" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="223.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="220.9" y="403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="223.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="220.9" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="223.9" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (38 samples, 0.50%)</title><rect x="221.4" y="419.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="224.4" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (30 samples, 0.39%)</title><rect x="221.8" y="403.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="224.8" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (4 samples, 0.05%)</title><rect x="222.6" y="387.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="225.6" y="398.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (4 samples, 0.05%)</title><rect x="223.5" y="387.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="226.5" y="398.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="224.2" y="387.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="227.2" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (11 samples, 0.14%)</title><rect x="224.8" y="387.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="227.8" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (5 samples, 0.07%)</title><rect x="225.7" y="371.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="228.7" y="382.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.03%)</title><rect x="226.5" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="229.5" y="414.0"></text>
</g>
<g>
<title>tcp_get_timeouts?[nf_conntrack] (2 samples, 0.03%)</title><rect x="227.0" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="230.0" y="414.0"></text>
</g>
<g>
<title>ip_output (266 samples, 3.49%)</title><rect x="227.4" y="451.0" width="41.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="230.4" y="462.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (253 samples, 3.32%)</title><rect x="228.0" y="435.0" width="39.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="231.0" y="446.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (252 samples, 3.31%)</title><rect x="228.2" y="419.0" width="39.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="231.2" y="430.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (211 samples, 2.77%)</title><rect x="230.0" y="403.0" width="32.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="233.0" y="414.0">__..</text>
</g>
<g>
<title>do_softirq.part.17 (210 samples, 2.76%)</title><rect x="230.2" y="387.0" width="32.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="233.2" y="398.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (207 samples, 2.72%)</title><rect x="230.7" y="371.0" width="32.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="233.7" y="382.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (207 samples, 2.72%)</title><rect x="230.7" y="355.0" width="32.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="233.7" y="366.0">__..</text>
</g>
<g>
<title>net_rx_action (199 samples, 2.61%)</title><rect x="231.6" y="339.0" width="30.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="234.6" y="350.0">ne..</text>
</g>
<g>
<title>process_backlog (192 samples, 2.52%)</title><rect x="232.7" y="323.0" width="29.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="235.7" y="334.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (188 samples, 2.47%)</title><rect x="233.3" y="307.0" width="29.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="236.3" y="318.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (188 samples, 2.47%)</title><rect x="233.3" y="291.0" width="29.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="236.3" y="302.0">__..</text>
</g>
<g>
<title>ip_rcv (180 samples, 2.36%)</title><rect x="234.2" y="275.0" width="27.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="237.2" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (162 samples, 2.13%)</title><rect x="234.7" y="259.0" width="25.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.7" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (159 samples, 2.09%)</title><rect x="235.2" y="243.0" width="24.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="238.2" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (145 samples, 1.90%)</title><rect x="235.5" y="227.0" width="22.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="238.5" y="238.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (142 samples, 1.86%)</title><rect x="235.9" y="211.0" width="22.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="238.9" y="222.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.09%)</title><rect x="236.1" y="195.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="239.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (132 samples, 1.73%)</title><rect x="237.5" y="195.0" width="20.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="240.5" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (129 samples, 1.69%)</title><rect x="237.8" y="179.0" width="20.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="240.8" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.12%)</title><rect x="238.6" y="163.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="241.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.12%)</title><rect x="238.6" y="147.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="241.6" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.08%)</title><rect x="239.0" y="131.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="242.0" y="142.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.08%)</title><rect x="239.0" y="115.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="242.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.08%)</title><rect x="239.0" y="99.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="242.0" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="240.0" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="243.0" y="174.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="240.3" y="163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.3" y="174.0"></text>
</g>
<g>
<title>ktime_get_real_seconds (3 samples, 0.04%)</title><rect x="240.6" y="163.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="243.6" y="174.0"></text>
</g>
<g>
<title>tcp_ack (49 samples, 0.64%)</title><rect x="241.0" y="163.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="244.0" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (31 samples, 0.41%)</title><rect x="243.5" y="147.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="246.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.21%)</title><rect x="244.5" y="131.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="247.5" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.07%)</title><rect x="244.5" y="115.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="247.5" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.05%)</title><rect x="244.6" y="99.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="247.6" y="110.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.14%)</title><rect x="245.2" y="115.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="248.2" y="126.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.12%)</title><rect x="245.2" y="99.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="248.2" y="110.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.05%)</title><rect x="246.0" y="83.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="249.0" y="94.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.05%)</title><rect x="246.0" y="67.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="249.0" y="78.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="246.6" y="99.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="249.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (5 samples, 0.07%)</title><rect x="247.2" y="131.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="250.2" y="142.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.03%)</title><rect x="248.0" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="251.0" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="248.3" y="147.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.3" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (55 samples, 0.72%)</title><rect x="248.6" y="163.0" width="8.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.6" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (46 samples, 0.60%)</title><rect x="248.9" y="147.0" width="7.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="251.9" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (42 samples, 0.55%)</title><rect x="249.6" y="131.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="252.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (42 samples, 0.55%)</title><rect x="249.6" y="115.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="252.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (42 samples, 0.55%)</title><rect x="249.6" y="99.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="252.6" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="256.1" y="147.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="259.1" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.07%)</title><rect x="256.4" y="147.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="259.4" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.13%)</title><rect x="258.2" y="227.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="261.2" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.05%)</title><rect x="258.4" y="211.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="261.4" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.05%)</title><rect x="258.4" y="195.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="261.4" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.03%)</title><rect x="259.0" y="211.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="262.0" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.03%)</title><rect x="259.0" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="262.0" y="206.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="259.3" y="211.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="262.3" y="222.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="259.3" y="195.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="262.3" y="206.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (3 samples, 0.04%)</title><rect x="259.8" y="259.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="262.8" y="270.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (2 samples, 0.03%)</title><rect x="260.2" y="259.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="263.2" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.10%)</title><rect x="260.9" y="259.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="263.9" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.03%)</title><rect x="261.0" y="243.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="264.0" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.03%)</title><rect x="261.0" y="227.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="264.0" y="238.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="261.3" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="264.3" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="261.3" y="227.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="264.3" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="261.8" y="243.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="264.8" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="262.1" y="275.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.1" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (28 samples, 0.37%)</title><rect x="262.7" y="403.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="265.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (28 samples, 0.37%)</title><rect x="262.7" y="387.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="265.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (14 samples, 0.18%)</title><rect x="264.0" y="371.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="267.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (12 samples, 0.16%)</title><rect x="264.0" y="355.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="267.0" y="366.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.04%)</title><rect x="264.4" y="339.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="267.4" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="264.4" y="323.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="267.4" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="264.4" y="307.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="267.4" y="318.0"></text>
</g>
<g>
<title>sk_free (4 samples, 0.05%)</title><rect x="264.9" y="339.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="267.9" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="265.5" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="268.5" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.04%)</title><rect x="266.4" y="371.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="269.4" y="382.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="267.2" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="270.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.07%)</title><rect x="267.8" y="435.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.8" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (4 samples, 0.05%)</title><rect x="267.8" y="419.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="270.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (4 samples, 0.05%)</title><rect x="267.8" y="403.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="270.8" y="414.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="268.9" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="271.9" y="494.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="269.1" y="467.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="272.1" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="269.7" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="272.7" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.05%)</title><rect x="270.2" y="499.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="273.2" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="270.3" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="273.3" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (3 samples, 0.04%)</title><rect x="270.3" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="273.3" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="270.5" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="273.5" y="462.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="270.5" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="273.5" y="446.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="270.8" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="273.8" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="271.4" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="274.4" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.03%)</title><rect x="271.7" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="274.7" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.13%)</title><rect x="272.0" y="547.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="275.0" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.09%)</title><rect x="272.5" y="531.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.5" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="273.1" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="276.1" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.10%)</title><rect x="273.6" y="595.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="276.6" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.10%)</title><rect x="273.6" y="579.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="276.6" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.10%)</title><rect x="273.6" y="563.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="276.6" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.09%)</title><rect x="273.7" y="547.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="276.7" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.14%)</title><rect x="274.8" y="611.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="277.8" y="622.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.08%)</title><rect x="275.0" y="595.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="278.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="275.1" y="579.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="278.1" y="590.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.07%)</title><rect x="275.1" y="563.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="278.1" y="574.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="275.9" y="595.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="278.9" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="276.8" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="279.8" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="277.0" y="707.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="280.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.12%)</title><rect x="277.3" y="771.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="277.4" y="755.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="277.4" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="277.9" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="278.8" y="787.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.putEntity (358 samples, 4.70%)</title><rect x="279.8" y="803.0" width="55.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.8" y="814.0">ru/ma..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="279.9" y="787.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="282.9" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="279.9" y="771.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="282.9" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="280.1" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="283.1" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="280.1" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="283.1" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="280.1" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="283.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.22%)</title><rect x="280.4" y="787.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.22%)</title><rect x="280.4" y="771.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.4" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="280.8" y="755.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="283.8" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="281.0" y="739.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="284.0" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="281.0" y="723.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="284.0" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="281.0" y="707.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="284.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="281.3" y="755.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="281.5" y="739.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.5" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="281.5" y="723.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.05%)</title><rect x="282.4" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.10%)</title><rect x="283.0" y="787.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.0" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="283.3" y="771.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="286.3" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.04%)</title><rect x="283.5" y="755.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="286.5" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="283.5" y="739.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="286.5" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="283.5" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="286.5" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="283.6" y="707.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="286.6" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="283.9" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="286.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.upsert (329 samples, 4.32%)</title><rect x="284.2" y="787.0" width="51.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.2" y="798.0">ru/ma..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.18%)</title><rect x="284.2" y="771.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.2" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="284.4" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="287.4" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="284.4" y="739.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="287.4" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="284.4" y="723.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="287.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="284.4" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="287.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (11 samples, 0.14%)</title><rect x="284.7" y="755.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="287.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.14%)</title><rect x="284.7" y="739.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.14%)</title><rect x="284.7" y="723.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="285.5" y="707.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.07%)</title><rect x="285.5" y="691.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.5" y="702.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (5 samples, 0.07%)</title><rect x="285.5" y="675.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="288.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.upsert (315 samples, 4.13%)</title><rect x="286.4" y="771.0" width="48.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.4" y="782.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.18%)</title><rect x="287.0" y="755.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.0" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="287.3" y="739.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="290.3" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="287.3" y="723.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="290.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.13%)</title><rect x="287.7" y="739.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.13%)</title><rect x="287.7" y="723.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.10%)</title><rect x="288.0" y="707.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="288.6" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="288.6" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.6" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.04%)</title><rect x="288.6" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.07%)</title><rect x="289.2" y="755.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.2" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="289.2" y="739.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="292.2" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="289.2" y="723.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="292.2" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="289.2" y="707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="292.2" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="289.2" y="691.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="292.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="289.4" y="675.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="292.4" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="289.7" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="289.7" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="289.7" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="292.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="289.7" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (17 samples, 0.22%)</title><rect x="290.0" y="755.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.04%)</title><rect x="291.2" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.04%)</title><rect x="291.2" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.2" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="291.8" y="739.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="294.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (6 samples, 0.08%)</title><rect x="292.6" y="755.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (6 samples, 0.08%)</title><rect x="292.6" y="739.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.6" y="750.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.03%)</title><rect x="292.8" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (3 samples, 0.04%)</title><rect x="293.1" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="296.1" y="734.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.03%)</title><rect x="293.2" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.upsert (269 samples, 3.53%)</title><rect x="293.5" y="755.0" width="41.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.5" y="766.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (257 samples, 3.37%)</title><rect x="293.9" y="739.0" width="39.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.9" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (257 samples, 3.37%)</title><rect x="293.9" y="723.0" width="39.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.9" y="734.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.05%)</title><rect x="317.2" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (102 samples, 1.34%)</title><rect x="317.9" y="707.0" width="15.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (97 samples, 1.27%)</title><rect x="318.6" y="691.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (91 samples, 1.19%)</title><rect x="319.6" y="675.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="322.6" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.07%)</title><rect x="320.6" y="659.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.6" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (13 samples, 0.17%)</title><rect x="321.4" y="659.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.4" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (40 samples, 0.52%)</title><rect x="323.4" y="659.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (14 samples, 0.18%)</title><rect x="327.5" y="643.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.5" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.08%)</title><rect x="328.4" y="627.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="329.3" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (26 samples, 0.34%)</title><rect x="329.6" y="659.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.6" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (24 samples, 0.31%)</title><rect x="329.6" y="643.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.6" y="654.0"></text>
</g>
<g>
<title>vectorizedMismatch (21 samples, 0.28%)</title><rect x="330.1" y="627.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="333.1" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="333.3" y="643.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.changeSize (10 samples, 0.13%)</title><rect x="333.6" y="739.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.07%)</title><rect x="334.1" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.1" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="334.1" y="707.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="337.1" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="334.1" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="337.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.04%)</title><rect x="334.4" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="334.4" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="334.4" y="675.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.4" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="334.6" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.addAndGet (2 samples, 0.03%)</title><rect x="334.9" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (1,026 samples, 13.46%)</title><rect x="335.2" y="803.0" width="158.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.2" y="814.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,026 samples, 13.46%)</title><rect x="335.2" y="787.0" width="158.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.2" y="798.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="337.5" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="340.5" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.03%)</title><rect x="337.5" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="340.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.12%)</title><rect x="337.8" y="771.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.12%)</title><rect x="337.8" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.12%)</title><rect x="337.8" y="739.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.04%)</title><rect x="338.8" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (994 samples, 13.04%)</title><rect x="339.2" y="771.0" width="153.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.2" y="782.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (30 samples, 0.39%)</title><rect x="339.2" y="755.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.20%)</title><rect x="339.8" y="739.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.8" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (12 samples, 0.16%)</title><rect x="340.0" y="723.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="343.0" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.12%)</title><rect x="340.5" y="707.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="343.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.12%)</title><rect x="340.5" y="691.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="343.5" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.09%)</title><rect x="340.8" y="675.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="343.8" y="686.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (3 samples, 0.04%)</title><rect x="340.8" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="343.8" y="670.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (2 samples, 0.03%)</title><rect x="340.9" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="343.9" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="341.2" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="344.2" y="670.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (2 samples, 0.03%)</title><rect x="341.9" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="344.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.14%)</title><rect x="342.2" y="739.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="342.2" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.03%)</title><rect x="342.2" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="345.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.05%)</title><rect x="342.5" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="342.6" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="342.6" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.07%)</title><rect x="343.1" y="723.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.07%)</title><rect x="343.1" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="346.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.07%)</title><rect x="343.1" y="691.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (964 samples, 12.65%)</title><rect x="343.9" y="755.0" width="149.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.9" y="766.0">one/nio/net/Session..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.08%)</title><rect x="344.5" y="739.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="347.5" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.07%)</title><rect x="344.5" y="723.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="347.5" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.07%)</title><rect x="344.5" y="707.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="347.5" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.07%)</title><rect x="344.5" y="691.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="347.5" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.05%)</title><rect x="344.5" y="675.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="347.5" y="686.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (2 samples, 0.03%)</title><rect x="344.5" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="347.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (954 samples, 12.52%)</title><rect x="345.4" y="739.0" width="147.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.4" y="750.0">one/nio/net/Session..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="345.4" y="723.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="348.4" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="345.4" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="348.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (948 samples, 12.44%)</title><rect x="346.0" y="723.0" width="146.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.0" y="734.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (947 samples, 12.43%)</title><rect x="346.2" y="707.0" width="146.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.2" y="718.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (28 samples, 0.37%)</title><rect x="347.7" y="691.0" width="4.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="350.7" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="349.3" y="675.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="352.3" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="349.6" y="675.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="352.6" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.10%)</title><rect x="350.1" y="675.0" width="1.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="353.1" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.03%)</title><rect x="351.0" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="354.0" y="670.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.03%)</title><rect x="351.3" y="675.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="354.3" y="686.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.04%)</title><rect x="351.6" y="675.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="354.6" y="686.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="352.1" y="691.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="355.1" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.08%)</title><rect x="352.5" y="691.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="355.5" y="702.0"></text>
</g>
<g>
<title>send (900 samples, 11.81%)</title><rect x="353.5" y="691.0" width="139.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="356.5" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (874 samples, 11.47%)</title><rect x="357.5" y="675.0" width="135.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="360.5" y="686.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (873 samples, 11.46%)</title><rect x="357.5" y="659.0" width="135.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="360.5" y="670.0">do_syscall_64</text>
</g>
<g>
<title>sys_sendto (857 samples, 11.25%)</title><rect x="360.0" y="643.0" width="132.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="363.0" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (855 samples, 11.22%)</title><rect x="360.0" y="627.0" width="132.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="363.0" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="360.9" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="363.9" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (833 samples, 10.93%)</title><rect x="361.4" y="611.0" width="129.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="364.4" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (815 samples, 10.70%)</title><rect x="361.8" y="595.0" width="126.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="364.8" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="362.3" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="365.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (809 samples, 10.62%)</title><rect x="362.6" y="579.0" width="125.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="365.6" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.03%)</title><rect x="363.2" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="366.2" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="363.5" y="563.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="366.5" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="364.6" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="367.6" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="364.9" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="367.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (789 samples, 10.35%)</title><rect x="365.2" y="563.0" width="122.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="368.2" y="574.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (8 samples, 0.10%)</title><rect x="367.4" y="547.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="370.4" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.07%)</title><rect x="367.9" y="531.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="370.9" y="542.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="369.1" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="372.1" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (38 samples, 0.50%)</title><rect x="369.4" y="547.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="372.4" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (30 samples, 0.39%)</title><rect x="370.5" y="531.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="373.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (15 samples, 0.20%)</title><rect x="371.0" y="515.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="374.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (13 samples, 0.17%)</title><rect x="371.0" y="499.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="374.0" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (7 samples, 0.09%)</title><rect x="371.9" y="483.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="374.9" y="494.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="373.0" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="376.0" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.12%)</title><rect x="373.3" y="515.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="376.3" y="526.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="374.7" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="377.7" y="526.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="375.3" y="547.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="378.3" y="558.0"></text>
</g>
<g>
<title>tcp_push (707 samples, 9.28%)</title><rect x="375.8" y="547.0" width="109.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="378.8" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (705 samples, 9.25%)</title><rect x="375.9" y="531.0" width="109.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="378.9" y="542.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (701 samples, 9.20%)</title><rect x="376.5" y="515.0" width="108.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="379.5" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (663 samples, 8.70%)</title><rect x="377.8" y="499.0" width="102.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="380.8" y="510.0">__tcp_transm..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.04%)</title><rect x="379.6" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="382.6" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="380.1" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="383.1" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="380.4" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="383.4" y="494.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="380.7" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="383.7" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (636 samples, 8.35%)</title><rect x="381.0" y="483.0" width="98.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="384.0" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.07%)</title><rect x="382.6" y="467.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="385.6" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.07%)</title><rect x="382.6" y="451.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="385.6" y="462.0"></text>
</g>
<g>
<title>ip_local_out (620 samples, 8.14%)</title><rect x="383.4" y="467.0" width="96.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="386.4" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (159 samples, 2.09%)</title><rect x="383.5" y="451.0" width="24.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="386.5" y="462.0">_..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.04%)</title><rect x="383.7" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="386.7" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (4 samples, 0.05%)</title><rect x="384.1" y="435.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="387.1" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (5 samples, 0.07%)</title><rect x="384.8" y="435.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="387.8" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (5 samples, 0.07%)</title><rect x="385.5" y="435.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="388.5" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (4 samples, 0.05%)</title><rect x="386.3" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="389.3" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (137 samples, 1.80%)</title><rect x="386.9" y="435.0" width="21.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="389.9" y="446.0">n..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (17 samples, 0.22%)</title><rect x="387.4" y="419.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="390.4" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (16 samples, 0.21%)</title><rect x="387.5" y="403.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="390.5" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (13 samples, 0.17%)</title><rect x="390.0" y="419.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="393.0" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (10 samples, 0.13%)</title><rect x="390.5" y="403.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="393.5" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (4 samples, 0.05%)</title><rect x="392.0" y="419.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="395.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="392.0" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="395.0" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="392.3" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="395.3" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (93 samples, 1.22%)</title><rect x="392.6" y="419.0" width="14.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="395.6" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (3 samples, 0.04%)</title><rect x="392.8" y="403.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="395.8" y="414.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="393.4" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="396.4" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (75 samples, 0.98%)</title><rect x="393.7" y="403.0" width="11.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="396.7" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (16 samples, 0.21%)</title><rect x="395.7" y="387.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="398.7" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (3 samples, 0.04%)</title><rect x="398.2" y="387.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="401.2" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.03%)</title><rect x="398.7" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="401.7" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.05%)</title><rect x="399.0" y="387.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="402.0" y="398.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (3 samples, 0.04%)</title><rect x="399.2" y="371.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="402.2" y="382.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (6 samples, 0.08%)</title><rect x="399.6" y="387.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="402.6" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (27 samples, 0.35%)</title><rect x="400.7" y="387.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.7" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.04%)</title><rect x="401.9" y="371.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="404.9" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="401.9" y="355.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="404.9" y="366.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.03%)</title><rect x="402.4" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="405.4" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (14 samples, 0.18%)</title><rect x="402.7" y="371.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="405.7" y="382.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (3 samples, 0.04%)</title><rect x="404.9" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="407.9" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.03%)</title><rect x="405.3" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="408.3" y="414.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (3 samples, 0.04%)</title><rect x="405.7" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="408.7" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (5 samples, 0.07%)</title><rect x="406.3" y="403.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="409.3" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.08%)</title><rect x="407.0" y="419.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="410.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="408.1" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="411.1" y="462.0"></text>
</g>
<g>
<title>ip_output (456 samples, 5.98%)</title><rect x="408.4" y="451.0" width="70.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="411.4" y="462.0">ip_output</text>
</g>
<g>
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="408.4" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="411.4" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="408.8" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="411.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (423 samples, 5.55%)</title><rect x="409.1" y="435.0" width="65.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="412.1" y="446.0">ip_fini..</text>
</g>
<g>
<title>ip_finish_output2 (422 samples, 5.54%)</title><rect x="409.1" y="419.0" width="65.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="412.1" y="430.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (366 samples, 4.80%)</title><rect x="411.1" y="403.0" width="56.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="414.1" y="414.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.17 (365 samples, 4.79%)</title><rect x="411.2" y="387.0" width="56.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="414.2" y="398.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (362 samples, 4.75%)</title><rect x="411.7" y="371.0" width="56.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="414.7" y="382.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (361 samples, 4.74%)</title><rect x="411.7" y="355.0" width="55.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.7" y="366.0">__sof..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="412.8" y="339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="415.8" y="350.0"></text>
</g>
<g>
<title>net_rx_action (349 samples, 4.58%)</title><rect x="413.1" y="339.0" width="54.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="416.1" y="350.0">net_r..</text>
</g>
<g>
<title>process_backlog (338 samples, 4.44%)</title><rect x="414.8" y="323.0" width="52.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="417.8" y="334.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (336 samples, 4.41%)</title><rect x="415.1" y="307.0" width="52.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="418.1" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (331 samples, 4.34%)</title><rect x="415.1" y="291.0" width="51.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="418.1" y="302.0">__net..</text>
</g>
<g>
<title>ip_rcv (313 samples, 4.11%)</title><rect x="417.1" y="275.0" width="48.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="420.1" y="286.0">ip_rcv</text>
</g>
<g>
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="417.9" y="259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="420.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (281 samples, 3.69%)</title><rect x="418.4" y="259.0" width="43.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="421.4" y="270.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (276 samples, 3.62%)</title><rect x="419.0" y="243.0" width="42.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="422.0" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (247 samples, 3.24%)</title><rect x="419.3" y="227.0" width="38.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.3" y="238.0">ip_..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="419.4" y="211.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="422.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (243 samples, 3.19%)</title><rect x="419.9" y="211.0" width="37.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="422.9" y="222.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.08%)</title><rect x="420.8" y="195.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="423.8" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.07%)</title><rect x="422.1" y="195.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="425.1" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="422.1" y="179.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="425.1" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="422.4" y="179.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="425.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (220 samples, 2.89%)</title><rect x="423.0" y="195.0" width="34.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="426.0" y="206.0">tc..</text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.05%)</title><rect x="423.3" y="179.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="426.3" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (214 samples, 2.81%)</title><rect x="423.9" y="179.0" width="33.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="426.9" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (13 samples, 0.17%)</title><rect x="424.5" y="163.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="427.5" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (11 samples, 0.14%)</title><rect x="424.9" y="147.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="427.9" y="158.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="425.0" y="131.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="428.0" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.10%)</title><rect x="425.3" y="131.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="428.3" y="142.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.09%)</title><rect x="425.5" y="115.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="428.5" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.08%)</title><rect x="425.5" y="99.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="428.5" y="110.0"></text>
</g>
<g>
<title>ktime_get_real_seconds (2 samples, 0.03%)</title><rect x="426.7" y="163.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="429.7" y="174.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="427.0" y="163.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="430.0" y="174.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.03%)</title><rect x="427.0" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="430.0" y="158.0"></text>
</g>
<g>
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="427.0" y="131.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="430.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack (69 samples, 0.91%)</title><rect x="427.3" y="163.0" width="10.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="430.3" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (44 samples, 0.58%)</title><rect x="430.6" y="147.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="433.6" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.28%)</title><rect x="432.1" y="131.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="435.1" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.09%)</title><rect x="432.1" y="115.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="435.1" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.09%)</title><rect x="432.1" y="99.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="435.1" y="110.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.07%)</title><rect x="432.4" y="83.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="435.4" y="94.0"></text>
</g>
<g>
<title>skb_release_all (14 samples, 0.18%)</title><rect x="433.2" y="115.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="436.2" y="126.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 0.16%)</title><rect x="433.2" y="99.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="436.2" y="110.0"></text>
</g>
<g>
<title>skb_free_head (10 samples, 0.13%)</title><rect x="433.5" y="83.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="436.5" y="94.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.13%)</title><rect x="433.5" y="67.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="436.5" y="78.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.07%)</title><rect x="434.1" y="51.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="437.1" y="62.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="434.6" y="35.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="437.6" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="435.1" y="99.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.1" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (6 samples, 0.08%)</title><rect x="435.7" y="131.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.7" y="142.0"></text>
</g>
<g>
<title>minmax_running_min (2 samples, 0.03%)</title><rect x="436.2" y="115.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="439.2" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.03%)</title><rect x="436.8" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="439.8" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="437.1" y="131.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="440.1" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="437.6" y="147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="440.6" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (116 samples, 1.52%)</title><rect x="438.2" y="163.0" width="17.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="441.2" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (103 samples, 1.35%)</title><rect x="438.8" y="147.0" width="15.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.8" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (100 samples, 1.31%)</title><rect x="439.3" y="131.0" width="15.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="442.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (100 samples, 1.31%)</title><rect x="439.3" y="115.0" width="15.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="442.3" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (100 samples, 1.31%)</title><rect x="439.3" y="99.0" width="15.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.3" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.07%)</title><rect x="454.7" y="147.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="457.7" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.05%)</title><rect x="455.5" y="147.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="458.5" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="456.1" y="163.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="459.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="457.1" y="195.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="460.1" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.03%)</title><rect x="457.7" y="227.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="460.7" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="458.0" y="227.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="461.0" y="238.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (3 samples, 0.04%)</title><rect x="458.3" y="227.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="461.3" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.22%)</title><rect x="458.8" y="227.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="461.8" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (10 samples, 0.13%)</title><rect x="459.1" y="211.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="462.1" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.09%)</title><rect x="459.5" y="195.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="462.5" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (3 samples, 0.04%)</title><rect x="460.6" y="211.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="463.6" y="222.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="461.1" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.1" y="222.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (5 samples, 0.07%)</title><rect x="461.9" y="259.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="464.9" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (3 samples, 0.04%)</title><rect x="462.8" y="259.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="465.8" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.20%)</title><rect x="463.3" y="259.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="466.3" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (4 samples, 0.05%)</title><rect x="463.9" y="243.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="466.9" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.04%)</title><rect x="464.0" y="227.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="467.0" y="238.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (4 samples, 0.05%)</title><rect x="464.7" y="243.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="467.7" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.05%)</title><rect x="464.7" y="227.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="467.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.05%)</title><rect x="465.6" y="275.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="468.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.07%)</title><rect x="466.4" y="291.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="469.4" y="302.0"></text>
</g>
<g>
<title>rcu_bh_qs (2 samples, 0.03%)</title><rect x="467.3" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="470.3" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (43 samples, 0.56%)</title><rect x="467.8" y="403.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="470.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (41 samples, 0.54%)</title><rect x="467.9" y="387.0" width="6.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="470.9" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (22 samples, 0.29%)</title><rect x="469.1" y="371.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="472.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (16 samples, 0.21%)</title><rect x="469.6" y="355.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="472.6" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.04%)</title><rect x="469.9" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="472.9" y="350.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.08%)</title><rect x="470.4" y="339.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="473.4" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.07%)</title><rect x="470.5" y="323.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="473.5" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="470.9" y="307.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="473.9" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="471.3" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="474.3" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="471.8" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="474.8" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="472.1" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="475.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="472.6" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="475.6" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.10%)</title><rect x="472.9" y="371.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="475.9" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (7 samples, 0.09%)</title><rect x="473.0" y="355.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="476.0" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="473.8" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.8" y="350.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (2 samples, 0.03%)</title><rect x="474.7" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="477.7" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="475.0" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="478.0" y="446.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (3 samples, 0.04%)</title><rect x="475.3" y="435.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="478.3" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="475.8" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.8" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.25%)</title><rect x="476.1" y="435.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="479.1" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (8 samples, 0.10%)</title><rect x="476.4" y="419.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="479.4" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (8 samples, 0.10%)</title><rect x="476.4" y="403.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="479.4" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (3 samples, 0.04%)</title><rect x="477.7" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="480.7" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="477.8" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="480.8" y="414.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="478.1" y="419.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="481.1" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="478.4" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="478.7" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="481.7" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="479.1" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="482.1" y="462.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.04%)</title><rect x="479.5" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="482.5" y="494.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="479.5" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="482.5" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="480.6" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.6" y="510.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.03%)</title><rect x="480.9" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="483.9" y="510.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="481.4" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="484.4" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.13%)</title><rect x="481.8" y="499.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="484.8" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.08%)</title><rect x="482.5" y="483.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="485.5" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (6 samples, 0.08%)</title><rect x="482.5" y="467.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="485.5" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="482.8" y="451.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="485.8" y="462.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="482.8" y="435.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.8" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="482.9" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="485.9" y="430.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="483.9" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.9" y="510.0"></text>
</g>
<g>
<title>tcp_tso_segs (3 samples, 0.04%)</title><rect x="484.3" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="487.3" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="484.8" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="487.8" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.17%)</title><rect x="485.3" y="547.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="488.3" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (11 samples, 0.14%)</title><rect x="485.6" y="531.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="488.6" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="486.3" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="489.3" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.04%)</title><rect x="486.6" y="515.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="489.6" y="526.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="487.6" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="490.6" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (15 samples, 0.20%)</title><rect x="488.0" y="595.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="491.0" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (13 samples, 0.17%)</title><rect x="488.3" y="579.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="491.3" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (12 samples, 0.16%)</title><rect x="488.5" y="563.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="491.5" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.09%)</title><rect x="489.3" y="547.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="492.3" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (13 samples, 0.17%)</title><rect x="490.4" y="611.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="493.4" y="622.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.13%)</title><rect x="490.4" y="595.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="493.4" y="606.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.13%)</title><rect x="490.4" y="579.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="493.4" y="590.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.13%)</title><rect x="490.4" y="563.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="493.4" y="574.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="491.9" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="494.9" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="492.8" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="495.8" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="492.8" y="707.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="495.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.07%)</title><rect x="493.1" y="771.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.07%)</title><rect x="493.1" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="493.5" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="493.6" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="493.6" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.6" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="493.6" y="691.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.proxy (6 samples, 0.08%)</title><rect x="494.1" y="803.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (2,066 samples, 27.11%)</title><rect x="495.0" y="803.0" width="319.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.0" y="814.0">ru/mail/polis/service/kate/moreva/MySimpleH..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (16 samples, 0.21%)</title><rect x="495.5" y="787.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (14 samples, 0.18%)</title><rect x="495.8" y="771.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="498.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (14 samples, 0.18%)</title><rect x="495.8" y="755.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (13 samples, 0.17%)</title><rect x="495.9" y="739.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.9" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (4 samples, 0.05%)</title><rect x="496.2" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.05%)</title><rect x="496.9" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.9" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="496.9" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="499.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="497.2" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.04%)</title><rect x="497.5" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.proxy (2,047 samples, 26.86%)</title><rect x="498.0" y="787.0" width="316.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.0" y="798.0">ru/mail/polis/service/kate/moreva/MySimpleH..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.14%)</title><rect x="498.1" y="771.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="501.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/689401025.invoke (11 samples, 0.14%)</title><rect x="498.1" y="755.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="498.1" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1500056228.invoke (9 samples, 0.12%)</title><rect x="498.4" y="739.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.12%)</title><rect x="498.4" y="723.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (9 samples, 0.12%)</title><rect x="498.4" y="707.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.12%)</title><rect x="498.4" y="691.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.4" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="499.5" y="675.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="502.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,026 samples, 26.59%)</title><rect x="500.0" y="771.0" width="313.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.0" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,026 samples, 26.59%)</title><rect x="500.0" y="755.0" width="313.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.0" y="766.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (16 samples, 0.21%)</title><rect x="502.8" y="739.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="504.3" y="723.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="507.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="504.3" y="707.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="507.3" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="504.3" y="691.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="507.3" y="702.0"></text>
</g>
<g>
<title>_new_array_Java (2 samples, 0.03%)</title><rect x="504.6" y="707.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="507.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (488 samples, 6.40%)</title><rect x="505.2" y="739.0" width="75.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.2" y="750.0">one/nio/..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (50 samples, 0.66%)</title><rect x="506.6" y="723.0" width="7.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="509.6" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (48 samples, 0.63%)</title><rect x="506.9" y="707.0" width="7.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="509.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (41 samples, 0.54%)</title><rect x="507.6" y="691.0" width="6.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="510.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (39 samples, 0.51%)</title><rect x="507.9" y="675.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="510.9" y="686.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (3 samples, 0.04%)</title><rect x="508.2" y="659.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="511.2" y="670.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (2 samples, 0.03%)</title><rect x="508.6" y="659.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="511.6" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (8 samples, 0.10%)</title><rect x="508.9" y="659.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="511.9" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="509.9" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="512.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="509.9" y="627.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="512.9" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.05%)</title><rect x="510.3" y="659.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="513.3" y="670.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.03%)</title><rect x="511.0" y="659.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="514.0" y="670.0"></text>
</g>
<g>
<title>__memset_avx2 (17 samples, 0.22%)</title><rect x="511.3" y="659.0" width="2.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="514.3" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="513.9" y="691.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="516.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (426 samples, 5.59%)</title><rect x="514.5" y="723.0" width="66.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.5" y="734.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (78 samples, 1.02%)</title><rect x="517.5" y="707.0" width="12.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="520.5" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.09%)</title><rect x="519.8" y="691.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="522.8" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="520.9" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="523.9" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.05%)</title><rect x="521.3" y="691.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="524.3" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (12 samples, 0.16%)</title><rect x="522.0" y="691.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="525.0" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (36 samples, 0.47%)</title><rect x="523.8" y="691.0" width="5.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="526.8" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.05%)</title><rect x="526.6" y="675.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="529.6" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="527.2" y="675.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="530.2" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (10 samples, 0.13%)</title><rect x="527.8" y="675.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="530.8" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.07%)</title><rect x="529.5" y="707.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="532.5" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="530.3" y="707.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="533.3" y="718.0"></text>
</g>
<g>
<title>recv (320 samples, 4.20%)</title><rect x="530.9" y="707.0" width="49.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="533.9" y="718.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (252 samples, 3.31%)</title><rect x="541.5" y="691.0" width="39.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="544.5" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (252 samples, 3.31%)</title><rect x="541.5" y="675.0" width="39.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="544.5" y="686.0">do_..</text>
</g>
<g>
<title>sys_recvfrom (238 samples, 3.12%)</title><rect x="543.6" y="659.0" width="36.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="546.6" y="670.0">sys..</text>
</g>
<g>
<title>SYSC_recvfrom (228 samples, 2.99%)</title><rect x="543.6" y="643.0" width="35.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="546.6" y="654.0">SYS..</text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.04%)</title><rect x="545.6" y="627.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="548.6" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (204 samples, 2.68%)</title><rect x="546.1" y="627.0" width="31.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="549.1" y="638.0">so..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="546.3" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="549.3" y="622.0"></text>
</g>
<g>
<title>inet_recvmsg (196 samples, 2.57%)</title><rect x="546.6" y="611.0" width="30.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="549.6" y="622.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (192 samples, 2.52%)</title><rect x="547.2" y="595.0" width="29.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="550.2" y="606.0">tc..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="550.9" y="579.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="553.9" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.12%)</title><rect x="551.5" y="579.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="554.5" y="590.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.07%)</title><rect x="551.7" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="554.7" y="574.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="551.7" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="554.7" y="558.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="552.1" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="555.1" y="558.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="552.5" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="555.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="553.1" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="556.1" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="553.5" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="556.5" y="590.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="553.9" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="556.9" y="590.0"></text>
</g>
<g>
<title>sk_wait_data (109 samples, 1.43%)</title><rect x="554.2" y="579.0" width="16.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="557.2" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.07%)</title><rect x="555.2" y="563.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="558.2" y="574.0"></text>
</g>
<g>
<title>add_wait_queue (4 samples, 0.05%)</title><rect x="556.0" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="559.0" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.05%)</title><rect x="556.0" y="547.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="559.0" y="558.0"></text>
</g>
<g>
<title>remove_wait_queue (5 samples, 0.07%)</title><rect x="556.8" y="563.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="559.8" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.07%)</title><rect x="556.8" y="547.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="559.8" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="557.7" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="560.7" y="574.0"></text>
</g>
<g>
<title>wait_woken (84 samples, 1.10%)</title><rect x="558.0" y="563.0" width="13.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="561.0" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (79 samples, 1.04%)</title><rect x="558.8" y="547.0" width="12.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="561.8" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.13%)</title><rect x="559.7" y="531.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="562.7" y="542.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="561.3" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="564.3" y="542.0"></text>
</g>
<g>
<title>del_timer_sync (10 samples, 0.13%)</title><rect x="561.6" y="531.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="564.6" y="542.0"></text>
</g>
<g>
<title>lock_timer_base (4 samples, 0.05%)</title><rect x="561.8" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="564.8" y="526.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (5 samples, 0.07%)</title><rect x="562.4" y="515.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="565.4" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.07%)</title><rect x="562.4" y="499.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="565.4" y="510.0"></text>
</g>
<g>
<title>schedule (50 samples, 0.66%)</title><rect x="563.1" y="531.0" width="7.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.1" y="542.0"></text>
</g>
<g>
<title>__schedule (47 samples, 0.62%)</title><rect x="563.6" y="515.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="566.6" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (45 samples, 0.59%)</title><rect x="563.9" y="499.0" width="7.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="566.9" y="510.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (24 samples, 0.31%)</title><rect x="571.0" y="579.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="574.0" y="590.0"></text>
</g>
<g>
<title>__check_object_size (13 samples, 0.17%)</title><rect x="571.2" y="563.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="574.2" y="574.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.04%)</title><rect x="571.4" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="574.4" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (9 samples, 0.12%)</title><rect x="571.8" y="547.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="574.8" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.12%)</title><rect x="573.4" y="563.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="576.4" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.10%)</title><rect x="573.5" y="547.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="576.5" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.08%)</title><rect x="574.9" y="579.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="577.9" y="590.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.04%)</title><rect x="575.4" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="578.4" y="574.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.38 (3 samples, 0.04%)</title><rect x="575.4" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="578.4" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.04%)</title><rect x="575.4" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="578.4" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.04%)</title><rect x="575.4" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="578.4" y="526.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.04%)</title><rect x="575.4" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.4" y="510.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="575.4" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="578.4" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="575.4" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="578.4" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="575.4" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="578.4" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="575.4" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="578.4" y="446.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="575.8" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="578.8" y="590.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="575.8" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="578.8" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="576.2" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="579.2" y="590.0"></text>
</g>
<g>
<title>wait_woken (2 samples, 0.03%)</title><rect x="576.6" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.6" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.07%)</title><rect x="576.9" y="611.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="579.9" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.05%)</title><rect x="577.1" y="595.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="580.1" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.04%)</title><rect x="577.2" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="580.2" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="577.4" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="580.4" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.10%)</title><rect x="577.7" y="627.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="580.7" y="638.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.07%)</title><rect x="578.0" y="611.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="581.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="578.0" y="595.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="581.0" y="606.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.07%)</title><rect x="578.0" y="579.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.0" y="590.0"></text>
</g>
<g>
<title>fput (9 samples, 0.12%)</title><rect x="578.9" y="643.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="581.9" y="654.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (2 samples, 0.03%)</title><rect x="580.5" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (160 samples, 2.10%)</title><rect x="580.8" y="739.0" width="24.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="583.8" y="750.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="582.5" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="582.5" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="582.5" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="582.5" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="582.5" y="659.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.5" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.03%)</title><rect x="582.7" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="583.0" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.16%)</title><rect x="583.3" y="723.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.16%)</title><rect x="583.3" y="707.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.13%)</title><rect x="583.3" y="691.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.3" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (5 samples, 0.07%)</title><rect x="583.3" y="675.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="586.3" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="584.0" y="675.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="587.0" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="584.8" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (61 samples, 0.80%)</title><rect x="585.1" y="723.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 0.77%)</title><rect x="585.4" y="707.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 0.77%)</title><rect x="585.4" y="691.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.4" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="592.7" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="595.7" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="592.7" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="595.7" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="592.7" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="595.7" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="592.7" y="627.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="595.7" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="592.7" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="595.7" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="593.0" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="596.0" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="593.0" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="596.0" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="593.0" y="643.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="596.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.09%)</title><rect x="593.3" y="675.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.09%)</title><rect x="593.3" y="659.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.08%)</title><rect x="593.5" y="643.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="594.6" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (4 samples, 0.05%)</title><rect x="595.0" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (25 samples, 0.33%)</title><rect x="595.7" y="723.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="596.4" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.14%)</title><rect x="596.7" y="707.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.13%)</title><rect x="596.9" y="691.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.09%)</title><rect x="598.5" y="707.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="598.6" y="691.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="598.8" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.8" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="598.9" y="659.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="601.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (19 samples, 0.25%)</title><rect x="599.5" y="723.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.09%)</title><rect x="601.2" y="707.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.setBody (7 samples, 0.09%)</title><rect x="602.5" y="723.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.17%)</title><rect x="603.6" y="723.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (72 samples, 0.94%)</title><rect x="605.6" y="739.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.07%)</title><rect x="607.4" y="723.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.4" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="607.6" y="707.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="610.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="607.6" y="691.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="610.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (46 samples, 0.60%)</title><rect x="608.2" y="723.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.14%)</title><rect x="609.1" y="707.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (10 samples, 0.13%)</title><rect x="609.3" y="691.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (15 samples, 0.20%)</title><rect x="611.0" y="707.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (12 samples, 0.16%)</title><rect x="611.5" y="691.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.05%)</title><rect x="612.5" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.17%)</title><rect x="613.3" y="707.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.17%)</title><rect x="613.3" y="691.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.16%)</title><rect x="613.5" y="675.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="613.9" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (3 samples, 0.04%)</title><rect x="614.1" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (3 samples, 0.04%)</title><rect x="614.1" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.checkIndex (3 samples, 0.04%)</title><rect x="614.1" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="614.6" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.04%)</title><rect x="614.6" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.6" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="614.6" y="627.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="617.6" y="638.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (2 samples, 0.03%)</title><rect x="615.0" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.trim (2 samples, 0.03%)</title><rect x="615.3" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.09%)</title><rect x="615.6" y="723.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.07%)</title><rect x="615.6" y="707.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="616.4" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.08%)</title><rect x="616.7" y="739.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="617.0" y="723.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="617.0" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (177 samples, 2.32%)</title><rect x="617.7" y="739.0" width="27.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.7" y="750.0">o..</text>
</g>
<g>
<title>__GI___setsockopt (169 samples, 2.22%)</title><rect x="618.6" y="723.0" width="26.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="621.6" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (110 samples, 1.44%)</title><rect x="627.7" y="707.0" width="17.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="630.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (110 samples, 1.44%)</title><rect x="627.7" y="691.0" width="17.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="630.7" y="702.0"></text>
</g>
<g>
<title>security_socket_setsockopt (2 samples, 0.03%)</title><rect x="631.9" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="634.9" y="686.0"></text>
</g>
<g>
<title>sys_setsockopt (81 samples, 1.06%)</title><rect x="632.2" y="675.0" width="12.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="635.2" y="686.0"></text>
</g>
<g>
<title>__get_user_4 (7 samples, 0.09%)</title><rect x="633.0" y="659.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="636.0" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.03%)</title><rect x="634.1" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="637.1" y="670.0"></text>
</g>
<g>
<title>security_socket_setsockopt (13 samples, 0.17%)</title><rect x="634.5" y="659.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="637.5" y="670.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (4 samples, 0.05%)</title><rect x="634.7" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="637.7" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (8 samples, 0.10%)</title><rect x="635.3" y="643.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="638.3" y="654.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (8 samples, 0.10%)</title><rect x="635.3" y="627.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="638.3" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.08%)</title><rect x="635.6" y="611.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="638.6" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (31 samples, 0.41%)</title><rect x="636.7" y="659.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="639.7" y="670.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.04%)</title><rect x="637.3" y="643.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="640.3" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.12%)</title><rect x="637.8" y="643.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="640.8" y="654.0"></text>
</g>
<g>
<title>sock_set_timeout (11 samples, 0.14%)</title><rect x="639.3" y="643.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="642.3" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="639.6" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="642.6" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (7 samples, 0.09%)</title><rect x="640.0" y="627.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="643.0" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="641.0" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="644.0" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (21 samples, 0.28%)</title><rect x="641.5" y="659.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="644.5" y="670.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.21%)</title><rect x="641.7" y="643.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="644.7" y="654.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.21%)</title><rect x="641.7" y="627.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="644.7" y="638.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.21%)</title><rect x="641.7" y="611.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="644.7" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="644.1" y="643.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="647.1" y="654.0"></text>
</g>
<g>
<title>setsockopt@plt (2 samples, 0.03%)</title><rect x="644.8" y="723.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="647.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,073 samples, 14.08%)</title><rect x="645.1" y="739.0" width="166.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.1" y="750.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (20 samples, 0.26%)</title><rect x="646.1" y="723.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="649.1" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.04%)</title><rect x="647.4" y="707.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="650.4" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (2 samples, 0.03%)</title><rect x="647.9" y="707.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="650.9" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.09%)</title><rect x="648.2" y="707.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="651.2" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="648.5" y="691.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="651.5" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="648.8" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="651.8" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="649.4" y="723.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="652.4" y="734.0"></text>
</g>
<g>
<title>send (1,043 samples, 13.69%)</title><rect x="649.7" y="723.0" width="161.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="652.7" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,018 samples, 13.36%)</title><rect x="653.6" y="707.0" width="157.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.6" y="718.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (1,016 samples, 13.33%)</title><rect x="653.6" y="691.0" width="157.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="656.6" y="702.0">do_syscall_64</text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="655.7" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="658.7" y="686.0"></text>
</g>
<g>
<title>sys_sendto (1,000 samples, 13.12%)</title><rect x="656.1" y="675.0" width="154.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="659.1" y="686.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (997 samples, 13.08%)</title><rect x="656.2" y="659.0" width="154.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="659.2" y="670.0">SYSC_sendto</text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="656.8" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.8" y="654.0"></text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.03%)</title><rect x="657.1" y="643.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="660.1" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (986 samples, 12.94%)</title><rect x="657.6" y="643.0" width="152.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="660.6" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (979 samples, 12.85%)</title><rect x="657.8" y="627.0" width="151.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="660.8" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (969 samples, 12.72%)</title><rect x="659.3" y="611.0" width="150.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="662.3" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.07%)</title><rect x="659.6" y="595.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="662.6" y="606.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="660.7" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="663.7" y="606.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="661.2" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="664.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (952 samples, 12.49%)</title><rect x="661.6" y="595.0" width="147.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.6" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="662.9" y="579.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="665.9" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="662.9" y="563.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="665.9" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.05%)</title><rect x="663.6" y="579.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="666.6" y="590.0"></text>
</g>
<g>
<title>check_stack_object (5 samples, 0.07%)</title><rect x="664.3" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.3" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (34 samples, 0.45%)</title><rect x="665.0" y="579.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="668.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (30 samples, 0.39%)</title><rect x="665.7" y="563.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="668.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (16 samples, 0.21%)</title><rect x="666.3" y="547.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="669.3" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (13 samples, 0.17%)</title><rect x="666.3" y="531.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="669.3" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (9 samples, 0.12%)</title><rect x="666.9" y="515.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="669.9" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.04%)</title><rect x="668.3" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="671.3" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.09%)</title><rect x="668.8" y="547.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.8" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="669.5" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.5" y="542.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.04%)</title><rect x="669.8" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.8" y="558.0"></text>
</g>
<g>
<title>tcp_push (870 samples, 11.42%)</title><rect x="670.8" y="579.0" width="134.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.8" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (865 samples, 11.35%)</title><rect x="671.5" y="563.0" width="134.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.5" y="574.0">__tcp_push_pendin..</text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="672.2" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="675.2" y="558.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.29 (2 samples, 0.03%)</title><rect x="672.6" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="675.6" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (856 samples, 11.23%)</title><rect x="672.9" y="547.0" width="132.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="675.9" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (797 samples, 10.46%)</title><rect x="674.5" y="531.0" width="123.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="677.5" y="542.0">__tcp_transmit_..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="678.2" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="681.2" y="526.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="678.5" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="681.5" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (756 samples, 9.92%)</title><rect x="679.1" y="515.0" width="117.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="682.1" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="679.8" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="682.8" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.07%)</title><rect x="680.1" y="499.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="683.1" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.07%)</title><rect x="680.1" y="483.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="683.1" y="494.0"></text>
</g>
<g>
<title>ip_local_out (739 samples, 9.70%)</title><rect x="681.0" y="499.0" width="114.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="684.0" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (172 samples, 2.26%)</title><rect x="681.3" y="483.0" width="26.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="684.3" y="494.0">_..</text>
</g>
<g>
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="681.3" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="684.3" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.04%)</title><rect x="681.6" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="684.6" y="478.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (4 samples, 0.05%)</title><rect x="682.1" y="467.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="685.1" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.03%)</title><rect x="682.8" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="685.8" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (4 samples, 0.05%)</title><rect x="683.2" y="467.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="686.2" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (156 samples, 2.05%)</title><rect x="683.8" y="467.0" width="24.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="686.8" y="478.0">n..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.03%)</title><rect x="684.2" y="451.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="687.2" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (22 samples, 0.29%)</title><rect x="684.6" y="451.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="687.6" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (18 samples, 0.24%)</title><rect x="685.2" y="435.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="688.2" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (21 samples, 0.28%)</title><rect x="688.0" y="451.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="691.0" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (19 samples, 0.25%)</title><rect x="688.3" y="435.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="691.3" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (6 samples, 0.08%)</title><rect x="691.2" y="451.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="694.2" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (6 samples, 0.08%)</title><rect x="691.2" y="435.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="694.2" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="691.5" y="419.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="694.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.03%)</title><rect x="691.7" y="403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="694.7" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (96 samples, 1.26%)</title><rect x="692.1" y="451.0" width="14.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="695.1" y="462.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.03%)</title><rect x="692.4" y="435.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="695.4" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (78 samples, 1.02%)</title><rect x="692.9" y="435.0" width="12.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="695.9" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (14 samples, 0.18%)</title><rect x="694.8" y="419.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="697.8" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (5 samples, 0.07%)</title><rect x="696.9" y="419.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="699.9" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.03%)</title><rect x="697.7" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="700.7" y="430.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="698.0" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="701.0" y="430.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.05%)</title><rect x="698.3" y="419.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="701.3" y="430.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (2 samples, 0.03%)</title><rect x="698.6" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="701.6" y="414.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (11 samples, 0.14%)</title><rect x="699.0" y="419.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="702.0" y="430.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.03%)</title><rect x="700.7" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="703.7" y="430.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (24 samples, 0.31%)</title><rect x="701.0" y="419.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.0" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (3 samples, 0.04%)</title><rect x="702.0" y="403.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="705.0" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (13 samples, 0.17%)</title><rect x="702.7" y="403.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="705.7" y="414.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (2 samples, 0.03%)</title><rect x="704.7" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="707.7" y="430.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (3 samples, 0.04%)</title><rect x="705.0" y="435.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="708.0" y="446.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (6 samples, 0.08%)</title><rect x="705.5" y="435.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="708.5" y="446.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.04%)</title><rect x="706.5" y="435.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="709.5" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="707.0" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="710.0" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (4 samples, 0.05%)</title><rect x="707.3" y="451.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.3" y="462.0"></text>
</g>
<g>
<title>ip_output (558 samples, 7.32%)</title><rect x="707.9" y="483.0" width="86.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="710.9" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="708.9" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="711.9" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (525 samples, 6.89%)</title><rect x="709.2" y="467.0" width="81.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="712.2" y="478.0">ip_finish..</text>
</g>
<g>
<title>ip_finish_output2 (517 samples, 6.78%)</title><rect x="710.3" y="451.0" width="80.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="713.3" y="462.0">ip_finish..</text>
</g>
<g>
<title>__local_bh_enable_ip (464 samples, 6.09%)</title><rect x="712.6" y="435.0" width="71.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="715.6" y="446.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.17 (464 samples, 6.09%)</title><rect x="712.6" y="419.0" width="71.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.6" y="430.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (461 samples, 6.05%)</title><rect x="713.0" y="403.0" width="71.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.0" y="414.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (459 samples, 6.02%)</title><rect x="713.0" y="387.0" width="71.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="716.0" y="398.0">__softir..</text>
</g>
<g>
<title>net_rx_action (440 samples, 5.77%)</title><rect x="715.2" y="371.0" width="68.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="718.2" y="382.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (433 samples, 5.68%)</title><rect x="716.3" y="355.0" width="67.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="719.3" y="366.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (429 samples, 5.63%)</title><rect x="716.8" y="339.0" width="66.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="719.8" y="350.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (427 samples, 5.60%)</title><rect x="716.9" y="323.0" width="66.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="719.9" y="334.0">__netif..</text>
</g>
<g>
<title>ip_rcv (412 samples, 5.41%)</title><rect x="718.3" y="307.0" width="63.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="721.3" y="318.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.04%)</title><rect x="719.9" y="291.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="722.9" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (374 samples, 4.91%)</title><rect x="720.3" y="291.0" width="57.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="723.3" y="302.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (368 samples, 4.83%)</title><rect x="720.9" y="275.0" width="57.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="723.9" y="286.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (342 samples, 4.49%)</title><rect x="721.4" y="259.0" width="53.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="724.4" y="270.0">ip_lo..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="722.0" y="243.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="725.0" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (334 samples, 4.38%)</title><rect x="722.6" y="243.0" width="51.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="725.6" y="254.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.10%)</title><rect x="724.2" y="227.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="727.2" y="238.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="725.1" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.1" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.05%)</title><rect x="726.1" y="227.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="729.1" y="238.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="726.2" y="211.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="729.2" y="222.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.03%)</title><rect x="726.7" y="227.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="729.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (306 samples, 4.02%)</title><rect x="727.0" y="227.0" width="47.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="730.0" y="238.0">tcp_..</text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.08%)</title><rect x="727.4" y="211.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="730.4" y="222.0"></text>
</g>
<g>
<title>tcp_data_queue (3 samples, 0.04%)</title><rect x="728.4" y="211.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="731.4" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (294 samples, 3.86%)</title><rect x="728.8" y="211.0" width="45.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="731.8" y="222.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.10%)</title><rect x="729.8" y="195.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="732.8" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.07%)</title><rect x="730.2" y="179.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="733.2" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.07%)</title><rect x="730.2" y="163.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="733.2" y="174.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.07%)</title><rect x="730.2" y="147.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="733.2" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.05%)</title><rect x="730.2" y="131.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="733.2" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="731.0" y="195.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="734.0" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.07%)</title><rect x="731.6" y="195.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="734.6" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.04%)</title><rect x="731.9" y="179.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="734.9" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.04%)</title><rect x="731.9" y="163.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="734.9" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="731.9" y="147.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="734.9" y="158.0"></text>
</g>
<g>
<title>tcp_ack (82 samples, 1.08%)</title><rect x="732.4" y="195.0" width="12.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="735.4" y="206.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="734.9" y="179.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="737.9" y="190.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="735.2" y="179.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="738.2" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (53 samples, 0.70%)</title><rect x="735.8" y="179.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="738.8" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (27 samples, 0.35%)</title><rect x="737.0" y="163.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="740.0" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.08%)</title><rect x="737.0" y="147.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="740.0" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.08%)</title><rect x="737.0" y="131.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="740.0" y="142.0"></text>
</g>
<g>
<title>skb_release_all (19 samples, 0.25%)</title><rect x="738.0" y="147.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="741.0" y="158.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.20%)</title><rect x="738.1" y="131.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="741.1" y="142.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.10%)</title><rect x="739.2" y="115.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="742.2" y="126.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.09%)</title><rect x="739.4" y="99.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="742.4" y="110.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.05%)</title><rect x="739.8" y="83.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="742.8" y="94.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.04%)</title><rect x="740.5" y="131.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="743.5" y="142.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.03%)</title><rect x="741.4" y="163.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="744.4" y="174.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (8 samples, 0.10%)</title><rect x="741.8" y="163.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="744.8" y="174.0"></text>
</g>
<g>
<title>minmax_subwin_update (2 samples, 0.03%)</title><rect x="742.8" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="745.8" y="158.0"></text>
</g>
<g>
<title>tcp_chrono_stop (3 samples, 0.04%)</title><rect x="743.1" y="163.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="746.1" y="174.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="743.7" y="163.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="746.7" y="174.0"></text>
</g>
<g>
<title>tcp_rack_advance (3 samples, 0.04%)</title><rect x="744.0" y="179.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="747.0" y="190.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="744.5" y="179.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="747.5" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.03%)</title><rect x="745.1" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="748.1" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (181 samples, 2.38%)</title><rect x="745.4" y="195.0" width="28.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="748.4" y="206.0">tc..</text>
</g>
<g>
<title>sock_def_readable (157 samples, 2.06%)</title><rect x="747.0" y="179.0" width="24.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="750.0" y="190.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (155 samples, 2.03%)</title><rect x="747.3" y="163.0" width="24.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.3" y="174.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (155 samples, 2.03%)</title><rect x="747.3" y="147.0" width="24.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.3" y="158.0">_..</text>
</g>
<g>
<title>__lock_text_start (155 samples, 2.03%)</title><rect x="747.3" y="131.0" width="24.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="750.3" y="142.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (7 samples, 0.09%)</title><rect x="771.3" y="179.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="774.3" y="190.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.24 (5 samples, 0.07%)</title><rect x="771.6" y="163.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="774.6" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (6 samples, 0.08%)</title><rect x="772.5" y="179.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="775.5" y="190.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="773.4" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="776.4" y="206.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="773.7" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="776.7" y="206.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (3 samples, 0.04%)</title><rect x="774.5" y="259.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="777.5" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.17%)</title><rect x="775.3" y="259.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="778.3" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.09%)</title><rect x="775.5" y="243.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="778.5" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.09%)</title><rect x="775.5" y="227.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="778.5" y="238.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (3 samples, 0.04%)</title><rect x="776.5" y="243.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="779.5" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.03%)</title><rect x="776.7" y="227.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="779.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.04%)</title><rect x="777.5" y="259.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="780.5" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="777.9" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="780.9" y="286.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (3 samples, 0.04%)</title><rect x="778.2" y="291.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="781.2" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.03%)</title><rect x="778.9" y="291.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.9" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.25%)</title><rect x="779.2" y="291.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="782.2" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (5 samples, 0.07%)</title><rect x="779.3" y="275.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="782.3" y="286.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.05%)</title><rect x="779.5" y="259.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="782.5" y="270.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (4 samples, 0.05%)</title><rect x="780.1" y="275.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="783.1" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (4 samples, 0.05%)</title><rect x="780.1" y="259.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="783.1" y="270.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="780.4" y="243.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="783.4" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (9 samples, 0.12%)</title><rect x="780.7" y="275.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="783.7" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (9 samples, 0.12%)</title><rect x="780.7" y="259.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="783.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="782.1" y="307.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.1" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.05%)</title><rect x="782.4" y="307.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="785.4" y="318.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="783.3" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="786.3" y="382.0"></text>
</g>
<g>
<title>rcu_bh_qs (3 samples, 0.04%)</title><rect x="783.7" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="786.7" y="382.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="784.1" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="787.1" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (38 samples, 0.50%)</title><rect x="784.4" y="435.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="787.4" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (38 samples, 0.50%)</title><rect x="784.4" y="419.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="787.4" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (22 samples, 0.29%)</title><rect x="785.7" y="403.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="788.7" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="785.8" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="788.8" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (18 samples, 0.24%)</title><rect x="786.1" y="387.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="789.1" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.04%)</title><rect x="786.6" y="371.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="789.6" y="382.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.08%)</title><rect x="787.1" y="371.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="790.1" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.08%)</title><rect x="787.1" y="355.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="790.1" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.08%)</title><rect x="787.1" y="339.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="790.1" y="350.0"></text>
</g>
<g>
<title>sk_free (3 samples, 0.04%)</title><rect x="788.0" y="371.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="791.0" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.04%)</title><rect x="788.5" y="371.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="791.5" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.09%)</title><rect x="789.2" y="403.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="792.2" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.04%)</title><rect x="789.7" y="387.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="792.7" y="398.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="790.6" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.6" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (21 samples, 0.28%)</title><rect x="791.1" y="467.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="794.1" y="478.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (6 samples, 0.08%)</title><rect x="791.1" y="451.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="794.1" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.07%)</title><rect x="791.2" y="435.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="794.2" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (6 samples, 0.08%)</title><rect x="792.0" y="451.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="795.0" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (6 samples, 0.08%)</title><rect x="792.0" y="435.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="795.0" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="792.5" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="795.5" y="430.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (4 samples, 0.05%)</title><rect x="793.0" y="451.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="796.0" y="462.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (4 samples, 0.05%)</title><rect x="793.0" y="435.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.0" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="793.6" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="796.6" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="793.9" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="796.9" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.08%)</title><rect x="794.5" y="483.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="797.5" y="494.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.04%)</title><rect x="795.4" y="499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="798.4" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="795.9" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="798.9" y="510.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.07%)</title><rect x="796.2" y="515.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="799.2" y="526.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="796.5" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="799.5" y="510.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (3 samples, 0.04%)</title><rect x="797.3" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="800.3" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="798.1" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="801.1" y="542.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="798.5" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="801.5" y="542.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.03%)</title><rect x="798.8" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="801.8" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (22 samples, 0.29%)</title><rect x="799.1" y="531.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="802.1" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="799.8" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="802.8" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (16 samples, 0.21%)</title><rect x="800.1" y="515.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="803.1" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (16 samples, 0.21%)</title><rect x="800.1" y="499.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="803.1" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.17%)</title><rect x="800.5" y="483.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="803.5" y="494.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.17%)</title><rect x="800.5" y="467.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="803.5" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.14%)</title><rect x="800.8" y="451.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="803.8" y="462.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (6 samples, 0.08%)</title><rect x="802.9" y="531.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="805.9" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="803.9" y="531.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="806.9" y="542.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.29 (2 samples, 0.03%)</title><rect x="804.6" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="807.6" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.04%)</title><rect x="805.0" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="808.0" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (22 samples, 0.29%)</title><rect x="805.6" y="579.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="808.6" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="806.0" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="809.0" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (15 samples, 0.20%)</title><rect x="806.4" y="563.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="809.4" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="807.8" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="810.8" y="558.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (4 samples, 0.05%)</title><rect x="808.1" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="811.1" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="808.7" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="811.7" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="809.1" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="812.1" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.07%)</title><rect x="809.4" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="812.4" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="809.8" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="812.8" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="809.8" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="812.8" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="809.8" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="812.8" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="810.3" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="813.3" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="810.3" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.3" y="638.0"></text>
</g>
<g>
<title>sys_sendto (2 samples, 0.03%)</title><rect x="810.9" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="813.9" y="702.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (11 samples, 0.14%)</title><rect x="811.2" y="739.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.2" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="812.0" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="815.0" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (4 samples, 0.05%)</title><rect x="812.3" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.3" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (3 samples, 0.04%)</title><rect x="812.5" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.5" y="718.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (4 samples, 0.05%)</title><rect x="812.9" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.9" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (3 samples, 0.04%)</title><rect x="813.1" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.1" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (3 samples, 0.04%)</title><rect x="813.1" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (8 samples, 0.10%)</title><rect x="813.7" y="771.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.7" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="814.3" y="755.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="817.3" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,629 samples, 21.38%)</title><rect x="815.1" y="915.0" width="252.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.1" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (13 samples, 0.17%)</title><rect x="816.3" y="899.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (12 samples, 0.16%)</title><rect x="816.5" y="883.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (492 samples, 6.46%)</title><rect x="818.3" y="899.0" width="76.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.3" y="910.0">one/nio/..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.08%)</title><rect x="821.9" y="883.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="824.9" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.05%)</title><rect x="822.1" y="867.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="825.1" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.05%)</title><rect x="822.1" y="851.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="825.1" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="822.1" y="835.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="825.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (14 samples, 0.18%)</title><rect x="822.8" y="883.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (8 samples, 0.10%)</title><rect x="823.8" y="867.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (449 samples, 5.89%)</title><rect x="825.0" y="883.0" width="69.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.0" y="894.0">one/nio..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (2 samples, 0.03%)</title><rect x="830.6" y="867.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="833.6" y="878.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (2 samples, 0.03%)</title><rect x="830.6" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="833.6" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (16 samples, 0.21%)</title><rect x="830.9" y="867.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="833.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="833.4" y="867.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="836.4" y="878.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.04%)</title><rect x="833.4" y="851.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="836.4" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (9 samples, 0.12%)</title><rect x="833.8" y="867.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="836.8" y="878.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (8 samples, 0.10%)</title><rect x="835.2" y="867.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="838.2" y="878.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (4 samples, 0.05%)</title><rect x="836.5" y="867.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="839.5" y="878.0"></text>
</g>
<g>
<title>epoll_wait (345 samples, 4.53%)</title><rect x="837.2" y="867.0" width="53.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="840.2" y="878.0">epoll..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (264 samples, 3.46%)</title><rect x="849.8" y="851.0" width="40.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="852.8" y="862.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (260 samples, 3.41%)</title><rect x="849.8" y="835.0" width="40.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="852.8" y="846.0">do_..</text>
</g>
<g>
<title>fput (10 samples, 0.13%)</title><rect x="854.0" y="819.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="857.0" y="830.0"></text>
</g>
<g>
<title>sys_epoll_wait (223 samples, 2.93%)</title><rect x="855.5" y="819.0" width="34.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="858.5" y="830.0">sy..</text>
</g>
<g>
<title>__fdget (5 samples, 0.07%)</title><rect x="856.1" y="803.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="859.1" y="814.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="856.1" y="787.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="859.1" y="798.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.07%)</title><rect x="856.1" y="771.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="859.1" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="856.9" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="859.9" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="857.2" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="860.2" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.04%)</title><rect x="857.5" y="803.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="860.5" y="814.0"></text>
</g>
<g>
<title>ep_poll (207 samples, 2.72%)</title><rect x="858.0" y="803.0" width="32.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="861.0" y="814.0">ep..</text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.30%)</title><rect x="860.2" y="787.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="863.2" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (4 samples, 0.05%)</title><rect x="863.7" y="787.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="866.7" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list (82 samples, 1.08%)</title><rect x="864.3" y="787.0" width="12.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="867.3" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.14%)</title><rect x="864.8" y="771.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="867.8" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.04%)</title><rect x="866.7" y="771.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="869.7" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (2 samples, 0.03%)</title><rect x="867.1" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="870.1" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (58 samples, 0.76%)</title><rect x="867.4" y="771.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="870.4" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (35 samples, 0.46%)</title><rect x="870.1" y="755.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="873.1" y="766.0"></text>
</g>
<g>
<title>sock_poll (26 samples, 0.34%)</title><rect x="871.2" y="739.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="874.2" y="750.0"></text>
</g>
<g>
<title>tcp_poll (13 samples, 0.17%)</title><rect x="872.5" y="723.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="875.5" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.05%)</title><rect x="874.6" y="723.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="877.6" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="875.2" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="878.2" y="750.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.08%)</title><rect x="875.5" y="755.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="878.5" y="766.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.05%)</title><rect x="876.4" y="771.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.4" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.04%)</title><rect x="877.0" y="787.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="880.0" y="798.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="877.5" y="787.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="880.5" y="798.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.07%)</title><rect x="878.0" y="787.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="881.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (73 samples, 0.96%)</title><rect x="878.7" y="787.0" width="11.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="881.7" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (71 samples, 0.93%)</title><rect x="879.0" y="771.0" width="11.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="882.0" y="782.0"></text>
</g>
<g>
<title>schedule (63 samples, 0.83%)</title><rect x="880.3" y="755.0" width="9.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="883.3" y="766.0"></text>
</g>
<g>
<title>__schedule (60 samples, 0.79%)</title><rect x="880.8" y="739.0" width="9.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="883.8" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (52 samples, 0.68%)</title><rect x="882.0" y="723.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="885.0" y="734.0"></text>
</g>
<g>
<title>sys_epoll_wait (4 samples, 0.05%)</title><rect x="890.0" y="835.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="893.0" y="846.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.09%)</title><rect x="890.7" y="867.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="893.7" y="878.0"></text>
</g>
<g>
<title>__clock_gettime (7 samples, 0.09%)</title><rect x="890.7" y="851.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="893.7" y="862.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (6 samples, 0.08%)</title><rect x="890.8" y="835.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="893.8" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="891.4" y="819.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="894.4" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (18 samples, 0.24%)</title><rect x="891.7" y="867.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="894.7" y="878.0"></text>
</g>
<g>
<title>gettimeofday (18 samples, 0.24%)</title><rect x="891.7" y="851.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="894.7" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.07%)</title><rect x="891.7" y="835.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="894.7" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.04%)</title><rect x="892.1" y="819.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="895.1" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (13 samples, 0.17%)</title><rect x="892.5" y="835.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="895.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,116 samples, 14.65%)</title><rect x="894.5" y="899.0" width="172.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.5" y="910.0">one/nio/net/Session.pr..</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="896.1" y="883.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="899.1" y="894.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.03%)</title><rect x="896.5" y="883.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="899.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,089 samples, 14.29%)</title><rect x="896.9" y="883.0" width="168.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.9" y="894.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (716 samples, 9.40%)</title><rect x="899.2" y="867.0" width="110.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.2" y="878.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (8 samples, 0.10%)</title><rect x="900.9" y="851.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (431 samples, 5.66%)</title><rect x="902.1" y="851.0" width="66.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.1" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (431 samples, 5.66%)</title><rect x="902.1" y="835.0" width="66.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.1" y="846.0">one/nio..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (381 samples, 5.00%)</title><rect x="902.1" y="819.0" width="59.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.1" y="830.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.07%)</title><rect x="902.1" y="803.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="902.3" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="902.3" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (28 samples, 0.37%)</title><rect x="902.9" y="803.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.30%)</title><rect x="903.1" y="787.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.07%)</title><rect x="903.1" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.07%)</title><rect x="903.1" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="906.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.09%)</title><rect x="903.8" y="771.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.07%)</title><rect x="904.1" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.1" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="904.3" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="907.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (11 samples, 0.14%)</title><rect x="904.9" y="771.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.12%)</title><rect x="905.2" y="755.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.12%)</title><rect x="905.2" y="739.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.09%)</title><rect x="905.5" y="723.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.05%)</title><rect x="906.6" y="787.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (348 samples, 4.57%)</title><rect x="907.2" y="803.0" width="53.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.2" y="814.0">ru/ma..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1236802685.linkToTargetMethod (10 samples, 0.13%)</title><rect x="907.4" y="787.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.13%)</title><rect x="907.4" y="771.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$66/1288711039.get$Lambda (10 samples, 0.13%)</title><rect x="907.4" y="755.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.4" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.05%)</title><rect x="908.3" y="739.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="911.3" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="908.6" y="723.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="911.6" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="908.6" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="911.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (337 samples, 4.42%)</title><rect x="908.9" y="787.0" width="52.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.9" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (333 samples, 4.37%)</title><rect x="909.2" y="771.0" width="51.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.2" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (18 samples, 0.24%)</title><rect x="909.7" y="755.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.12%)</title><rect x="911.1" y="739.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (9 samples, 0.12%)</title><rect x="911.1" y="723.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.09%)</title><rect x="911.4" y="707.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (3 samples, 0.04%)</title><rect x="911.7" y="691.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="911.7" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="911.7" y="659.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.03%)</title><rect x="912.2" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.03%)</title><rect x="912.2" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="912.2" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="912.2" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.18%)</title><rect x="912.5" y="755.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.18%)</title><rect x="912.5" y="739.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="915.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.09%)</title><rect x="912.5" y="723.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.08%)</title><rect x="912.5" y="707.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="915.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.08%)</title><rect x="912.5" y="691.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.08%)</title><rect x="912.5" y="675.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.5" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.08%)</title><rect x="912.5" y="659.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="915.5" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.04%)</title><rect x="912.5" y="643.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="915.5" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="912.7" y="627.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="915.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.09%)</title><rect x="913.6" y="723.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.09%)</title><rect x="913.6" y="707.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.04%)</title><rect x="913.7" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="913.7" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="913.7" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (3 samples, 0.04%)</title><rect x="914.2" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (298 samples, 3.91%)</title><rect x="914.7" y="755.0" width="46.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.7" y="766.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (298 samples, 3.91%)</title><rect x="914.7" y="739.0" width="46.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.7" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (297 samples, 3.90%)</title><rect x="914.8" y="723.0" width="46.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.8" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (296 samples, 3.88%)</title><rect x="915.0" y="707.0" width="45.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.0" y="718.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (296 samples, 3.88%)</title><rect x="915.0" y="691.0" width="45.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.0" y="702.0">jdk/..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (5 samples, 0.07%)</title><rect x="915.4" y="675.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="918.4" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (41 samples, 0.54%)</title><rect x="916.4" y="675.0" width="6.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="919.4" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="917.3" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="920.3" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="917.6" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="920.6" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.08%)</title><rect x="917.9" y="659.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="920.9" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="918.8" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="921.8" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (10 samples, 0.13%)</title><rect x="919.3" y="659.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="922.3" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (5 samples, 0.07%)</title><rect x="921.0" y="659.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="924.0" y="670.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.05%)</title><rect x="921.8" y="659.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="924.8" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (2 samples, 0.03%)</title><rect x="922.4" y="659.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="925.4" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (236 samples, 3.10%)</title><rect x="922.7" y="675.0" width="36.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="925.7" y="686.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (200 samples, 2.62%)</title><rect x="928.3" y="659.0" width="31.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="931.3" y="670.0">en..</text>
</g>
<g>
<title>do_syscall_64 (199 samples, 2.61%)</title><rect x="928.3" y="643.0" width="30.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="931.3" y="654.0">do..</text>
</g>
<g>
<title>sys_futex (178 samples, 2.34%)</title><rect x="931.5" y="627.0" width="27.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="934.5" y="638.0">s..</text>
</g>
<g>
<title>do_futex (175 samples, 2.30%)</title><rect x="932.0" y="611.0" width="27.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="935.0" y="622.0">d..</text>
</g>
<g>
<title>_raw_spin_lock (7 samples, 0.09%)</title><rect x="932.0" y="595.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="935.0" y="606.0"></text>
</g>
<g>
<title>futex_wake_op (166 samples, 2.18%)</title><rect x="933.1" y="595.0" width="25.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="936.1" y="606.0">f..</text>
</g>
<g>
<title>get_futex_key (6 samples, 0.08%)</title><rect x="936.0" y="579.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="939.0" y="590.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.12%)</title><rect x="937.0" y="579.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="940.0" y="590.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.05%)</title><rect x="937.6" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="940.6" y="574.0"></text>
</g>
<g>
<title>plist_del (2 samples, 0.03%)</title><rect x="937.9" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="940.9" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="938.4" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="941.4" y="590.0"></text>
</g>
<g>
<title>wake_up_q (130 samples, 1.71%)</title><rect x="938.7" y="579.0" width="20.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="941.7" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (128 samples, 1.68%)</title><rect x="939.0" y="563.0" width="19.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="942.0" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (126 samples, 1.65%)</title><rect x="939.1" y="547.0" width="19.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="942.1" y="558.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="958.8" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="961.8" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="959.3" y="675.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="962.3" y="686.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (5 samples, 0.07%)</title><rect x="959.9" y="675.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="962.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.03%)</title><rect x="961.1" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="964.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 0.14%)</title><rect x="961.4" y="819.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.13%)</title><rect x="961.6" y="803.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="964.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.10%)</title><rect x="961.6" y="787.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.04%)</title><rect x="962.4" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="962.8" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="962.8" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="965.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="962.8" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (37 samples, 0.49%)</title><rect x="963.1" y="819.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.49%)</title><rect x="963.1" y="803.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.49%)</title><rect x="963.1" y="787.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.42%)</title><rect x="963.4" y="771.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.4" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (11 samples, 0.14%)</title><rect x="963.8" y="755.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.8" y="766.0"></text>
</g>
<g>
<title>itable stub (18 samples, 0.24%)</title><rect x="965.5" y="755.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="968.5" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="968.4" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.4" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="968.4" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="971.4" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.04%)</title><rect x="968.4" y="739.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="971.4" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="968.4" y="723.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="971.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="968.4" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="971.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="968.4" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="971.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (128 samples, 1.68%)</title><rect x="968.9" y="851.0" width="19.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.9" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.05%)</title><rect x="970.0" y="835.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="973.0" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="970.0" y="819.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="973.0" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="970.0" y="803.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="973.0" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="970.0" y="787.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="973.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (71 samples, 0.93%)</title><rect x="970.6" y="835.0" width="11.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.6" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (10 samples, 0.13%)</title><rect x="974.4" y="819.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="977.4" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (8 samples, 0.10%)</title><rect x="974.4" y="803.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="977.4" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.09%)</title><rect x="974.4" y="787.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="977.4" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.07%)</title><rect x="974.4" y="771.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="977.4" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.03%)</title><rect x="974.6" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="977.6" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="974.9" y="755.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="977.9" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="975.2" y="771.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="978.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (36 samples, 0.47%)</title><rect x="976.0" y="819.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (36 samples, 0.47%)</title><rect x="976.0" y="803.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="979.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (32 samples, 0.42%)</title><rect x="976.3" y="787.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="979.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="981.3" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.42%)</title><rect x="981.6" y="835.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="984.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.42%)</title><rect x="981.6" y="819.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.6" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.08%)</title><rect x="983.6" y="803.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="986.6" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.07%)</title><rect x="983.7" y="787.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="986.7" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.07%)</title><rect x="983.7" y="771.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="986.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.07%)</title><rect x="983.7" y="755.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="986.7" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="983.9" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="986.9" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.05%)</title><rect x="984.5" y="803.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="987.5" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="984.5" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="987.5" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="984.8" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="987.8" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="984.8" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="987.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="985.4" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="988.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="985.4" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.05%)</title><rect x="985.4" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.4" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="985.7" y="755.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="988.7" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="985.7" y="739.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="988.7" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="985.7" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="988.7" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="985.7" y="707.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="988.7" y="718.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (3 samples, 0.04%)</title><rect x="986.1" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="989.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (14 samples, 0.18%)</title><rect x="986.5" y="835.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (10 samples, 0.13%)</title><rect x="988.7" y="851.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.7" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="988.7" y="835.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="991.7" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="988.7" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="991.7" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="988.7" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="991.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (8 samples, 0.10%)</title><rect x="989.0" y="835.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (8 samples, 0.10%)</title><rect x="989.0" y="819.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="989.9" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (12 samples, 0.16%)</title><rect x="990.2" y="851.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="993.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="991.6" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (62 samples, 0.81%)</title><rect x="992.1" y="851.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="995.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (32 samples, 0.42%)</title><rect x="992.4" y="835.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.coder (9 samples, 0.12%)</title><rect x="992.6" y="819.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="995.6" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (9 samples, 0.12%)</title><rect x="992.6" y="803.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="995.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (16 samples, 0.21%)</title><rect x="994.0" y="819.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="996.4" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="996.6" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="996.9" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="997.0" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="997.0" y="787.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1000.0" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="997.0" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1000.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.28%)</title><rect x="997.4" y="835.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1000.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.13%)</title><rect x="997.4" y="819.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.4" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="997.4" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1000.4" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="997.4" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1000.4" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="997.4" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1000.4" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="997.4" y="755.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1000.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.08%)</title><rect x="997.7" y="803.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1000.7" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="998.6" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (11 samples, 0.14%)</title><rect x="998.9" y="819.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1000.1" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.1" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.08%)</title><rect x="1000.8" y="835.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1003.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 0.71%)</title><rect x="1001.7" y="851.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1004.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 0.70%)</title><rect x="1001.9" y="835.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.9" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="1005.9" y="819.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1008.9" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.04%)</title><rect x="1005.9" y="803.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1008.9" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="1005.9" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1008.9" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="1005.9" y="771.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1008.9" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.07%)</title><rect x="1006.3" y="819.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.3" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.07%)</title><rect x="1006.3" y="803.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.3" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.07%)</title><rect x="1006.3" y="787.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1009.3" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="1006.5" y="771.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1009.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1007.1" y="819.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1010.1" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1007.1" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1010.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.18%)</title><rect x="1007.6" y="819.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1010.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.18%)</title><rect x="1007.6" y="803.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1010.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.18%)</title><rect x="1007.6" y="787.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1010.6" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (9 samples, 0.12%)</title><rect x="1008.4" y="771.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.4" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1008.4" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1011.4" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.09%)</title><rect x="1008.7" y="755.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1011.7" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.08%)</title><rect x="1008.7" y="739.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1011.7" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.08%)</title><rect x="1008.7" y="723.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1011.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (358 samples, 4.70%)</title><rect x="1010.1" y="867.0" width="55.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.1" y="878.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (358 samples, 4.70%)</title><rect x="1010.1" y="851.0" width="55.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.1" y="862.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (45 samples, 0.59%)</title><rect x="1013.3" y="835.0" width="7.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1016.3" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="1014.2" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1017.2" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1014.5" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1017.5" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.04%)</title><rect x="1015.0" y="819.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1018.0" y="830.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (7 samples, 0.09%)</title><rect x="1015.5" y="819.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1018.5" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (17 samples, 0.22%)</title><rect x="1016.6" y="819.0" width="2.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1019.6" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (6 samples, 0.08%)</title><rect x="1017.2" y="803.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1020.2" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="1018.1" y="803.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1021.1" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.04%)</title><rect x="1018.7" y="803.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1021.7" y="814.0"></text>
</g>
<g>
<title>memmove@plt (5 samples, 0.07%)</title><rect x="1019.2" y="819.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1022.2" y="830.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="1020.0" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1023.0" y="830.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1020.3" y="835.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1023.3" y="846.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="1020.6" y="835.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1023.6" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="1021.1" y="835.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1024.1" y="846.0"></text>
</g>
<g>
<title>recv (283 samples, 3.71%)</title><rect x="1021.7" y="835.0" width="43.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1024.7" y="846.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (223 samples, 2.93%)</title><rect x="1031.0" y="819.0" width="34.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1034.0" y="830.0">en..</text>
</g>
<g>
<title>do_syscall_64 (218 samples, 2.86%)</title><rect x="1031.0" y="803.0" width="33.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1034.0" y="814.0">do..</text>
</g>
<g>
<title>sys_recvfrom (178 samples, 2.34%)</title><rect x="1037.2" y="787.0" width="27.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1040.2" y="798.0">s..</text>
</g>
<g>
<title>SYSC_recvfrom (173 samples, 2.27%)</title><rect x="1037.2" y="771.0" width="26.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1040.2" y="782.0">S..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="1037.6" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1040.6" y="766.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="1037.9" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1040.9" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (142 samples, 1.86%)</title><rect x="1038.4" y="755.0" width="22.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1041.4" y="766.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.04%)</title><rect x="1038.6" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1041.6" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (117 samples, 1.54%)</title><rect x="1039.0" y="739.0" width="18.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1042.0" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="1039.0" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1042.0" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (113 samples, 1.48%)</title><rect x="1039.6" y="723.0" width="17.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1042.6" y="734.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="1044.1" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1047.1" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.22%)</title><rect x="1044.4" y="707.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1047.4" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1044.6" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1047.6" y="702.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.16%)</title><rect x="1044.9" y="691.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1047.9" y="702.0"></text>
</g>
<g>
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="1044.9" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1047.9" y="686.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.05%)</title><rect x="1045.2" y="675.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1048.2" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.07%)</title><rect x="1045.8" y="675.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1048.8" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="1046.8" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1049.8" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.07%)</title><rect x="1047.1" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1050.1" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.09%)</title><rect x="1048.2" y="707.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1051.2" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="1048.5" y="691.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1051.5" y="702.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="1048.9" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1051.9" y="702.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1049.2" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1052.2" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (37 samples, 0.49%)</title><rect x="1049.5" y="707.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1052.5" y="718.0"></text>
</g>
<g>
<title>__check_object_size (12 samples, 0.16%)</title><rect x="1050.0" y="691.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1053.0" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.09%)</title><rect x="1050.8" y="675.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1053.8" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.07%)</title><rect x="1051.9" y="691.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1054.9" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (16 samples, 0.21%)</title><rect x="1052.6" y="691.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1055.6" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (16 samples, 0.21%)</title><rect x="1052.6" y="675.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1055.6" y="686.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.05%)</title><rect x="1055.3" y="707.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1058.3" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.05%)</title><rect x="1056.0" y="707.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1059.0" y="718.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="1056.4" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1059.4" y="702.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.03%)</title><rect x="1056.4" y="675.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1059.4" y="686.0"></text>
</g>
<g>
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="1056.4" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1059.4" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="1056.7" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1059.7" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (19 samples, 0.25%)</title><rect x="1057.1" y="739.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1060.1" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (14 samples, 0.18%)</title><rect x="1057.9" y="723.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1060.9" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="1057.9" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1060.9" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (12 samples, 0.16%)</title><rect x="1058.2" y="707.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1061.2" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.14%)</title><rect x="1058.4" y="691.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1061.4" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="1060.1" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1063.1" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (23 samples, 0.30%)</title><rect x="1060.4" y="755.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1063.4" y="766.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.20%)</title><rect x="1060.4" y="739.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1063.4" y="750.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.20%)</title><rect x="1060.4" y="723.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1063.4" y="734.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.20%)</title><rect x="1060.4" y="707.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1063.4" y="718.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.10%)</title><rect x="1062.7" y="739.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1065.7" y="750.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.05%)</title><rect x="1064.1" y="771.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1067.1" y="782.0"></text>
</g>
<g>
<title>sys_recvfrom (5 samples, 0.07%)</title><rect x="1064.7" y="803.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1067.7" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (12 samples, 0.16%)</title><rect x="1065.5" y="883.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1068.5" y="894.0"></text>
</g>
<g>
<title>gettimeofday (9 samples, 0.12%)</title><rect x="1066.0" y="867.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1069.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.07%)</title><rect x="1066.6" y="851.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1069.6" y="862.0"></text>
</g>
<g>
<title>start_thread (792 samples, 10.39%)</title><rect x="1067.4" y="915.0" width="122.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1070.4" y="926.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (792 samples, 10.39%)</title><rect x="1067.4" y="899.0" width="122.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1070.4" y="910.0">thread_native_e..</text>
</g>
<g>
<title>GangWorker::loop() (742 samples, 9.74%)</title><rect x="1067.7" y="883.0" width="114.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1070.7" y="894.0">GangWorker::lo..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (14 samples, 0.18%)</title><rect x="1067.8" y="867.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1070.8" y="878.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (14 samples, 0.18%)</title><rect x="1067.8" y="851.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1070.8" y="862.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (11 samples, 0.14%)</title><rect x="1068.0" y="835.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1071.0" y="846.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.03%)</title><rect x="1068.6" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1071.6" y="830.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (5 samples, 0.07%)</title><rect x="1068.9" y="819.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1071.9" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (4 samples, 0.05%)</title><rect x="1069.1" y="803.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1072.1" y="814.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.03%)</title><rect x="1069.7" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1072.7" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1069.7" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1072.7" y="830.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (702 samples, 9.21%)</title><rect x="1070.5" y="867.0" width="108.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1073.5" y="878.0">G1ParTask::wo..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (200 samples, 2.62%)</title><rect x="1070.5" y="851.0" width="30.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1073.5" y="862.0">G1..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (13 samples, 0.17%)</title><rect x="1071.7" y="835.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1074.7" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.05%)</title><rect x="1073.1" y="819.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1076.1" y="830.0"></text>
</g>
<g>
<title>SpinPause (179 samples, 2.35%)</title><rect x="1073.7" y="835.0" width="27.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1076.7" y="846.0">S..</text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (450 samples, 5.91%)</title><rect x="1101.4" y="851.0" width="69.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1104.4" y="862.0">G1RemSe..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (450 samples, 5.91%)</title><rect x="1101.4" y="835.0" width="69.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1104.4" y="846.0">G1RemSe..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (450 samples, 5.91%)</title><rect x="1101.4" y="819.0" width="69.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1104.4" y="830.0">G1Colle..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (450 samples, 5.91%)</title><rect x="1101.4" y="803.0" width="69.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1104.4" y="814.0">DirtyCa..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.03%)</title><rect x="1101.4" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1104.4" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (442 samples, 5.80%)</title><rect x="1101.7" y="787.0" width="68.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1104.7" y="798.0">G1Refin..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (239 samples, 3.14%)</title><rect x="1102.5" y="771.0" width="37.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.5" y="782.0">G1P..</text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (18 samples, 0.24%)</title><rect x="1114.7" y="755.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.7" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (134 samples, 1.76%)</title><rect x="1117.5" y="755.0" width="20.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1120.5" y="766.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (34 samples, 0.45%)</title><rect x="1133.0" y="739.0" width="5.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1136.0" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.07%)</title><rect x="1138.6" y="755.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.6" y="766.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (198 samples, 2.60%)</title><rect x="1139.5" y="771.0" width="30.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.5" y="782.0">G1..</text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (182 samples, 2.39%)</title><rect x="1139.7" y="755.0" width="28.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1142.7" y="766.0">bo..</text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (42 samples, 0.55%)</title><rect x="1146.0" y="739.0" width="6.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.0" y="750.0"></text>
</g>
<g>
<title>G1CMBitMap::get_next_marked_addr(HeapWord const*, HeapWord const*) const (4 samples, 0.05%)</title><rect x="1152.5" y="739.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.5" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::heap() (2 samples, 0.03%)</title><rect x="1153.1" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.1" y="750.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (3 samples, 0.04%)</title><rect x="1153.5" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.5" y="750.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (10 samples, 0.13%)</title><rect x="1153.9" y="739.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1156.9" y="750.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) [clone .constprop.517] (2 samples, 0.03%)</title><rect x="1155.5" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.5" y="750.0"></text>
</g>
<g>
<title>oopDesc::size() (4 samples, 0.05%)</title><rect x="1155.8" y="739.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.8" y="750.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.04%)</title><rect x="1156.4" y="739.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.4" y="750.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (42 samples, 0.55%)</title><rect x="1156.9" y="739.0" width="6.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.9" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (29 samples, 0.38%)</title><rect x="1163.4" y="739.0" width="4.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.4" y="750.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (2 samples, 0.03%)</title><rect x="1166.6" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.6" y="734.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (2 samples, 0.03%)</title><rect x="1166.9" y="723.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.9" y="734.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.05%)</title><rect x="1167.2" y="723.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.2" y="734.0"></text>
</g>
<g>
<title>oopDesc::size() (8 samples, 0.10%)</title><rect x="1167.9" y="755.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.9" y="766.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (4 samples, 0.05%)</title><rect x="1169.1" y="755.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1172.1" y="766.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1169.7" y="755.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.7" y="766.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (4 samples, 0.05%)</title><rect x="1170.2" y="787.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.2" y="798.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (19 samples, 0.25%)</title><rect x="1171.1" y="851.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.1" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (19 samples, 0.25%)</title><rect x="1171.1" y="835.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.1" y="846.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (19 samples, 0.25%)</title><rect x="1171.1" y="819.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.1" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (19 samples, 0.25%)</title><rect x="1171.1" y="803.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1174.1" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (6 samples, 0.08%)</title><rect x="1171.1" y="787.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.1" y="798.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (4 samples, 0.05%)</title><rect x="1172.0" y="787.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.0" y="798.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (7 samples, 0.09%)</title><rect x="1172.7" y="787.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.7" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (4 samples, 0.05%)</title><rect x="1173.1" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.1" y="782.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.03%)</title><rect x="1173.7" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.7" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (33 samples, 0.43%)</title><rect x="1174.0" y="851.0" width="5.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.0" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.03%)</title><rect x="1174.0" y="835.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.0" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (27 samples, 0.35%)</title><rect x="1174.4" y="835.0" width="4.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.4" y="846.0"></text>
</g>
<g>
<title>G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker() (2 samples, 0.03%)</title><rect x="1174.5" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.5" y="830.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (23 samples, 0.30%)</title><rect x="1175.0" y="819.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.0" y="830.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (23 samples, 0.30%)</title><rect x="1175.0" y="803.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.0" y="814.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (8 samples, 0.10%)</title><rect x="1175.0" y="787.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.0" y="798.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (6 samples, 0.08%)</title><rect x="1175.1" y="771.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.1" y="782.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_strong_code_root(nmethod*) (2 samples, 0.03%)</title><rect x="1175.4" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.4" y="766.0"></text>
</g>
<g>
<title>G1CodeRootSet::contains(nmethod*) (2 samples, 0.03%)</title><rect x="1175.4" y="739.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.4" y="750.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (2 samples, 0.03%)</title><rect x="1175.8" y="755.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.8" y="766.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (2 samples, 0.03%)</title><rect x="1175.8" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.8" y="750.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (4 samples, 0.05%)</title><rect x="1176.2" y="787.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.2" y="798.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (4 samples, 0.05%)</title><rect x="1176.2" y="771.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.2" y="782.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (2 samples, 0.03%)</title><rect x="1176.4" y="755.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.4" y="766.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (2 samples, 0.03%)</title><rect x="1176.8" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.8" y="798.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.09%)</title><rect x="1177.1" y="787.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.1" y="798.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (4 samples, 0.05%)</title><rect x="1177.5" y="771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.5" y="782.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (3 samples, 0.04%)</title><rect x="1178.7" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.7" y="846.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (2 samples, 0.03%)</title><rect x="1178.9" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.9" y="830.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1179.2" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.2" y="878.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (6 samples, 0.08%)</title><rect x="1179.5" y="867.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.5" y="878.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (6 samples, 0.08%)</title><rect x="1179.5" y="851.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.5" y="862.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (6 samples, 0.08%)</title><rect x="1179.5" y="835.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.5" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1180.1" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.1" y="830.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (4 samples, 0.05%)</title><rect x="1180.4" y="867.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.4" y="878.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(CardTableEntryClosure*) (4 samples, 0.05%)</title><rect x="1180.4" y="851.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.4" y="862.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.05%)</title><rect x="1180.4" y="835.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.4" y="846.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (8 samples, 0.10%)</title><rect x="1181.2" y="867.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.2" y="878.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (8 samples, 0.10%)</title><rect x="1181.2" y="851.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.2" y="862.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.63] (7 samples, 0.09%)</title><rect x="1181.2" y="835.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.2" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.08%)</title><rect x="1181.3" y="819.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.3" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (4 samples, 0.05%)</title><rect x="1181.6" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.6" y="814.0"></text>
</g>
<g>
<title>JavaThread::run() (30 samples, 0.39%)</title><rect x="1182.6" y="883.0" width="4.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.6" y="894.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (30 samples, 0.39%)</title><rect x="1182.6" y="867.0" width="4.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.6" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (30 samples, 0.39%)</title><rect x="1182.6" y="851.0" width="4.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.6" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (30 samples, 0.39%)</title><rect x="1182.6" y="835.0" width="4.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.6" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (28 samples, 0.37%)</title><rect x="1182.6" y="819.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.6" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (28 samples, 0.37%)</title><rect x="1182.6" y="803.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.6" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (14 samples, 0.18%)</title><rect x="1182.7" y="787.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.7" y="798.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.04%)</title><rect x="1182.9" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.9" y="782.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.04%)</title><rect x="1182.9" y="755.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.9" y="766.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.03%)</title><rect x="1183.0" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.0" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.03%)</title><rect x="1183.3" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.3" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.03%)</title><rect x="1183.3" y="755.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.3" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (8 samples, 0.10%)</title><rect x="1183.7" y="771.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.7" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (3 samples, 0.04%)</title><rect x="1184.0" y="755.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.0" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.03%)</title><rect x="1184.1" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.1" y="750.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.03%)</title><rect x="1184.4" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.4" y="766.0"></text>
</g>
<g>
<title>Compile::Optimize() (7 samples, 0.09%)</title><rect x="1184.9" y="787.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.9" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (4 samples, 0.05%)</title><rect x="1185.0" y="771.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.0" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.04%)</title><rect x="1185.0" y="755.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.0" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.04%)</title><rect x="1185.0" y="739.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.0" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.03%)</title><rect x="1185.2" y="723.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.07%)</title><rect x="1186.0" y="787.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.0" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.07%)</title><rect x="1186.0" y="771.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.07%)</title><rect x="1186.0" y="755.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.07%)</title><rect x="1186.0" y="739.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.07%)</title><rect x="1186.0" y="723.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.07%)</title><rect x="1186.0" y="707.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.0" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1186.0" y="691.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.0" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1186.0" y="675.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1186.0" y="659.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1186.0" y="643.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1186.0" y="627.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1186.0" y="611.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.0" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1186.0" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.0" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1186.0" y="579.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1186.0" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1186.0" y="547.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.0" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1186.0" y="531.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="542.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.03%)</title><rect x="1186.9" y="819.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.9" y="830.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.03%)</title><rect x="1186.9" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.9" y="814.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.03%)</title><rect x="1186.9" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.9" y="798.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.03%)</title><rect x="1186.9" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.9" y="782.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (2 samples, 0.03%)</title><rect x="1186.9" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.9" y="766.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.03%)</title><rect x="1186.9" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.9" y="750.0"></text>
</g>
<g>
<title>VMThread::run() (15 samples, 0.20%)</title><rect x="1187.2" y="883.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.2" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (15 samples, 0.20%)</title><rect x="1187.2" y="867.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.2" y="878.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (3 samples, 0.04%)</title><rect x="1187.2" y="851.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.2" y="862.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (2 samples, 0.03%)</title><rect x="1187.2" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.2" y="846.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (2 samples, 0.03%)</title><rect x="1187.2" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.2" y="830.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (2 samples, 0.03%)</title><rect x="1187.2" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.2" y="814.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="1187.2" y="787.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1190.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1187.2" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1190.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1187.2" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1190.2" y="766.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="1187.2" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1190.2" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="1187.2" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1190.2" y="734.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1187.2" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1190.2" y="718.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="1187.2" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1190.2" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="1187.2" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1190.2" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="1187.2" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1190.2" y="670.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (12 samples, 0.16%)</title><rect x="1187.7" y="851.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.7" y="862.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (12 samples, 0.16%)</title><rect x="1187.7" y="835.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (12 samples, 0.16%)</title><rect x="1187.7" y="819.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.7" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (12 samples, 0.16%)</title><rect x="1187.7" y="803.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_collection_set(G1ParScanThreadStateSet*) (3 samples, 0.04%)</title><rect x="1187.8" y="787.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.8" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (3 samples, 0.04%)</title><rect x="1188.6" y="787.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.6" y="798.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (2 samples, 0.03%)</title><rect x="1188.8" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.8" y="782.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (2 samples, 0.03%)</title><rect x="1188.8" y="755.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.8" y="766.0"></text>
</g>
<g>
<title>G1Policy::record_collection_pause_end(double, unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="1189.2" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.2" y="798.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.04%)</title><rect x="1189.5" y="883.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.03%)</title><rect x="1189.5" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
</g>
</svg>
