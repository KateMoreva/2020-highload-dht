<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (11,632 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (7,031 samples, 60.45%)</title><rect x="10.0" y="547.0" width="713.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,031 samples, 60.45%)</title><rect x="10.0" y="531.0" width="713.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,031 samples, 60.45%)</title><rect x="10.0" y="515.0" width="713.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,607 samples, 31.01%)</title><rect x="10.0" y="499.0" width="365.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3,607 samples, 31.01%)</title><rect x="10.0" y="483.0" width="365.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/ArrayBlockingQueue.take</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,283 samples, 11.03%)</title><rect x="10.0" y="467.0" width="130.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="478.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,283 samples, 11.03%)</title><rect x="10.0" y="451.0" width="130.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="462.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,283 samples, 11.03%)</title><rect x="10.0" y="435.0" width="130.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="446.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,283 samples, 11.03%)</title><rect x="10.0" y="419.0" width="130.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="430.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,283 samples, 11.03%)</title><rect x="10.0" y="403.0" width="130.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/mis..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,283 samples, 11.03%)</title><rect x="10.0" y="387.0" width="130.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.0" y="398.0">java.util.concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,324 samples, 19.98%)</title><rect x="140.2" y="467.0" width="235.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.2" y="478.0">java/util/concurrent/locks/Reen..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,324 samples, 19.98%)</title><rect x="140.2" y="451.0" width="235.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.2" y="462.0">java/util/concurrent/locks/Abst..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,324 samples, 19.98%)</title><rect x="140.2" y="435.0" width="235.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.2" y="446.0">java/util/concurrent/locks/Abst..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,324 samples, 19.98%)</title><rect x="140.2" y="419.0" width="235.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.2" y="430.0">java/util/concurrent/locks/Abst..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,324 samples, 19.98%)</title><rect x="140.2" y="403.0" width="235.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.2" y="414.0">java/util/concurrent/locks/Lock..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,324 samples, 19.98%)</title><rect x="140.2" y="387.0" width="235.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.2" y="398.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,324 samples, 19.98%)</title><rect x="140.2" y="371.0" width="235.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="143.2" y="382.0">java.util.concurrent.locks.Reen..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$66/1288711039.run (3,424 samples, 29.44%)</title><rect x="375.9" y="499.0" width="347.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.9" y="510.0">ru/mail/polis/service/kate/moreva/MySimpleHttpS..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (3,424 samples, 29.44%)</title><rect x="375.9" y="483.0" width="347.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.9" y="494.0">ru/mail/polis/service/kate/moreva/MySimpleHttpS..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (3,424 samples, 29.44%)</title><rect x="375.9" y="467.0" width="347.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.9" y="478.0">ru/mail/polis/service/kate/moreva/MySimpleHttpS..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (3,424 samples, 29.44%)</title><rect x="375.9" y="451.0" width="347.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.9" y="462.0">ru/mail/polis/service/kate/moreva/MySimpleHttpS..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (3,322 samples, 28.56%)</title><rect x="375.9" y="435.0" width="337.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.9" y="446.0">ru/mail/polis/service/kate/moreva/MyRequestHel..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (12 samples, 0.10%)</title><rect x="375.9" y="419.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (12 samples, 0.10%)</title><rect x="375.9" y="403.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (12 samples, 0.10%)</title><rect x="375.9" y="387.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (12 samples, 0.10%)</title><rect x="375.9" y="371.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (12 samples, 0.10%)</title><rect x="375.9" y="355.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (12 samples, 0.10%)</title><rect x="375.9" y="339.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="378.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.10%)</title><rect x="375.9" y="323.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (12 samples, 0.10%)</title><rect x="375.9" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (12 samples, 0.10%)</title><rect x="375.9" y="291.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (12 samples, 0.10%)</title><rect x="375.9" y="275.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (12 samples, 0.10%)</title><rect x="375.9" y="259.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.lengthMixer (5 samples, 0.04%)</title><rect x="375.9" y="243.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (5 samples, 0.04%)</title><rect x="375.9" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$ReservationNode (5 samples, 0.04%)</title><rect x="375.9" y="211.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="378.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.prepender (5 samples, 0.04%)</title><rect x="376.4" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (5 samples, 0.04%)</title><rect x="376.4" y="227.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$ReservationNode (5 samples, 0.04%)</title><rect x="376.4" y="211.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="379.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,678 samples, 14.43%)</title><rect x="377.1" y="419.0" width="170.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="380.1" y="430.0">ru/mail/polis/dao/DAO...</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (160 samples, 1.38%)</title><rect x="377.1" y="403.0" width="16.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (160 samples, 1.38%)</title><rect x="377.1" y="387.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (151 samples, 1.30%)</title><rect x="377.3" y="371.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (151 samples, 1.30%)</title><rect x="377.3" y="355.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (151 samples, 1.30%)</title><rect x="377.3" y="339.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (151 samples, 1.30%)</title><rect x="377.3" y="323.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (151 samples, 1.30%)</title><rect x="377.3" y="307.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (151 samples, 1.30%)</title><rect x="377.3" y="291.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (151 samples, 1.30%)</title><rect x="377.3" y="275.0" width="15.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (151 samples, 1.30%)</title><rect x="377.3" y="259.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.3" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (151 samples, 1.30%)</title><rect x="377.3" y="243.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (151 samples, 1.30%)</title><rect x="377.3" y="227.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (151 samples, 1.30%)</title><rect x="377.3" y="211.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (151 samples, 1.30%)</title><rect x="377.3" y="195.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (151 samples, 1.30%)</title><rect x="377.3" y="179.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (151 samples, 1.30%)</title><rect x="377.3" y="163.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (151 samples, 1.30%)</title><rect x="377.3" y="147.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (151 samples, 1.30%)</title><rect x="377.3" y="131.0" width="15.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (151 samples, 1.30%)</title><rect x="377.3" y="115.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (151 samples, 1.30%)</title><rect x="377.3" y="99.0" width="15.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (151 samples, 1.30%)</title><rect x="377.3" y="83.0" width="15.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Value.&lt;init&gt; (151 samples, 1.30%)</title><rect x="377.3" y="67.0" width="15.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Time.currentTime (151 samples, 1.30%)</title><rect x="377.3" y="51.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.3" y="62.0"></text>
</g>
<g>
<title>java.lang.Class (151 samples, 1.30%)</title><rect x="377.3" y="35.0" width="15.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="380.3" y="46.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.03%)</title><rect x="392.6" y="371.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="395.6" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (4 samples, 0.03%)</title><rect x="393.0" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (4 samples, 0.03%)</title><rect x="393.0" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="396.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (4 samples, 0.03%)</title><rect x="393.0" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (4 samples, 0.03%)</title><rect x="393.0" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.0" y="334.0"></text>
</g>
<g>
<title>java.lang.Object (4 samples, 0.03%)</title><rect x="393.0" y="307.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="396.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.04%)</title><rect x="393.4" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.04%)</title><rect x="393.4" y="387.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$116/235889887.apply (5 samples, 0.04%)</title><rect x="393.4" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (5 samples, 0.04%)</title><rect x="393.4" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.4" y="366.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.03%)</title><rect x="393.4" y="339.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="396.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (1,513 samples, 13.01%)</title><rect x="393.9" y="403.0" width="153.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.9" y="414.0">ru/mail/polis/dao/k..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.03%)</title><rect x="393.9" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.04%)</title><rect x="394.2" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.2" y="398.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (4 samples, 0.03%)</title><rect x="394.3" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (4 samples, 0.03%)</title><rect x="394.3" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (4 samples, 0.03%)</title><rect x="394.3" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (4 samples, 0.03%)</title><rect x="394.3" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.3" y="334.0"></text>
</g>
<g>
<title>java.lang.Object (4 samples, 0.03%)</title><rect x="394.3" y="307.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="397.3" y="318.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (10 samples, 0.09%)</title><rect x="394.7" y="387.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (10 samples, 0.09%)</title><rect x="394.7" y="371.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="397.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (10 samples, 0.09%)</title><rect x="394.7" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (10 samples, 0.09%)</title><rect x="394.7" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (10 samples, 0.09%)</title><rect x="394.7" y="323.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="397.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (179 samples, 1.54%)</title><rect x="395.7" y="387.0" width="18.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (179 samples, 1.54%)</title><rect x="395.7" y="371.0" width="18.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (179 samples, 1.54%)</title><rect x="395.7" y="355.0" width="18.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (179 samples, 1.54%)</title><rect x="395.7" y="339.0" width="18.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (179 samples, 1.54%)</title><rect x="395.7" y="323.0" width="18.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (179 samples, 1.54%)</title><rect x="395.7" y="307.0" width="18.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (179 samples, 1.54%)</title><rect x="395.7" y="291.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.7" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (179 samples, 1.54%)</title><rect x="395.7" y="275.0" width="18.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (179 samples, 1.54%)</title><rect x="395.7" y="259.0" width="18.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (179 samples, 1.54%)</title><rect x="395.7" y="243.0" width="18.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (179 samples, 1.54%)</title><rect x="395.7" y="227.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (179 samples, 1.54%)</title><rect x="395.7" y="211.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (179 samples, 1.54%)</title><rect x="395.7" y="195.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (179 samples, 1.54%)</title><rect x="395.7" y="179.0" width="18.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (179 samples, 1.54%)</title><rect x="395.7" y="163.0" width="18.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (179 samples, 1.54%)</title><rect x="395.7" y="147.0" width="18.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (179 samples, 1.54%)</title><rect x="395.7" y="131.0" width="18.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (179 samples, 1.54%)</title><rect x="395.7" y="115.0" width="18.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Value.&lt;init&gt; (179 samples, 1.54%)</title><rect x="395.7" y="99.0" width="18.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Time.currentTime (179 samples, 1.54%)</title><rect x="395.7" y="83.0" width="18.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.7" y="94.0"></text>
</g>
<g>
<title>java.lang.Class (179 samples, 1.54%)</title><rect x="395.7" y="67.0" width="18.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="398.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (1,316 samples, 11.31%)</title><rect x="413.8" y="387.0" width="133.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.8" y="398.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (1,314 samples, 11.30%)</title><rect x="414.1" y="371.0" width="133.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.1" y="382.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,202 samples, 10.33%)</title><rect x="414.1" y="355.0" width="121.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.1" y="366.0">com/google/comm..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,202 samples, 10.33%)</title><rect x="414.1" y="339.0" width="121.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.1" y="350.0">com/google/comm..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,202 samples, 10.33%)</title><rect x="414.1" y="323.0" width="121.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.1" y="334.0">java/util/Split..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,202 samples, 10.33%)</title><rect x="414.1" y="307.0" width="121.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.1" y="318.0">java/util/strea..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,202 samples, 10.33%)</title><rect x="414.1" y="291.0" width="121.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.1" y="302.0">java/util/strea..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1,202 samples, 10.33%)</title><rect x="414.1" y="275.0" width="121.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.1" y="286.0">java/util/strea..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (1,202 samples, 10.33%)</title><rect x="414.1" y="259.0" width="121.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.1" y="270.0">java/util/strea..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1,202 samples, 10.33%)</title><rect x="414.1" y="243.0" width="121.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.1" y="254.0">java/util/strea..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1,202 samples, 10.33%)</title><rect x="414.1" y="227.0" width="121.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.1" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,202 samples, 10.33%)</title><rect x="414.1" y="211.0" width="121.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.1" y="222.0">java/util/strea..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (1,202 samples, 10.33%)</title><rect x="414.1" y="195.0" width="121.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="417.1" y="206.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1,202 samples, 10.33%)</title><rect x="414.1" y="179.0" width="121.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.1" y="190.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1,202 samples, 10.33%)</title><rect x="414.1" y="163.0" width="121.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.1" y="174.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Value.&lt;init&gt; (1,202 samples, 10.33%)</title><rect x="414.1" y="147.0" width="121.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.1" y="158.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Time.currentTime (1,202 samples, 10.33%)</title><rect x="414.1" y="131.0" width="121.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.1" y="142.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java.lang.Class (1,202 samples, 10.33%)</title><rect x="414.1" y="115.0" width="121.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="417.1" y="126.0">java.lang.Class</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (112 samples, 0.96%)</title><rect x="536.0" y="355.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (112 samples, 0.96%)</title><rect x="536.0" y="339.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (112 samples, 0.96%)</title><rect x="536.0" y="323.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (112 samples, 0.96%)</title><rect x="536.0" y="307.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.0" y="318.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (112 samples, 0.96%)</title><rect x="536.0" y="291.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (112 samples, 0.96%)</title><rect x="536.0" y="275.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (112 samples, 0.96%)</title><rect x="536.0" y="259.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (112 samples, 0.96%)</title><rect x="536.0" y="243.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (112 samples, 0.96%)</title><rect x="536.0" y="227.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (112 samples, 0.96%)</title><rect x="536.0" y="211.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="539.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (112 samples, 0.96%)</title><rect x="536.0" y="195.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (112 samples, 0.96%)</title><rect x="536.0" y="179.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="539.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (112 samples, 0.96%)</title><rect x="536.0" y="163.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (112 samples, 0.96%)</title><rect x="536.0" y="147.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (112 samples, 0.96%)</title><rect x="536.0" y="131.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Value.&lt;init&gt; (112 samples, 0.96%)</title><rect x="536.0" y="115.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Time.currentTime (112 samples, 0.96%)</title><rect x="536.0" y="99.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.0" y="110.0"></text>
</g>
<g>
<title>java.lang.Class (112 samples, 0.96%)</title><rect x="536.0" y="83.0" width="11.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="539.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (1,632 samples, 14.03%)</title><rect x="547.4" y="419.0" width="165.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.4" y="430.0">ru/mail/polis/dao/kat..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (83 samples, 0.71%)</title><rect x="547.4" y="403.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (83 samples, 0.71%)</title><rect x="547.4" y="387.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (83 samples, 0.71%)</title><rect x="547.4" y="371.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (83 samples, 0.71%)</title><rect x="547.4" y="355.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (83 samples, 0.71%)</title><rect x="547.4" y="339.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (83 samples, 0.71%)</title><rect x="547.4" y="323.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.4" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (83 samples, 0.71%)</title><rect x="547.4" y="307.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (83 samples, 0.71%)</title><rect x="547.4" y="291.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (83 samples, 0.71%)</title><rect x="547.4" y="275.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (83 samples, 0.71%)</title><rect x="547.4" y="259.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (83 samples, 0.71%)</title><rect x="547.4" y="243.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (83 samples, 0.71%)</title><rect x="547.4" y="227.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="550.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (83 samples, 0.71%)</title><rect x="547.4" y="211.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (83 samples, 0.71%)</title><rect x="547.4" y="195.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (83 samples, 0.71%)</title><rect x="547.4" y="179.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (83 samples, 0.71%)</title><rect x="547.4" y="163.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (83 samples, 0.71%)</title><rect x="547.4" y="147.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Value.&lt;init&gt; (83 samples, 0.71%)</title><rect x="547.4" y="131.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Time.currentTime (83 samples, 0.71%)</title><rect x="547.4" y="115.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.4" y="126.0"></text>
</g>
<g>
<title>java.lang.Class (83 samples, 0.71%)</title><rect x="547.4" y="99.0" width="8.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="550.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (1,549 samples, 13.32%)</title><rect x="555.8" y="403.0" width="157.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.8" y="414.0">ru/mail/polis/dao/ka..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (111 samples, 0.95%)</title><rect x="555.8" y="387.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (111 samples, 0.95%)</title><rect x="555.8" y="371.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (111 samples, 0.95%)</title><rect x="555.8" y="355.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (111 samples, 0.95%)</title><rect x="555.8" y="339.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (111 samples, 0.95%)</title><rect x="555.8" y="323.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (111 samples, 0.95%)</title><rect x="555.8" y="307.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (111 samples, 0.95%)</title><rect x="555.8" y="291.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.8" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (111 samples, 0.95%)</title><rect x="555.8" y="275.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (111 samples, 0.95%)</title><rect x="555.8" y="259.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (111 samples, 0.95%)</title><rect x="555.8" y="243.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (111 samples, 0.95%)</title><rect x="555.8" y="227.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (111 samples, 0.95%)</title><rect x="555.8" y="211.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (111 samples, 0.95%)</title><rect x="555.8" y="195.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (111 samples, 0.95%)</title><rect x="555.8" y="179.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (111 samples, 0.95%)</title><rect x="555.8" y="163.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (111 samples, 0.95%)</title><rect x="555.8" y="147.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (111 samples, 0.95%)</title><rect x="555.8" y="131.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (111 samples, 0.95%)</title><rect x="555.8" y="115.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Value.&lt;init&gt; (111 samples, 0.95%)</title><rect x="555.8" y="99.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Time.currentTime (111 samples, 0.95%)</title><rect x="555.8" y="83.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.8" y="94.0"></text>
</g>
<g>
<title>java.lang.Class (111 samples, 0.95%)</title><rect x="555.8" y="67.0" width="11.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="558.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (1,438 samples, 12.36%)</title><rect x="567.0" y="387.0" width="145.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.0" y="398.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,278 samples, 10.99%)</title><rect x="567.0" y="371.0" width="129.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.0" y="382.0">com/google/commo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,278 samples, 10.99%)</title><rect x="567.0" y="355.0" width="129.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.0" y="366.0">com/google/commo..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,274 samples, 10.95%)</title><rect x="567.4" y="339.0" width="129.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.4" y="350.0">java/util/Splite..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,274 samples, 10.95%)</title><rect x="567.4" y="323.0" width="129.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.4" y="334.0">java/util/stream..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,274 samples, 10.95%)</title><rect x="567.4" y="307.0" width="129.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.4" y="318.0">java/util/stream..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1,272 samples, 10.94%)</title><rect x="567.4" y="291.0" width="129.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.4" y="302.0">java/util/stream..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (1,272 samples, 10.94%)</title><rect x="567.4" y="275.0" width="129.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.4" y="286.0">java/util/stream..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1,272 samples, 10.94%)</title><rect x="567.4" y="259.0" width="129.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.4" y="270.0">java/util/stream..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1,272 samples, 10.94%)</title><rect x="567.4" y="243.0" width="129.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.4" y="254.0">java/util/concur..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,272 samples, 10.94%)</title><rect x="567.4" y="227.0" width="129.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.4" y="238.0">java/util/stream..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (1,272 samples, 10.94%)</title><rect x="567.4" y="211.0" width="129.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.4" y="222.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1,272 samples, 10.94%)</title><rect x="567.4" y="195.0" width="129.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.4" y="206.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1,272 samples, 10.94%)</title><rect x="567.4" y="179.0" width="129.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.4" y="190.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Value.&lt;init&gt; (1,272 samples, 10.94%)</title><rect x="567.4" y="163.0" width="129.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.4" y="174.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Time.currentTime (1,272 samples, 10.94%)</title><rect x="567.4" y="147.0" width="129.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.4" y="158.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java.lang.Class (1,272 samples, 10.94%)</title><rect x="567.4" y="131.0" width="129.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="570.4" y="142.0">java.lang.Class</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.03%)</title><rect x="696.8" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.03%)</title><rect x="696.8" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.03%)</title><rect x="696.8" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.03%)</title><rect x="696.8" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.8" y="334.0"></text>
</g>
<g>
<title>java.lang.Object (3 samples, 0.03%)</title><rect x="696.8" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="699.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (156 samples, 1.34%)</title><rect x="697.1" y="371.0" width="15.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (154 samples, 1.32%)</title><rect x="697.3" y="355.0" width="15.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (154 samples, 1.32%)</title><rect x="697.3" y="339.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (154 samples, 1.32%)</title><rect x="697.3" y="323.0" width="15.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.3" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (154 samples, 1.32%)</title><rect x="697.3" y="307.0" width="15.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (154 samples, 1.32%)</title><rect x="697.3" y="291.0" width="15.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (154 samples, 1.32%)</title><rect x="697.3" y="275.0" width="15.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (154 samples, 1.32%)</title><rect x="697.3" y="259.0" width="15.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (154 samples, 1.32%)</title><rect x="697.3" y="243.0" width="15.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (154 samples, 1.32%)</title><rect x="697.3" y="227.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (154 samples, 1.32%)</title><rect x="697.3" y="211.0" width="15.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (154 samples, 1.32%)</title><rect x="697.3" y="195.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (154 samples, 1.32%)</title><rect x="697.3" y="179.0" width="15.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (154 samples, 1.32%)</title><rect x="697.3" y="163.0" width="15.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (154 samples, 1.32%)</title><rect x="697.3" y="147.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Value.&lt;init&gt; (154 samples, 1.32%)</title><rect x="697.3" y="131.0" width="15.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Time.currentTime (154 samples, 1.32%)</title><rect x="697.3" y="115.0" width="15.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.3" y="126.0"></text>
</g>
<g>
<title>java.lang.Class (154 samples, 1.32%)</title><rect x="697.3" y="99.0" width="15.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="700.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.mergeResponses (5 samples, 0.04%)</title><rect x="712.9" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (5 samples, 0.04%)</title><rect x="712.9" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.9" y="430.0"></text>
</g>
<g>
<title>int[] (5 samples, 0.04%)</title><rect x="712.9" y="403.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="715.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (25 samples, 0.21%)</title><rect x="713.4" y="435.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (25 samples, 0.21%)</title><rect x="713.4" y="419.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.4" y="430.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (25 samples, 0.21%)</title><rect x="713.4" y="403.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="716.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (72 samples, 0.62%)</title><rect x="716.0" y="435.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.proxy (72 samples, 0.62%)</title><rect x="716.0" y="419.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (72 samples, 0.62%)</title><rect x="716.0" y="403.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (72 samples, 0.62%)</title><rect x="716.0" y="387.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.0" y="398.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (26 samples, 0.22%)</title><rect x="716.0" y="371.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.0" y="382.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (26 samples, 0.22%)</title><rect x="716.0" y="355.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="719.0" y="366.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (46 samples, 0.40%)</title><rect x="718.6" y="371.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.6" y="382.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (46 samples, 0.40%)</title><rect x="718.6" y="355.0" width="4.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="721.6" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,601 samples, 39.55%)</title><rect x="723.3" y="547.0" width="466.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.3" y="558.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (4,601 samples, 39.55%)</title><rect x="723.3" y="531.0" width="466.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.3" y="542.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one.nio.http.HttpSession (6 samples, 0.05%)</title><rect x="723.3" y="515.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="726.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,595 samples, 39.50%)</title><rect x="723.9" y="515.0" width="466.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.9" y="526.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,595 samples, 39.50%)</title><rect x="723.9" y="499.0" width="466.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.9" y="510.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,595 samples, 39.50%)</title><rect x="723.9" y="483.0" width="466.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.9" y="494.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,595 samples, 39.50%)</title><rect x="723.9" y="467.0" width="466.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.9" y="478.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,595 samples, 39.50%)</title><rect x="723.9" y="451.0" width="466.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.9" y="462.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (4,595 samples, 39.50%)</title><rect x="723.9" y="435.0" width="466.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.9" y="446.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4,595 samples, 39.50%)</title><rect x="723.9" y="419.0" width="466.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.9" y="430.0">java/util/concurrent/ThreadPoolExecutor.execute</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4,595 samples, 39.50%)</title><rect x="723.9" y="403.0" width="466.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.9" y="414.0">java/util/concurrent/ArrayBlockingQueue.offer</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4,595 samples, 39.50%)</title><rect x="723.9" y="387.0" width="466.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.9" y="398.0">java/util/concurrent/locks/ReentrantLock.lock</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,595 samples, 39.50%)</title><rect x="723.9" y="371.0" width="466.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="726.9" y="382.0">java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,595 samples, 39.50%)</title><rect x="723.9" y="355.0" width="466.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.9" y="366.0">java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQue..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,595 samples, 39.50%)</title><rect x="723.9" y="339.0" width="466.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="726.9" y="350.0">java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndChe..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,595 samples, 39.50%)</title><rect x="723.9" y="323.0" width="466.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="726.9" y="334.0">java/util/concurrent/locks/LockSupport.park</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,595 samples, 39.50%)</title><rect x="723.9" y="307.0" width="466.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.9" y="318.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4,595 samples, 39.50%)</title><rect x="723.9" y="291.0" width="466.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="726.9" y="302.0">java.util.concurrent.locks.ReentrantLock$NonfairSync</text>
</g>
</g>
</svg>
