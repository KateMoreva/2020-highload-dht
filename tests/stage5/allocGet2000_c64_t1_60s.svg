<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="565"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="565"> </text>
<g id="frames">
<g>
<title>all (400,619 samples, 100.00%)</title><rect x="10.0" y="531.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="542.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (269,797 samples, 67.35%)</title><rect x="10.0" y="515.0" width="794.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (269,797 samples, 67.35%)</title><rect x="10.0" y="499.0" width="794.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (269,797 samples, 67.35%)</title><rect x="10.0" y="483.0" width="794.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,962 samples, 0.49%)</title><rect x="10.0" y="467.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,962 samples, 0.49%)</title><rect x="10.0" y="451.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,939 samples, 0.48%)</title><rect x="10.0" y="435.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,939 samples, 0.48%)</title><rect x="10.0" y="419.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,939 samples, 0.48%)</title><rect x="10.0" y="403.0" width="5.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$66/1288711039.run (267,835 samples, 66.86%)</title><rect x="15.8" y="467.0" width="788.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.8" y="478.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$66/1288711039.run</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (267,835 samples, 66.86%)</title><rect x="15.8" y="451.0" width="788.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.8" y="462.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1</text>
</g>
<g>
<title>java/lang/String.getBytes (996 samples, 0.25%)</title><rect x="15.8" y="435.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (996 samples, 0.25%)</title><rect x="15.8" y="419.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (996 samples, 0.25%)</title><rect x="15.8" y="403.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (996 samples, 0.25%)</title><rect x="15.8" y="387.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.8" y="398.0"></text>
</g>
<g>
<title>byte[] (996 samples, 0.25%)</title><rect x="15.8" y="371.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="18.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,866 samples, 0.47%)</title><rect x="18.7" y="435.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,866 samples, 0.47%)</title><rect x="18.7" y="419.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,866 samples, 0.47%)</title><rect x="18.7" y="403.0" width="5.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="21.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.isProxied (4,373 samples, 1.09%)</title><rect x="24.2" y="435.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4,373 samples, 1.09%)</title><rect x="24.2" y="419.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,373 samples, 1.09%)</title><rect x="24.2" y="403.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,373 samples, 1.09%)</title><rect x="24.2" y="387.0" width="12.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (2,793 samples, 0.70%)</title><rect x="24.2" y="371.0" width="8.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="27.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,580 samples, 0.39%)</title><rect x="32.4" y="371.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.4" y="382.0"></text>
</g>
<g>
<title>byte[] (1,580 samples, 0.39%)</title><rect x="32.4" y="355.0" width="4.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="35.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (258,749 samples, 64.59%)</title><rect x="37.1" y="435.0" width="762.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.1" y="446.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (258,749 samples, 64.59%)</title><rect x="37.1" y="419.0" width="762.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.1" y="430.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod</text>
</g>
<g>
<title>java/util/Collection.stream (639 samples, 0.16%)</title><rect x="37.3" y="403.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (263 samples, 0.07%)</title><rect x="37.3" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.3" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (263 samples, 0.07%)</title><rect x="37.3" y="371.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="40.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (376 samples, 0.09%)</title><rect x="38.1" y="387.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.1" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (376 samples, 0.09%)</title><rect x="38.1" y="371.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="41.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (179 samples, 0.04%)</title><rect x="39.2" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (179 samples, 0.04%)</title><rect x="39.2" y="387.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="42.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (827 samples, 0.21%)</title><rect x="39.7" y="403.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (827 samples, 0.21%)</title><rect x="39.7" y="387.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (827 samples, 0.21%)</title><rect x="39.7" y="371.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (629 samples, 0.16%)</title><rect x="39.7" y="355.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (486 samples, 0.12%)</title><rect x="39.7" y="339.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (321 samples, 0.08%)</title><rect x="39.7" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (321 samples, 0.08%)</title><rect x="39.7" y="307.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (321 samples, 0.08%)</title><rect x="39.7" y="291.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$72/998018245.accept (321 samples, 0.08%)</title><rect x="39.7" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (321 samples, 0.08%)</title><rect x="39.7" y="259.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (321 samples, 0.08%)</title><rect x="39.7" y="243.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.7" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (321 samples, 0.08%)</title><rect x="39.7" y="227.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.7" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (321 samples, 0.08%)</title><rect x="39.7" y="211.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.7" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (321 samples, 0.08%)</title><rect x="39.7" y="195.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.7" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (321 samples, 0.08%)</title><rect x="39.7" y="179.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="42.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (165 samples, 0.04%)</title><rect x="40.7" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (165 samples, 0.04%)</title><rect x="40.7" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$71/901477378.get (165 samples, 0.04%)</title><rect x="40.7" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.7" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (165 samples, 0.04%)</title><rect x="40.7" y="275.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="43.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (143 samples, 0.04%)</title><rect x="41.2" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (143 samples, 0.04%)</title><rect x="41.2" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (143 samples, 0.04%)</title><rect x="41.2" y="307.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="44.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (198 samples, 0.05%)</title><rect x="41.6" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (198 samples, 0.05%)</title><rect x="41.6" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.6" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (198 samples, 0.05%)</title><rect x="41.6" y="323.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="44.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (293 samples, 0.07%)</title><rect x="42.2" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (293 samples, 0.07%)</title><rect x="42.2" y="387.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="45.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (160,101 samples, 39.96%)</title><rect x="43.0" y="403.0" width="471.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.0" y="414.0">ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity</text>
</g>
<g>
<title>byte[] (1,403 samples, 0.35%)</title><rect x="43.0" y="387.0" width="4.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="46.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1518931080.linkToTargetMethod (3,229 samples, 0.81%)</title><rect x="47.2" y="387.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1437292948.invoke (3,229 samples, 0.81%)</title><rect x="47.2" y="371.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,229 samples, 0.81%)</title><rect x="47.2" y="355.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1,128 samples, 0.28%)</title><rect x="47.2" y="339.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (1,128 samples, 0.28%)</title><rect x="47.2" y="323.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="50.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,101 samples, 0.52%)</title><rect x="50.5" y="339.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,101 samples, 0.52%)</title><rect x="50.5" y="323.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.5" y="334.0"></text>
</g>
<g>
<title>byte[] (2,101 samples, 0.52%)</title><rect x="50.5" y="307.0" width="6.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="53.5" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (980 samples, 0.24%)</title><rect x="56.7" y="387.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="59.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3,887 samples, 0.97%)</title><rect x="59.6" y="387.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.6" y="398.0"></text>
</g>
<g>
<title>byte[] (1,608 samples, 0.40%)</title><rect x="59.6" y="371.0" width="4.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="62.6" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (1,302 samples, 0.32%)</title><rect x="64.3" y="371.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="67.3" y="382.0"></text>
</g>
<g>
<title>java.lang.String (977 samples, 0.24%)</title><rect x="68.1" y="371.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="71.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (78,547 samples, 19.61%)</title><rect x="71.0" y="387.0" width="231.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.0" y="398.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (11,180 samples, 2.79%)</title><rect x="71.0" y="371.0" width="32.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.0" y="382.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11,180 samples, 2.79%)</title><rect x="71.0" y="355.0" width="32.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.0" y="366.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11,180 samples, 2.79%)</title><rect x="71.0" y="339.0" width="32.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.0" y="350.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11,180 samples, 2.79%)</title><rect x="71.0" y="323.0" width="32.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.0" y="334.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11,180 samples, 2.79%)</title><rect x="71.0" y="307.0" width="32.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.0" y="318.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7,048 samples, 1.76%)</title><rect x="71.0" y="291.0" width="20.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7,048 samples, 1.76%)</title><rect x="71.0" y="275.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7,048 samples, 1.76%)</title><rect x="71.0" y="259.0" width="20.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,996 samples, 0.75%)</title><rect x="71.0" y="243.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2,996 samples, 0.75%)</title><rect x="71.0" y="227.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2,996 samples, 0.75%)</title><rect x="71.0" y="211.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2,996 samples, 0.75%)</title><rect x="71.0" y="195.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2,996 samples, 0.75%)</title><rect x="71.0" y="179.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2,996 samples, 0.75%)</title><rect x="71.0" y="163.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (2,996 samples, 0.75%)</title><rect x="71.0" y="147.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2,996 samples, 0.75%)</title><rect x="71.0" y="131.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2,996 samples, 0.75%)</title><rect x="71.0" y="115.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (963 samples, 0.24%)</title><rect x="71.0" y="99.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (963 samples, 0.24%)</title><rect x="71.0" y="83.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.0" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (963 samples, 0.24%)</title><rect x="71.0" y="67.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="74.0" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,033 samples, 0.51%)</title><rect x="73.9" y="99.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (2,033 samples, 0.51%)</title><rect x="73.9" y="83.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2,033 samples, 0.51%)</title><rect x="73.9" y="67.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (973 samples, 0.24%)</title><rect x="73.9" y="51.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="76.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1,060 samples, 0.26%)</title><rect x="76.7" y="51.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.7" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1,060 samples, 0.26%)</title><rect x="76.7" y="35.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="79.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$89/728436316.apply (4,052 samples, 1.01%)</title><rect x="79.8" y="243.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4,052 samples, 1.01%)</title><rect x="79.8" y="227.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,052 samples, 1.01%)</title><rect x="79.8" y="211.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,052 samples, 1.01%)</title><rect x="79.8" y="195.0" width="12.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="82.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$108/658240232.apply (4,132 samples, 1.03%)</title><rect x="91.8" y="291.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4,132 samples, 1.03%)</title><rect x="91.8" y="275.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,132 samples, 1.03%)</title><rect x="91.8" y="259.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,132 samples, 1.03%)</title><rect x="91.8" y="243.0" width="12.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="94.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2,171 samples, 0.54%)</title><rect x="103.9" y="371.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2,171 samples, 0.54%)</title><rect x="103.9" y="355.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$116/235889887.apply (2,171 samples, 0.54%)</title><rect x="103.9" y="339.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (2,171 samples, 0.54%)</title><rect x="103.9" y="323.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (2,171 samples, 0.54%)</title><rect x="103.9" y="307.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,171 samples, 0.54%)</title><rect x="103.9" y="291.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,171 samples, 0.54%)</title><rect x="103.9" y="275.0" width="6.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="106.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (2,084 samples, 0.52%)</title><rect x="110.3" y="371.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2,084 samples, 0.52%)</title><rect x="110.3" y="355.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2,084 samples, 0.52%)</title><rect x="110.3" y="339.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,084 samples, 0.52%)</title><rect x="110.3" y="323.0" width="6.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="113.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2,007 samples, 0.50%)</title><rect x="116.5" y="371.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2,007 samples, 0.50%)</title><rect x="116.5" y="355.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2,007 samples, 0.50%)</title><rect x="116.5" y="339.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.5" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,007 samples, 0.50%)</title><rect x="116.5" y="323.0" width="5.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="119.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (61,105 samples, 15.25%)</title><rect x="122.4" y="371.0" width="180.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.4" y="382.0">ru/mail/polis/dao/kate/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1,234 samples, 0.31%)</title><rect x="122.4" y="355.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.4" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (1,234 samples, 0.31%)</title><rect x="122.4" y="339.0" width="3.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="125.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,011 samples, 1.25%)</title><rect x="126.0" y="355.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.0" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (677 samples, 0.17%)</title><rect x="126.0" y="339.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="129.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4,334 samples, 1.08%)</title><rect x="128.0" y="339.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.0" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (972 samples, 0.24%)</title><rect x="128.0" y="323.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="131.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (995 samples, 0.25%)</title><rect x="130.9" y="323.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.9" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (995 samples, 0.25%)</title><rect x="130.9" y="307.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="133.9" y="318.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1,352 samples, 0.34%)</title><rect x="133.8" y="323.0" width="4.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="136.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1,015 samples, 0.25%)</title><rect x="137.8" y="323.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.8" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,015 samples, 0.25%)</title><rect x="137.8" y="307.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="140.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (962 samples, 0.24%)</title><rect x="140.8" y="355.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.8" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (962 samples, 0.24%)</title><rect x="140.8" y="339.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="143.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (730 samples, 0.18%)</title><rect x="143.6" y="355.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (730 samples, 0.18%)</title><rect x="143.6" y="339.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (730 samples, 0.18%)</title><rect x="143.6" y="323.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$81/1847947043.get$Lambda (730 samples, 0.18%)</title><rect x="143.6" y="307.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.6" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$81 (730 samples, 0.18%)</title><rect x="143.6" y="291.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="146.6" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,716 samples, 0.43%)</title><rect x="145.8" y="355.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="148.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (685 samples, 0.17%)</title><rect x="145.8" y="339.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (685 samples, 0.17%)</title><rect x="145.8" y="323.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (685 samples, 0.17%)</title><rect x="145.8" y="307.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$81/1847947043.get$Lambda (685 samples, 0.17%)</title><rect x="145.8" y="291.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.8" y="302.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$81 (685 samples, 0.17%)</title><rect x="145.8" y="275.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="148.8" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,031 samples, 0.26%)</title><rect x="147.8" y="339.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,031 samples, 0.26%)</title><rect x="147.8" y="323.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,031 samples, 0.26%)</title><rect x="147.8" y="307.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/950504751.get$Lambda (1,031 samples, 0.26%)</title><rect x="147.8" y="291.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.8" y="302.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (1,031 samples, 0.26%)</title><rect x="147.8" y="275.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="150.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (163 samples, 0.04%)</title><rect x="150.8" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (163 samples, 0.04%)</title><rect x="150.8" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (163 samples, 0.04%)</title><rect x="150.8" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.8" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (148 samples, 0.04%)</title><rect x="150.8" y="307.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.8" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (148 samples, 0.04%)</title><rect x="150.8" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.8" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (86 samples, 0.02%)</title><rect x="150.8" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.8" y="286.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (86 samples, 0.02%)</title><rect x="150.8" y="259.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="153.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8,187 samples, 2.04%)</title><rect x="151.3" y="355.0" width="24.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.3" y="366.0">r..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1,043 samples, 0.26%)</title><rect x="151.3" y="339.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="154.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7,144 samples, 1.78%)</title><rect x="154.4" y="339.0" width="21.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.4" y="350.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7,144 samples, 1.78%)</title><rect x="154.4" y="323.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.4" y="334.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7,144 samples, 1.78%)</title><rect x="154.4" y="307.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.4" y="318.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7,144 samples, 1.78%)</title><rect x="154.4" y="291.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.4" y="302.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,086 samples, 0.77%)</title><rect x="154.4" y="275.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3,086 samples, 0.77%)</title><rect x="154.4" y="259.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.4" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3,086 samples, 0.77%)</title><rect x="154.4" y="243.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3,086 samples, 0.77%)</title><rect x="154.4" y="227.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3,086 samples, 0.77%)</title><rect x="154.4" y="211.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3,086 samples, 0.77%)</title><rect x="154.4" y="195.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (3,086 samples, 0.77%)</title><rect x="154.4" y="179.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3,086 samples, 0.77%)</title><rect x="154.4" y="163.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3,086 samples, 0.77%)</title><rect x="154.4" y="147.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,066 samples, 0.27%)</title><rect x="154.4" y="131.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,066 samples, 0.27%)</title><rect x="154.4" y="115.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.4" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1,066 samples, 0.27%)</title><rect x="154.4" y="99.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="157.4" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,020 samples, 0.50%)</title><rect x="157.5" y="131.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (2,020 samples, 0.50%)</title><rect x="157.5" y="115.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2,020 samples, 0.50%)</title><rect x="157.5" y="99.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,041 samples, 0.26%)</title><rect x="157.5" y="83.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="160.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (979 samples, 0.24%)</title><rect x="160.6" y="83.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (979 samples, 0.24%)</title><rect x="160.6" y="67.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="163.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$89/728436316.apply (4,058 samples, 1.01%)</title><rect x="163.5" y="275.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4,058 samples, 1.01%)</title><rect x="163.5" y="259.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,058 samples, 1.01%)</title><rect x="163.5" y="243.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.5" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,058 samples, 1.01%)</title><rect x="163.5" y="227.0" width="11.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="166.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (43,102 samples, 10.76%)</title><rect x="175.4" y="355.0" width="127.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.4" y="366.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java.util.ArrayList (1,031 samples, 0.26%)</title><rect x="175.4" y="339.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="178.4" y="350.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,480 samples, 0.37%)</title><rect x="178.5" y="339.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1,480 samples, 0.37%)</title><rect x="178.5" y="323.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1,480 samples, 0.37%)</title><rect x="178.5" y="307.0" width="4.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="181.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (980 samples, 0.24%)</title><rect x="182.8" y="339.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (980 samples, 0.24%)</title><rect x="182.8" y="323.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="185.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (39,611 samples, 9.89%)</title><rect x="185.7" y="339.0" width="116.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="188.7" y="350.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (16,720 samples, 4.17%)</title><rect x="185.7" y="323.0" width="49.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="188.7" y="334.0">com/g..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (675 samples, 0.17%)</title><rect x="185.7" y="307.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="188.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (16,045 samples, 4.01%)</title><rect x="187.7" y="307.0" width="47.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.7" y="318.0">com/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (930 samples, 0.23%)</title><rect x="187.7" y="291.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="190.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1,162 samples, 0.29%)</title><rect x="190.4" y="291.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.4" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1,162 samples, 0.29%)</title><rect x="190.4" y="275.0" width="3.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="193.4" y="286.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1,331 samples, 0.33%)</title><rect x="193.9" y="291.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="196.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (993 samples, 0.25%)</title><rect x="197.8" y="291.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.8" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (993 samples, 0.25%)</title><rect x="197.8" y="275.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="200.8" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11,629 samples, 2.90%)</title><rect x="200.7" y="291.0" width="34.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.7" y="302.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11,629 samples, 2.90%)</title><rect x="200.7" y="275.0" width="34.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.7" y="286.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11,629 samples, 2.90%)</title><rect x="200.7" y="259.0" width="34.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.7" y="270.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3,774 samples, 0.94%)</title><rect x="200.7" y="243.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (3,774 samples, 0.94%)</title><rect x="200.7" y="227.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3,774 samples, 0.94%)</title><rect x="200.7" y="211.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3,774 samples, 0.94%)</title><rect x="200.7" y="195.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,289 samples, 0.32%)</title><rect x="200.7" y="179.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,289 samples, 0.32%)</title><rect x="200.7" y="163.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.7" y="174.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1,289 samples, 0.32%)</title><rect x="200.7" y="147.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="203.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,485 samples, 0.62%)</title><rect x="204.5" y="179.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (2,485 samples, 0.62%)</title><rect x="204.5" y="163.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2,485 samples, 0.62%)</title><rect x="204.5" y="147.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,253 samples, 0.31%)</title><rect x="204.5" y="131.0" width="3.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="207.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1,232 samples, 0.31%)</title><rect x="208.2" y="131.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.2" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1,232 samples, 0.31%)</title><rect x="208.2" y="115.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="211.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (7,855 samples, 1.96%)</title><rect x="211.8" y="243.0" width="23.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.8" y="254.0">j..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (1,661 samples, 0.41%)</title><rect x="211.8" y="227.0" width="4.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="214.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,544 samples, 0.39%)</title><rect x="216.7" y="227.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,544 samples, 0.39%)</title><rect x="216.7" y="211.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1373434873.get$Lambda (794 samples, 0.20%)</title><rect x="216.7" y="195.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$84 (794 samples, 0.20%)</title><rect x="216.7" y="179.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="219.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.get$Lambda (750 samples, 0.19%)</title><rect x="219.0" y="195.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.0" y="206.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$87 (750 samples, 0.19%)</title><rect x="219.0" y="179.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="222.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,159 samples, 0.29%)</title><rect x="221.3" y="227.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1,159 samples, 0.29%)</title><rect x="221.3" y="211.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.3" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (1,159 samples, 0.29%)</title><rect x="221.3" y="195.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="224.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (3,491 samples, 0.87%)</title><rect x="224.7" y="227.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.7" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,491 samples, 0.87%)</title><rect x="224.7" y="211.0" width="10.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="227.7" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (994 samples, 0.25%)</title><rect x="234.9" y="323.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="237.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,006 samples, 0.25%)</title><rect x="237.9" y="323.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,006 samples, 0.25%)</title><rect x="237.9" y="307.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="240.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (686 samples, 0.17%)</title><rect x="240.8" y="323.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (686 samples, 0.17%)</title><rect x="240.8" y="307.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (686 samples, 0.17%)</title><rect x="240.8" y="291.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.8" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$81/1847947043.get$Lambda (686 samples, 0.17%)</title><rect x="240.8" y="275.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.8" y="286.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$81 (686 samples, 0.17%)</title><rect x="240.8" y="259.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="243.8" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,559 samples, 0.39%)</title><rect x="242.9" y="323.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (607 samples, 0.15%)</title><rect x="242.9" y="307.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (607 samples, 0.15%)</title><rect x="242.9" y="291.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (607 samples, 0.15%)</title><rect x="242.9" y="275.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.9" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$81/1847947043.get$Lambda (607 samples, 0.15%)</title><rect x="242.9" y="259.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.9" y="270.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$81 (607 samples, 0.15%)</title><rect x="242.9" y="243.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="245.9" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (952 samples, 0.24%)</title><rect x="244.6" y="307.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (952 samples, 0.24%)</title><rect x="244.6" y="291.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (952 samples, 0.24%)</title><rect x="244.6" y="275.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.6" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/950504751.get$Lambda (952 samples, 0.24%)</title><rect x="244.6" y="259.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.6" y="270.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (952 samples, 0.24%)</title><rect x="244.6" y="243.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="247.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1,310 samples, 0.33%)</title><rect x="247.5" y="323.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (1,310 samples, 0.33%)</title><rect x="247.5" y="307.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="250.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (158 samples, 0.04%)</title><rect x="251.3" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (158 samples, 0.04%)</title><rect x="251.3" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (158 samples, 0.04%)</title><rect x="251.3" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.3" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (107 samples, 0.03%)</title><rect x="251.3" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.3" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (107 samples, 0.03%)</title><rect x="251.3" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4,573 samples, 1.14%)</title><rect x="251.8" y="323.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.8" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1,164 samples, 0.29%)</title><rect x="251.8" y="307.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="254.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3,409 samples, 0.85%)</title><rect x="255.2" y="307.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,409 samples, 0.85%)</title><rect x="255.2" y="291.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3,409 samples, 0.85%)</title><rect x="255.2" y="275.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.2" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3,409 samples, 0.85%)</title><rect x="255.2" y="259.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3,409 samples, 0.85%)</title><rect x="255.2" y="243.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3,409 samples, 0.85%)</title><rect x="255.2" y="227.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="258.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3,409 samples, 0.85%)</title><rect x="255.2" y="211.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (3,409 samples, 0.85%)</title><rect x="255.2" y="195.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3,409 samples, 0.85%)</title><rect x="255.2" y="179.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3,409 samples, 0.85%)</title><rect x="255.2" y="163.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,192 samples, 0.30%)</title><rect x="255.2" y="147.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,192 samples, 0.30%)</title><rect x="255.2" y="131.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.2" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1,192 samples, 0.30%)</title><rect x="255.2" y="115.0" width="3.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="258.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,217 samples, 0.55%)</title><rect x="258.7" y="147.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (2,217 samples, 0.55%)</title><rect x="258.7" y="131.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2,217 samples, 0.55%)</title><rect x="258.7" y="115.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.7" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,146 samples, 0.29%)</title><rect x="258.7" y="99.0" width="3.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="261.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1,071 samples, 0.27%)</title><rect x="262.1" y="99.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.1" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1,071 samples, 0.27%)</title><rect x="262.1" y="83.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="265.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (12,605 samples, 3.15%)</title><rect x="265.2" y="323.0" width="37.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.2" y="334.0">ru/..</text>
</g>
<g>
<title>java/util/Collection.stream (3,607 samples, 0.90%)</title><rect x="265.2" y="307.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (1,337 samples, 0.33%)</title><rect x="265.2" y="291.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="268.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (1,337 samples, 0.33%)</title><rect x="265.2" y="275.0" width="4.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="268.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,270 samples, 0.57%)</title><rect x="269.2" y="291.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.2" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,270 samples, 0.57%)</title><rect x="269.2" y="275.0" width="6.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="272.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (638 samples, 0.16%)</title><rect x="275.9" y="307.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (638 samples, 0.16%)</title><rect x="275.9" y="291.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="278.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,000 samples, 0.50%)</title><rect x="277.7" y="307.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,000 samples, 0.50%)</title><rect x="277.7" y="291.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,000 samples, 0.50%)</title><rect x="277.7" y="275.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2,000 samples, 0.50%)</title><rect x="277.7" y="259.0" width="5.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="280.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (3,660 samples, 0.91%)</title><rect x="283.6" y="307.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.6" y="318.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (997 samples, 0.25%)</title><rect x="283.6" y="291.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.6" y="302.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (997 samples, 0.25%)</title><rect x="283.6" y="275.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="286.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (2,663 samples, 0.66%)</title><rect x="286.6" y="291.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (690 samples, 0.17%)</title><rect x="286.6" y="275.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (690 samples, 0.17%)</title><rect x="286.6" y="259.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$79/505415534.get$Lambda (690 samples, 0.17%)</title><rect x="286.6" y="243.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.6" y="254.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$79 (690 samples, 0.17%)</title><rect x="286.6" y="227.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="289.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (1,973 samples, 0.49%)</title><rect x="288.6" y="275.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.6" y="286.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (1,973 samples, 0.49%)</title><rect x="288.6" y="259.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="291.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (2,700 samples, 0.67%)</title><rect x="294.4" y="307.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.4" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (2,700 samples, 0.67%)</title><rect x="294.4" y="291.0" width="8.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="297.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (72,055 samples, 17.99%)</title><rect x="302.4" y="387.0" width="212.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.4" y="398.0">ru/mail/polis/dao/kate/morev..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11,100 samples, 2.77%)</title><rect x="302.4" y="371.0" width="32.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.4" y="382.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7,092 samples, 1.77%)</title><rect x="302.4" y="355.0" width="20.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7,092 samples, 1.77%)</title><rect x="302.4" y="339.0" width="20.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7,092 samples, 1.77%)</title><rect x="302.4" y="323.0" width="20.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,098 samples, 0.77%)</title><rect x="302.4" y="307.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3,098 samples, 0.77%)</title><rect x="302.4" y="291.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.4" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3,098 samples, 0.77%)</title><rect x="302.4" y="275.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3,098 samples, 0.77%)</title><rect x="302.4" y="259.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3,098 samples, 0.77%)</title><rect x="302.4" y="243.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3,098 samples, 0.77%)</title><rect x="302.4" y="227.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (3,098 samples, 0.77%)</title><rect x="302.4" y="211.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3,098 samples, 0.77%)</title><rect x="302.4" y="195.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3,098 samples, 0.77%)</title><rect x="302.4" y="179.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (999 samples, 0.25%)</title><rect x="302.4" y="163.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (999 samples, 0.25%)</title><rect x="302.4" y="147.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.4" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (999 samples, 0.25%)</title><rect x="302.4" y="131.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="305.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,099 samples, 0.52%)</title><rect x="305.3" y="163.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (2,099 samples, 0.52%)</title><rect x="305.3" y="147.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2,099 samples, 0.52%)</title><rect x="305.3" y="131.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.3" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,025 samples, 0.26%)</title><rect x="305.3" y="115.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="308.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1,074 samples, 0.27%)</title><rect x="308.3" y="115.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1,074 samples, 0.27%)</title><rect x="308.3" y="99.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="311.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$89/728436316.apply (3,994 samples, 1.00%)</title><rect x="311.5" y="307.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (3,994 samples, 1.00%)</title><rect x="311.5" y="291.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.5" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3,994 samples, 1.00%)</title><rect x="311.5" y="275.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.5" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3,994 samples, 1.00%)</title><rect x="311.5" y="259.0" width="11.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="314.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$96/371629601.apply (4,008 samples, 1.00%)</title><rect x="323.3" y="355.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="326.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4,008 samples, 1.00%)</title><rect x="323.3" y="339.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,008 samples, 1.00%)</title><rect x="323.3" y="323.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,008 samples, 1.00%)</title><rect x="323.3" y="307.0" width="11.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="326.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (2,062 samples, 0.51%)</title><rect x="335.1" y="371.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,062 samples, 0.51%)</title><rect x="335.1" y="355.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,062 samples, 0.51%)</title><rect x="335.1" y="339.0" width="6.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="338.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (58,893 samples, 14.70%)</title><rect x="341.1" y="371.0" width="173.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.1" y="382.0">ru/mail/polis/dao/kate..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,570 samples, 1.39%)</title><rect x="341.1" y="355.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.1" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (708 samples, 0.18%)</title><rect x="341.1" y="339.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="344.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4,862 samples, 1.21%)</title><rect x="343.2" y="339.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.2" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1,180 samples, 0.29%)</title><rect x="343.2" y="323.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="346.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1,105 samples, 0.28%)</title><rect x="346.7" y="323.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.7" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1,105 samples, 0.28%)</title><rect x="346.7" y="307.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="349.7" y="318.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1,483 samples, 0.37%)</title><rect x="350.0" y="323.0" width="4.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="353.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1,094 samples, 0.27%)</title><rect x="354.3" y="323.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="357.3" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,094 samples, 0.27%)</title><rect x="354.3" y="307.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="357.3" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (991 samples, 0.25%)</title><rect x="357.5" y="355.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="360.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,600 samples, 0.65%)</title><rect x="360.5" y="355.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="363.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,600 samples, 0.65%)</title><rect x="360.5" y="339.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,600 samples, 0.65%)</title><rect x="360.5" y="323.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,600 samples, 0.65%)</title><rect x="360.5" y="307.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="363.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,600 samples, 0.65%)</title><rect x="360.5" y="291.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.5" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,600 samples, 0.65%)</title><rect x="360.5" y="275.0" width="7.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="363.5" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (792 samples, 0.20%)</title><rect x="368.1" y="355.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (792 samples, 0.20%)</title><rect x="368.1" y="339.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (792 samples, 0.20%)</title><rect x="368.1" y="323.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$81/1847947043.get$Lambda (792 samples, 0.20%)</title><rect x="368.1" y="307.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.1" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$81 (792 samples, 0.20%)</title><rect x="368.1" y="291.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="371.1" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,871 samples, 0.47%)</title><rect x="370.5" y="355.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (706 samples, 0.18%)</title><rect x="370.5" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="373.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (706 samples, 0.18%)</title><rect x="370.5" y="323.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (706 samples, 0.18%)</title><rect x="370.5" y="307.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="373.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$81/1847947043.get$Lambda (706 samples, 0.18%)</title><rect x="370.5" y="291.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="373.5" y="302.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$81 (706 samples, 0.18%)</title><rect x="370.5" y="275.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="373.5" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,165 samples, 0.29%)</title><rect x="372.5" y="339.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,165 samples, 0.29%)</title><rect x="372.5" y="323.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="375.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,165 samples, 0.29%)</title><rect x="372.5" y="307.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/950504751.get$Lambda (1,165 samples, 0.29%)</title><rect x="372.5" y="291.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.5" y="302.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (1,165 samples, 0.29%)</title><rect x="372.5" y="275.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="375.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1,306 samples, 0.33%)</title><rect x="376.0" y="355.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (1,306 samples, 0.33%)</title><rect x="376.0" y="339.0" width="3.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="379.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7,218 samples, 1.80%)</title><rect x="379.8" y="355.0" width="21.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.8" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7,218 samples, 1.80%)</title><rect x="379.8" y="339.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.8" y="350.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7,218 samples, 1.80%)</title><rect x="379.8" y="323.0" width="21.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.8" y="334.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7,218 samples, 1.80%)</title><rect x="379.8" y="307.0" width="21.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.8" y="318.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7,218 samples, 1.80%)</title><rect x="379.8" y="291.0" width="21.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.8" y="302.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,120 samples, 0.78%)</title><rect x="379.8" y="275.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3,120 samples, 0.78%)</title><rect x="379.8" y="259.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.8" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3,120 samples, 0.78%)</title><rect x="379.8" y="243.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3,120 samples, 0.78%)</title><rect x="379.8" y="227.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3,120 samples, 0.78%)</title><rect x="379.8" y="211.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3,120 samples, 0.78%)</title><rect x="379.8" y="195.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (3,120 samples, 0.78%)</title><rect x="379.8" y="179.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3,120 samples, 0.78%)</title><rect x="379.8" y="163.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3,120 samples, 0.78%)</title><rect x="379.8" y="147.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,033 samples, 0.26%)</title><rect x="379.8" y="131.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,033 samples, 0.26%)</title><rect x="379.8" y="115.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.8" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1,033 samples, 0.26%)</title><rect x="379.8" y="99.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="382.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,087 samples, 0.52%)</title><rect x="382.9" y="131.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (2,087 samples, 0.52%)</title><rect x="382.9" y="115.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2,087 samples, 0.52%)</title><rect x="382.9" y="99.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="385.9" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,013 samples, 0.25%)</title><rect x="382.9" y="83.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="385.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1,074 samples, 0.27%)</title><rect x="385.8" y="83.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1,074 samples, 0.27%)</title><rect x="385.8" y="67.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="388.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$89/728436316.apply (4,098 samples, 1.02%)</title><rect x="389.0" y="275.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4,098 samples, 1.02%)</title><rect x="389.0" y="259.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,098 samples, 1.02%)</title><rect x="389.0" y="243.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.0" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,098 samples, 1.02%)</title><rect x="389.0" y="227.0" width="12.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="392.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (38,545 samples, 9.62%)</title><rect x="401.1" y="355.0" width="113.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="404.1" y="366.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (15,939 samples, 3.98%)</title><rect x="401.1" y="339.0" width="46.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.1" y="350.0">com/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (751 samples, 0.19%)</title><rect x="401.1" y="323.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="404.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (15,188 samples, 3.79%)</title><rect x="403.3" y="323.0" width="44.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.3" y="334.0">com/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (998 samples, 0.25%)</title><rect x="403.3" y="307.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="406.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1,080 samples, 0.27%)</title><rect x="406.2" y="307.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.2" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1,080 samples, 0.27%)</title><rect x="406.2" y="291.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="409.2" y="302.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1,370 samples, 0.34%)</title><rect x="409.4" y="307.0" width="4.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="412.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1,026 samples, 0.26%)</title><rect x="413.4" y="307.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,026 samples, 0.26%)</title><rect x="413.4" y="291.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="416.4" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10,714 samples, 2.67%)</title><rect x="416.5" y="307.0" width="31.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.5" y="318.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (10,714 samples, 2.67%)</title><rect x="416.5" y="291.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.5" y="302.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (10,714 samples, 2.67%)</title><rect x="416.5" y="275.0" width="31.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.5" y="286.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3,210 samples, 0.80%)</title><rect x="416.5" y="259.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (3,210 samples, 0.80%)</title><rect x="416.5" y="243.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3,210 samples, 0.80%)</title><rect x="416.5" y="227.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3,210 samples, 0.80%)</title><rect x="416.5" y="211.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,084 samples, 0.27%)</title><rect x="416.5" y="195.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,084 samples, 0.27%)</title><rect x="416.5" y="179.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.5" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1,084 samples, 0.27%)</title><rect x="416.5" y="163.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="419.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,126 samples, 0.53%)</title><rect x="419.7" y="195.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (2,126 samples, 0.53%)</title><rect x="419.7" y="179.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2,126 samples, 0.53%)</title><rect x="419.7" y="163.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.7" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,087 samples, 0.27%)</title><rect x="419.7" y="147.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="422.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1,039 samples, 0.26%)</title><rect x="422.9" y="147.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1,039 samples, 0.26%)</title><rect x="422.9" y="131.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="425.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (7,504 samples, 1.87%)</title><rect x="425.9" y="259.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="428.9" y="270.0">j..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (1,733 samples, 0.43%)</title><rect x="425.9" y="243.0" width="5.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="428.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,361 samples, 0.34%)</title><rect x="431.0" y="243.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,361 samples, 0.34%)</title><rect x="431.0" y="227.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1373434873.get$Lambda (674 samples, 0.17%)</title><rect x="431.0" y="211.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.0" y="222.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$84 (674 samples, 0.17%)</title><rect x="431.0" y="195.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="434.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.get$Lambda (687 samples, 0.17%)</title><rect x="433.0" y="211.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.0" y="222.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$87 (687 samples, 0.17%)</title><rect x="433.0" y="195.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="436.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,030 samples, 0.26%)</title><rect x="435.0" y="243.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="438.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1,030 samples, 0.26%)</title><rect x="435.0" y="227.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="438.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (1,030 samples, 0.26%)</title><rect x="435.0" y="211.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="438.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (3,380 samples, 0.84%)</title><rect x="438.1" y="243.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="441.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,380 samples, 0.84%)</title><rect x="438.1" y="227.0" width="9.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="441.1" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (984 samples, 0.25%)</title><rect x="448.0" y="339.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="451.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,020 samples, 0.25%)</title><rect x="450.9" y="339.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,020 samples, 0.25%)</title><rect x="450.9" y="323.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="453.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (675 samples, 0.17%)</title><rect x="453.9" y="339.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (675 samples, 0.17%)</title><rect x="453.9" y="323.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (675 samples, 0.17%)</title><rect x="453.9" y="307.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$81/1847947043.get$Lambda (675 samples, 0.17%)</title><rect x="453.9" y="291.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.9" y="302.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$81 (675 samples, 0.17%)</title><rect x="453.9" y="275.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="456.9" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,621 samples, 0.40%)</title><rect x="455.9" y="339.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="458.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (669 samples, 0.17%)</title><rect x="455.9" y="323.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (669 samples, 0.17%)</title><rect x="455.9" y="307.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (669 samples, 0.17%)</title><rect x="455.9" y="291.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.9" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$81/1847947043.get$Lambda (669 samples, 0.17%)</title><rect x="455.9" y="275.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.9" y="286.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$81 (669 samples, 0.17%)</title><rect x="455.9" y="259.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="458.9" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (952 samples, 0.24%)</title><rect x="457.9" y="323.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (952 samples, 0.24%)</title><rect x="457.9" y="307.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (952 samples, 0.24%)</title><rect x="457.9" y="291.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.9" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/950504751.get$Lambda (952 samples, 0.24%)</title><rect x="457.9" y="275.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.9" y="286.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (952 samples, 0.24%)</title><rect x="457.9" y="259.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="460.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1,250 samples, 0.31%)</title><rect x="460.7" y="339.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (1,250 samples, 0.31%)</title><rect x="460.7" y="323.0" width="3.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="463.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (134 samples, 0.03%)</title><rect x="464.4" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (134 samples, 0.03%)</title><rect x="464.4" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (134 samples, 0.03%)</title><rect x="464.4" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.4" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (128 samples, 0.03%)</title><rect x="464.4" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.4" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (128 samples, 0.03%)</title><rect x="464.4" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4,324 samples, 1.08%)</title><rect x="464.8" y="339.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.8" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1,159 samples, 0.29%)</title><rect x="464.8" y="323.0" width="3.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="467.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3,165 samples, 0.79%)</title><rect x="468.2" y="323.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,165 samples, 0.79%)</title><rect x="468.2" y="307.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3,165 samples, 0.79%)</title><rect x="468.2" y="291.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.2" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3,165 samples, 0.79%)</title><rect x="468.2" y="275.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3,165 samples, 0.79%)</title><rect x="468.2" y="259.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3,165 samples, 0.79%)</title><rect x="468.2" y="243.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3,165 samples, 0.79%)</title><rect x="468.2" y="227.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$87/1727436625.getAsBoolean (3,165 samples, 0.79%)</title><rect x="468.2" y="211.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3,165 samples, 0.79%)</title><rect x="468.2" y="195.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3,165 samples, 0.79%)</title><rect x="468.2" y="179.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,026 samples, 0.26%)</title><rect x="468.2" y="163.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,026 samples, 0.26%)</title><rect x="468.2" y="147.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.2" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1,026 samples, 0.26%)</title><rect x="468.2" y="131.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="471.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,139 samples, 0.53%)</title><rect x="471.2" y="163.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$78/2011843539.apply (2,139 samples, 0.53%)</title><rect x="471.2" y="147.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2,139 samples, 0.53%)</title><rect x="471.2" y="131.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.2" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,098 samples, 0.27%)</title><rect x="471.2" y="115.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="474.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1,041 samples, 0.26%)</title><rect x="474.4" y="115.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.4" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1,041 samples, 0.26%)</title><rect x="474.4" y="99.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="477.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (12,598 samples, 3.14%)</title><rect x="477.5" y="339.0" width="37.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.5" y="350.0">ru/..</text>
</g>
<g>
<title>java/util/Collection.stream (3,753 samples, 0.94%)</title><rect x="477.5" y="323.0" width="11.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (1,352 samples, 0.34%)</title><rect x="477.5" y="307.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (1,352 samples, 0.34%)</title><rect x="477.5" y="291.0" width="4.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="480.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,401 samples, 0.60%)</title><rect x="481.5" y="307.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.5" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,401 samples, 0.60%)</title><rect x="481.5" y="291.0" width="7.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="484.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (645 samples, 0.16%)</title><rect x="488.6" y="323.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (645 samples, 0.16%)</title><rect x="488.6" y="307.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="491.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1,899 samples, 0.47%)</title><rect x="490.5" y="323.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1,899 samples, 0.47%)</title><rect x="490.5" y="307.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1,899 samples, 0.47%)</title><rect x="490.5" y="291.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (1,899 samples, 0.47%)</title><rect x="490.5" y="275.0" width="5.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="493.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (3,646 samples, 0.91%)</title><rect x="496.0" y="323.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.0" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (988 samples, 0.25%)</title><rect x="496.0" y="307.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.0" y="318.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (988 samples, 0.25%)</title><rect x="496.0" y="291.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="499.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (2,658 samples, 0.66%)</title><rect x="499.0" y="307.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (697 samples, 0.17%)</title><rect x="499.0" y="291.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (697 samples, 0.17%)</title><rect x="499.0" y="275.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$79/505415534.get$Lambda (697 samples, 0.17%)</title><rect x="499.0" y="259.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.0" y="270.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$79 (697 samples, 0.17%)</title><rect x="499.0" y="243.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="502.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (1,961 samples, 0.49%)</title><rect x="501.0" y="291.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.0" y="302.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (1,961 samples, 0.49%)</title><rect x="501.0" y="275.0" width="5.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="504.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (2,655 samples, 0.66%)</title><rect x="506.8" y="323.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.8" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (2,655 samples, 0.66%)</title><rect x="506.8" y="307.0" width="7.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="509.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.mergeResponses (2,031 samples, 0.51%)</title><rect x="514.6" y="403.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap (259 samples, 0.06%)</title><rect x="514.6" y="387.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="517.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (609 samples, 0.15%)</title><rect x="515.6" y="387.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$127/2021558490.accept (609 samples, 0.15%)</title><rect x="515.6" y="371.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$mergeResponses$0 (609 samples, 0.15%)</title><rect x="515.6" y="355.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (609 samples, 0.15%)</title><rect x="515.6" y="339.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (609 samples, 0.15%)</title><rect x="515.6" y="323.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (200 samples, 0.05%)</title><rect x="515.6" y="307.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="518.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (228 samples, 0.06%)</title><rect x="516.2" y="307.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="519.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (181 samples, 0.05%)</title><rect x="516.9" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.LongAdder (181 samples, 0.05%)</title><rect x="516.9" y="291.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="519.9" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (87 samples, 0.02%)</title><rect x="517.4" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (87 samples, 0.02%)</title><rect x="517.4" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (87 samples, 0.02%)</title><rect x="517.4" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$81/1847947043.get$Lambda (87 samples, 0.02%)</title><rect x="517.4" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.4" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$81 (87 samples, 0.02%)</title><rect x="517.4" y="323.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="520.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.entrySet (93 samples, 0.02%)</title><rect x="517.7" y="387.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (93 samples, 0.02%)</title><rect x="517.7" y="371.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="520.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getTimestamp (899 samples, 0.22%)</title><rect x="517.9" y="387.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (899 samples, 0.22%)</title><rect x="517.9" y="371.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (899 samples, 0.22%)</title><rect x="517.9" y="355.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (899 samples, 0.22%)</title><rect x="517.9" y="339.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (342 samples, 0.09%)</title><rect x="517.9" y="323.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="520.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (557 samples, 0.14%)</title><rect x="518.9" y="323.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="521.9" y="334.0"></text>
</g>
<g>
<title>byte[] (557 samples, 0.14%)</title><rect x="518.9" y="307.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="521.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (7,024 samples, 1.75%)</title><rect x="520.6" y="403.0" width="20.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="523.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7,024 samples, 1.75%)</title><rect x="520.6" y="387.0" width="20.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7,024 samples, 1.75%)</title><rect x="520.6" y="371.0" width="20.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5,394 samples, 1.35%)</title><rect x="520.6" y="355.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.6" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5,394 samples, 1.35%)</title><rect x="520.6" y="339.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.6" y="350.0"></text>
</g>
<g>
<title>byte[] (5,062 samples, 1.26%)</title><rect x="520.6" y="323.0" width="14.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="523.6" y="334.0"></text>
</g>
<g>
<title>byte[] (332 samples, 0.08%)</title><rect x="535.5" y="323.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="538.5" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,630 samples, 0.41%)</title><rect x="536.5" y="355.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.5" y="366.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,630 samples, 0.41%)</title><rect x="536.5" y="339.0" width="4.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="539.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (87,573 samples, 21.86%)</title><rect x="541.3" y="403.0" width="257.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.3" y="414.0">ru/mail/polis/service/kate/moreva/..</text>
</g>
<g>
<title>java.util.ArrayList (181 samples, 0.05%)</title><rect x="541.3" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="544.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (230 samples, 0.06%)</title><rect x="541.8" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (230 samples, 0.06%)</title><rect x="541.8" y="371.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="544.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (397 samples, 0.10%)</title><rect x="542.5" y="387.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.5" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (287 samples, 0.07%)</title><rect x="542.5" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.5" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (287 samples, 0.07%)</title><rect x="542.5" y="355.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="545.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (110 samples, 0.03%)</title><rect x="543.3" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.3" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (110 samples, 0.03%)</title><rect x="543.3" y="355.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="546.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (1,660 samples, 0.41%)</title><rect x="543.7" y="387.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.7" y="398.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (333 samples, 0.08%)</title><rect x="543.7" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.7" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (333 samples, 0.08%)</title><rect x="543.7" y="355.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="546.7" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,327 samples, 0.33%)</title><rect x="544.6" y="371.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.6" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,327 samples, 0.33%)</title><rect x="544.6" y="355.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.6" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,327 samples, 0.33%)</title><rect x="544.6" y="339.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.6" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (717 samples, 0.18%)</title><rect x="544.6" y="323.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.6" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (717 samples, 0.18%)</title><rect x="544.6" y="307.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="547.6" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (610 samples, 0.15%)</title><rect x="546.8" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.8" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (610 samples, 0.15%)</title><rect x="546.8" y="307.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="549.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.proxy (85,105 samples, 21.24%)</title><rect x="548.5" y="387.0" width="250.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.5" y="398.0">ru/mail/polis/service/kate/moreva..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,045 samples, 0.26%)</title><rect x="548.5" y="371.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/689401025.invoke (1,045 samples, 0.26%)</title><rect x="548.5" y="355.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,045 samples, 0.26%)</title><rect x="548.5" y="339.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (307 samples, 0.08%)</title><rect x="548.5" y="323.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (307 samples, 0.08%)</title><rect x="548.5" y="307.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="551.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (738 samples, 0.18%)</title><rect x="549.5" y="323.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (738 samples, 0.18%)</title><rect x="549.5" y="307.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.5" y="318.0"></text>
</g>
<g>
<title>byte[] (738 samples, 0.18%)</title><rect x="549.5" y="291.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="552.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (84,060 samples, 20.98%)</title><rect x="551.6" y="371.0" width="247.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.6" y="382.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (84,060 samples, 20.98%)</title><rect x="551.6" y="355.0" width="247.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.6" y="366.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (458 samples, 0.11%)</title><rect x="551.6" y="339.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="554.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (76,864 samples, 19.19%)</title><rect x="553.0" y="339.0" width="226.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.0" y="350.0">one/nio/http/HttpClient$Respon..</text>
</g>
<g>
<title>byte[] (10,495 samples, 2.62%)</title><rect x="553.0" y="323.0" width="30.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="556.0" y="334.0">by..</text>
</g>
<g>
<title>byte[] (66,369 samples, 16.57%)</title><rect x="583.9" y="323.0" width="195.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="586.9" y="334.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3,873 samples, 0.97%)</title><rect x="779.4" y="339.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.4" y="350.0"></text>
</g>
<g>
<title>byte[] (403 samples, 0.10%)</title><rect x="779.4" y="323.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="782.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (233 samples, 0.06%)</title><rect x="780.6" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (233 samples, 0.06%)</title><rect x="780.6" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String (123 samples, 0.03%)</title><rect x="780.6" y="291.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="783.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (110 samples, 0.03%)</title><rect x="780.9" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.9" y="302.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.03%)</title><rect x="780.9" y="275.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="783.9" y="286.0"></text>
</g>
<g>
<title>one.nio.http.Response (110 samples, 0.03%)</title><rect x="781.2" y="323.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="784.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2,716 samples, 0.68%)</title><rect x="781.6" y="323.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.6" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,716 samples, 0.68%)</title><rect x="781.6" y="307.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.6" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,716 samples, 0.68%)</title><rect x="781.6" y="291.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.6" y="302.0"></text>
</g>
<g>
<title>char[] (1,590 samples, 0.40%)</title><rect x="781.6" y="275.0" width="4.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="784.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String (493 samples, 0.12%)</title><rect x="786.3" y="275.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="789.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (633 samples, 0.16%)</title><rect x="787.7" y="275.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (633 samples, 0.16%)</title><rect x="787.7" y="259.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (633 samples, 0.16%)</title><rect x="787.7" y="243.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.7" y="254.0"></text>
</g>
<g>
<title>byte[] (633 samples, 0.16%)</title><rect x="787.7" y="227.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="790.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (135 samples, 0.03%)</title><rect x="789.6" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (135 samples, 0.03%)</title><rect x="789.6" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="792.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (276 samples, 0.07%)</title><rect x="790.0" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (276 samples, 0.07%)</title><rect x="790.0" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (276 samples, 0.07%)</title><rect x="790.0" y="291.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.02%)</title><rect x="790.0" y="275.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="793.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (190 samples, 0.05%)</title><rect x="790.2" y="275.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.2" y="286.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.05%)</title><rect x="790.2" y="259.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="793.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1,646 samples, 0.41%)</title><rect x="790.8" y="339.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,646 samples, 0.41%)</title><rect x="790.8" y="323.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.8" y="334.0"></text>
</g>
<g>
<title>byte[] (1,646 samples, 0.41%)</title><rect x="790.8" y="307.0" width="4.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="793.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (858 samples, 0.21%)</title><rect x="795.6" y="339.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (858 samples, 0.21%)</title><rect x="795.6" y="323.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (858 samples, 0.21%)</title><rect x="795.6" y="307.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String (355 samples, 0.09%)</title><rect x="795.6" y="291.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="798.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (503 samples, 0.13%)</title><rect x="796.7" y="291.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.7" y="302.0"></text>
</g>
<g>
<title>byte[] (503 samples, 0.13%)</title><rect x="796.7" y="275.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="799.7" y="286.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (361 samples, 0.09%)</title><rect x="798.2" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (361 samples, 0.09%)</title><rect x="798.2" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.2" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (361 samples, 0.09%)</title><rect x="798.2" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.2" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (361 samples, 0.09%)</title><rect x="798.2" y="291.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="801.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/Replicas.quorum (1,851 samples, 0.46%)</title><rect x="799.2" y="435.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.2" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.Replicas (1,851 samples, 0.46%)</title><rect x="799.2" y="419.0" width="5.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="802.2" y="430.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (130,810 samples, 32.65%)</title><rect x="804.7" y="515.0" width="385.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.7" y="526.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,605 samples, 0.65%)</title><rect x="804.7" y="499.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.7" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,605 samples, 0.65%)</title><rect x="804.7" y="483.0" width="7.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="807.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (128,205 samples, 32.00%)</title><rect x="812.4" y="499.0" width="377.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.4" y="510.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (128,205 samples, 32.00%)</title><rect x="812.4" y="483.0" width="377.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.4" y="494.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (128,168 samples, 31.99%)</title><rect x="812.4" y="467.0" width="377.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.4" y="478.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (20,630 samples, 5.15%)</title><rect x="812.4" y="451.0" width="60.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.4" y="462.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (20,630 samples, 5.15%)</title><rect x="812.4" y="435.0" width="60.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.4" y="446.0">one/ni..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (11,279 samples, 2.82%)</title><rect x="812.4" y="419.0" width="33.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.4" y="430.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5,204 samples, 1.30%)</title><rect x="812.4" y="403.0" width="15.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5,204 samples, 1.30%)</title><rect x="812.4" y="387.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,204 samples, 1.30%)</title><rect x="812.4" y="371.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,204 samples, 1.30%)</title><rect x="812.4" y="355.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (1,403 samples, 0.35%)</title><rect x="812.4" y="339.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="815.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,801 samples, 0.95%)</title><rect x="816.5" y="339.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.5" y="350.0"></text>
</g>
<g>
<title>byte[] (3,801 samples, 0.95%)</title><rect x="816.5" y="323.0" width="11.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="819.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (6,075 samples, 1.52%)</title><rect x="827.7" y="403.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1236802685.linkToTargetMethod (5,961 samples, 1.49%)</title><rect x="827.7" y="387.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5,961 samples, 1.49%)</title><rect x="827.7" y="371.0" width="17.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$66/1288711039.get$Lambda (5,961 samples, 1.49%)</title><rect x="827.7" y="355.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$66 (5,961 samples, 1.49%)</title><rect x="827.7" y="339.0" width="17.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="830.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (114 samples, 0.03%)</title><rect x="845.3" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (114 samples, 0.03%)</title><rect x="845.3" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (114 samples, 0.03%)</title><rect x="845.3" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (114 samples, 0.03%)</title><rect x="845.3" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (114 samples, 0.03%)</title><rect x="845.3" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (114 samples, 0.03%)</title><rect x="845.3" y="307.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="848.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9,351 samples, 2.33%)</title><rect x="845.6" y="419.0" width="27.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.6" y="430.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (9,351 samples, 2.33%)</title><rect x="845.6" y="403.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.6" y="414.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9,351 samples, 2.33%)</title><rect x="845.6" y="387.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.6" y="398.0">j..</text>
</g>
<g>
<title>java.lang.String (3,424 samples, 0.85%)</title><rect x="845.6" y="371.0" width="10.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="848.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5,927 samples, 1.48%)</title><rect x="855.7" y="371.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.7" y="382.0"></text>
</g>
<g>
<title>byte[] (5,927 samples, 1.48%)</title><rect x="855.7" y="355.0" width="17.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="858.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (43,999 samples, 10.98%)</title><rect x="873.1" y="451.0" width="129.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.1" y="462.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one.nio.http.Request (5,121 samples, 1.28%)</title><rect x="873.1" y="435.0" width="15.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="876.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14,798 samples, 3.69%)</title><rect x="888.2" y="435.0" width="43.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.2" y="446.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (8,155 samples, 2.04%)</title><rect x="888.2" y="419.0" width="24.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="891.2" y="430.0">j..</text>
</g>
<g>
<title>java.lang.String[] (6,643 samples, 1.66%)</title><rect x="912.2" y="419.0" width="19.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="915.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24,080 samples, 6.01%)</title><rect x="931.8" y="435.0" width="70.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.8" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (24,080 samples, 6.01%)</title><rect x="931.8" y="419.0" width="70.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.8" y="430.0">one/nio/..</text>
</g>
<g>
<title>char[] (11,636 samples, 2.90%)</title><rect x="931.8" y="403.0" width="34.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="934.8" y="414.0">ch..</text>
</g>
<g>
<title>char[] (577 samples, 0.14%)</title><rect x="966.1" y="403.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="969.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (3,580 samples, 0.89%)</title><rect x="967.8" y="403.0" width="10.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="970.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,287 samples, 2.07%)</title><rect x="978.3" y="403.0" width="24.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.3" y="414.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,287 samples, 2.07%)</title><rect x="978.3" y="387.0" width="24.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.3" y="398.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8,287 samples, 2.07%)</title><rect x="978.3" y="371.0" width="24.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.3" y="382.0">j..</text>
</g>
<g>
<title>byte[] (8,287 samples, 2.07%)</title><rect x="978.3" y="355.0" width="24.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="981.3" y="366.0">b..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (63,539 samples, 15.86%)</title><rect x="1002.7" y="451.0" width="187.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.7" y="462.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (63,539 samples, 15.86%)</title><rect x="1002.7" y="435.0" width="187.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.7" y="446.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (23,964 samples, 5.98%)</title><rect x="1002.7" y="419.0" width="70.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1005.7" y="430.0">char[]</text>
</g>
<g>
<title>char[] (9,619 samples, 2.40%)</title><rect x="1073.3" y="419.0" width="28.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1076.3" y="430.0">ch..</text>
</g>
<g>
<title>java.lang.String (9,119 samples, 2.28%)</title><rect x="1101.7" y="419.0" width="26.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1104.7" y="430.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20,837 samples, 5.20%)</title><rect x="1128.5" y="419.0" width="61.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.5" y="430.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20,837 samples, 5.20%)</title><rect x="1128.5" y="403.0" width="61.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.5" y="414.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20,837 samples, 5.20%)</title><rect x="1128.5" y="387.0" width="61.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.5" y="398.0">java/l..</text>
</g>
<g>
<title>byte[] (19,741 samples, 4.93%)</title><rect x="1128.5" y="371.0" width="58.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1131.5" y="382.0">byte[]</text>
</g>
<g>
<title>byte[] (1,096 samples, 0.27%)</title><rect x="1186.7" y="371.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1189.7" y="382.0"></text>
</g>
</g>
</svg>
