<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (164,210 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 #0 tid=18562] (53 samples, 0.03%)</title><rect x="10.0" y="547.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (53 samples, 0.03%)</title><rect x="10.0" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (53 samples, 0.03%)</title><rect x="10.0" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (53 samples, 0.03%)</title><rect x="10.0" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (52 samples, 0.03%)</title><rect x="10.0" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.02%)</title><rect x="10.1" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="13.1" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=18554] (9,903 samples, 6.03%)</title><rect x="10.4" y="547.0" width="71.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.4" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,903 samples, 6.03%)</title><rect x="10.4" y="531.0" width="71.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.4" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (9,903 samples, 6.03%)</title><rect x="10.4" y="515.0" width="71.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.4" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,903 samples, 6.03%)</title><rect x="10.4" y="499.0" width="71.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.4" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,903 samples, 6.03%)</title><rect x="10.4" y="483.0" width="71.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.4" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,468 samples, 2.11%)</title><rect x="10.4" y="467.0" width="24.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.4" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,468 samples, 2.11%)</title><rect x="10.4" y="451.0" width="24.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.4" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,557 samples, 1.56%)</title><rect x="10.4" y="435.0" width="18.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (863 samples, 0.53%)</title><rect x="10.4" y="419.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (863 samples, 0.53%)</title><rect x="10.4" y="403.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (863 samples, 0.53%)</title><rect x="10.4" y="387.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (863 samples, 0.53%)</title><rect x="10.4" y="371.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (420 samples, 0.26%)</title><rect x="10.4" y="355.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (443 samples, 0.27%)</title><rect x="13.4" y="355.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.4" y="366.0"></text>
</g>
<g>
<title>byte[] (443 samples, 0.27%)</title><rect x="13.4" y="339.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="16.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (1,694 samples, 1.03%)</title><rect x="16.6" y="419.0" width="12.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (417 samples, 0.25%)</title><rect x="16.6" y="403.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (417 samples, 0.25%)</title><rect x="16.6" y="387.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (417 samples, 0.25%)</title><rect x="16.6" y="371.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (417 samples, 0.25%)</title><rect x="16.6" y="355.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.6" y="366.0"></text>
</g>
<g>
<title>byte[] (417 samples, 0.25%)</title><rect x="16.6" y="339.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="19.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (852 samples, 0.52%)</title><rect x="19.6" y="403.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (852 samples, 0.52%)</title><rect x="19.6" y="387.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (852 samples, 0.52%)</title><rect x="19.6" y="371.0" width="6.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="22.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (425 samples, 0.26%)</title><rect x="25.7" y="403.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (400 samples, 0.24%)</title><rect x="25.7" y="387.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="28.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (400 samples, 0.24%)</title><rect x="25.7" y="371.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.get$Lambda (400 samples, 0.24%)</title><rect x="25.7" y="355.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$76 (400 samples, 0.24%)</title><rect x="25.7" y="339.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="28.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (911 samples, 0.55%)</title><rect x="28.8" y="435.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (911 samples, 0.55%)</title><rect x="28.8" y="419.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (911 samples, 0.55%)</title><rect x="28.8" y="403.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (374 samples, 0.23%)</title><rect x="28.8" y="387.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="31.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (537 samples, 0.33%)</title><rect x="31.4" y="387.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.4" y="398.0"></text>
</g>
<g>
<title>byte[] (537 samples, 0.33%)</title><rect x="31.4" y="371.0" width="3.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="34.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,367 samples, 2.66%)</title><rect x="35.3" y="467.0" width="31.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.3" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (695 samples, 0.42%)</title><rect x="35.3" y="451.0" width="5.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="38.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,331 samples, 0.81%)</title><rect x="40.3" y="451.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (1,331 samples, 0.81%)</title><rect x="40.3" y="435.0" width="9.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="43.3" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,341 samples, 1.43%)</title><rect x="49.9" y="451.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,341 samples, 1.43%)</title><rect x="49.9" y="435.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.9" y="446.0"></text>
</g>
<g>
<title>char[] (1,236 samples, 0.75%)</title><rect x="49.9" y="419.0" width="8.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="52.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (421 samples, 0.26%)</title><rect x="58.7" y="419.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="61.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (684 samples, 0.42%)</title><rect x="61.8" y="419.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (684 samples, 0.42%)</title><rect x="61.8" y="403.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (684 samples, 0.42%)</title><rect x="61.8" y="387.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.8" y="398.0"></text>
</g>
<g>
<title>byte[] (684 samples, 0.42%)</title><rect x="61.8" y="371.0" width="4.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="64.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,068 samples, 1.26%)</title><rect x="66.7" y="467.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,068 samples, 1.26%)</title><rect x="66.7" y="451.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.7" y="462.0"></text>
</g>
<g>
<title>char[] (931 samples, 0.57%)</title><rect x="66.7" y="435.0" width="6.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="69.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (424 samples, 0.26%)</title><rect x="73.4" y="435.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="76.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (713 samples, 0.43%)</title><rect x="76.4" y="435.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (713 samples, 0.43%)</title><rect x="76.4" y="419.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (713 samples, 0.43%)</title><rect x="76.4" y="403.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.4" y="414.0"></text>
</g>
<g>
<title>byte[] (713 samples, 0.43%)</title><rect x="76.4" y="387.0" width="5.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="79.4" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=18555] (9,931 samples, 6.05%)</title><rect x="81.5" y="547.0" width="71.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="84.5" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,931 samples, 6.05%)</title><rect x="81.5" y="531.0" width="71.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.5" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (9,931 samples, 6.05%)</title><rect x="81.5" y="515.0" width="71.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.5" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,931 samples, 6.05%)</title><rect x="81.5" y="499.0" width="71.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.5" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,931 samples, 6.05%)</title><rect x="81.5" y="483.0" width="71.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.5" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,507 samples, 2.14%)</title><rect x="81.5" y="467.0" width="25.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.5" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,507 samples, 2.14%)</title><rect x="81.5" y="451.0" width="25.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.5" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,576 samples, 1.57%)</title><rect x="81.5" y="435.0" width="18.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (910 samples, 0.55%)</title><rect x="81.5" y="419.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (910 samples, 0.55%)</title><rect x="81.5" y="403.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (910 samples, 0.55%)</title><rect x="81.5" y="387.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (910 samples, 0.55%)</title><rect x="81.5" y="371.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (454 samples, 0.28%)</title><rect x="81.5" y="355.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="84.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (456 samples, 0.28%)</title><rect x="84.8" y="355.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.8" y="366.0"></text>
</g>
<g>
<title>byte[] (456 samples, 0.28%)</title><rect x="84.8" y="339.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="87.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (1,666 samples, 1.01%)</title><rect x="88.1" y="419.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (410 samples, 0.25%)</title><rect x="88.1" y="403.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (410 samples, 0.25%)</title><rect x="88.1" y="387.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (410 samples, 0.25%)</title><rect x="88.1" y="371.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (410 samples, 0.25%)</title><rect x="88.1" y="355.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.1" y="366.0"></text>
</g>
<g>
<title>byte[] (410 samples, 0.25%)</title><rect x="88.1" y="339.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="91.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (851 samples, 0.52%)</title><rect x="91.0" y="403.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (851 samples, 0.52%)</title><rect x="91.0" y="387.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (851 samples, 0.52%)</title><rect x="91.0" y="371.0" width="6.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="94.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (405 samples, 0.25%)</title><rect x="97.1" y="403.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (376 samples, 0.23%)</title><rect x="97.1" y="387.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (376 samples, 0.23%)</title><rect x="97.1" y="371.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.get$Lambda (376 samples, 0.23%)</title><rect x="97.1" y="355.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$76 (376 samples, 0.23%)</title><rect x="97.1" y="339.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="100.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (931 samples, 0.57%)</title><rect x="100.1" y="435.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (931 samples, 0.57%)</title><rect x="100.1" y="419.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (931 samples, 0.57%)</title><rect x="100.1" y="403.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (380 samples, 0.23%)</title><rect x="100.1" y="387.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="103.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (551 samples, 0.34%)</title><rect x="102.8" y="387.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.8" y="398.0"></text>
</g>
<g>
<title>byte[] (551 samples, 0.34%)</title><rect x="102.8" y="371.0" width="3.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="105.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,380 samples, 2.67%)</title><rect x="106.7" y="467.0" width="31.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.7" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (732 samples, 0.45%)</title><rect x="106.7" y="451.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="109.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,368 samples, 0.83%)</title><rect x="112.0" y="451.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (1,368 samples, 0.83%)</title><rect x="112.0" y="435.0" width="9.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="115.0" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,280 samples, 1.39%)</title><rect x="121.8" y="451.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,280 samples, 1.39%)</title><rect x="121.8" y="435.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.8" y="446.0"></text>
</g>
<g>
<title>char[] (1,260 samples, 0.77%)</title><rect x="121.8" y="419.0" width="9.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="124.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (411 samples, 0.25%)</title><rect x="130.9" y="419.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="133.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (609 samples, 0.37%)</title><rect x="133.8" y="419.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (609 samples, 0.37%)</title><rect x="133.8" y="403.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (609 samples, 0.37%)</title><rect x="133.8" y="387.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.8" y="398.0"></text>
</g>
<g>
<title>byte[] (609 samples, 0.37%)</title><rect x="133.8" y="371.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="136.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,044 samples, 1.24%)</title><rect x="138.2" y="467.0" width="14.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,044 samples, 1.24%)</title><rect x="138.2" y="451.0" width="14.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.2" y="462.0"></text>
</g>
<g>
<title>char[] (943 samples, 0.57%)</title><rect x="138.2" y="435.0" width="6.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="141.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (450 samples, 0.27%)</title><rect x="145.0" y="435.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="148.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (651 samples, 0.40%)</title><rect x="148.2" y="435.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (651 samples, 0.40%)</title><rect x="148.2" y="419.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (651 samples, 0.40%)</title><rect x="148.2" y="403.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.2" y="414.0"></text>
</g>
<g>
<title>byte[] (651 samples, 0.40%)</title><rect x="148.2" y="387.0" width="4.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="151.2" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=18556] (9,912 samples, 6.04%)</title><rect x="152.9" y="547.0" width="71.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="155.9" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,912 samples, 6.04%)</title><rect x="152.9" y="531.0" width="71.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.9" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (9,912 samples, 6.04%)</title><rect x="152.9" y="515.0" width="71.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.9" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,912 samples, 6.04%)</title><rect x="152.9" y="499.0" width="71.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.9" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,912 samples, 6.04%)</title><rect x="152.9" y="483.0" width="71.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.9" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,509 samples, 2.14%)</title><rect x="152.9" y="467.0" width="25.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.9" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,509 samples, 2.14%)</title><rect x="152.9" y="451.0" width="25.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.9" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,548 samples, 1.55%)</title><rect x="152.9" y="435.0" width="18.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (841 samples, 0.51%)</title><rect x="152.9" y="419.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (841 samples, 0.51%)</title><rect x="152.9" y="403.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (841 samples, 0.51%)</title><rect x="152.9" y="387.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (841 samples, 0.51%)</title><rect x="152.9" y="371.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (429 samples, 0.26%)</title><rect x="152.9" y="355.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="155.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (412 samples, 0.25%)</title><rect x="156.0" y="355.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.0" y="366.0"></text>
</g>
<g>
<title>byte[] (412 samples, 0.25%)</title><rect x="156.0" y="339.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="159.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (1,707 samples, 1.04%)</title><rect x="158.9" y="419.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (432 samples, 0.26%)</title><rect x="158.9" y="403.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="161.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (432 samples, 0.26%)</title><rect x="158.9" y="387.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (432 samples, 0.26%)</title><rect x="158.9" y="371.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (432 samples, 0.26%)</title><rect x="158.9" y="355.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.9" y="366.0"></text>
</g>
<g>
<title>byte[] (432 samples, 0.26%)</title><rect x="158.9" y="339.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="161.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (870 samples, 0.53%)</title><rect x="162.1" y="403.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="165.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (870 samples, 0.53%)</title><rect x="162.1" y="387.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (870 samples, 0.53%)</title><rect x="162.1" y="371.0" width="6.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="165.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (405 samples, 0.25%)</title><rect x="168.3" y="403.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (368 samples, 0.22%)</title><rect x="168.3" y="387.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (368 samples, 0.22%)</title><rect x="168.3" y="371.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.get$Lambda (368 samples, 0.22%)</title><rect x="168.3" y="355.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.3" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$76 (368 samples, 0.22%)</title><rect x="168.3" y="339.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="171.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (37 samples, 0.02%)</title><rect x="171.0" y="387.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (37 samples, 0.02%)</title><rect x="171.0" y="371.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (37 samples, 0.02%)</title><rect x="171.0" y="355.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (37 samples, 0.02%)</title><rect x="171.0" y="339.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (37 samples, 0.02%)</title><rect x="171.0" y="323.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (37 samples, 0.02%)</title><rect x="171.0" y="307.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="174.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (961 samples, 0.59%)</title><rect x="171.2" y="435.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (961 samples, 0.59%)</title><rect x="171.2" y="419.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (961 samples, 0.59%)</title><rect x="171.2" y="403.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (401 samples, 0.24%)</title><rect x="171.2" y="387.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="174.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (560 samples, 0.34%)</title><rect x="174.1" y="387.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.1" y="398.0"></text>
</g>
<g>
<title>byte[] (560 samples, 0.34%)</title><rect x="174.1" y="371.0" width="4.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="177.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,365 samples, 2.66%)</title><rect x="178.1" y="467.0" width="31.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.1" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (699 samples, 0.43%)</title><rect x="178.1" y="451.0" width="5.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="181.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,351 samples, 0.82%)</title><rect x="183.1" y="451.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (1,351 samples, 0.82%)</title><rect x="183.1" y="435.0" width="9.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="186.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,315 samples, 1.41%)</title><rect x="192.9" y="451.0" width="16.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,315 samples, 1.41%)</title><rect x="192.9" y="435.0" width="16.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.9" y="446.0"></text>
</g>
<g>
<title>char[] (1,209 samples, 0.74%)</title><rect x="192.9" y="419.0" width="8.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="195.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (433 samples, 0.26%)</title><rect x="201.5" y="419.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="204.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (673 samples, 0.41%)</title><rect x="204.7" y="419.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (673 samples, 0.41%)</title><rect x="204.7" y="403.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (673 samples, 0.41%)</title><rect x="204.7" y="387.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.7" y="398.0"></text>
</g>
<g>
<title>byte[] (673 samples, 0.41%)</title><rect x="204.7" y="371.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="207.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,038 samples, 1.24%)</title><rect x="209.5" y="467.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,038 samples, 1.24%)</title><rect x="209.5" y="451.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.5" y="462.0"></text>
</g>
<g>
<title>char[] (942 samples, 0.57%)</title><rect x="209.5" y="435.0" width="6.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="212.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (393 samples, 0.24%)</title><rect x="216.3" y="435.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="219.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (703 samples, 0.43%)</title><rect x="219.1" y="435.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (703 samples, 0.43%)</title><rect x="219.1" y="419.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (703 samples, 0.43%)</title><rect x="219.1" y="403.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.1" y="414.0"></text>
</g>
<g>
<title>byte[] (703 samples, 0.43%)</title><rect x="219.1" y="387.0" width="5.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="222.1" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=18557] (9,919 samples, 6.04%)</title><rect x="224.1" y="547.0" width="71.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="227.1" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,919 samples, 6.04%)</title><rect x="224.1" y="531.0" width="71.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.1" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (9,919 samples, 6.04%)</title><rect x="224.1" y="515.0" width="71.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.1" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,919 samples, 6.04%)</title><rect x="224.1" y="499.0" width="71.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.1" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,919 samples, 6.04%)</title><rect x="224.1" y="483.0" width="71.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.1" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,425 samples, 2.09%)</title><rect x="224.1" y="467.0" width="24.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.1" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,425 samples, 2.09%)</title><rect x="224.1" y="451.0" width="24.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.1" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,487 samples, 1.51%)</title><rect x="224.1" y="435.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (836 samples, 0.51%)</title><rect x="224.1" y="419.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (836 samples, 0.51%)</title><rect x="224.1" y="403.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (836 samples, 0.51%)</title><rect x="224.1" y="387.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (836 samples, 0.51%)</title><rect x="224.1" y="371.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (434 samples, 0.26%)</title><rect x="224.1" y="355.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="227.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (402 samples, 0.24%)</title><rect x="227.3" y="355.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.3" y="366.0"></text>
</g>
<g>
<title>byte[] (402 samples, 0.24%)</title><rect x="227.3" y="339.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="230.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (1,651 samples, 1.01%)</title><rect x="230.1" y="419.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (384 samples, 0.23%)</title><rect x="230.1" y="403.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (384 samples, 0.23%)</title><rect x="230.1" y="387.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (384 samples, 0.23%)</title><rect x="230.1" y="371.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (384 samples, 0.23%)</title><rect x="230.1" y="355.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.1" y="366.0"></text>
</g>
<g>
<title>byte[] (384 samples, 0.23%)</title><rect x="230.1" y="339.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="233.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (896 samples, 0.55%)</title><rect x="232.9" y="403.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (896 samples, 0.55%)</title><rect x="232.9" y="387.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (896 samples, 0.55%)</title><rect x="232.9" y="371.0" width="6.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="235.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (371 samples, 0.23%)</title><rect x="239.3" y="403.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (345 samples, 0.21%)</title><rect x="239.3" y="387.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (345 samples, 0.21%)</title><rect x="239.3" y="371.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.get$Lambda (345 samples, 0.21%)</title><rect x="239.3" y="355.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.3" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$76 (345 samples, 0.21%)</title><rect x="239.3" y="339.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="242.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (938 samples, 0.57%)</title><rect x="242.0" y="435.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (938 samples, 0.57%)</title><rect x="242.0" y="419.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (938 samples, 0.57%)</title><rect x="242.0" y="403.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String (380 samples, 0.23%)</title><rect x="242.0" y="387.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="245.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (558 samples, 0.34%)</title><rect x="244.7" y="387.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.7" y="398.0"></text>
</g>
<g>
<title>byte[] (558 samples, 0.34%)</title><rect x="244.7" y="371.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="247.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,433 samples, 2.70%)</title><rect x="248.7" y="467.0" width="31.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.7" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (719 samples, 0.44%)</title><rect x="248.7" y="451.0" width="5.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="251.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,340 samples, 0.82%)</title><rect x="253.9" y="451.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (1,340 samples, 0.82%)</title><rect x="253.9" y="435.0" width="9.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="256.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,374 samples, 1.45%)</title><rect x="263.5" y="451.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="266.5" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,374 samples, 1.45%)</title><rect x="263.5" y="435.0" width="17.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="266.5" y="446.0"></text>
</g>
<g>
<title>char[] (1,296 samples, 0.79%)</title><rect x="263.5" y="419.0" width="9.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="266.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (420 samples, 0.26%)</title><rect x="272.9" y="419.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="275.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (658 samples, 0.40%)</title><rect x="275.9" y="419.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (658 samples, 0.40%)</title><rect x="275.9" y="403.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (658 samples, 0.40%)</title><rect x="275.9" y="387.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.9" y="398.0"></text>
</g>
<g>
<title>byte[] (658 samples, 0.40%)</title><rect x="275.9" y="371.0" width="4.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="278.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,061 samples, 1.26%)</title><rect x="280.6" y="467.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.6" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,061 samples, 1.26%)</title><rect x="280.6" y="451.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.6" y="462.0"></text>
</g>
<g>
<title>char[] (947 samples, 0.58%)</title><rect x="280.6" y="435.0" width="6.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="283.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (386 samples, 0.24%)</title><rect x="287.4" y="435.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="290.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (728 samples, 0.44%)</title><rect x="290.2" y="435.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (728 samples, 0.44%)</title><rect x="290.2" y="419.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (728 samples, 0.44%)</title><rect x="290.2" y="403.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.2" y="414.0"></text>
</g>
<g>
<title>byte[] (728 samples, 0.44%)</title><rect x="290.2" y="387.0" width="5.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="293.2" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=18558] (9,975 samples, 6.07%)</title><rect x="295.4" y="547.0" width="71.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="298.4" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,975 samples, 6.07%)</title><rect x="295.4" y="531.0" width="71.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.4" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (9,975 samples, 6.07%)</title><rect x="295.4" y="515.0" width="71.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.4" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,975 samples, 6.07%)</title><rect x="295.4" y="499.0" width="71.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.4" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,975 samples, 6.07%)</title><rect x="295.4" y="483.0" width="71.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.4" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,484 samples, 2.12%)</title><rect x="295.4" y="467.0" width="25.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.4" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,484 samples, 2.12%)</title><rect x="295.4" y="451.0" width="25.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="298.4" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,527 samples, 1.54%)</title><rect x="295.4" y="435.0" width="18.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (871 samples, 0.53%)</title><rect x="295.4" y="419.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="298.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (871 samples, 0.53%)</title><rect x="295.4" y="403.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (871 samples, 0.53%)</title><rect x="295.4" y="387.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (871 samples, 0.53%)</title><rect x="295.4" y="371.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (448 samples, 0.27%)</title><rect x="295.4" y="355.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="298.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (423 samples, 0.26%)</title><rect x="298.6" y="355.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.6" y="366.0"></text>
</g>
<g>
<title>byte[] (423 samples, 0.26%)</title><rect x="298.6" y="339.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="301.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (1,656 samples, 1.01%)</title><rect x="301.7" y="419.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (391 samples, 0.24%)</title><rect x="301.7" y="403.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (391 samples, 0.24%)</title><rect x="301.7" y="387.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (391 samples, 0.24%)</title><rect x="301.7" y="371.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (391 samples, 0.24%)</title><rect x="301.7" y="355.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.7" y="366.0"></text>
</g>
<g>
<title>byte[] (391 samples, 0.24%)</title><rect x="301.7" y="339.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="304.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (848 samples, 0.52%)</title><rect x="304.5" y="403.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (848 samples, 0.52%)</title><rect x="304.5" y="387.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="307.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (848 samples, 0.52%)</title><rect x="304.5" y="371.0" width="6.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="307.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (417 samples, 0.25%)</title><rect x="310.6" y="403.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (396 samples, 0.24%)</title><rect x="310.6" y="387.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (396 samples, 0.24%)</title><rect x="310.6" y="371.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.get$Lambda (396 samples, 0.24%)</title><rect x="310.6" y="355.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.6" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$76 (396 samples, 0.24%)</title><rect x="310.6" y="339.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="313.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (957 samples, 0.58%)</title><rect x="313.6" y="435.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (957 samples, 0.58%)</title><rect x="313.6" y="419.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (957 samples, 0.58%)</title><rect x="313.6" y="403.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String (392 samples, 0.24%)</title><rect x="313.6" y="387.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="316.6" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (565 samples, 0.34%)</title><rect x="316.4" y="387.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.4" y="398.0"></text>
</g>
<g>
<title>byte[] (565 samples, 0.34%)</title><rect x="316.4" y="371.0" width="4.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="319.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,354 samples, 2.65%)</title><rect x="320.4" y="467.0" width="31.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.4" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (757 samples, 0.46%)</title><rect x="320.4" y="451.0" width="5.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="323.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,311 samples, 0.80%)</title><rect x="325.9" y="451.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (1,311 samples, 0.80%)</title><rect x="325.9" y="435.0" width="9.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="328.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,286 samples, 1.39%)</title><rect x="335.3" y="451.0" width="16.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,286 samples, 1.39%)</title><rect x="335.3" y="435.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.3" y="446.0"></text>
</g>
<g>
<title>char[] (1,190 samples, 0.72%)</title><rect x="335.3" y="419.0" width="8.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="338.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (407 samples, 0.25%)</title><rect x="343.9" y="419.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="346.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (689 samples, 0.42%)</title><rect x="346.8" y="419.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="349.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (689 samples, 0.42%)</title><rect x="346.8" y="403.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (689 samples, 0.42%)</title><rect x="346.8" y="387.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.8" y="398.0"></text>
</g>
<g>
<title>byte[] (689 samples, 0.42%)</title><rect x="346.8" y="371.0" width="4.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="349.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,137 samples, 1.30%)</title><rect x="351.7" y="467.0" width="15.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="354.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,137 samples, 1.30%)</title><rect x="351.7" y="451.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.7" y="462.0"></text>
</g>
<g>
<title>char[] (938 samples, 0.57%)</title><rect x="351.7" y="435.0" width="6.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="354.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (426 samples, 0.26%)</title><rect x="358.5" y="435.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="361.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (773 samples, 0.47%)</title><rect x="361.5" y="435.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (773 samples, 0.47%)</title><rect x="361.5" y="419.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (773 samples, 0.47%)</title><rect x="361.5" y="403.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.5" y="414.0"></text>
</g>
<g>
<title>byte[] (773 samples, 0.47%)</title><rect x="361.5" y="387.0" width="5.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="364.5" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=18559] (9,934 samples, 6.05%)</title><rect x="367.1" y="547.0" width="71.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="370.1" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,934 samples, 6.05%)</title><rect x="367.1" y="531.0" width="71.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.1" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (9,934 samples, 6.05%)</title><rect x="367.1" y="515.0" width="71.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.1" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,934 samples, 6.05%)</title><rect x="367.1" y="499.0" width="71.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.1" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,933 samples, 6.05%)</title><rect x="367.1" y="483.0" width="71.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.1" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,417 samples, 2.08%)</title><rect x="367.1" y="467.0" width="24.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.1" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,417 samples, 2.08%)</title><rect x="367.1" y="451.0" width="24.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.1" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,508 samples, 1.53%)</title><rect x="367.1" y="435.0" width="18.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (873 samples, 0.53%)</title><rect x="367.1" y="419.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (873 samples, 0.53%)</title><rect x="367.1" y="403.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (873 samples, 0.53%)</title><rect x="367.1" y="387.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (873 samples, 0.53%)</title><rect x="367.1" y="371.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (430 samples, 0.26%)</title><rect x="367.1" y="355.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="370.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (443 samples, 0.27%)</title><rect x="370.2" y="355.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.2" y="366.0"></text>
</g>
<g>
<title>byte[] (443 samples, 0.27%)</title><rect x="370.2" y="339.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="373.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (1,635 samples, 1.00%)</title><rect x="373.4" y="419.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (374 samples, 0.23%)</title><rect x="373.4" y="403.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (374 samples, 0.23%)</title><rect x="373.4" y="387.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (374 samples, 0.23%)</title><rect x="373.4" y="371.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (374 samples, 0.23%)</title><rect x="373.4" y="355.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.4" y="366.0"></text>
</g>
<g>
<title>byte[] (374 samples, 0.23%)</title><rect x="373.4" y="339.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="376.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (837 samples, 0.51%)</title><rect x="376.1" y="403.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (837 samples, 0.51%)</title><rect x="376.1" y="387.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (837 samples, 0.51%)</title><rect x="376.1" y="371.0" width="6.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="379.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (424 samples, 0.26%)</title><rect x="382.1" y="403.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (396 samples, 0.24%)</title><rect x="382.1" y="387.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (396 samples, 0.24%)</title><rect x="382.1" y="371.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.get$Lambda (396 samples, 0.24%)</title><rect x="382.1" y="355.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$76 (396 samples, 0.24%)</title><rect x="382.1" y="339.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="385.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (909 samples, 0.55%)</title><rect x="385.1" y="435.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (909 samples, 0.55%)</title><rect x="385.1" y="419.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (909 samples, 0.55%)</title><rect x="385.1" y="403.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (406 samples, 0.25%)</title><rect x="385.1" y="387.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="388.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (503 samples, 0.31%)</title><rect x="388.0" y="387.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.0" y="398.0"></text>
</g>
<g>
<title>byte[] (503 samples, 0.31%)</title><rect x="388.0" y="371.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="391.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,442 samples, 2.71%)</title><rect x="391.6" y="467.0" width="32.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.6" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (720 samples, 0.44%)</title><rect x="391.6" y="451.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="394.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,407 samples, 0.86%)</title><rect x="396.8" y="451.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (1,407 samples, 0.86%)</title><rect x="396.8" y="435.0" width="10.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="399.8" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,315 samples, 1.41%)</title><rect x="406.9" y="451.0" width="16.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,315 samples, 1.41%)</title><rect x="406.9" y="435.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.9" y="446.0"></text>
</g>
<g>
<title>char[] (1,247 samples, 0.76%)</title><rect x="406.9" y="419.0" width="9.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="409.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (424 samples, 0.26%)</title><rect x="415.9" y="419.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="418.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (644 samples, 0.39%)</title><rect x="418.9" y="419.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (644 samples, 0.39%)</title><rect x="418.9" y="403.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (644 samples, 0.39%)</title><rect x="418.9" y="387.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.9" y="398.0"></text>
</g>
<g>
<title>byte[] (644 samples, 0.39%)</title><rect x="418.9" y="371.0" width="4.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="421.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,074 samples, 1.26%)</title><rect x="423.6" y="467.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.6" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,074 samples, 1.26%)</title><rect x="423.6" y="451.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.6" y="462.0"></text>
</g>
<g>
<title>char[] (952 samples, 0.58%)</title><rect x="423.6" y="435.0" width="6.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="426.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (409 samples, 0.25%)</title><rect x="430.4" y="435.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="433.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (713 samples, 0.43%)</title><rect x="433.3" y="435.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (713 samples, 0.43%)</title><rect x="433.3" y="419.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (713 samples, 0.43%)</title><rect x="433.3" y="403.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.3" y="414.0"></text>
</g>
<g>
<title>byte[] (713 samples, 0.43%)</title><rect x="433.3" y="387.0" width="5.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="436.3" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=18560] (9,936 samples, 6.05%)</title><rect x="438.5" y="547.0" width="71.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="441.5" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,936 samples, 6.05%)</title><rect x="438.5" y="531.0" width="71.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.5" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (742 samples, 0.45%)</title><rect x="438.5" y="515.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.5" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (742 samples, 0.45%)</title><rect x="438.5" y="499.0" width="5.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="441.5" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9,194 samples, 5.60%)</title><rect x="443.8" y="515.0" width="66.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="446.8" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,194 samples, 5.60%)</title><rect x="443.8" y="499.0" width="66.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="446.8" y="510.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,194 samples, 5.60%)</title><rect x="443.8" y="483.0" width="66.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="446.8" y="494.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,242 samples, 1.97%)</title><rect x="443.8" y="467.0" width="23.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.8" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,242 samples, 1.97%)</title><rect x="443.8" y="451.0" width="23.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.8" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,385 samples, 1.45%)</title><rect x="443.8" y="435.0" width="17.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (778 samples, 0.47%)</title><rect x="443.8" y="419.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (778 samples, 0.47%)</title><rect x="443.8" y="403.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (778 samples, 0.47%)</title><rect x="443.8" y="387.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (778 samples, 0.47%)</title><rect x="443.8" y="371.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String (413 samples, 0.25%)</title><rect x="443.8" y="355.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="446.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (365 samples, 0.22%)</title><rect x="446.8" y="355.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.8" y="366.0"></text>
</g>
<g>
<title>byte[] (365 samples, 0.22%)</title><rect x="446.8" y="339.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="449.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (1,607 samples, 0.98%)</title><rect x="449.4" y="419.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (369 samples, 0.22%)</title><rect x="449.4" y="403.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (369 samples, 0.22%)</title><rect x="449.4" y="387.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (369 samples, 0.22%)</title><rect x="449.4" y="371.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (369 samples, 0.22%)</title><rect x="449.4" y="355.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.4" y="366.0"></text>
</g>
<g>
<title>byte[] (369 samples, 0.22%)</title><rect x="449.4" y="339.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="452.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (770 samples, 0.47%)</title><rect x="452.0" y="403.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (770 samples, 0.47%)</title><rect x="452.0" y="387.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (770 samples, 0.47%)</title><rect x="452.0" y="371.0" width="5.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="455.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (468 samples, 0.29%)</title><rect x="457.6" y="403.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (445 samples, 0.27%)</title><rect x="457.6" y="387.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (445 samples, 0.27%)</title><rect x="457.6" y="371.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.get$Lambda (445 samples, 0.27%)</title><rect x="457.6" y="355.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.6" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$76 (445 samples, 0.27%)</title><rect x="457.6" y="339.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="460.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (857 samples, 0.52%)</title><rect x="460.9" y="435.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (857 samples, 0.52%)</title><rect x="460.9" y="419.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (857 samples, 0.52%)</title><rect x="460.9" y="403.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.9" y="414.0"></text>
</g>
<g>
<title>java.lang.String (408 samples, 0.25%)</title><rect x="460.9" y="387.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="463.9" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (449 samples, 0.27%)</title><rect x="463.9" y="387.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.9" y="398.0"></text>
</g>
<g>
<title>byte[] (449 samples, 0.27%)</title><rect x="463.9" y="371.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="466.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,984 samples, 2.43%)</title><rect x="467.1" y="467.0" width="28.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.1" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (654 samples, 0.40%)</title><rect x="467.1" y="451.0" width="4.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="470.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,312 samples, 0.80%)</title><rect x="471.8" y="451.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (1,312 samples, 0.80%)</title><rect x="471.8" y="435.0" width="9.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="474.8" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,018 samples, 1.23%)</title><rect x="481.2" y="451.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.2" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,018 samples, 1.23%)</title><rect x="481.2" y="435.0" width="14.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.2" y="446.0"></text>
</g>
<g>
<title>char[] (993 samples, 0.60%)</title><rect x="481.2" y="419.0" width="7.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="484.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (418 samples, 0.25%)</title><rect x="488.4" y="419.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="491.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (607 samples, 0.37%)</title><rect x="491.4" y="419.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (607 samples, 0.37%)</title><rect x="491.4" y="403.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (607 samples, 0.37%)</title><rect x="491.4" y="387.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.4" y="398.0"></text>
</g>
<g>
<title>byte[] (607 samples, 0.37%)</title><rect x="491.4" y="371.0" width="4.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="494.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,968 samples, 1.20%)</title><rect x="495.7" y="467.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="498.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,968 samples, 1.20%)</title><rect x="495.7" y="451.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.7" y="462.0"></text>
</g>
<g>
<title>char[] (950 samples, 0.58%)</title><rect x="495.7" y="435.0" width="6.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="498.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (384 samples, 0.23%)</title><rect x="502.6" y="435.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="505.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (634 samples, 0.39%)</title><rect x="505.3" y="435.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (634 samples, 0.39%)</title><rect x="505.3" y="419.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (634 samples, 0.39%)</title><rect x="505.3" y="403.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="508.3" y="414.0"></text>
</g>
<g>
<title>byte[] (634 samples, 0.39%)</title><rect x="505.3" y="387.0" width="4.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="508.3" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=18561] (9,925 samples, 6.04%)</title><rect x="509.9" y="547.0" width="71.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="512.9" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,925 samples, 6.04%)</title><rect x="509.9" y="531.0" width="71.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.9" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (9,925 samples, 6.04%)</title><rect x="509.9" y="515.0" width="71.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.9" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,925 samples, 6.04%)</title><rect x="509.9" y="499.0" width="71.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.9" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,925 samples, 6.04%)</title><rect x="509.9" y="483.0" width="71.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.9" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,448 samples, 2.10%)</title><rect x="509.9" y="467.0" width="24.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.9" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,448 samples, 2.10%)</title><rect x="509.9" y="451.0" width="24.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.9" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,500 samples, 1.52%)</title><rect x="509.9" y="435.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (852 samples, 0.52%)</title><rect x="509.9" y="419.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (852 samples, 0.52%)</title><rect x="509.9" y="403.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (852 samples, 0.52%)</title><rect x="509.9" y="387.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (852 samples, 0.52%)</title><rect x="509.9" y="371.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (419 samples, 0.26%)</title><rect x="509.9" y="355.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="512.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (433 samples, 0.26%)</title><rect x="512.9" y="355.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.9" y="366.0"></text>
</g>
<g>
<title>byte[] (433 samples, 0.26%)</title><rect x="512.9" y="339.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="515.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (1,648 samples, 1.00%)</title><rect x="516.0" y="419.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (379 samples, 0.23%)</title><rect x="516.0" y="403.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (379 samples, 0.23%)</title><rect x="516.0" y="387.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (379 samples, 0.23%)</title><rect x="516.0" y="371.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (379 samples, 0.23%)</title><rect x="516.0" y="355.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.0" y="366.0"></text>
</g>
<g>
<title>byte[] (379 samples, 0.23%)</title><rect x="516.0" y="339.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="519.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (858 samples, 0.52%)</title><rect x="518.7" y="403.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (858 samples, 0.52%)</title><rect x="518.7" y="387.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (858 samples, 0.52%)</title><rect x="518.7" y="371.0" width="6.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="521.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (411 samples, 0.25%)</title><rect x="524.9" y="403.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (390 samples, 0.24%)</title><rect x="524.9" y="387.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (390 samples, 0.24%)</title><rect x="524.9" y="371.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.get$Lambda (390 samples, 0.24%)</title><rect x="524.9" y="355.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.9" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$76 (390 samples, 0.24%)</title><rect x="524.9" y="339.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="527.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (948 samples, 0.58%)</title><rect x="527.8" y="435.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (948 samples, 0.58%)</title><rect x="527.8" y="419.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (948 samples, 0.58%)</title><rect x="527.8" y="403.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="530.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (434 samples, 0.26%)</title><rect x="527.8" y="387.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="530.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (514 samples, 0.31%)</title><rect x="531.0" y="387.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.0" y="398.0"></text>
</g>
<g>
<title>byte[] (514 samples, 0.31%)</title><rect x="531.0" y="371.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="534.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,373 samples, 2.66%)</title><rect x="534.7" y="467.0" width="31.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.7" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (733 samples, 0.45%)</title><rect x="534.7" y="451.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="537.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,349 samples, 0.82%)</title><rect x="539.9" y="451.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (1,349 samples, 0.82%)</title><rect x="539.9" y="435.0" width="9.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="542.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,291 samples, 1.40%)</title><rect x="549.6" y="451.0" width="16.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,291 samples, 1.40%)</title><rect x="549.6" y="435.0" width="16.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.6" y="446.0"></text>
</g>
<g>
<title>char[] (1,193 samples, 0.73%)</title><rect x="549.6" y="419.0" width="8.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="552.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (431 samples, 0.26%)</title><rect x="558.2" y="419.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="561.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (667 samples, 0.41%)</title><rect x="561.3" y="419.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (667 samples, 0.41%)</title><rect x="561.3" y="403.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (667 samples, 0.41%)</title><rect x="561.3" y="387.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.3" y="398.0"></text>
</g>
<g>
<title>byte[] (667 samples, 0.41%)</title><rect x="561.3" y="371.0" width="4.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="564.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,104 samples, 1.28%)</title><rect x="566.1" y="467.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.1" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,104 samples, 1.28%)</title><rect x="566.1" y="451.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.1" y="462.0"></text>
</g>
<g>
<title>char[] (923 samples, 0.56%)</title><rect x="566.1" y="435.0" width="6.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="569.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (426 samples, 0.26%)</title><rect x="572.7" y="435.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="575.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (755 samples, 0.46%)</title><rect x="575.8" y="435.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (755 samples, 0.46%)</title><rect x="575.8" y="419.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (755 samples, 0.46%)</title><rect x="575.8" y="403.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.8" y="414.0"></text>
</g>
<g>
<title>byte[] (755 samples, 0.46%)</title><rect x="575.8" y="387.0" width="5.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="578.8" y="398.0"></text>
</g>
<g>
<title>[Worker_0 tid=27326] (10,566 samples, 6.43%)</title><rect x="581.2" y="547.0" width="75.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="584.2" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (10,566 samples, 6.43%)</title><rect x="581.2" y="531.0" width="75.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.2" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,566 samples, 6.43%)</title><rect x="581.2" y="515.0" width="75.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.2" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,566 samples, 6.43%)</title><rect x="581.2" y="499.0" width="75.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.2" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (141 samples, 0.09%)</title><rect x="581.2" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (141 samples, 0.09%)</title><rect x="581.2" y="467.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (132 samples, 0.08%)</title><rect x="581.2" y="451.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (132 samples, 0.08%)</title><rect x="581.2" y="435.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (132 samples, 0.08%)</title><rect x="581.2" y="419.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="584.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.run (10,425 samples, 6.35%)</title><rect x="582.2" y="483.0" width="74.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.2" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$2 (10,425 samples, 6.35%)</title><rect x="582.2" y="467.0" width="74.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.2" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (10,425 samples, 6.35%)</title><rect x="582.2" y="451.0" width="74.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.2" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (159 samples, 0.10%)</title><rect x="582.2" y="435.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="585.2" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (123 samples, 0.07%)</title><rect x="583.4" y="435.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="586.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (645 samples, 0.39%)</title><rect x="584.2" y="435.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (645 samples, 0.39%)</title><rect x="584.2" y="419.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (485 samples, 0.30%)</title><rect x="584.2" y="403.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="587.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (485 samples, 0.30%)</title><rect x="584.2" y="387.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.2" y="398.0"></text>
</g>
<g>
<title>byte[] (485 samples, 0.30%)</title><rect x="584.2" y="371.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="587.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (160 samples, 0.10%)</title><rect x="587.7" y="403.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.7" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (160 samples, 0.10%)</title><rect x="587.7" y="387.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="590.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (456 samples, 0.28%)</title><rect x="588.9" y="435.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.9" y="446.0"></text>
</g>
<g>
<title>byte[] (185 samples, 0.11%)</title><rect x="588.9" y="419.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="591.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (151 samples, 0.09%)</title><rect x="590.2" y="419.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="593.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (120 samples, 0.07%)</title><rect x="591.3" y="419.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="594.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (9,042 samples, 5.51%)</title><rect x="592.1" y="435.0" width="65.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.1" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,195 samples, 0.73%)</title><rect x="592.1" y="419.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,195 samples, 0.73%)</title><rect x="592.1" y="403.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,195 samples, 0.73%)</title><rect x="592.1" y="387.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,195 samples, 0.73%)</title><rect x="592.1" y="371.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,195 samples, 0.73%)</title><rect x="592.1" y="355.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (717 samples, 0.44%)</title><rect x="592.1" y="339.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (717 samples, 0.44%)</title><rect x="592.1" y="323.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (717 samples, 0.44%)</title><rect x="592.1" y="307.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (717 samples, 0.44%)</title><rect x="592.1" y="291.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (717 samples, 0.44%)</title><rect x="592.1" y="275.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (717 samples, 0.44%)</title><rect x="592.1" y="259.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (227 samples, 0.14%)</title><rect x="592.1" y="243.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (227 samples, 0.14%)</title><rect x="592.1" y="227.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.1" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (227 samples, 0.14%)</title><rect x="592.1" y="211.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (227 samples, 0.14%)</title><rect x="592.1" y="195.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (227 samples, 0.14%)</title><rect x="592.1" y="179.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (227 samples, 0.14%)</title><rect x="592.1" y="163.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (227 samples, 0.14%)</title><rect x="592.1" y="147.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (227 samples, 0.14%)</title><rect x="592.1" y="131.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (227 samples, 0.14%)</title><rect x="592.1" y="115.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.1" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (227 samples, 0.14%)</title><rect x="592.1" y="99.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (227 samples, 0.14%)</title><rect x="592.1" y="83.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (227 samples, 0.14%)</title><rect x="592.1" y="67.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.1" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (126 samples, 0.08%)</title><rect x="592.1" y="51.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="595.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (101 samples, 0.06%)</title><rect x="593.1" y="51.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="596.1" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (101 samples, 0.06%)</title><rect x="593.1" y="35.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="596.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (490 samples, 0.30%)</title><rect x="593.8" y="243.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (490 samples, 0.30%)</title><rect x="593.8" y="227.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (490 samples, 0.30%)</title><rect x="593.8" y="211.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (490 samples, 0.30%)</title><rect x="593.8" y="195.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="596.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$149/388218747.apply (478 samples, 0.29%)</title><rect x="597.3" y="339.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (478 samples, 0.29%)</title><rect x="597.3" y="323.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.3" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (478 samples, 0.29%)</title><rect x="597.3" y="307.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (478 samples, 0.29%)</title><rect x="597.3" y="291.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="600.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (210 samples, 0.13%)</title><rect x="600.7" y="419.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (210 samples, 0.13%)</title><rect x="600.7" y="403.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$157/1694929854.apply (210 samples, 0.13%)</title><rect x="600.7" y="387.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (210 samples, 0.13%)</title><rect x="600.7" y="371.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (210 samples, 0.13%)</title><rect x="600.7" y="355.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (210 samples, 0.13%)</title><rect x="600.7" y="339.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (210 samples, 0.13%)</title><rect x="600.7" y="323.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="603.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (231 samples, 0.14%)</title><rect x="602.2" y="419.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (231 samples, 0.14%)</title><rect x="602.2" y="403.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (231 samples, 0.14%)</title><rect x="602.2" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (231 samples, 0.14%)</title><rect x="602.2" y="371.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="605.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (215 samples, 0.13%)</title><rect x="603.9" y="419.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (215 samples, 0.13%)</title><rect x="603.9" y="403.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (215 samples, 0.13%)</title><rect x="603.9" y="387.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (215 samples, 0.13%)</title><rect x="603.9" y="371.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="606.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (7,191 samples, 4.38%)</title><rect x="605.4" y="419.0" width="51.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.4" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (162 samples, 0.10%)</title><rect x="605.4" y="403.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.4" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (162 samples, 0.10%)</title><rect x="605.4" y="387.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="608.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,283 samples, 0.78%)</title><rect x="606.6" y="403.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.6" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (85 samples, 0.05%)</title><rect x="606.6" y="387.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="609.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,198 samples, 0.73%)</title><rect x="607.2" y="387.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.2" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (121 samples, 0.07%)</title><rect x="607.2" y="371.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="610.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (680 samples, 0.41%)</title><rect x="608.1" y="371.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (680 samples, 0.41%)</title><rect x="608.1" y="355.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (680 samples, 0.41%)</title><rect x="608.1" y="339.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (680 samples, 0.41%)</title><rect x="608.1" y="323.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (234 samples, 0.14%)</title><rect x="608.1" y="307.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (234 samples, 0.14%)</title><rect x="608.1" y="291.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.1" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (234 samples, 0.14%)</title><rect x="608.1" y="275.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (234 samples, 0.14%)</title><rect x="608.1" y="259.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (234 samples, 0.14%)</title><rect x="608.1" y="243.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (234 samples, 0.14%)</title><rect x="608.1" y="227.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (234 samples, 0.14%)</title><rect x="608.1" y="211.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (234 samples, 0.14%)</title><rect x="608.1" y="195.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (234 samples, 0.14%)</title><rect x="608.1" y="179.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (234 samples, 0.14%)</title><rect x="608.1" y="163.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (234 samples, 0.14%)</title><rect x="608.1" y="147.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (234 samples, 0.14%)</title><rect x="608.1" y="131.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.1" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (115 samples, 0.07%)</title><rect x="608.1" y="115.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="611.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (119 samples, 0.07%)</title><rect x="608.9" y="115.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.9" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (119 samples, 0.07%)</title><rect x="608.9" y="99.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="611.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (446 samples, 0.27%)</title><rect x="609.8" y="307.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (446 samples, 0.27%)</title><rect x="609.8" y="291.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (446 samples, 0.27%)</title><rect x="609.8" y="275.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.8" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (446 samples, 0.27%)</title><rect x="609.8" y="259.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="612.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (141 samples, 0.09%)</title><rect x="613.0" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (141 samples, 0.09%)</title><rect x="613.0" y="355.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="616.0" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (144 samples, 0.09%)</title><rect x="614.0" y="371.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="617.0" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (112 samples, 0.07%)</title><rect x="615.0" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (112 samples, 0.07%)</title><rect x="615.0" y="355.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="618.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (69 samples, 0.04%)</title><rect x="615.8" y="403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.04%)</title><rect x="615.8" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.04%)</title><rect x="615.8" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (69 samples, 0.04%)</title><rect x="615.8" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.8" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (69 samples, 0.04%)</title><rect x="615.8" y="339.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="618.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (173 samples, 0.11%)</title><rect x="616.3" y="403.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.3" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (57 samples, 0.03%)</title><rect x="616.3" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.03%)</title><rect x="616.3" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.03%)</title><rect x="616.3" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (57 samples, 0.03%)</title><rect x="616.3" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.3" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (57 samples, 0.03%)</title><rect x="616.3" y="323.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="619.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (116 samples, 0.07%)</title><rect x="616.7" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (116 samples, 0.07%)</title><rect x="616.7" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (116 samples, 0.07%)</title><rect x="616.7" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$142/1659247134.get$Lambda (116 samples, 0.07%)</title><rect x="616.7" y="339.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.7" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$142 (116 samples, 0.07%)</title><rect x="616.7" y="323.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="619.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (181 samples, 0.11%)</title><rect x="617.6" y="403.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (181 samples, 0.11%)</title><rect x="617.6" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (181 samples, 0.11%)</title><rect x="617.6" y="371.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.6" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (172 samples, 0.10%)</title><rect x="617.6" y="355.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.6" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (172 samples, 0.10%)</title><rect x="617.6" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (140 samples, 0.09%)</title><rect x="617.8" y="323.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (140 samples, 0.09%)</title><rect x="617.8" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (140 samples, 0.09%)</title><rect x="617.8" y="291.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="620.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (851 samples, 0.52%)</title><rect x="618.9" y="403.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.9" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (120 samples, 0.07%)</title><rect x="618.9" y="387.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="621.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (731 samples, 0.45%)</title><rect x="619.7" y="387.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (731 samples, 0.45%)</title><rect x="619.7" y="371.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (731 samples, 0.45%)</title><rect x="619.7" y="355.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (731 samples, 0.45%)</title><rect x="619.7" y="339.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (731 samples, 0.45%)</title><rect x="619.7" y="323.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (731 samples, 0.45%)</title><rect x="619.7" y="307.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (731 samples, 0.45%)</title><rect x="619.7" y="291.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (232 samples, 0.14%)</title><rect x="619.7" y="275.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (232 samples, 0.14%)</title><rect x="619.7" y="259.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.7" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (232 samples, 0.14%)</title><rect x="619.7" y="243.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (232 samples, 0.14%)</title><rect x="619.7" y="227.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (232 samples, 0.14%)</title><rect x="619.7" y="211.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (232 samples, 0.14%)</title><rect x="619.7" y="195.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (232 samples, 0.14%)</title><rect x="619.7" y="179.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="622.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (232 samples, 0.14%)</title><rect x="619.7" y="163.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (232 samples, 0.14%)</title><rect x="619.7" y="147.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (232 samples, 0.14%)</title><rect x="619.7" y="131.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (232 samples, 0.14%)</title><rect x="619.7" y="115.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (232 samples, 0.14%)</title><rect x="619.7" y="99.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.7" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (114 samples, 0.07%)</title><rect x="619.7" y="83.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="622.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (118 samples, 0.07%)</title><rect x="620.6" y="83.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (118 samples, 0.07%)</title><rect x="620.6" y="67.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="623.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (499 samples, 0.30%)</title><rect x="621.4" y="275.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (499 samples, 0.30%)</title><rect x="621.4" y="259.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (499 samples, 0.30%)</title><rect x="621.4" y="243.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.4" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (499 samples, 0.30%)</title><rect x="621.4" y="227.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="624.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (4,472 samples, 2.72%)</title><rect x="625.0" y="403.0" width="32.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.0" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (142 samples, 0.09%)</title><rect x="625.0" y="387.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="628.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (146 samples, 0.09%)</title><rect x="626.0" y="387.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (146 samples, 0.09%)</title><rect x="626.0" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (146 samples, 0.09%)</title><rect x="626.0" y="355.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="629.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (119 samples, 0.07%)</title><rect x="627.1" y="387.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (119 samples, 0.07%)</title><rect x="627.1" y="371.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="630.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (4,065 samples, 2.48%)</title><rect x="627.9" y="387.0" width="29.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.9" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (167 samples, 0.10%)</title><rect x="627.9" y="371.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (167 samples, 0.10%)</title><rect x="627.9" y="355.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="630.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,656 samples, 1.01%)</title><rect x="629.1" y="371.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (79 samples, 0.05%)</title><rect x="629.1" y="355.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="632.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,577 samples, 0.96%)</title><rect x="629.7" y="355.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.7" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (110 samples, 0.07%)</title><rect x="629.7" y="339.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="632.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (125 samples, 0.08%)</title><rect x="630.5" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.5" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (125 samples, 0.08%)</title><rect x="630.5" y="323.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="633.5" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (172 samples, 0.10%)</title><rect x="631.4" y="339.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="634.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (97 samples, 0.06%)</title><rect x="632.6" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (97 samples, 0.06%)</title><rect x="632.6" y="323.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="635.6" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,073 samples, 0.65%)</title><rect x="633.3" y="339.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,073 samples, 0.65%)</title><rect x="633.3" y="323.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,073 samples, 0.65%)</title><rect x="633.3" y="307.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (227 samples, 0.14%)</title><rect x="633.3" y="291.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (227 samples, 0.14%)</title><rect x="633.3" y="275.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (227 samples, 0.14%)</title><rect x="633.3" y="259.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (227 samples, 0.14%)</title><rect x="633.3" y="243.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (227 samples, 0.14%)</title><rect x="633.3" y="227.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (227 samples, 0.14%)</title><rect x="633.3" y="211.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (227 samples, 0.14%)</title><rect x="633.3" y="195.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (117 samples, 0.07%)</title><rect x="633.3" y="179.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="636.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (110 samples, 0.07%)</title><rect x="634.1" y="179.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (110 samples, 0.07%)</title><rect x="634.1" y="163.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="637.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (846 samples, 0.52%)</title><rect x="634.9" y="291.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (182 samples, 0.11%)</title><rect x="634.9" y="275.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="637.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (158 samples, 0.10%)</title><rect x="636.2" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (158 samples, 0.10%)</title><rect x="636.2" y="259.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$95/217324818.get$Lambda (79 samples, 0.05%)</title><rect x="636.2" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$95 (79 samples, 0.05%)</title><rect x="636.2" y="227.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="639.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.get$Lambda (79 samples, 0.05%)</title><rect x="636.8" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$97 (79 samples, 0.05%)</title><rect x="636.8" y="227.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="639.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (137 samples, 0.08%)</title><rect x="637.4" y="275.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (137 samples, 0.08%)</title><rect x="637.4" y="259.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (137 samples, 0.08%)</title><rect x="637.4" y="243.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="640.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (369 samples, 0.22%)</title><rect x="638.4" y="275.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (369 samples, 0.22%)</title><rect x="638.4" y="259.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="641.4" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (114 samples, 0.07%)</title><rect x="641.0" y="371.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="644.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (104 samples, 0.06%)</title><rect x="641.8" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (104 samples, 0.06%)</title><rect x="641.8" y="355.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="644.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (148 samples, 0.09%)</title><rect x="642.6" y="371.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (148 samples, 0.09%)</title><rect x="642.6" y="355.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="645.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (332 samples, 0.20%)</title><rect x="643.8" y="371.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (107 samples, 0.07%)</title><rect x="643.8" y="355.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="646.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (225 samples, 0.14%)</title><rect x="644.6" y="355.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (225 samples, 0.14%)</title><rect x="644.6" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (225 samples, 0.14%)</title><rect x="644.6" y="323.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.6" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (225 samples, 0.14%)</title><rect x="644.6" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (225 samples, 0.14%)</title><rect x="644.6" y="291.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (225 samples, 0.14%)</title><rect x="644.6" y="275.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (225 samples, 0.14%)</title><rect x="644.6" y="259.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (225 samples, 0.14%)</title><rect x="644.6" y="243.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (225 samples, 0.14%)</title><rect x="644.6" y="227.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (225 samples, 0.14%)</title><rect x="644.6" y="211.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (225 samples, 0.14%)</title><rect x="644.6" y="195.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (225 samples, 0.14%)</title><rect x="644.6" y="179.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (225 samples, 0.14%)</title><rect x="644.6" y="163.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.6" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (107 samples, 0.07%)</title><rect x="644.6" y="147.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="647.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (118 samples, 0.07%)</title><rect x="645.4" y="147.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (118 samples, 0.07%)</title><rect x="645.4" y="131.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="648.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (1,519 samples, 0.93%)</title><rect x="646.2" y="371.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (440 samples, 0.27%)</title><rect x="646.2" y="355.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (173 samples, 0.11%)</title><rect x="646.2" y="339.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (173 samples, 0.11%)</title><rect x="646.2" y="323.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="649.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (267 samples, 0.16%)</title><rect x="647.4" y="339.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.4" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (267 samples, 0.16%)</title><rect x="647.4" y="323.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="650.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (83 samples, 0.05%)</title><rect x="649.4" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (83 samples, 0.05%)</title><rect x="649.4" y="339.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="652.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (252 samples, 0.15%)</title><rect x="650.0" y="355.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (252 samples, 0.15%)</title><rect x="650.0" y="339.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (252 samples, 0.15%)</title><rect x="650.0" y="323.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (252 samples, 0.15%)</title><rect x="650.0" y="307.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="653.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (413 samples, 0.25%)</title><rect x="651.8" y="355.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.8" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (109 samples, 0.07%)</title><rect x="651.8" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.8" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (109 samples, 0.07%)</title><rect x="651.8" y="323.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="654.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (304 samples, 0.19%)</title><rect x="652.6" y="339.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.05%)</title><rect x="652.6" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.05%)</title><rect x="652.6" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$88/431735617.get$Lambda (83 samples, 0.05%)</title><rect x="652.6" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$88 (83 samples, 0.05%)</title><rect x="652.6" y="275.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="655.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (221 samples, 0.13%)</title><rect x="653.2" y="323.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (221 samples, 0.13%)</title><rect x="653.2" y="307.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="656.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (331 samples, 0.20%)</title><rect x="654.7" y="355.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (331 samples, 0.20%)</title><rect x="654.7" y="339.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="657.7" y="350.0"></text>
</g>
<g>
<title>[Worker_1 tid=27332] (10,576 samples, 6.44%)</title><rect x="657.1" y="547.0" width="76.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="660.1" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (10,576 samples, 6.44%)</title><rect x="657.1" y="531.0" width="76.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.1" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,576 samples, 6.44%)</title><rect x="657.1" y="515.0" width="76.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.1" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,576 samples, 6.44%)</title><rect x="657.1" y="499.0" width="76.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.1" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (121 samples, 0.07%)</title><rect x="657.1" y="483.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (121 samples, 0.07%)</title><rect x="657.1" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (112 samples, 0.07%)</title><rect x="657.1" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (112 samples, 0.07%)</title><rect x="657.1" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (112 samples, 0.07%)</title><rect x="657.1" y="419.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="660.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.run (10,455 samples, 6.37%)</title><rect x="658.0" y="483.0" width="75.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.0" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$2 (10,455 samples, 6.37%)</title><rect x="658.0" y="467.0" width="75.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.0" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (10,455 samples, 6.37%)</title><rect x="658.0" y="451.0" width="75.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.0" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (162 samples, 0.10%)</title><rect x="658.0" y="435.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="661.0" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (129 samples, 0.08%)</title><rect x="659.2" y="435.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="662.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (691 samples, 0.42%)</title><rect x="660.1" y="435.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (691 samples, 0.42%)</title><rect x="660.1" y="419.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (494 samples, 0.30%)</title><rect x="660.1" y="403.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (494 samples, 0.30%)</title><rect x="660.1" y="387.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.1" y="398.0"></text>
</g>
<g>
<title>byte[] (494 samples, 0.30%)</title><rect x="660.1" y="371.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="663.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (197 samples, 0.12%)</title><rect x="663.6" y="403.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.6" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (197 samples, 0.12%)</title><rect x="663.6" y="387.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="666.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (474 samples, 0.29%)</title><rect x="665.0" y="435.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.0" y="446.0"></text>
</g>
<g>
<title>byte[] (204 samples, 0.12%)</title><rect x="665.0" y="419.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="668.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (147 samples, 0.09%)</title><rect x="666.5" y="419.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="669.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (123 samples, 0.07%)</title><rect x="667.6" y="419.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="670.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (8,999 samples, 5.48%)</title><rect x="668.5" y="435.0" width="64.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.5" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,171 samples, 0.71%)</title><rect x="668.5" y="419.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,171 samples, 0.71%)</title><rect x="668.5" y="403.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,171 samples, 0.71%)</title><rect x="668.5" y="387.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,171 samples, 0.71%)</title><rect x="668.5" y="371.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,171 samples, 0.71%)</title><rect x="668.5" y="355.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (742 samples, 0.45%)</title><rect x="668.5" y="339.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (742 samples, 0.45%)</title><rect x="668.5" y="323.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (742 samples, 0.45%)</title><rect x="668.5" y="307.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (742 samples, 0.45%)</title><rect x="668.5" y="291.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (742 samples, 0.45%)</title><rect x="668.5" y="275.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (742 samples, 0.45%)</title><rect x="668.5" y="259.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (253 samples, 0.15%)</title><rect x="668.5" y="243.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (253 samples, 0.15%)</title><rect x="668.5" y="227.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (253 samples, 0.15%)</title><rect x="668.5" y="211.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (253 samples, 0.15%)</title><rect x="668.5" y="195.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (253 samples, 0.15%)</title><rect x="668.5" y="179.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (253 samples, 0.15%)</title><rect x="668.5" y="163.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (253 samples, 0.15%)</title><rect x="668.5" y="147.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (253 samples, 0.15%)</title><rect x="668.5" y="131.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (253 samples, 0.15%)</title><rect x="668.5" y="115.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (253 samples, 0.15%)</title><rect x="668.5" y="99.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (253 samples, 0.15%)</title><rect x="668.5" y="83.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (253 samples, 0.15%)</title><rect x="668.5" y="67.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (128 samples, 0.08%)</title><rect x="668.5" y="51.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="671.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (125 samples, 0.08%)</title><rect x="669.4" y="51.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.4" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (125 samples, 0.08%)</title><rect x="669.4" y="35.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="672.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (489 samples, 0.30%)</title><rect x="670.3" y="243.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (489 samples, 0.30%)</title><rect x="670.3" y="227.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (489 samples, 0.30%)</title><rect x="670.3" y="211.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (489 samples, 0.30%)</title><rect x="670.3" y="195.0" width="3.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="673.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$149/388218747.apply (429 samples, 0.26%)</title><rect x="673.8" y="339.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (429 samples, 0.26%)</title><rect x="673.8" y="323.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (429 samples, 0.26%)</title><rect x="673.8" y="307.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (429 samples, 0.26%)</title><rect x="673.8" y="291.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="676.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (236 samples, 0.14%)</title><rect x="676.9" y="419.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (236 samples, 0.14%)</title><rect x="676.9" y="403.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$157/1694929854.apply (236 samples, 0.14%)</title><rect x="676.9" y="387.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (236 samples, 0.14%)</title><rect x="676.9" y="371.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (236 samples, 0.14%)</title><rect x="676.9" y="355.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (236 samples, 0.14%)</title><rect x="676.9" y="339.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.9" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (236 samples, 0.14%)</title><rect x="676.9" y="323.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="679.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (230 samples, 0.14%)</title><rect x="678.6" y="419.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (230 samples, 0.14%)</title><rect x="678.6" y="403.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (230 samples, 0.14%)</title><rect x="678.6" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (230 samples, 0.14%)</title><rect x="678.6" y="371.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="681.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (237 samples, 0.14%)</title><rect x="680.2" y="419.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (237 samples, 0.14%)</title><rect x="680.2" y="403.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (237 samples, 0.14%)</title><rect x="680.2" y="387.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (237 samples, 0.14%)</title><rect x="680.2" y="371.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="683.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (7,125 samples, 4.34%)</title><rect x="681.9" y="419.0" width="51.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.9" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (185 samples, 0.11%)</title><rect x="681.9" y="403.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.9" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (185 samples, 0.11%)</title><rect x="681.9" y="387.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="684.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,285 samples, 0.78%)</title><rect x="683.2" y="403.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.2" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (86 samples, 0.05%)</title><rect x="683.2" y="387.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="686.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,199 samples, 0.73%)</title><rect x="683.9" y="387.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.9" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (112 samples, 0.07%)</title><rect x="683.9" y="371.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="686.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (692 samples, 0.42%)</title><rect x="684.7" y="371.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (692 samples, 0.42%)</title><rect x="684.7" y="355.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (692 samples, 0.42%)</title><rect x="684.7" y="339.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (692 samples, 0.42%)</title><rect x="684.7" y="323.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (244 samples, 0.15%)</title><rect x="684.7" y="307.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (244 samples, 0.15%)</title><rect x="684.7" y="291.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.7" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (244 samples, 0.15%)</title><rect x="684.7" y="275.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (244 samples, 0.15%)</title><rect x="684.7" y="259.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (244 samples, 0.15%)</title><rect x="684.7" y="243.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (244 samples, 0.15%)</title><rect x="684.7" y="227.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (244 samples, 0.15%)</title><rect x="684.7" y="211.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (244 samples, 0.15%)</title><rect x="684.7" y="195.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (244 samples, 0.15%)</title><rect x="684.7" y="179.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (244 samples, 0.15%)</title><rect x="684.7" y="163.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="687.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (244 samples, 0.15%)</title><rect x="684.7" y="147.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (244 samples, 0.15%)</title><rect x="684.7" y="131.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.7" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (114 samples, 0.07%)</title><rect x="684.7" y="115.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="687.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (130 samples, 0.08%)</title><rect x="685.5" y="115.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="688.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (130 samples, 0.08%)</title><rect x="685.5" y="99.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="688.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (448 samples, 0.27%)</title><rect x="686.4" y="307.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (448 samples, 0.27%)</title><rect x="686.4" y="291.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.4" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (448 samples, 0.27%)</title><rect x="686.4" y="275.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.4" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (448 samples, 0.27%)</title><rect x="686.4" y="259.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="689.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (139 samples, 0.08%)</title><rect x="689.6" y="371.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (139 samples, 0.08%)</title><rect x="689.6" y="355.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="692.6" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (129 samples, 0.08%)</title><rect x="690.6" y="371.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="693.6" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (127 samples, 0.08%)</title><rect x="691.6" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (127 samples, 0.08%)</title><rect x="691.6" y="355.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="694.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (83 samples, 0.05%)</title><rect x="692.5" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.05%)</title><rect x="692.5" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.05%)</title><rect x="692.5" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (83 samples, 0.05%)</title><rect x="692.5" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.5" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (83 samples, 0.05%)</title><rect x="692.5" y="339.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="695.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (194 samples, 0.12%)</title><rect x="693.1" y="403.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (65 samples, 0.04%)</title><rect x="693.1" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.04%)</title><rect x="693.1" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.04%)</title><rect x="693.1" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (65 samples, 0.04%)</title><rect x="693.1" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.1" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (65 samples, 0.04%)</title><rect x="693.1" y="323.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="696.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (129 samples, 0.08%)</title><rect x="693.5" y="387.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (129 samples, 0.08%)</title><rect x="693.5" y="371.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (129 samples, 0.08%)</title><rect x="693.5" y="355.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$142/1659247134.get$Lambda (129 samples, 0.08%)</title><rect x="693.5" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.5" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$142 (129 samples, 0.08%)</title><rect x="693.5" y="323.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="696.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (184 samples, 0.11%)</title><rect x="694.5" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (184 samples, 0.11%)</title><rect x="694.5" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (184 samples, 0.11%)</title><rect x="694.5" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.5" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (169 samples, 0.10%)</title><rect x="694.5" y="355.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.5" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (169 samples, 0.10%)</title><rect x="694.5" y="339.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.5" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (35 samples, 0.02%)</title><rect x="694.5" y="323.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.5" y="334.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (35 samples, 0.02%)</title><rect x="694.5" y="307.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="697.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (134 samples, 0.08%)</title><rect x="694.7" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (134 samples, 0.08%)</title><rect x="694.7" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (134 samples, 0.08%)</title><rect x="694.7" y="291.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="697.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (847 samples, 0.52%)</title><rect x="695.8" y="403.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.8" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (127 samples, 0.08%)</title><rect x="695.8" y="387.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="698.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (720 samples, 0.44%)</title><rect x="696.7" y="387.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (720 samples, 0.44%)</title><rect x="696.7" y="371.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (720 samples, 0.44%)</title><rect x="696.7" y="355.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (720 samples, 0.44%)</title><rect x="696.7" y="339.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (720 samples, 0.44%)</title><rect x="696.7" y="323.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (720 samples, 0.44%)</title><rect x="696.7" y="307.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (720 samples, 0.44%)</title><rect x="696.7" y="291.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (256 samples, 0.16%)</title><rect x="696.7" y="275.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (256 samples, 0.16%)</title><rect x="696.7" y="259.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.7" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (256 samples, 0.16%)</title><rect x="696.7" y="243.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (256 samples, 0.16%)</title><rect x="696.7" y="227.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (256 samples, 0.16%)</title><rect x="696.7" y="211.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (256 samples, 0.16%)</title><rect x="696.7" y="195.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (256 samples, 0.16%)</title><rect x="696.7" y="179.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (256 samples, 0.16%)</title><rect x="696.7" y="163.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (256 samples, 0.16%)</title><rect x="696.7" y="147.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (256 samples, 0.16%)</title><rect x="696.7" y="131.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (256 samples, 0.16%)</title><rect x="696.7" y="115.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (256 samples, 0.16%)</title><rect x="696.7" y="99.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.7" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (146 samples, 0.09%)</title><rect x="696.7" y="83.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="699.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (110 samples, 0.07%)</title><rect x="697.8" y="83.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (110 samples, 0.07%)</title><rect x="697.8" y="67.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="700.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (464 samples, 0.28%)</title><rect x="698.5" y="275.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (464 samples, 0.28%)</title><rect x="698.5" y="259.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (464 samples, 0.28%)</title><rect x="698.5" y="243.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.5" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (464 samples, 0.28%)</title><rect x="698.5" y="227.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="701.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (4,347 samples, 2.65%)</title><rect x="701.9" y="403.0" width="31.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.9" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (136 samples, 0.08%)</title><rect x="701.9" y="387.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="704.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (149 samples, 0.09%)</title><rect x="702.9" y="387.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (149 samples, 0.09%)</title><rect x="702.9" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (149 samples, 0.09%)</title><rect x="702.9" y="355.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="705.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (110 samples, 0.07%)</title><rect x="703.9" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (110 samples, 0.07%)</title><rect x="703.9" y="371.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="706.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (3,952 samples, 2.41%)</title><rect x="704.7" y="387.0" width="28.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.7" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (161 samples, 0.10%)</title><rect x="704.7" y="371.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.7" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (161 samples, 0.10%)</title><rect x="704.7" y="355.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="707.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,619 samples, 0.99%)</title><rect x="705.9" y="371.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (87 samples, 0.05%)</title><rect x="705.9" y="355.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="708.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,532 samples, 0.93%)</title><rect x="706.5" y="355.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.5" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (111 samples, 0.07%)</title><rect x="706.5" y="339.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="709.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (115 samples, 0.07%)</title><rect x="707.3" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.3" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (115 samples, 0.07%)</title><rect x="707.3" y="323.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="710.3" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (137 samples, 0.08%)</title><rect x="708.1" y="339.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="711.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (111 samples, 0.07%)</title><rect x="709.1" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (111 samples, 0.07%)</title><rect x="709.1" y="323.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="712.1" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,058 samples, 0.64%)</title><rect x="709.9" y="339.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,058 samples, 0.64%)</title><rect x="709.9" y="323.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,058 samples, 0.64%)</title><rect x="709.9" y="307.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (238 samples, 0.14%)</title><rect x="709.9" y="291.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (238 samples, 0.14%)</title><rect x="709.9" y="275.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (238 samples, 0.14%)</title><rect x="709.9" y="259.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (238 samples, 0.14%)</title><rect x="709.9" y="243.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (238 samples, 0.14%)</title><rect x="709.9" y="227.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (238 samples, 0.14%)</title><rect x="709.9" y="211.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (238 samples, 0.14%)</title><rect x="709.9" y="195.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.9" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (117 samples, 0.07%)</title><rect x="709.9" y="179.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="712.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (121 samples, 0.07%)</title><rect x="710.7" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (121 samples, 0.07%)</title><rect x="710.7" y="163.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="713.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (820 samples, 0.50%)</title><rect x="711.6" y="291.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (196 samples, 0.12%)</title><rect x="711.6" y="275.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="714.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (137 samples, 0.08%)</title><rect x="713.0" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (137 samples, 0.08%)</title><rect x="713.0" y="259.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$95/217324818.get$Lambda (79 samples, 0.05%)</title><rect x="713.0" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$95 (79 samples, 0.05%)</title><rect x="713.0" y="227.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="716.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.get$Lambda (58 samples, 0.04%)</title><rect x="713.6" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.6" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$97 (58 samples, 0.04%)</title><rect x="713.6" y="227.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="716.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (99 samples, 0.06%)</title><rect x="714.0" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="717.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (99 samples, 0.06%)</title><rect x="714.0" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.0" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (99 samples, 0.06%)</title><rect x="714.0" y="243.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="717.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (388 samples, 0.24%)</title><rect x="714.7" y="275.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (388 samples, 0.24%)</title><rect x="714.7" y="259.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="717.7" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (111 samples, 0.07%)</title><rect x="717.5" y="371.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="720.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (130 samples, 0.08%)</title><rect x="718.3" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (130 samples, 0.08%)</title><rect x="718.3" y="355.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="721.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (147 samples, 0.09%)</title><rect x="719.2" y="371.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (147 samples, 0.09%)</title><rect x="719.2" y="355.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="722.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (331 samples, 0.20%)</title><rect x="720.5" y="371.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (118 samples, 0.07%)</title><rect x="720.5" y="355.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="723.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (213 samples, 0.13%)</title><rect x="721.4" y="355.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (213 samples, 0.13%)</title><rect x="721.4" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (213 samples, 0.13%)</title><rect x="721.4" y="323.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.4" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (213 samples, 0.13%)</title><rect x="721.4" y="307.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (213 samples, 0.13%)</title><rect x="721.4" y="291.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (213 samples, 0.13%)</title><rect x="721.4" y="275.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (213 samples, 0.13%)</title><rect x="721.4" y="259.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (213 samples, 0.13%)</title><rect x="721.4" y="243.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (213 samples, 0.13%)</title><rect x="721.4" y="227.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (213 samples, 0.13%)</title><rect x="721.4" y="211.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (213 samples, 0.13%)</title><rect x="721.4" y="195.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="724.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (213 samples, 0.13%)</title><rect x="721.4" y="179.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (213 samples, 0.13%)</title><rect x="721.4" y="163.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.4" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (102 samples, 0.06%)</title><rect x="721.4" y="147.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="724.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (111 samples, 0.07%)</title><rect x="722.1" y="147.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (111 samples, 0.07%)</title><rect x="722.1" y="131.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="725.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (1,420 samples, 0.86%)</title><rect x="722.9" y="371.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (413 samples, 0.25%)</title><rect x="722.9" y="355.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (155 samples, 0.09%)</title><rect x="722.9" y="339.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (155 samples, 0.09%)</title><rect x="722.9" y="323.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="725.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (258 samples, 0.16%)</title><rect x="724.0" y="339.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (258 samples, 0.16%)</title><rect x="724.0" y="323.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="727.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (59 samples, 0.04%)</title><rect x="725.9" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (59 samples, 0.04%)</title><rect x="725.9" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="728.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (240 samples, 0.15%)</title><rect x="726.3" y="355.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (240 samples, 0.15%)</title><rect x="726.3" y="339.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (240 samples, 0.15%)</title><rect x="726.3" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (240 samples, 0.15%)</title><rect x="726.3" y="307.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="729.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (425 samples, 0.26%)</title><rect x="728.0" y="355.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.0" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (98 samples, 0.06%)</title><rect x="728.0" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.0" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (98 samples, 0.06%)</title><rect x="728.0" y="323.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="731.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (327 samples, 0.20%)</title><rect x="728.7" y="339.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (94 samples, 0.06%)</title><rect x="728.7" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (94 samples, 0.06%)</title><rect x="728.7" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$88/431735617.get$Lambda (94 samples, 0.06%)</title><rect x="728.7" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$88 (94 samples, 0.06%)</title><rect x="728.7" y="275.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="731.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (233 samples, 0.14%)</title><rect x="729.4" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (233 samples, 0.14%)</title><rect x="729.4" y="307.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="732.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (283 samples, 0.17%)</title><rect x="731.1" y="355.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (283 samples, 0.17%)</title><rect x="731.1" y="339.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="734.1" y="350.0"></text>
</g>
<g>
<title>[Worker_2 tid=27329] (10,596 samples, 6.45%)</title><rect x="733.1" y="547.0" width="76.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="736.1" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (10,596 samples, 6.45%)</title><rect x="733.1" y="531.0" width="76.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.1" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,596 samples, 6.45%)</title><rect x="733.1" y="515.0" width="76.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.1" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,596 samples, 6.45%)</title><rect x="733.1" y="499.0" width="76.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.1" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (137 samples, 0.08%)</title><rect x="733.1" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (137 samples, 0.08%)</title><rect x="733.1" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (130 samples, 0.08%)</title><rect x="733.1" y="451.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (130 samples, 0.08%)</title><rect x="733.1" y="435.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (130 samples, 0.08%)</title><rect x="733.1" y="419.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="736.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.run (10,459 samples, 6.37%)</title><rect x="734.1" y="483.0" width="75.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.1" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$2 (10,459 samples, 6.37%)</title><rect x="734.1" y="467.0" width="75.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.1" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (10,459 samples, 6.37%)</title><rect x="734.1" y="451.0" width="75.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.1" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (128 samples, 0.08%)</title><rect x="734.1" y="435.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="737.1" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (126 samples, 0.08%)</title><rect x="735.0" y="435.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="738.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (627 samples, 0.38%)</title><rect x="735.9" y="435.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (627 samples, 0.38%)</title><rect x="735.9" y="419.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (459 samples, 0.28%)</title><rect x="735.9" y="403.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (459 samples, 0.28%)</title><rect x="735.9" y="387.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.9" y="398.0"></text>
</g>
<g>
<title>byte[] (459 samples, 0.28%)</title><rect x="735.9" y="371.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="738.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (168 samples, 0.10%)</title><rect x="739.2" y="403.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.2" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (168 samples, 0.10%)</title><rect x="739.2" y="387.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="742.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (505 samples, 0.31%)</title><rect x="740.4" y="435.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.4" y="446.0"></text>
</g>
<g>
<title>byte[] (200 samples, 0.12%)</title><rect x="740.4" y="419.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="743.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (176 samples, 0.11%)</title><rect x="741.9" y="419.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="744.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (129 samples, 0.08%)</title><rect x="743.1" y="419.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="746.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (9,073 samples, 5.53%)</title><rect x="744.1" y="435.0" width="65.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.1" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,159 samples, 0.71%)</title><rect x="744.1" y="419.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,159 samples, 0.71%)</title><rect x="744.1" y="403.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,159 samples, 0.71%)</title><rect x="744.1" y="387.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,159 samples, 0.71%)</title><rect x="744.1" y="371.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,159 samples, 0.71%)</title><rect x="744.1" y="355.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (718 samples, 0.44%)</title><rect x="744.1" y="339.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (718 samples, 0.44%)</title><rect x="744.1" y="323.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (718 samples, 0.44%)</title><rect x="744.1" y="307.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (718 samples, 0.44%)</title><rect x="744.1" y="291.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (718 samples, 0.44%)</title><rect x="744.1" y="275.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (718 samples, 0.44%)</title><rect x="744.1" y="259.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (254 samples, 0.15%)</title><rect x="744.1" y="243.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (254 samples, 0.15%)</title><rect x="744.1" y="227.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.1" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (254 samples, 0.15%)</title><rect x="744.1" y="211.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (254 samples, 0.15%)</title><rect x="744.1" y="195.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (254 samples, 0.15%)</title><rect x="744.1" y="179.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (254 samples, 0.15%)</title><rect x="744.1" y="163.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (254 samples, 0.15%)</title><rect x="744.1" y="147.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (254 samples, 0.15%)</title><rect x="744.1" y="131.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (254 samples, 0.15%)</title><rect x="744.1" y="115.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.1" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (254 samples, 0.15%)</title><rect x="744.1" y="99.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (254 samples, 0.15%)</title><rect x="744.1" y="83.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (254 samples, 0.15%)</title><rect x="744.1" y="67.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.1" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (136 samples, 0.08%)</title><rect x="744.1" y="51.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="747.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (118 samples, 0.07%)</title><rect x="745.0" y="51.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (118 samples, 0.07%)</title><rect x="745.0" y="35.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="748.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (464 samples, 0.28%)</title><rect x="745.9" y="243.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (464 samples, 0.28%)</title><rect x="745.9" y="227.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (464 samples, 0.28%)</title><rect x="745.9" y="211.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (464 samples, 0.28%)</title><rect x="745.9" y="195.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="748.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$149/388218747.apply (441 samples, 0.27%)</title><rect x="749.2" y="339.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (441 samples, 0.27%)</title><rect x="749.2" y="323.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (441 samples, 0.27%)</title><rect x="749.2" y="307.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (441 samples, 0.27%)</title><rect x="749.2" y="291.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="752.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (220 samples, 0.13%)</title><rect x="752.4" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (220 samples, 0.13%)</title><rect x="752.4" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$157/1694929854.apply (220 samples, 0.13%)</title><rect x="752.4" y="387.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (220 samples, 0.13%)</title><rect x="752.4" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (220 samples, 0.13%)</title><rect x="752.4" y="355.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (220 samples, 0.13%)</title><rect x="752.4" y="339.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.4" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (220 samples, 0.13%)</title><rect x="752.4" y="323.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="755.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (245 samples, 0.15%)</title><rect x="754.0" y="419.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (245 samples, 0.15%)</title><rect x="754.0" y="403.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (245 samples, 0.15%)</title><rect x="754.0" y="387.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (245 samples, 0.15%)</title><rect x="754.0" y="371.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="757.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (241 samples, 0.15%)</title><rect x="755.7" y="419.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (241 samples, 0.15%)</title><rect x="755.7" y="403.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (241 samples, 0.15%)</title><rect x="755.7" y="387.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (241 samples, 0.15%)</title><rect x="755.7" y="371.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="758.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (7,208 samples, 4.39%)</title><rect x="757.5" y="419.0" width="51.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.5" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (146 samples, 0.09%)</title><rect x="757.5" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.5" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (146 samples, 0.09%)</title><rect x="757.5" y="387.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="760.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,291 samples, 0.79%)</title><rect x="758.5" y="403.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.5" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (84 samples, 0.05%)</title><rect x="758.5" y="387.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="761.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,207 samples, 0.74%)</title><rect x="759.1" y="387.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.1" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (126 samples, 0.08%)</title><rect x="759.1" y="371.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="762.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (679 samples, 0.41%)</title><rect x="760.0" y="371.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (679 samples, 0.41%)</title><rect x="760.0" y="355.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (679 samples, 0.41%)</title><rect x="760.0" y="339.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (679 samples, 0.41%)</title><rect x="760.0" y="323.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (229 samples, 0.14%)</title><rect x="760.0" y="307.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="763.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (229 samples, 0.14%)</title><rect x="760.0" y="291.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.0" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (229 samples, 0.14%)</title><rect x="760.0" y="275.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (229 samples, 0.14%)</title><rect x="760.0" y="259.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (229 samples, 0.14%)</title><rect x="760.0" y="243.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (229 samples, 0.14%)</title><rect x="760.0" y="227.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (229 samples, 0.14%)</title><rect x="760.0" y="211.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="763.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (229 samples, 0.14%)</title><rect x="760.0" y="195.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (229 samples, 0.14%)</title><rect x="760.0" y="179.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (229 samples, 0.14%)</title><rect x="760.0" y="163.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (229 samples, 0.14%)</title><rect x="760.0" y="147.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (229 samples, 0.14%)</title><rect x="760.0" y="131.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.0" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (111 samples, 0.07%)</title><rect x="760.0" y="115.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="763.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (118 samples, 0.07%)</title><rect x="760.8" y="115.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.8" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (118 samples, 0.07%)</title><rect x="760.8" y="99.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="763.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (450 samples, 0.27%)</title><rect x="761.7" y="307.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (450 samples, 0.27%)</title><rect x="761.7" y="291.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.7" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (450 samples, 0.27%)</title><rect x="761.7" y="275.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.7" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (450 samples, 0.27%)</title><rect x="761.7" y="259.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="764.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (124 samples, 0.08%)</title><rect x="764.9" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (124 samples, 0.08%)</title><rect x="764.9" y="355.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="767.9" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (153 samples, 0.09%)</title><rect x="765.8" y="371.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="768.8" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (125 samples, 0.08%)</title><rect x="766.9" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (125 samples, 0.08%)</title><rect x="766.9" y="355.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="769.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (81 samples, 0.05%)</title><rect x="767.8" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 0.05%)</title><rect x="767.8" y="387.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.05%)</title><rect x="767.8" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (81 samples, 0.05%)</title><rect x="767.8" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.8" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (81 samples, 0.05%)</title><rect x="767.8" y="339.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="770.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (183 samples, 0.11%)</title><rect x="768.4" y="403.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (79 samples, 0.05%)</title><rect x="768.4" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.05%)</title><rect x="768.4" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.05%)</title><rect x="768.4" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (79 samples, 0.05%)</title><rect x="768.4" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.4" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (79 samples, 0.05%)</title><rect x="768.4" y="323.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="771.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (104 samples, 0.06%)</title><rect x="768.9" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (104 samples, 0.06%)</title><rect x="768.9" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="771.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (104 samples, 0.06%)</title><rect x="768.9" y="355.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$142/1659247134.get$Lambda (104 samples, 0.06%)</title><rect x="768.9" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.9" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$142 (104 samples, 0.06%)</title><rect x="768.9" y="323.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="771.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (195 samples, 0.12%)</title><rect x="769.7" y="403.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (195 samples, 0.12%)</title><rect x="769.7" y="387.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (195 samples, 0.12%)</title><rect x="769.7" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.7" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (181 samples, 0.11%)</title><rect x="769.7" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.7" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (181 samples, 0.11%)</title><rect x="769.7" y="339.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (149 samples, 0.09%)</title><rect x="769.9" y="323.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (149 samples, 0.09%)</title><rect x="769.9" y="307.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (149 samples, 0.09%)</title><rect x="769.9" y="291.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="772.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (768 samples, 0.47%)</title><rect x="771.1" y="403.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.1" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (94 samples, 0.06%)</title><rect x="771.1" y="387.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="774.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (674 samples, 0.41%)</title><rect x="771.8" y="387.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (674 samples, 0.41%)</title><rect x="771.8" y="371.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (674 samples, 0.41%)</title><rect x="771.8" y="355.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (674 samples, 0.41%)</title><rect x="771.8" y="339.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (674 samples, 0.41%)</title><rect x="771.8" y="323.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (674 samples, 0.41%)</title><rect x="771.8" y="307.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (674 samples, 0.41%)</title><rect x="771.8" y="291.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (219 samples, 0.13%)</title><rect x="771.8" y="275.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (219 samples, 0.13%)</title><rect x="771.8" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.8" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (219 samples, 0.13%)</title><rect x="771.8" y="243.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (219 samples, 0.13%)</title><rect x="771.8" y="227.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (219 samples, 0.13%)</title><rect x="771.8" y="211.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (219 samples, 0.13%)</title><rect x="771.8" y="195.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (219 samples, 0.13%)</title><rect x="771.8" y="179.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (219 samples, 0.13%)</title><rect x="771.8" y="163.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (219 samples, 0.13%)</title><rect x="771.8" y="147.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (219 samples, 0.13%)</title><rect x="771.8" y="131.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (219 samples, 0.13%)</title><rect x="771.8" y="115.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (219 samples, 0.13%)</title><rect x="771.8" y="99.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.8" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (110 samples, 0.07%)</title><rect x="771.8" y="83.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="774.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (109 samples, 0.07%)</title><rect x="772.6" y="83.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (109 samples, 0.07%)</title><rect x="772.6" y="67.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="775.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (455 samples, 0.28%)</title><rect x="773.3" y="275.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (455 samples, 0.28%)</title><rect x="773.3" y="259.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (455 samples, 0.28%)</title><rect x="773.3" y="243.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (455 samples, 0.28%)</title><rect x="773.3" y="227.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="776.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (4,544 samples, 2.77%)</title><rect x="776.6" y="403.0" width="32.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.6" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (147 samples, 0.09%)</title><rect x="776.6" y="387.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="779.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (158 samples, 0.10%)</title><rect x="777.7" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (158 samples, 0.10%)</title><rect x="777.7" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (158 samples, 0.10%)</title><rect x="777.7" y="355.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="780.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (122 samples, 0.07%)</title><rect x="778.8" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (122 samples, 0.07%)</title><rect x="778.8" y="371.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="781.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (4,117 samples, 2.51%)</title><rect x="779.7" y="387.0" width="29.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.7" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (156 samples, 0.10%)</title><rect x="779.7" y="371.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.7" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (156 samples, 0.10%)</title><rect x="779.7" y="355.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="782.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,660 samples, 1.01%)</title><rect x="780.8" y="371.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (83 samples, 0.05%)</title><rect x="780.8" y="355.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="783.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,577 samples, 0.96%)</title><rect x="781.4" y="355.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.4" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (119 samples, 0.07%)</title><rect x="781.4" y="339.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="784.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (121 samples, 0.07%)</title><rect x="782.2" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="785.2" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (121 samples, 0.07%)</title><rect x="782.2" y="323.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="785.2" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (140 samples, 0.09%)</title><rect x="783.1" y="339.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="786.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (101 samples, 0.06%)</title><rect x="784.1" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (101 samples, 0.06%)</title><rect x="784.1" y="323.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="787.1" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,096 samples, 0.67%)</title><rect x="784.9" y="339.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,096 samples, 0.67%)</title><rect x="784.9" y="323.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,096 samples, 0.67%)</title><rect x="784.9" y="307.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (230 samples, 0.14%)</title><rect x="784.9" y="291.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (230 samples, 0.14%)</title><rect x="784.9" y="275.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (230 samples, 0.14%)</title><rect x="784.9" y="259.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (230 samples, 0.14%)</title><rect x="784.9" y="243.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (230 samples, 0.14%)</title><rect x="784.9" y="227.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (230 samples, 0.14%)</title><rect x="784.9" y="211.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (230 samples, 0.14%)</title><rect x="784.9" y="195.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.9" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (105 samples, 0.06%)</title><rect x="784.9" y="179.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="787.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (125 samples, 0.08%)</title><rect x="785.6" y="179.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.6" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (125 samples, 0.08%)</title><rect x="785.6" y="163.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="788.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (866 samples, 0.53%)</title><rect x="786.5" y="291.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.5" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (180 samples, 0.11%)</title><rect x="786.5" y="275.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="789.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (151 samples, 0.09%)</title><rect x="787.8" y="275.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (151 samples, 0.09%)</title><rect x="787.8" y="259.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$95/217324818.get$Lambda (76 samples, 0.05%)</title><rect x="787.8" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="790.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$95 (76 samples, 0.05%)</title><rect x="787.8" y="227.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="790.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.get$Lambda (75 samples, 0.05%)</title><rect x="788.3" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$97 (75 samples, 0.05%)</title><rect x="788.3" y="227.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="791.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (119 samples, 0.07%)</title><rect x="788.9" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (119 samples, 0.07%)</title><rect x="788.9" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.9" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (119 samples, 0.07%)</title><rect x="788.9" y="243.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="791.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (416 samples, 0.25%)</title><rect x="789.7" y="275.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (416 samples, 0.25%)</title><rect x="789.7" y="259.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="792.7" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (118 samples, 0.07%)</title><rect x="792.7" y="371.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="795.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (120 samples, 0.07%)</title><rect x="793.6" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (120 samples, 0.07%)</title><rect x="793.6" y="355.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="796.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (172 samples, 0.10%)</title><rect x="794.4" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (172 samples, 0.10%)</title><rect x="794.4" y="355.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="797.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (41 samples, 0.02%)</title><rect x="795.7" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (41 samples, 0.02%)</title><rect x="795.7" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (41 samples, 0.02%)</title><rect x="795.7" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (39 samples, 0.02%)</title><rect x="795.7" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (39 samples, 0.02%)</title><rect x="795.7" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (388 samples, 0.24%)</title><rect x="796.0" y="371.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.0" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (138 samples, 0.08%)</title><rect x="796.0" y="355.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="799.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (250 samples, 0.15%)</title><rect x="797.0" y="355.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (250 samples, 0.15%)</title><rect x="797.0" y="339.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (250 samples, 0.15%)</title><rect x="797.0" y="323.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.0" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (250 samples, 0.15%)</title><rect x="797.0" y="307.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (250 samples, 0.15%)</title><rect x="797.0" y="291.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (250 samples, 0.15%)</title><rect x="797.0" y="275.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (250 samples, 0.15%)</title><rect x="797.0" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (250 samples, 0.15%)</title><rect x="797.0" y="243.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (250 samples, 0.15%)</title><rect x="797.0" y="227.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (250 samples, 0.15%)</title><rect x="797.0" y="211.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (250 samples, 0.15%)</title><rect x="797.0" y="195.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (250 samples, 0.15%)</title><rect x="797.0" y="179.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (250 samples, 0.15%)</title><rect x="797.0" y="163.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (132 samples, 0.08%)</title><rect x="797.0" y="147.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="800.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (118 samples, 0.07%)</title><rect x="797.9" y="147.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (118 samples, 0.07%)</title><rect x="797.9" y="131.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="800.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (1,462 samples, 0.89%)</title><rect x="798.8" y="371.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="801.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (395 samples, 0.24%)</title><rect x="798.8" y="355.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (153 samples, 0.09%)</title><rect x="798.8" y="339.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (153 samples, 0.09%)</title><rect x="798.8" y="323.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="801.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (242 samples, 0.15%)</title><rect x="799.9" y="339.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (242 samples, 0.15%)</title><rect x="799.9" y="323.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="802.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (70 samples, 0.04%)</title><rect x="801.6" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (70 samples, 0.04%)</title><rect x="801.6" y="339.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="804.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (243 samples, 0.15%)</title><rect x="802.1" y="355.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (243 samples, 0.15%)</title><rect x="802.1" y="339.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (243 samples, 0.15%)</title><rect x="802.1" y="323.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (243 samples, 0.15%)</title><rect x="802.1" y="307.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="805.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (437 samples, 0.27%)</title><rect x="803.8" y="355.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.8" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (120 samples, 0.07%)</title><rect x="803.8" y="339.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.8" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (120 samples, 0.07%)</title><rect x="803.8" y="323.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="806.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (317 samples, 0.19%)</title><rect x="804.7" y="339.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.04%)</title><rect x="804.7" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.04%)</title><rect x="804.7" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$88/431735617.get$Lambda (70 samples, 0.04%)</title><rect x="804.7" y="291.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$88 (70 samples, 0.04%)</title><rect x="804.7" y="275.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="807.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (247 samples, 0.15%)</title><rect x="805.2" y="323.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (247 samples, 0.15%)</title><rect x="805.2" y="307.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="808.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (317 samples, 0.19%)</title><rect x="807.0" y="355.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (317 samples, 0.19%)</title><rect x="807.0" y="339.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="810.0" y="350.0"></text>
</g>
<g>
<title>[Worker_3 tid=27327] (10,581 samples, 6.44%)</title><rect x="809.3" y="547.0" width="76.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="812.3" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (10,581 samples, 6.44%)</title><rect x="809.3" y="531.0" width="76.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.3" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,581 samples, 6.44%)</title><rect x="809.3" y="515.0" width="76.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.3" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,581 samples, 6.44%)</title><rect x="809.3" y="499.0" width="76.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.3" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (135 samples, 0.08%)</title><rect x="809.3" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (135 samples, 0.08%)</title><rect x="809.3" y="467.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (130 samples, 0.08%)</title><rect x="809.3" y="451.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (130 samples, 0.08%)</title><rect x="809.3" y="435.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (130 samples, 0.08%)</title><rect x="809.3" y="419.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="812.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.run (10,446 samples, 6.36%)</title><rect x="810.2" y="483.0" width="75.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.2" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$2 (10,446 samples, 6.36%)</title><rect x="810.2" y="467.0" width="75.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.2" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (10,446 samples, 6.36%)</title><rect x="810.2" y="451.0" width="75.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.2" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (120 samples, 0.07%)</title><rect x="810.2" y="435.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="813.2" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (111 samples, 0.07%)</title><rect x="811.1" y="435.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="814.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (650 samples, 0.40%)</title><rect x="811.9" y="435.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (650 samples, 0.40%)</title><rect x="811.9" y="419.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (471 samples, 0.29%)</title><rect x="811.9" y="403.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="814.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (471 samples, 0.29%)</title><rect x="811.9" y="387.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.9" y="398.0"></text>
</g>
<g>
<title>byte[] (471 samples, 0.29%)</title><rect x="811.9" y="371.0" width="3.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="814.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (179 samples, 0.11%)</title><rect x="815.3" y="403.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.3" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (179 samples, 0.11%)</title><rect x="815.3" y="387.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="818.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (456 samples, 0.28%)</title><rect x="816.6" y="435.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.6" y="446.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.12%)</title><rect x="816.6" y="419.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="819.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (146 samples, 0.09%)</title><rect x="818.0" y="419.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="821.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (107 samples, 0.07%)</title><rect x="819.1" y="419.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="822.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (9,109 samples, 5.55%)</title><rect x="819.8" y="435.0" width="65.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.8" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,201 samples, 0.73%)</title><rect x="819.8" y="419.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,201 samples, 0.73%)</title><rect x="819.8" y="403.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,201 samples, 0.73%)</title><rect x="819.8" y="387.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,201 samples, 0.73%)</title><rect x="819.8" y="371.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,201 samples, 0.73%)</title><rect x="819.8" y="355.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (726 samples, 0.44%)</title><rect x="819.8" y="339.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (726 samples, 0.44%)</title><rect x="819.8" y="323.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (726 samples, 0.44%)</title><rect x="819.8" y="307.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (726 samples, 0.44%)</title><rect x="819.8" y="291.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (726 samples, 0.44%)</title><rect x="819.8" y="275.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (726 samples, 0.44%)</title><rect x="819.8" y="259.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (245 samples, 0.15%)</title><rect x="819.8" y="243.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (245 samples, 0.15%)</title><rect x="819.8" y="227.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (245 samples, 0.15%)</title><rect x="819.8" y="211.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (245 samples, 0.15%)</title><rect x="819.8" y="195.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (245 samples, 0.15%)</title><rect x="819.8" y="179.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (245 samples, 0.15%)</title><rect x="819.8" y="163.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (245 samples, 0.15%)</title><rect x="819.8" y="147.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="822.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (245 samples, 0.15%)</title><rect x="819.8" y="131.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="822.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (245 samples, 0.15%)</title><rect x="819.8" y="115.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (245 samples, 0.15%)</title><rect x="819.8" y="99.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (245 samples, 0.15%)</title><rect x="819.8" y="83.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (245 samples, 0.15%)</title><rect x="819.8" y="67.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (131 samples, 0.08%)</title><rect x="819.8" y="51.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="822.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (114 samples, 0.07%)</title><rect x="820.8" y="51.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.8" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (114 samples, 0.07%)</title><rect x="820.8" y="35.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="823.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (481 samples, 0.29%)</title><rect x="821.6" y="243.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (481 samples, 0.29%)</title><rect x="821.6" y="227.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (481 samples, 0.29%)</title><rect x="821.6" y="211.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (481 samples, 0.29%)</title><rect x="821.6" y="195.0" width="3.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="824.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$149/388218747.apply (475 samples, 0.29%)</title><rect x="825.1" y="339.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (475 samples, 0.29%)</title><rect x="825.1" y="323.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (475 samples, 0.29%)</title><rect x="825.1" y="307.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (475 samples, 0.29%)</title><rect x="825.1" y="291.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="828.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (207 samples, 0.13%)</title><rect x="828.5" y="419.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="831.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (207 samples, 0.13%)</title><rect x="828.5" y="403.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$157/1694929854.apply (207 samples, 0.13%)</title><rect x="828.5" y="387.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (207 samples, 0.13%)</title><rect x="828.5" y="371.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (207 samples, 0.13%)</title><rect x="828.5" y="355.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (207 samples, 0.13%)</title><rect x="828.5" y="339.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.5" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (207 samples, 0.13%)</title><rect x="828.5" y="323.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="831.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (243 samples, 0.15%)</title><rect x="830.0" y="419.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="833.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (243 samples, 0.15%)</title><rect x="830.0" y="403.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (243 samples, 0.15%)</title><rect x="830.0" y="387.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="833.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (243 samples, 0.15%)</title><rect x="830.0" y="371.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="833.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (251 samples, 0.15%)</title><rect x="831.7" y="419.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (251 samples, 0.15%)</title><rect x="831.7" y="403.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (251 samples, 0.15%)</title><rect x="831.7" y="387.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (251 samples, 0.15%)</title><rect x="831.7" y="371.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="834.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (7,207 samples, 4.39%)</title><rect x="833.5" y="419.0" width="51.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.5" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (135 samples, 0.08%)</title><rect x="833.5" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.5" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (135 samples, 0.08%)</title><rect x="833.5" y="387.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="836.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,318 samples, 0.80%)</title><rect x="834.5" y="403.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.5" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (82 samples, 0.05%)</title><rect x="834.5" y="387.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="837.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,236 samples, 0.75%)</title><rect x="835.1" y="387.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.1" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (121 samples, 0.07%)</title><rect x="835.1" y="371.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="838.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (718 samples, 0.44%)</title><rect x="835.9" y="371.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (718 samples, 0.44%)</title><rect x="835.9" y="355.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (718 samples, 0.44%)</title><rect x="835.9" y="339.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (718 samples, 0.44%)</title><rect x="835.9" y="323.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (230 samples, 0.14%)</title><rect x="835.9" y="307.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (230 samples, 0.14%)</title><rect x="835.9" y="291.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.9" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (230 samples, 0.14%)</title><rect x="835.9" y="275.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (230 samples, 0.14%)</title><rect x="835.9" y="259.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (230 samples, 0.14%)</title><rect x="835.9" y="243.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (230 samples, 0.14%)</title><rect x="835.9" y="227.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (230 samples, 0.14%)</title><rect x="835.9" y="211.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (230 samples, 0.14%)</title><rect x="835.9" y="195.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (230 samples, 0.14%)</title><rect x="835.9" y="179.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (230 samples, 0.14%)</title><rect x="835.9" y="163.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (230 samples, 0.14%)</title><rect x="835.9" y="147.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (230 samples, 0.14%)</title><rect x="835.9" y="131.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.9" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (108 samples, 0.07%)</title><rect x="835.9" y="115.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="838.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (122 samples, 0.07%)</title><rect x="836.7" y="115.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.7" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (122 samples, 0.07%)</title><rect x="836.7" y="99.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="839.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (488 samples, 0.30%)</title><rect x="837.6" y="307.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (488 samples, 0.30%)</title><rect x="837.6" y="291.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.6" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (488 samples, 0.30%)</title><rect x="837.6" y="275.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (488 samples, 0.30%)</title><rect x="837.6" y="259.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="840.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (128 samples, 0.08%)</title><rect x="841.1" y="371.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (128 samples, 0.08%)</title><rect x="841.1" y="355.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="844.1" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (163 samples, 0.10%)</title><rect x="842.0" y="371.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="845.0" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (106 samples, 0.06%)</title><rect x="843.2" y="371.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (106 samples, 0.06%)</title><rect x="843.2" y="355.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="846.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (82 samples, 0.05%)</title><rect x="843.9" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.05%)</title><rect x="843.9" y="387.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.05%)</title><rect x="843.9" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (82 samples, 0.05%)</title><rect x="843.9" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.9" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (82 samples, 0.05%)</title><rect x="843.9" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="846.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (174 samples, 0.11%)</title><rect x="844.5" y="403.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (67 samples, 0.04%)</title><rect x="844.5" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.04%)</title><rect x="844.5" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.04%)</title><rect x="844.5" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (67 samples, 0.04%)</title><rect x="844.5" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.5" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (67 samples, 0.04%)</title><rect x="844.5" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="847.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (107 samples, 0.07%)</title><rect x="845.0" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (107 samples, 0.07%)</title><rect x="845.0" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (107 samples, 0.07%)</title><rect x="845.0" y="355.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$142/1659247134.get$Lambda (107 samples, 0.07%)</title><rect x="845.0" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.0" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$142 (107 samples, 0.07%)</title><rect x="845.0" y="323.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="848.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (163 samples, 0.10%)</title><rect x="845.8" y="403.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (163 samples, 0.10%)</title><rect x="845.8" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (163 samples, 0.10%)</title><rect x="845.8" y="371.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.8" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (156 samples, 0.10%)</title><rect x="845.8" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.8" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (156 samples, 0.10%)</title><rect x="845.8" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.8" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (35 samples, 0.02%)</title><rect x="845.8" y="323.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.8" y="334.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (35 samples, 0.02%)</title><rect x="845.8" y="307.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="848.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (121 samples, 0.07%)</title><rect x="846.0" y="323.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (121 samples, 0.07%)</title><rect x="846.0" y="307.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (121 samples, 0.07%)</title><rect x="846.0" y="291.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="849.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (848 samples, 0.52%)</title><rect x="847.0" y="403.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.0" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (126 samples, 0.08%)</title><rect x="847.0" y="387.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="850.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (722 samples, 0.44%)</title><rect x="847.9" y="387.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (722 samples, 0.44%)</title><rect x="847.9" y="371.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (722 samples, 0.44%)</title><rect x="847.9" y="355.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (722 samples, 0.44%)</title><rect x="847.9" y="339.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (722 samples, 0.44%)</title><rect x="847.9" y="323.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (722 samples, 0.44%)</title><rect x="847.9" y="307.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (722 samples, 0.44%)</title><rect x="847.9" y="291.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (241 samples, 0.15%)</title><rect x="847.9" y="275.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (241 samples, 0.15%)</title><rect x="847.9" y="259.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.9" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (241 samples, 0.15%)</title><rect x="847.9" y="243.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (241 samples, 0.15%)</title><rect x="847.9" y="227.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (241 samples, 0.15%)</title><rect x="847.9" y="211.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (241 samples, 0.15%)</title><rect x="847.9" y="195.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (241 samples, 0.15%)</title><rect x="847.9" y="179.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (241 samples, 0.15%)</title><rect x="847.9" y="163.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (241 samples, 0.15%)</title><rect x="847.9" y="147.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (241 samples, 0.15%)</title><rect x="847.9" y="131.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (241 samples, 0.15%)</title><rect x="847.9" y="115.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (241 samples, 0.15%)</title><rect x="847.9" y="99.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.9" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (124 samples, 0.08%)</title><rect x="847.9" y="83.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="850.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (117 samples, 0.07%)</title><rect x="848.8" y="83.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="851.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (117 samples, 0.07%)</title><rect x="848.8" y="67.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="851.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (481 samples, 0.29%)</title><rect x="849.6" y="275.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (481 samples, 0.29%)</title><rect x="849.6" y="259.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.6" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (481 samples, 0.29%)</title><rect x="849.6" y="243.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.6" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (481 samples, 0.29%)</title><rect x="849.6" y="227.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="852.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (4,487 samples, 2.73%)</title><rect x="853.1" y="403.0" width="32.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.1" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (152 samples, 0.09%)</title><rect x="853.1" y="387.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="856.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (152 samples, 0.09%)</title><rect x="854.1" y="387.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (152 samples, 0.09%)</title><rect x="854.1" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (152 samples, 0.09%)</title><rect x="854.1" y="355.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="857.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (116 samples, 0.07%)</title><rect x="855.2" y="387.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (116 samples, 0.07%)</title><rect x="855.2" y="371.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="858.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (4,067 samples, 2.48%)</title><rect x="856.1" y="387.0" width="29.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="859.1" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (160 samples, 0.10%)</title><rect x="856.1" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (160 samples, 0.10%)</title><rect x="856.1" y="355.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="859.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,619 samples, 0.99%)</title><rect x="857.2" y="371.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (82 samples, 0.05%)</title><rect x="857.2" y="355.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="860.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,537 samples, 0.94%)</title><rect x="857.8" y="355.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.8" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (119 samples, 0.07%)</title><rect x="857.8" y="339.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="860.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (106 samples, 0.06%)</title><rect x="858.7" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.7" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (106 samples, 0.06%)</title><rect x="858.7" y="323.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="861.7" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (146 samples, 0.09%)</title><rect x="859.4" y="339.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="862.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (113 samples, 0.07%)</title><rect x="860.5" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (113 samples, 0.07%)</title><rect x="860.5" y="323.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="863.5" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,053 samples, 0.64%)</title><rect x="861.3" y="339.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,053 samples, 0.64%)</title><rect x="861.3" y="323.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,053 samples, 0.64%)</title><rect x="861.3" y="307.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="864.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (241 samples, 0.15%)</title><rect x="861.3" y="291.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (241 samples, 0.15%)</title><rect x="861.3" y="275.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (241 samples, 0.15%)</title><rect x="861.3" y="259.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="864.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (241 samples, 0.15%)</title><rect x="861.3" y="243.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (241 samples, 0.15%)</title><rect x="861.3" y="227.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (241 samples, 0.15%)</title><rect x="861.3" y="211.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (241 samples, 0.15%)</title><rect x="861.3" y="195.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="864.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (128 samples, 0.08%)</title><rect x="861.3" y="179.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="864.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (113 samples, 0.07%)</title><rect x="862.2" y="179.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.2" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (113 samples, 0.07%)</title><rect x="862.2" y="163.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="865.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (812 samples, 0.49%)</title><rect x="863.0" y="291.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.0" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (173 samples, 0.11%)</title><rect x="863.0" y="275.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="866.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (141 samples, 0.09%)</title><rect x="864.3" y="275.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (141 samples, 0.09%)</title><rect x="864.3" y="259.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$95/217324818.get$Lambda (76 samples, 0.05%)</title><rect x="864.3" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$95 (76 samples, 0.05%)</title><rect x="864.3" y="227.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="867.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.get$Lambda (65 samples, 0.04%)</title><rect x="864.8" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$97 (65 samples, 0.04%)</title><rect x="864.8" y="227.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="867.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (103 samples, 0.06%)</title><rect x="865.3" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (103 samples, 0.06%)</title><rect x="865.3" y="259.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.3" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (103 samples, 0.06%)</title><rect x="865.3" y="243.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="868.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (395 samples, 0.24%)</title><rect x="866.0" y="275.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (395 samples, 0.24%)</title><rect x="866.0" y="259.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="869.0" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (92 samples, 0.06%)</title><rect x="868.9" y="371.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="871.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (118 samples, 0.07%)</title><rect x="869.5" y="371.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="872.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (118 samples, 0.07%)</title><rect x="869.5" y="355.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="872.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (156 samples, 0.10%)</title><rect x="870.4" y="371.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (156 samples, 0.10%)</title><rect x="870.4" y="355.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="873.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (383 samples, 0.23%)</title><rect x="871.6" y="371.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.6" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (129 samples, 0.08%)</title><rect x="871.6" y="355.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="874.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (254 samples, 0.15%)</title><rect x="872.6" y="355.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (254 samples, 0.15%)</title><rect x="872.6" y="339.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (254 samples, 0.15%)</title><rect x="872.6" y="323.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.6" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (254 samples, 0.15%)</title><rect x="872.6" y="307.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (254 samples, 0.15%)</title><rect x="872.6" y="291.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (254 samples, 0.15%)</title><rect x="872.6" y="275.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (254 samples, 0.15%)</title><rect x="872.6" y="259.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (254 samples, 0.15%)</title><rect x="872.6" y="243.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (254 samples, 0.15%)</title><rect x="872.6" y="227.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (254 samples, 0.15%)</title><rect x="872.6" y="211.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (254 samples, 0.15%)</title><rect x="872.6" y="195.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (254 samples, 0.15%)</title><rect x="872.6" y="179.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (254 samples, 0.15%)</title><rect x="872.6" y="163.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.6" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (136 samples, 0.08%)</title><rect x="872.6" y="147.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="875.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (118 samples, 0.07%)</title><rect x="873.5" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (118 samples, 0.07%)</title><rect x="873.5" y="131.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="876.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (1,519 samples, 0.93%)</title><rect x="874.4" y="371.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="877.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (475 samples, 0.29%)</title><rect x="874.4" y="355.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="877.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (194 samples, 0.12%)</title><rect x="874.4" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="877.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (194 samples, 0.12%)</title><rect x="874.4" y="323.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="877.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (281 samples, 0.17%)</title><rect x="875.8" y="339.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (281 samples, 0.17%)</title><rect x="875.8" y="323.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="878.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (87 samples, 0.05%)</title><rect x="877.8" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="880.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (87 samples, 0.05%)</title><rect x="877.8" y="339.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="880.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (235 samples, 0.14%)</title><rect x="878.4" y="355.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="881.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (235 samples, 0.14%)</title><rect x="878.4" y="339.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (235 samples, 0.14%)</title><rect x="878.4" y="323.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="881.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (235 samples, 0.14%)</title><rect x="878.4" y="307.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="881.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (419 samples, 0.26%)</title><rect x="880.1" y="355.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.1" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (101 samples, 0.06%)</title><rect x="880.1" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.1" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (101 samples, 0.06%)</title><rect x="880.1" y="323.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="883.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (318 samples, 0.19%)</title><rect x="880.8" y="339.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.05%)</title><rect x="880.8" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.05%)</title><rect x="880.8" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$88/431735617.get$Lambda (79 samples, 0.05%)</title><rect x="880.8" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.8" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$88 (79 samples, 0.05%)</title><rect x="880.8" y="275.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="883.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (239 samples, 0.15%)</title><rect x="881.4" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (239 samples, 0.15%)</title><rect x="881.4" y="307.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="884.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (303 samples, 0.18%)</title><rect x="883.1" y="355.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="886.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (303 samples, 0.18%)</title><rect x="883.1" y="339.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="886.1" y="350.0"></text>
</g>
<g>
<title>[Worker_4 tid=27330] (10,541 samples, 6.42%)</title><rect x="885.3" y="547.0" width="75.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="888.3" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (10,541 samples, 6.42%)</title><rect x="885.3" y="531.0" width="75.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="888.3" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,541 samples, 6.42%)</title><rect x="885.3" y="515.0" width="75.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.3" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,541 samples, 6.42%)</title><rect x="885.3" y="499.0" width="75.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="888.3" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (131 samples, 0.08%)</title><rect x="885.3" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="888.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (131 samples, 0.08%)</title><rect x="885.3" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="888.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (117 samples, 0.07%)</title><rect x="885.3" y="451.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="888.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (117 samples, 0.07%)</title><rect x="885.3" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="888.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (117 samples, 0.07%)</title><rect x="885.3" y="419.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="888.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.run (10,410 samples, 6.34%)</title><rect x="886.2" y="483.0" width="74.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.2" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$2 (10,410 samples, 6.34%)</title><rect x="886.2" y="467.0" width="74.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.2" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (10,410 samples, 6.34%)</title><rect x="886.2" y="451.0" width="74.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.2" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (135 samples, 0.08%)</title><rect x="886.2" y="435.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="889.2" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (116 samples, 0.07%)</title><rect x="887.2" y="435.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="890.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (625 samples, 0.38%)</title><rect x="888.0" y="435.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (625 samples, 0.38%)</title><rect x="888.0" y="419.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (455 samples, 0.28%)</title><rect x="888.0" y="403.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (455 samples, 0.28%)</title><rect x="888.0" y="387.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.0" y="398.0"></text>
</g>
<g>
<title>byte[] (455 samples, 0.28%)</title><rect x="888.0" y="371.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="891.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (170 samples, 0.10%)</title><rect x="891.3" y="403.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.3" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (170 samples, 0.10%)</title><rect x="891.3" y="387.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="894.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (438 samples, 0.27%)</title><rect x="892.5" y="435.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="895.5" y="446.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.11%)</title><rect x="892.5" y="419.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="895.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (162 samples, 0.10%)</title><rect x="893.8" y="419.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="896.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (95 samples, 0.06%)</title><rect x="895.0" y="419.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="898.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (9,096 samples, 5.54%)</title><rect x="895.7" y="435.0" width="65.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.7" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,190 samples, 0.72%)</title><rect x="895.7" y="419.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,190 samples, 0.72%)</title><rect x="895.7" y="403.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,190 samples, 0.72%)</title><rect x="895.7" y="387.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,190 samples, 0.72%)</title><rect x="895.7" y="371.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,190 samples, 0.72%)</title><rect x="895.7" y="355.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (715 samples, 0.44%)</title><rect x="895.7" y="339.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (715 samples, 0.44%)</title><rect x="895.7" y="323.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (715 samples, 0.44%)</title><rect x="895.7" y="307.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (715 samples, 0.44%)</title><rect x="895.7" y="291.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (715 samples, 0.44%)</title><rect x="895.7" y="275.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (715 samples, 0.44%)</title><rect x="895.7" y="259.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (241 samples, 0.15%)</title><rect x="895.7" y="243.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (241 samples, 0.15%)</title><rect x="895.7" y="227.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (241 samples, 0.15%)</title><rect x="895.7" y="211.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (241 samples, 0.15%)</title><rect x="895.7" y="195.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (241 samples, 0.15%)</title><rect x="895.7" y="179.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (241 samples, 0.15%)</title><rect x="895.7" y="163.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (241 samples, 0.15%)</title><rect x="895.7" y="147.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (241 samples, 0.15%)</title><rect x="895.7" y="131.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (241 samples, 0.15%)</title><rect x="895.7" y="115.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.7" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (241 samples, 0.15%)</title><rect x="895.7" y="99.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (241 samples, 0.15%)</title><rect x="895.7" y="83.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (241 samples, 0.15%)</title><rect x="895.7" y="67.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (120 samples, 0.07%)</title><rect x="895.7" y="51.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="898.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (121 samples, 0.07%)</title><rect x="896.5" y="51.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.5" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (121 samples, 0.07%)</title><rect x="896.5" y="35.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="899.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (474 samples, 0.29%)</title><rect x="897.4" y="243.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (474 samples, 0.29%)</title><rect x="897.4" y="227.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (474 samples, 0.29%)</title><rect x="897.4" y="211.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (474 samples, 0.29%)</title><rect x="897.4" y="195.0" width="3.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="900.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$149/388218747.apply (475 samples, 0.29%)</title><rect x="900.8" y="339.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="903.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (475 samples, 0.29%)</title><rect x="900.8" y="323.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (475 samples, 0.29%)</title><rect x="900.8" y="307.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="903.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (475 samples, 0.29%)</title><rect x="900.8" y="291.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="903.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (249 samples, 0.15%)</title><rect x="904.2" y="419.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (249 samples, 0.15%)</title><rect x="904.2" y="403.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$157/1694929854.apply (249 samples, 0.15%)</title><rect x="904.2" y="387.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (249 samples, 0.15%)</title><rect x="904.2" y="371.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (249 samples, 0.15%)</title><rect x="904.2" y="355.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.2" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (249 samples, 0.15%)</title><rect x="904.2" y="339.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.2" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (249 samples, 0.15%)</title><rect x="904.2" y="323.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="907.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (232 samples, 0.14%)</title><rect x="906.0" y="419.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (232 samples, 0.14%)</title><rect x="906.0" y="403.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (232 samples, 0.14%)</title><rect x="906.0" y="387.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (232 samples, 0.14%)</title><rect x="906.0" y="371.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="909.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (243 samples, 0.15%)</title><rect x="907.7" y="419.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (243 samples, 0.15%)</title><rect x="907.7" y="403.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (243 samples, 0.15%)</title><rect x="907.7" y="387.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="910.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (243 samples, 0.15%)</title><rect x="907.7" y="371.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="910.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (7,182 samples, 4.37%)</title><rect x="909.4" y="419.0" width="51.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="912.4" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (153 samples, 0.09%)</title><rect x="909.4" y="403.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="912.4" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (153 samples, 0.09%)</title><rect x="909.4" y="387.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="912.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,294 samples, 0.79%)</title><rect x="910.5" y="403.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.5" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (82 samples, 0.05%)</title><rect x="910.5" y="387.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="913.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,212 samples, 0.74%)</title><rect x="911.1" y="387.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.1" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (125 samples, 0.08%)</title><rect x="911.1" y="371.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="914.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (682 samples, 0.42%)</title><rect x="912.0" y="371.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (682 samples, 0.42%)</title><rect x="912.0" y="355.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (682 samples, 0.42%)</title><rect x="912.0" y="339.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="915.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (682 samples, 0.42%)</title><rect x="912.0" y="323.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (247 samples, 0.15%)</title><rect x="912.0" y="307.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (247 samples, 0.15%)</title><rect x="912.0" y="291.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.0" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (247 samples, 0.15%)</title><rect x="912.0" y="275.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (247 samples, 0.15%)</title><rect x="912.0" y="259.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="915.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (247 samples, 0.15%)</title><rect x="912.0" y="243.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (247 samples, 0.15%)</title><rect x="912.0" y="227.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (247 samples, 0.15%)</title><rect x="912.0" y="211.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (247 samples, 0.15%)</title><rect x="912.0" y="195.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (247 samples, 0.15%)</title><rect x="912.0" y="179.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (247 samples, 0.15%)</title><rect x="912.0" y="163.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (247 samples, 0.15%)</title><rect x="912.0" y="147.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (247 samples, 0.15%)</title><rect x="912.0" y="131.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.0" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (136 samples, 0.08%)</title><rect x="912.0" y="115.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="915.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (111 samples, 0.07%)</title><rect x="913.0" y="115.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.0" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (111 samples, 0.07%)</title><rect x="913.0" y="99.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="916.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (435 samples, 0.26%)</title><rect x="913.8" y="307.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (435 samples, 0.26%)</title><rect x="913.8" y="291.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="916.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (435 samples, 0.26%)</title><rect x="913.8" y="275.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.8" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (435 samples, 0.26%)</title><rect x="913.8" y="259.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="916.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (105 samples, 0.06%)</title><rect x="916.9" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (105 samples, 0.06%)</title><rect x="916.9" y="355.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="919.9" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (168 samples, 0.10%)</title><rect x="917.7" y="371.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="920.7" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (132 samples, 0.08%)</title><rect x="918.9" y="371.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (132 samples, 0.08%)</title><rect x="918.9" y="355.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="921.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (75 samples, 0.05%)</title><rect x="919.8" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.05%)</title><rect x="919.8" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="922.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.05%)</title><rect x="919.8" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="922.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (75 samples, 0.05%)</title><rect x="919.8" y="355.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.8" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (75 samples, 0.05%)</title><rect x="919.8" y="339.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="922.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (203 samples, 0.12%)</title><rect x="920.4" y="403.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (80 samples, 0.05%)</title><rect x="920.4" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.05%)</title><rect x="920.4" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="923.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.05%)</title><rect x="920.4" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (80 samples, 0.05%)</title><rect x="920.4" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.4" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (80 samples, 0.05%)</title><rect x="920.4" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="923.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (123 samples, 0.07%)</title><rect x="920.9" y="387.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.07%)</title><rect x="920.9" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="923.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.07%)</title><rect x="920.9" y="355.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="923.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$142/1659247134.get$Lambda (123 samples, 0.07%)</title><rect x="920.9" y="339.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.9" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$142 (123 samples, 0.07%)</title><rect x="920.9" y="323.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="923.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (184 samples, 0.11%)</title><rect x="921.8" y="403.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (184 samples, 0.11%)</title><rect x="921.8" y="387.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="924.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (184 samples, 0.11%)</title><rect x="921.8" y="371.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.8" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (169 samples, 0.10%)</title><rect x="921.8" y="355.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.8" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (169 samples, 0.10%)</title><rect x="921.8" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (136 samples, 0.08%)</title><rect x="922.1" y="323.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (136 samples, 0.08%)</title><rect x="922.1" y="307.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (136 samples, 0.08%)</title><rect x="922.1" y="291.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="925.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (861 samples, 0.52%)</title><rect x="923.2" y="403.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.2" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (126 samples, 0.08%)</title><rect x="923.2" y="387.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="926.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (735 samples, 0.45%)</title><rect x="924.1" y="387.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="927.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (735 samples, 0.45%)</title><rect x="924.1" y="371.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (735 samples, 0.45%)</title><rect x="924.1" y="355.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (735 samples, 0.45%)</title><rect x="924.1" y="339.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (735 samples, 0.45%)</title><rect x="924.1" y="323.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (735 samples, 0.45%)</title><rect x="924.1" y="307.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="927.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (735 samples, 0.45%)</title><rect x="924.1" y="291.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (239 samples, 0.15%)</title><rect x="924.1" y="275.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (239 samples, 0.15%)</title><rect x="924.1" y="259.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.1" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (239 samples, 0.15%)</title><rect x="924.1" y="243.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="927.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (239 samples, 0.15%)</title><rect x="924.1" y="227.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (239 samples, 0.15%)</title><rect x="924.1" y="211.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="927.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (239 samples, 0.15%)</title><rect x="924.1" y="195.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="927.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (239 samples, 0.15%)</title><rect x="924.1" y="179.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (239 samples, 0.15%)</title><rect x="924.1" y="163.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (239 samples, 0.15%)</title><rect x="924.1" y="147.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (239 samples, 0.15%)</title><rect x="924.1" y="131.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="927.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (239 samples, 0.15%)</title><rect x="924.1" y="115.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (239 samples, 0.15%)</title><rect x="924.1" y="99.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.1" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (118 samples, 0.07%)</title><rect x="924.1" y="83.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="927.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (121 samples, 0.07%)</title><rect x="924.9" y="83.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="927.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (121 samples, 0.07%)</title><rect x="924.9" y="67.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="927.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (496 samples, 0.30%)</title><rect x="925.8" y="275.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (496 samples, 0.30%)</title><rect x="925.8" y="259.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="928.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (496 samples, 0.30%)</title><rect x="925.8" y="243.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="928.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (496 samples, 0.30%)</title><rect x="925.8" y="227.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="928.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (4,412 samples, 2.69%)</title><rect x="929.3" y="403.0" width="31.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.3" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (142 samples, 0.09%)</title><rect x="929.3" y="387.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="932.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (143 samples, 0.09%)</title><rect x="930.4" y="387.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (143 samples, 0.09%)</title><rect x="930.4" y="371.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (143 samples, 0.09%)</title><rect x="930.4" y="355.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="933.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (117 samples, 0.07%)</title><rect x="931.4" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (117 samples, 0.07%)</title><rect x="931.4" y="371.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="934.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (4,010 samples, 2.44%)</title><rect x="932.2" y="387.0" width="28.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="935.2" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (181 samples, 0.11%)</title><rect x="932.2" y="371.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (181 samples, 0.11%)</title><rect x="932.2" y="355.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="935.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,627 samples, 0.99%)</title><rect x="933.5" y="371.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (85 samples, 0.05%)</title><rect x="933.5" y="355.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="936.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,542 samples, 0.94%)</title><rect x="934.1" y="355.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.1" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (123 samples, 0.07%)</title><rect x="934.1" y="339.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="937.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (110 samples, 0.07%)</title><rect x="935.0" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.0" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (110 samples, 0.07%)</title><rect x="935.0" y="323.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="938.0" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (135 samples, 0.08%)</title><rect x="935.8" y="339.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="938.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (105 samples, 0.06%)</title><rect x="936.8" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="939.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (105 samples, 0.06%)</title><rect x="936.8" y="323.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="939.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,069 samples, 0.65%)</title><rect x="937.5" y="339.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,069 samples, 0.65%)</title><rect x="937.5" y="323.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,069 samples, 0.65%)</title><rect x="937.5" y="307.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (231 samples, 0.14%)</title><rect x="937.5" y="291.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="940.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (231 samples, 0.14%)</title><rect x="937.5" y="275.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (231 samples, 0.14%)</title><rect x="937.5" y="259.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="940.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (231 samples, 0.14%)</title><rect x="937.5" y="243.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (231 samples, 0.14%)</title><rect x="937.5" y="227.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="940.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (231 samples, 0.14%)</title><rect x="937.5" y="211.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="940.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (231 samples, 0.14%)</title><rect x="937.5" y="195.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.5" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (109 samples, 0.07%)</title><rect x="937.5" y="179.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="940.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (122 samples, 0.07%)</title><rect x="938.3" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="941.3" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (122 samples, 0.07%)</title><rect x="938.3" y="163.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="941.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (838 samples, 0.51%)</title><rect x="939.2" y="291.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.2" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (200 samples, 0.12%)</title><rect x="939.2" y="275.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="942.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (153 samples, 0.09%)</title><rect x="940.6" y="275.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="943.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (153 samples, 0.09%)</title><rect x="940.6" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="943.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$95/217324818.get$Lambda (66 samples, 0.04%)</title><rect x="940.6" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="943.6" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$95 (66 samples, 0.04%)</title><rect x="940.6" y="227.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="943.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.get$Lambda (87 samples, 0.05%)</title><rect x="941.1" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="944.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$97 (87 samples, 0.05%)</title><rect x="941.1" y="227.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="944.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (102 samples, 0.06%)</title><rect x="941.7" y="275.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (102 samples, 0.06%)</title><rect x="941.7" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.7" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (102 samples, 0.06%)</title><rect x="941.7" y="243.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="944.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (383 samples, 0.23%)</title><rect x="942.5" y="275.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (383 samples, 0.23%)</title><rect x="942.5" y="259.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="945.5" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (107 samples, 0.07%)</title><rect x="945.2" y="371.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="948.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (122 samples, 0.07%)</title><rect x="946.0" y="371.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (122 samples, 0.07%)</title><rect x="946.0" y="355.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="949.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (156 samples, 0.10%)</title><rect x="946.9" y="371.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="949.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (156 samples, 0.10%)</title><rect x="946.9" y="355.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="949.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (338 samples, 0.21%)</title><rect x="948.2" y="371.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="951.2" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (97 samples, 0.06%)</title><rect x="948.2" y="355.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="951.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (241 samples, 0.15%)</title><rect x="948.9" y="355.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (241 samples, 0.15%)</title><rect x="948.9" y="339.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (241 samples, 0.15%)</title><rect x="948.9" y="323.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (241 samples, 0.15%)</title><rect x="948.9" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (241 samples, 0.15%)</title><rect x="948.9" y="291.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (241 samples, 0.15%)</title><rect x="948.9" y="275.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (241 samples, 0.15%)</title><rect x="948.9" y="259.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (241 samples, 0.15%)</title><rect x="948.9" y="243.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (241 samples, 0.15%)</title><rect x="948.9" y="227.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (241 samples, 0.15%)</title><rect x="948.9" y="211.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (241 samples, 0.15%)</title><rect x="948.9" y="195.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (241 samples, 0.15%)</title><rect x="948.9" y="179.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (241 samples, 0.15%)</title><rect x="948.9" y="163.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (121 samples, 0.07%)</title><rect x="948.9" y="147.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="951.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (120 samples, 0.07%)</title><rect x="949.8" y="147.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (120 samples, 0.07%)</title><rect x="949.8" y="131.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="952.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (1,447 samples, 0.88%)</title><rect x="950.6" y="371.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.6" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (432 samples, 0.26%)</title><rect x="950.6" y="355.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="953.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (143 samples, 0.09%)</title><rect x="950.6" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (143 samples, 0.09%)</title><rect x="950.6" y="323.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="953.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (289 samples, 0.18%)</title><rect x="951.7" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="954.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (289 samples, 0.18%)</title><rect x="951.7" y="323.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="954.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (73 samples, 0.04%)</title><rect x="953.7" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="956.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (73 samples, 0.04%)</title><rect x="953.7" y="339.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="956.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (251 samples, 0.15%)</title><rect x="954.3" y="355.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (251 samples, 0.15%)</title><rect x="954.3" y="339.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (251 samples, 0.15%)</title><rect x="954.3" y="323.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (251 samples, 0.15%)</title><rect x="954.3" y="307.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="957.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (396 samples, 0.24%)</title><rect x="956.1" y="355.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="959.1" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (124 samples, 0.08%)</title><rect x="956.1" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.1" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (124 samples, 0.08%)</title><rect x="956.1" y="323.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="959.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (272 samples, 0.17%)</title><rect x="957.0" y="339.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="960.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.05%)</title><rect x="957.0" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.05%)</title><rect x="957.0" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$88/431735617.get$Lambda (75 samples, 0.05%)</title><rect x="957.0" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="960.0" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$88 (75 samples, 0.05%)</title><rect x="957.0" y="275.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="960.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (197 samples, 0.12%)</title><rect x="957.5" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.5" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (197 samples, 0.12%)</title><rect x="957.5" y="307.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="960.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (295 samples, 0.18%)</title><rect x="958.9" y="355.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (295 samples, 0.18%)</title><rect x="958.9" y="339.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="961.9" y="350.0"></text>
</g>
<g>
<title>[Worker_5 tid=27328] (10,574 samples, 6.44%)</title><rect x="961.0" y="547.0" width="76.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="964.0" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (10,574 samples, 6.44%)</title><rect x="961.0" y="531.0" width="76.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="964.0" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,574 samples, 6.44%)</title><rect x="961.0" y="515.0" width="76.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="964.0" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,574 samples, 6.44%)</title><rect x="961.0" y="499.0" width="76.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="964.0" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (137 samples, 0.08%)</title><rect x="961.0" y="483.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="964.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (137 samples, 0.08%)</title><rect x="961.0" y="467.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="964.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (132 samples, 0.08%)</title><rect x="961.0" y="451.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (132 samples, 0.08%)</title><rect x="961.0" y="435.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (132 samples, 0.08%)</title><rect x="961.0" y="419.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="964.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.run (10,437 samples, 6.36%)</title><rect x="962.0" y="483.0" width="75.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.0" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$2 (10,437 samples, 6.36%)</title><rect x="962.0" y="467.0" width="75.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.0" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (10,437 samples, 6.36%)</title><rect x="962.0" y="451.0" width="75.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="965.0" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (138 samples, 0.08%)</title><rect x="962.0" y="435.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="965.0" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (91 samples, 0.06%)</title><rect x="963.0" y="435.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="966.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (625 samples, 0.38%)</title><rect x="963.7" y="435.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="966.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (625 samples, 0.38%)</title><rect x="963.7" y="419.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (460 samples, 0.28%)</title><rect x="963.7" y="403.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="966.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (460 samples, 0.28%)</title><rect x="963.7" y="387.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="966.7" y="398.0"></text>
</g>
<g>
<title>byte[] (460 samples, 0.28%)</title><rect x="963.7" y="371.0" width="3.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="966.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (165 samples, 0.10%)</title><rect x="967.0" y="403.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="970.0" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (165 samples, 0.10%)</title><rect x="967.0" y="387.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="970.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (463 samples, 0.28%)</title><rect x="968.2" y="435.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.2" y="446.0"></text>
</g>
<g>
<title>byte[] (179 samples, 0.11%)</title><rect x="968.2" y="419.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="971.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (158 samples, 0.10%)</title><rect x="969.4" y="419.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="972.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (126 samples, 0.08%)</title><rect x="970.6" y="419.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="973.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (9,120 samples, 5.55%)</title><rect x="971.5" y="435.0" width="65.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.5" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,141 samples, 0.69%)</title><rect x="971.5" y="419.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,141 samples, 0.69%)</title><rect x="971.5" y="403.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,141 samples, 0.69%)</title><rect x="971.5" y="387.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,141 samples, 0.69%)</title><rect x="971.5" y="371.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="974.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,141 samples, 0.69%)</title><rect x="971.5" y="355.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (684 samples, 0.42%)</title><rect x="971.5" y="339.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (684 samples, 0.42%)</title><rect x="971.5" y="323.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="974.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (684 samples, 0.42%)</title><rect x="971.5" y="307.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="974.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (684 samples, 0.42%)</title><rect x="971.5" y="291.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="974.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (684 samples, 0.42%)</title><rect x="971.5" y="275.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (684 samples, 0.42%)</title><rect x="971.5" y="259.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (212 samples, 0.13%)</title><rect x="971.5" y="243.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (212 samples, 0.13%)</title><rect x="971.5" y="227.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="974.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (212 samples, 0.13%)</title><rect x="971.5" y="211.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (212 samples, 0.13%)</title><rect x="971.5" y="195.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (212 samples, 0.13%)</title><rect x="971.5" y="179.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (212 samples, 0.13%)</title><rect x="971.5" y="163.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (212 samples, 0.13%)</title><rect x="971.5" y="147.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="974.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (212 samples, 0.13%)</title><rect x="971.5" y="131.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="974.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (212 samples, 0.13%)</title><rect x="971.5" y="115.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="974.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (212 samples, 0.13%)</title><rect x="971.5" y="99.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (212 samples, 0.13%)</title><rect x="971.5" y="83.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (212 samples, 0.13%)</title><rect x="971.5" y="67.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (104 samples, 0.06%)</title><rect x="971.5" y="51.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="974.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (108 samples, 0.07%)</title><rect x="972.2" y="51.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.2" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (108 samples, 0.07%)</title><rect x="972.2" y="35.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="975.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (472 samples, 0.29%)</title><rect x="973.0" y="243.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (472 samples, 0.29%)</title><rect x="973.0" y="227.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="976.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (472 samples, 0.29%)</title><rect x="973.0" y="211.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.0" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (472 samples, 0.29%)</title><rect x="973.0" y="195.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="976.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$149/388218747.apply (457 samples, 0.28%)</title><rect x="976.4" y="339.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (457 samples, 0.28%)</title><rect x="976.4" y="323.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (457 samples, 0.28%)</title><rect x="976.4" y="307.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (457 samples, 0.28%)</title><rect x="976.4" y="291.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="979.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (210 samples, 0.13%)</title><rect x="979.7" y="419.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (210 samples, 0.13%)</title><rect x="979.7" y="403.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="982.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$157/1694929854.apply (210 samples, 0.13%)</title><rect x="979.7" y="387.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (210 samples, 0.13%)</title><rect x="979.7" y="371.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (210 samples, 0.13%)</title><rect x="979.7" y="355.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="982.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (210 samples, 0.13%)</title><rect x="979.7" y="339.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (210 samples, 0.13%)</title><rect x="979.7" y="323.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="982.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (251 samples, 0.15%)</title><rect x="981.2" y="419.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (251 samples, 0.15%)</title><rect x="981.2" y="403.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (251 samples, 0.15%)</title><rect x="981.2" y="387.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (251 samples, 0.15%)</title><rect x="981.2" y="371.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="984.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (227 samples, 0.14%)</title><rect x="983.0" y="419.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (227 samples, 0.14%)</title><rect x="983.0" y="403.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="986.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (227 samples, 0.14%)</title><rect x="983.0" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (227 samples, 0.14%)</title><rect x="983.0" y="371.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="986.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (7,291 samples, 4.44%)</title><rect x="984.6" y="419.0" width="52.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.6" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (175 samples, 0.11%)</title><rect x="984.6" y="403.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.6" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (175 samples, 0.11%)</title><rect x="984.6" y="387.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="987.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,284 samples, 0.78%)</title><rect x="985.9" y="403.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.9" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (78 samples, 0.05%)</title><rect x="985.9" y="387.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="988.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,206 samples, 0.73%)</title><rect x="986.5" y="387.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.5" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (117 samples, 0.07%)</title><rect x="986.5" y="371.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="989.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (713 samples, 0.43%)</title><rect x="987.3" y="371.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="990.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (713 samples, 0.43%)</title><rect x="987.3" y="355.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (713 samples, 0.43%)</title><rect x="987.3" y="339.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (713 samples, 0.43%)</title><rect x="987.3" y="323.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (253 samples, 0.15%)</title><rect x="987.3" y="307.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (253 samples, 0.15%)</title><rect x="987.3" y="291.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="990.3" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (253 samples, 0.15%)</title><rect x="987.3" y="275.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (253 samples, 0.15%)</title><rect x="987.3" y="259.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (253 samples, 0.15%)</title><rect x="987.3" y="243.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (253 samples, 0.15%)</title><rect x="987.3" y="227.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="990.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (253 samples, 0.15%)</title><rect x="987.3" y="211.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="990.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (253 samples, 0.15%)</title><rect x="987.3" y="195.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (253 samples, 0.15%)</title><rect x="987.3" y="179.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (253 samples, 0.15%)</title><rect x="987.3" y="163.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (253 samples, 0.15%)</title><rect x="987.3" y="147.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="990.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (253 samples, 0.15%)</title><rect x="987.3" y="131.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.3" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (123 samples, 0.07%)</title><rect x="987.3" y="115.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="990.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (130 samples, 0.08%)</title><rect x="988.2" y="115.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="991.2" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (130 samples, 0.08%)</title><rect x="988.2" y="99.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="991.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (460 samples, 0.28%)</title><rect x="989.1" y="307.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (460 samples, 0.28%)</title><rect x="989.1" y="291.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.1" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (460 samples, 0.28%)</title><rect x="989.1" y="275.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.1" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (460 samples, 0.28%)</title><rect x="989.1" y="259.0" width="3.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="992.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (124 samples, 0.08%)</title><rect x="992.4" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="995.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (124 samples, 0.08%)</title><rect x="992.4" y="355.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="995.4" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (126 samples, 0.08%)</title><rect x="993.3" y="371.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="996.3" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (126 samples, 0.08%)</title><rect x="994.2" y="371.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (126 samples, 0.08%)</title><rect x="994.2" y="355.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="997.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (63 samples, 0.04%)</title><rect x="995.1" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.04%)</title><rect x="995.1" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.04%)</title><rect x="995.1" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (63 samples, 0.04%)</title><rect x="995.1" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.1" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (63 samples, 0.04%)</title><rect x="995.1" y="339.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="998.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (213 samples, 0.13%)</title><rect x="995.6" y="403.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (85 samples, 0.05%)</title><rect x="995.6" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (85 samples, 0.05%)</title><rect x="995.6" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (85 samples, 0.05%)</title><rect x="995.6" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (85 samples, 0.05%)</title><rect x="995.6" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.6" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (85 samples, 0.05%)</title><rect x="995.6" y="323.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="998.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (128 samples, 0.08%)</title><rect x="996.2" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (128 samples, 0.08%)</title><rect x="996.2" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (128 samples, 0.08%)</title><rect x="996.2" y="355.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$142/1659247134.get$Lambda (128 samples, 0.08%)</title><rect x="996.2" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.2" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$142 (128 samples, 0.08%)</title><rect x="996.2" y="323.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="999.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (177 samples, 0.11%)</title><rect x="997.1" y="403.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (177 samples, 0.11%)</title><rect x="997.1" y="387.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1000.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (177 samples, 0.11%)</title><rect x="997.1" y="371.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.1" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (169 samples, 0.10%)</title><rect x="997.1" y="355.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1000.1" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (169 samples, 0.10%)</title><rect x="997.1" y="339.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1000.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (135 samples, 0.08%)</title><rect x="997.3" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (135 samples, 0.08%)</title><rect x="997.3" y="307.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (135 samples, 0.08%)</title><rect x="997.3" y="291.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1000.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (852 samples, 0.52%)</title><rect x="998.4" y="403.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.4" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (112 samples, 0.07%)</title><rect x="998.4" y="387.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1001.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (740 samples, 0.45%)</title><rect x="999.2" y="387.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1002.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (740 samples, 0.45%)</title><rect x="999.2" y="371.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (740 samples, 0.45%)</title><rect x="999.2" y="355.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (740 samples, 0.45%)</title><rect x="999.2" y="339.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (740 samples, 0.45%)</title><rect x="999.2" y="323.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (740 samples, 0.45%)</title><rect x="999.2" y="307.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (740 samples, 0.45%)</title><rect x="999.2" y="291.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (246 samples, 0.15%)</title><rect x="999.2" y="275.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (246 samples, 0.15%)</title><rect x="999.2" y="259.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1002.2" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (246 samples, 0.15%)</title><rect x="999.2" y="243.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (246 samples, 0.15%)</title><rect x="999.2" y="227.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1002.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (246 samples, 0.15%)</title><rect x="999.2" y="211.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (246 samples, 0.15%)</title><rect x="999.2" y="195.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (246 samples, 0.15%)</title><rect x="999.2" y="179.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (246 samples, 0.15%)</title><rect x="999.2" y="163.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1002.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (246 samples, 0.15%)</title><rect x="999.2" y="147.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (246 samples, 0.15%)</title><rect x="999.2" y="131.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (246 samples, 0.15%)</title><rect x="999.2" y="115.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (246 samples, 0.15%)</title><rect x="999.2" y="99.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.2" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (135 samples, 0.08%)</title><rect x="999.2" y="83.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1002.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (111 samples, 0.07%)</title><rect x="1000.1" y="83.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (111 samples, 0.07%)</title><rect x="1000.1" y="67.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1003.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (494 samples, 0.30%)</title><rect x="1000.9" y="275.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1003.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (494 samples, 0.30%)</title><rect x="1000.9" y="259.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.9" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (494 samples, 0.30%)</title><rect x="1000.9" y="243.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.9" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (494 samples, 0.30%)</title><rect x="1000.9" y="227.0" width="3.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1003.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (4,527 samples, 2.76%)</title><rect x="1004.5" y="403.0" width="32.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.5" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (159 samples, 0.10%)</title><rect x="1004.5" y="387.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1007.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (158 samples, 0.10%)</title><rect x="1005.6" y="387.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1008.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (158 samples, 0.10%)</title><rect x="1005.6" y="371.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1008.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (158 samples, 0.10%)</title><rect x="1005.6" y="355.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1008.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (114 samples, 0.07%)</title><rect x="1006.8" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1009.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (114 samples, 0.07%)</title><rect x="1006.8" y="371.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1009.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (4,096 samples, 2.49%)</title><rect x="1007.6" y="387.0" width="29.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.6" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (165 samples, 0.10%)</title><rect x="1007.6" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1010.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (165 samples, 0.10%)</title><rect x="1007.6" y="355.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1010.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,709 samples, 1.04%)</title><rect x="1008.8" y="371.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (70 samples, 0.04%)</title><rect x="1008.8" y="355.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1011.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,639 samples, 1.00%)</title><rect x="1009.3" y="355.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.3" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (126 samples, 0.08%)</title><rect x="1009.3" y="339.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1012.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (109 samples, 0.07%)</title><rect x="1010.2" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.2" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (109 samples, 0.07%)</title><rect x="1010.2" y="323.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1013.2" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (158 samples, 0.10%)</title><rect x="1011.0" y="339.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1014.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (107 samples, 0.07%)</title><rect x="1012.1" y="339.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (107 samples, 0.07%)</title><rect x="1012.1" y="323.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1015.1" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,139 samples, 0.69%)</title><rect x="1012.9" y="339.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1015.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,139 samples, 0.69%)</title><rect x="1012.9" y="323.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1015.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,139 samples, 0.69%)</title><rect x="1012.9" y="307.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1015.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (233 samples, 0.14%)</title><rect x="1012.9" y="291.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (233 samples, 0.14%)</title><rect x="1012.9" y="275.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1015.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (233 samples, 0.14%)</title><rect x="1012.9" y="259.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (233 samples, 0.14%)</title><rect x="1012.9" y="243.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (233 samples, 0.14%)</title><rect x="1012.9" y="227.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1015.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (233 samples, 0.14%)</title><rect x="1012.9" y="211.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (233 samples, 0.14%)</title><rect x="1012.9" y="195.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.9" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (118 samples, 0.07%)</title><rect x="1012.9" y="179.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1015.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (115 samples, 0.07%)</title><rect x="1013.7" y="179.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1016.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (115 samples, 0.07%)</title><rect x="1013.7" y="163.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1016.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (906 samples, 0.55%)</title><rect x="1014.5" y="291.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.5" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (199 samples, 0.12%)</title><rect x="1014.5" y="275.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1017.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (176 samples, 0.11%)</title><rect x="1016.0" y="275.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1019.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (176 samples, 0.11%)</title><rect x="1016.0" y="259.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1019.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$95/217324818.get$Lambda (94 samples, 0.06%)</title><rect x="1016.0" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1019.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$95 (94 samples, 0.06%)</title><rect x="1016.0" y="227.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1019.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.get$Lambda (82 samples, 0.05%)</title><rect x="1016.7" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$97 (82 samples, 0.05%)</title><rect x="1016.7" y="227.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1019.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (131 samples, 0.08%)</title><rect x="1017.2" y="275.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (131 samples, 0.08%)</title><rect x="1017.2" y="259.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.2" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (131 samples, 0.08%)</title><rect x="1017.2" y="243.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1020.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (400 samples, 0.24%)</title><rect x="1018.2" y="275.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1021.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (400 samples, 0.24%)</title><rect x="1018.2" y="259.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1021.2" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (114 samples, 0.07%)</title><rect x="1021.1" y="371.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1024.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (101 samples, 0.06%)</title><rect x="1021.9" y="371.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (101 samples, 0.06%)</title><rect x="1021.9" y="355.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1024.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (151 samples, 0.09%)</title><rect x="1022.6" y="371.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1025.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (151 samples, 0.09%)</title><rect x="1022.6" y="355.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1025.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (41 samples, 0.02%)</title><rect x="1023.7" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1026.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (41 samples, 0.02%)</title><rect x="1023.7" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (41 samples, 0.02%)</title><rect x="1023.7" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1026.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (38 samples, 0.02%)</title><rect x="1023.7" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1026.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (38 samples, 0.02%)</title><rect x="1023.7" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1026.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (339 samples, 0.21%)</title><rect x="1024.0" y="371.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1027.0" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (107 samples, 0.07%)</title><rect x="1024.0" y="355.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1027.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (232 samples, 0.14%)</title><rect x="1024.8" y="355.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (232 samples, 0.14%)</title><rect x="1024.8" y="339.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1027.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (232 samples, 0.14%)</title><rect x="1024.8" y="323.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1027.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (232 samples, 0.14%)</title><rect x="1024.8" y="307.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1027.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (232 samples, 0.14%)</title><rect x="1024.8" y="291.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1027.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (232 samples, 0.14%)</title><rect x="1024.8" y="275.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (232 samples, 0.14%)</title><rect x="1024.8" y="259.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1027.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (232 samples, 0.14%)</title><rect x="1024.8" y="243.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (232 samples, 0.14%)</title><rect x="1024.8" y="227.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1027.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (232 samples, 0.14%)</title><rect x="1024.8" y="211.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (232 samples, 0.14%)</title><rect x="1024.8" y="195.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (232 samples, 0.14%)</title><rect x="1024.8" y="179.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1027.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (232 samples, 0.14%)</title><rect x="1024.8" y="163.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1027.8" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (117 samples, 0.07%)</title><rect x="1024.8" y="147.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1027.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (115 samples, 0.07%)</title><rect x="1025.6" y="147.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1028.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (115 samples, 0.07%)</title><rect x="1025.6" y="131.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1028.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (1,476 samples, 0.90%)</title><rect x="1026.4" y="371.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1029.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (415 samples, 0.25%)</title><rect x="1026.4" y="355.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1029.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (147 samples, 0.09%)</title><rect x="1026.4" y="339.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (147 samples, 0.09%)</title><rect x="1026.4" y="323.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1029.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (268 samples, 0.16%)</title><rect x="1027.5" y="339.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1030.5" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (268 samples, 0.16%)</title><rect x="1027.5" y="323.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1030.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (75 samples, 0.05%)</title><rect x="1029.4" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1032.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (75 samples, 0.05%)</title><rect x="1029.4" y="339.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1032.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (248 samples, 0.15%)</title><rect x="1029.9" y="355.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1032.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (248 samples, 0.15%)</title><rect x="1029.9" y="339.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1032.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (248 samples, 0.15%)</title><rect x="1029.9" y="323.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1032.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (248 samples, 0.15%)</title><rect x="1029.9" y="307.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1032.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (420 samples, 0.26%)</title><rect x="1031.7" y="355.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1034.7" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (115 samples, 0.07%)</title><rect x="1031.7" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1034.7" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (115 samples, 0.07%)</title><rect x="1031.7" y="323.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1034.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (305 samples, 0.19%)</title><rect x="1032.5" y="339.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.04%)</title><rect x="1032.5" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.04%)</title><rect x="1032.5" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$88/431735617.get$Lambda (73 samples, 0.04%)</title><rect x="1032.5" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.5" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$88 (73 samples, 0.04%)</title><rect x="1032.5" y="275.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1035.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (232 samples, 0.14%)</title><rect x="1033.1" y="323.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1036.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (232 samples, 0.14%)</title><rect x="1033.1" y="307.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1036.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (318 samples, 0.19%)</title><rect x="1034.7" y="355.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1037.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (318 samples, 0.19%)</title><rect x="1034.7" y="339.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1037.7" y="350.0"></text>
</g>
<g>
<title>[Worker_6 tid=27331] (10,639 samples, 6.48%)</title><rect x="1037.0" y="547.0" width="76.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1040.0" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (10,639 samples, 6.48%)</title><rect x="1037.0" y="531.0" width="76.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1040.0" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,639 samples, 6.48%)</title><rect x="1037.0" y="515.0" width="76.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1040.0" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,639 samples, 6.48%)</title><rect x="1037.0" y="499.0" width="76.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.0" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (123 samples, 0.07%)</title><rect x="1037.0" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1040.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (123 samples, 0.07%)</title><rect x="1037.0" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1040.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (114 samples, 0.07%)</title><rect x="1037.0" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (114 samples, 0.07%)</title><rect x="1037.0" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1040.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (114 samples, 0.07%)</title><rect x="1037.0" y="419.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1040.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.run (10,516 samples, 6.40%)</title><rect x="1037.9" y="483.0" width="75.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.9" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$2 (10,516 samples, 6.40%)</title><rect x="1037.9" y="467.0" width="75.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.9" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (10,516 samples, 6.40%)</title><rect x="1037.9" y="451.0" width="75.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.9" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (153 samples, 0.09%)</title><rect x="1037.9" y="435.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1040.9" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (113 samples, 0.07%)</title><rect x="1039.0" y="435.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1042.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (671 samples, 0.41%)</title><rect x="1039.8" y="435.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1042.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (671 samples, 0.41%)</title><rect x="1039.8" y="419.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1042.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (486 samples, 0.30%)</title><rect x="1039.8" y="403.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (486 samples, 0.30%)</title><rect x="1039.8" y="387.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.8" y="398.0"></text>
</g>
<g>
<title>byte[] (486 samples, 0.30%)</title><rect x="1039.8" y="371.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1042.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (185 samples, 0.11%)</title><rect x="1043.3" y="403.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1046.3" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (185 samples, 0.11%)</title><rect x="1043.3" y="387.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1046.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (466 samples, 0.28%)</title><rect x="1044.6" y="435.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.6" y="446.0"></text>
</g>
<g>
<title>byte[] (178 samples, 0.11%)</title><rect x="1044.6" y="419.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1047.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (170 samples, 0.10%)</title><rect x="1045.9" y="419.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1048.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (118 samples, 0.07%)</title><rect x="1047.1" y="419.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1050.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (9,113 samples, 5.55%)</title><rect x="1048.0" y="435.0" width="65.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.0" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,214 samples, 0.74%)</title><rect x="1048.0" y="419.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1051.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,214 samples, 0.74%)</title><rect x="1048.0" y="403.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1051.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,214 samples, 0.74%)</title><rect x="1048.0" y="387.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,214 samples, 0.74%)</title><rect x="1048.0" y="371.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,214 samples, 0.74%)</title><rect x="1048.0" y="355.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (712 samples, 0.43%)</title><rect x="1048.0" y="339.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1051.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (712 samples, 0.43%)</title><rect x="1048.0" y="323.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (712 samples, 0.43%)</title><rect x="1048.0" y="307.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (712 samples, 0.43%)</title><rect x="1048.0" y="291.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1051.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (712 samples, 0.43%)</title><rect x="1048.0" y="275.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (712 samples, 0.43%)</title><rect x="1048.0" y="259.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1051.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (248 samples, 0.15%)</title><rect x="1048.0" y="243.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1051.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (248 samples, 0.15%)</title><rect x="1048.0" y="227.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (248 samples, 0.15%)</title><rect x="1048.0" y="211.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (248 samples, 0.15%)</title><rect x="1048.0" y="195.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (248 samples, 0.15%)</title><rect x="1048.0" y="179.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (248 samples, 0.15%)</title><rect x="1048.0" y="163.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (248 samples, 0.15%)</title><rect x="1048.0" y="147.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (248 samples, 0.15%)</title><rect x="1048.0" y="131.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1051.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (248 samples, 0.15%)</title><rect x="1048.0" y="115.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (248 samples, 0.15%)</title><rect x="1048.0" y="99.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1051.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (248 samples, 0.15%)</title><rect x="1048.0" y="83.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (248 samples, 0.15%)</title><rect x="1048.0" y="67.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (134 samples, 0.08%)</title><rect x="1048.0" y="51.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1051.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (114 samples, 0.07%)</title><rect x="1049.0" y="51.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (114 samples, 0.07%)</title><rect x="1049.0" y="35.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1052.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (464 samples, 0.28%)</title><rect x="1049.8" y="243.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1052.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (464 samples, 0.28%)</title><rect x="1049.8" y="227.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (464 samples, 0.28%)</title><rect x="1049.8" y="211.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (464 samples, 0.28%)</title><rect x="1049.8" y="195.0" width="3.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1052.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$149/388218747.apply (502 samples, 0.31%)</title><rect x="1053.1" y="339.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (502 samples, 0.31%)</title><rect x="1053.1" y="323.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (502 samples, 0.31%)</title><rect x="1053.1" y="307.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1056.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (502 samples, 0.31%)</title><rect x="1053.1" y="291.0" width="3.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1056.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (244 samples, 0.15%)</title><rect x="1056.7" y="419.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1059.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (244 samples, 0.15%)</title><rect x="1056.7" y="403.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1059.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$157/1694929854.apply (244 samples, 0.15%)</title><rect x="1056.7" y="387.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1059.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (244 samples, 0.15%)</title><rect x="1056.7" y="371.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (244 samples, 0.15%)</title><rect x="1056.7" y="355.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (244 samples, 0.15%)</title><rect x="1056.7" y="339.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (244 samples, 0.15%)</title><rect x="1056.7" y="323.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1059.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (236 samples, 0.14%)</title><rect x="1058.5" y="419.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (236 samples, 0.14%)</title><rect x="1058.5" y="403.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (236 samples, 0.14%)</title><rect x="1058.5" y="387.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (236 samples, 0.14%)</title><rect x="1058.5" y="371.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1061.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (238 samples, 0.14%)</title><rect x="1060.2" y="419.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (238 samples, 0.14%)</title><rect x="1060.2" y="403.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (238 samples, 0.14%)</title><rect x="1060.2" y="387.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (238 samples, 0.14%)</title><rect x="1060.2" y="371.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1063.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (7,181 samples, 4.37%)</title><rect x="1061.9" y="419.0" width="51.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.9" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (157 samples, 0.10%)</title><rect x="1061.9" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.9" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (157 samples, 0.10%)</title><rect x="1061.9" y="387.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1064.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,293 samples, 0.79%)</title><rect x="1063.0" y="403.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (77 samples, 0.05%)</title><rect x="1063.0" y="387.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1066.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,216 samples, 0.74%)</title><rect x="1063.6" y="387.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.6" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (122 samples, 0.07%)</title><rect x="1063.6" y="371.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1066.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (676 samples, 0.41%)</title><rect x="1064.4" y="371.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1067.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (676 samples, 0.41%)</title><rect x="1064.4" y="355.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1067.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (676 samples, 0.41%)</title><rect x="1064.4" y="339.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1067.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (676 samples, 0.41%)</title><rect x="1064.4" y="323.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (207 samples, 0.13%)</title><rect x="1064.4" y="307.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (207 samples, 0.13%)</title><rect x="1064.4" y="291.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.4" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (207 samples, 0.13%)</title><rect x="1064.4" y="275.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (207 samples, 0.13%)</title><rect x="1064.4" y="259.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (207 samples, 0.13%)</title><rect x="1064.4" y="243.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (207 samples, 0.13%)</title><rect x="1064.4" y="227.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1067.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (207 samples, 0.13%)</title><rect x="1064.4" y="211.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (207 samples, 0.13%)</title><rect x="1064.4" y="195.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1067.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (207 samples, 0.13%)</title><rect x="1064.4" y="179.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1067.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (207 samples, 0.13%)</title><rect x="1064.4" y="163.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1067.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (207 samples, 0.13%)</title><rect x="1064.4" y="147.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (207 samples, 0.13%)</title><rect x="1064.4" y="131.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1067.4" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (111 samples, 0.07%)</title><rect x="1064.4" y="115.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1067.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (96 samples, 0.06%)</title><rect x="1065.2" y="115.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1068.2" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (96 samples, 0.06%)</title><rect x="1065.2" y="99.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1068.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (469 samples, 0.29%)</title><rect x="1065.9" y="307.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1068.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (469 samples, 0.29%)</title><rect x="1065.9" y="291.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1068.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (469 samples, 0.29%)</title><rect x="1065.9" y="275.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1068.9" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (469 samples, 0.29%)</title><rect x="1065.9" y="259.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1068.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (122 samples, 0.07%)</title><rect x="1069.3" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1072.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (122 samples, 0.07%)</title><rect x="1069.3" y="355.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1072.3" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (153 samples, 0.09%)</title><rect x="1070.2" y="371.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1073.2" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (143 samples, 0.09%)</title><rect x="1071.3" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1074.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (143 samples, 0.09%)</title><rect x="1071.3" y="355.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1074.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (77 samples, 0.05%)</title><rect x="1072.3" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.05%)</title><rect x="1072.3" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.05%)</title><rect x="1072.3" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1075.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (77 samples, 0.05%)</title><rect x="1072.3" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.3" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (77 samples, 0.05%)</title><rect x="1072.3" y="339.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1075.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (182 samples, 0.11%)</title><rect x="1072.8" y="403.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.8" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (76 samples, 0.05%)</title><rect x="1072.8" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1075.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.05%)</title><rect x="1072.8" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.05%)</title><rect x="1072.8" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (76 samples, 0.05%)</title><rect x="1072.8" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.8" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (76 samples, 0.05%)</title><rect x="1072.8" y="323.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1075.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (106 samples, 0.06%)</title><rect x="1073.4" y="387.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1076.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.06%)</title><rect x="1073.4" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.06%)</title><rect x="1073.4" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1076.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$142/1659247134.get$Lambda (106 samples, 0.06%)</title><rect x="1073.4" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1076.4" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$142 (106 samples, 0.06%)</title><rect x="1073.4" y="323.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1076.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (174 samples, 0.11%)</title><rect x="1074.2" y="403.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (174 samples, 0.11%)</title><rect x="1074.2" y="387.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1077.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (174 samples, 0.11%)</title><rect x="1074.2" y="371.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.2" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (161 samples, 0.10%)</title><rect x="1074.2" y="355.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1077.2" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (161 samples, 0.10%)</title><rect x="1074.2" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1077.2" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (38 samples, 0.02%)</title><rect x="1074.2" y="323.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1077.2" y="334.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (38 samples, 0.02%)</title><rect x="1074.2" y="307.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1077.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (123 samples, 0.07%)</title><rect x="1074.4" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1077.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (123 samples, 0.07%)</title><rect x="1074.4" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1077.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (123 samples, 0.07%)</title><rect x="1074.4" y="291.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1077.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (822 samples, 0.50%)</title><rect x="1075.4" y="403.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1078.4" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (128 samples, 0.08%)</title><rect x="1075.4" y="387.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1078.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (694 samples, 0.42%)</title><rect x="1076.3" y="387.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (694 samples, 0.42%)</title><rect x="1076.3" y="371.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1079.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (694 samples, 0.42%)</title><rect x="1076.3" y="355.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1079.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (694 samples, 0.42%)</title><rect x="1076.3" y="339.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (694 samples, 0.42%)</title><rect x="1076.3" y="323.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (694 samples, 0.42%)</title><rect x="1076.3" y="307.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (694 samples, 0.42%)</title><rect x="1076.3" y="291.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (238 samples, 0.14%)</title><rect x="1076.3" y="275.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1079.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (238 samples, 0.14%)</title><rect x="1076.3" y="259.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.3" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (238 samples, 0.14%)</title><rect x="1076.3" y="243.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1079.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (238 samples, 0.14%)</title><rect x="1076.3" y="227.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1079.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (238 samples, 0.14%)</title><rect x="1076.3" y="211.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (238 samples, 0.14%)</title><rect x="1076.3" y="195.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1079.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (238 samples, 0.14%)</title><rect x="1076.3" y="179.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (238 samples, 0.14%)</title><rect x="1076.3" y="163.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (238 samples, 0.14%)</title><rect x="1076.3" y="147.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1079.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (238 samples, 0.14%)</title><rect x="1076.3" y="131.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (238 samples, 0.14%)</title><rect x="1076.3" y="115.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1079.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (238 samples, 0.14%)</title><rect x="1076.3" y="99.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (117 samples, 0.07%)</title><rect x="1076.3" y="83.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1079.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (121 samples, 0.07%)</title><rect x="1077.2" y="83.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (121 samples, 0.07%)</title><rect x="1077.2" y="67.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1080.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (456 samples, 0.28%)</title><rect x="1078.0" y="275.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (456 samples, 0.28%)</title><rect x="1078.0" y="259.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (456 samples, 0.28%)</title><rect x="1078.0" y="243.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.0" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (456 samples, 0.28%)</title><rect x="1078.0" y="227.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1081.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (4,476 samples, 2.73%)</title><rect x="1081.3" y="403.0" width="32.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1084.3" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (146 samples, 0.09%)</title><rect x="1081.3" y="387.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1084.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (159 samples, 0.10%)</title><rect x="1082.4" y="387.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1085.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (159 samples, 0.10%)</title><rect x="1082.4" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1085.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (159 samples, 0.10%)</title><rect x="1082.4" y="355.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1085.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (130 samples, 0.08%)</title><rect x="1083.5" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (130 samples, 0.08%)</title><rect x="1083.5" y="371.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1086.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (4,041 samples, 2.46%)</title><rect x="1084.4" y="387.0" width="29.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1087.4" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (145 samples, 0.09%)</title><rect x="1084.4" y="371.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (145 samples, 0.09%)</title><rect x="1084.4" y="355.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1087.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,644 samples, 1.00%)</title><rect x="1085.5" y="371.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1088.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (87 samples, 0.05%)</title><rect x="1085.5" y="355.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1088.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,557 samples, 0.95%)</title><rect x="1086.1" y="355.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.1" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (115 samples, 0.07%)</title><rect x="1086.1" y="339.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1089.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (129 samples, 0.08%)</title><rect x="1086.9" y="339.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.9" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (129 samples, 0.08%)</title><rect x="1086.9" y="323.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1089.9" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (144 samples, 0.09%)</title><rect x="1087.9" y="339.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1090.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (101 samples, 0.06%)</title><rect x="1088.9" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1091.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (101 samples, 0.06%)</title><rect x="1088.9" y="323.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1091.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,068 samples, 0.65%)</title><rect x="1089.6" y="339.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1092.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,068 samples, 0.65%)</title><rect x="1089.6" y="323.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,068 samples, 0.65%)</title><rect x="1089.6" y="307.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (206 samples, 0.13%)</title><rect x="1089.6" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (206 samples, 0.13%)</title><rect x="1089.6" y="275.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (206 samples, 0.13%)</title><rect x="1089.6" y="259.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (206 samples, 0.13%)</title><rect x="1089.6" y="243.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (206 samples, 0.13%)</title><rect x="1089.6" y="227.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1092.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (206 samples, 0.13%)</title><rect x="1089.6" y="211.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1092.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (206 samples, 0.13%)</title><rect x="1089.6" y="195.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.6" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (115 samples, 0.07%)</title><rect x="1089.6" y="179.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1092.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (91 samples, 0.06%)</title><rect x="1090.4" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.4" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (91 samples, 0.06%)</title><rect x="1090.4" y="163.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1093.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (862 samples, 0.52%)</title><rect x="1091.1" y="291.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1094.1" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (209 samples, 0.13%)</title><rect x="1091.1" y="275.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1094.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (155 samples, 0.09%)</title><rect x="1092.6" y="275.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (155 samples, 0.09%)</title><rect x="1092.6" y="259.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$95/217324818.get$Lambda (79 samples, 0.05%)</title><rect x="1092.6" y="243.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1095.6" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$95 (79 samples, 0.05%)</title><rect x="1092.6" y="227.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1095.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.get$Lambda (76 samples, 0.05%)</title><rect x="1093.2" y="243.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$97 (76 samples, 0.05%)</title><rect x="1093.2" y="227.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1096.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (108 samples, 0.07%)</title><rect x="1093.7" y="275.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (108 samples, 0.07%)</title><rect x="1093.7" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.7" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (108 samples, 0.07%)</title><rect x="1093.7" y="243.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1096.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (390 samples, 0.24%)</title><rect x="1094.5" y="275.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (390 samples, 0.24%)</title><rect x="1094.5" y="259.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1097.5" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (108 samples, 0.07%)</title><rect x="1097.3" y="371.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1100.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (108 samples, 0.07%)</title><rect x="1098.1" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1101.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (108 samples, 0.07%)</title><rect x="1098.1" y="355.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1101.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (173 samples, 0.11%)</title><rect x="1098.8" y="371.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (173 samples, 0.11%)</title><rect x="1098.8" y="355.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1101.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (42 samples, 0.03%)</title><rect x="1100.1" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1103.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (42 samples, 0.03%)</title><rect x="1100.1" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (42 samples, 0.03%)</title><rect x="1100.1" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.1" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (36 samples, 0.02%)</title><rect x="1100.1" y="323.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.1" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (36 samples, 0.02%)</title><rect x="1100.1" y="307.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (354 samples, 0.22%)</title><rect x="1100.4" y="371.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.4" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (129 samples, 0.08%)</title><rect x="1100.4" y="355.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1103.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (225 samples, 0.14%)</title><rect x="1101.3" y="355.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1104.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (225 samples, 0.14%)</title><rect x="1101.3" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (225 samples, 0.14%)</title><rect x="1101.3" y="323.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.3" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (225 samples, 0.14%)</title><rect x="1101.3" y="307.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (225 samples, 0.14%)</title><rect x="1101.3" y="291.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (225 samples, 0.14%)</title><rect x="1101.3" y="275.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1104.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (225 samples, 0.14%)</title><rect x="1101.3" y="259.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (225 samples, 0.14%)</title><rect x="1101.3" y="243.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1104.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (225 samples, 0.14%)</title><rect x="1101.3" y="227.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1104.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (225 samples, 0.14%)</title><rect x="1101.3" y="211.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (225 samples, 0.14%)</title><rect x="1101.3" y="195.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1104.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (225 samples, 0.14%)</title><rect x="1101.3" y="179.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1104.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (225 samples, 0.14%)</title><rect x="1101.3" y="163.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1104.3" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (112 samples, 0.07%)</title><rect x="1101.3" y="147.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1104.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (113 samples, 0.07%)</title><rect x="1102.1" y="147.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1105.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (113 samples, 0.07%)</title><rect x="1102.1" y="131.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1105.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (1,467 samples, 0.89%)</title><rect x="1102.9" y="371.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (445 samples, 0.27%)</title><rect x="1102.9" y="355.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1105.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (151 samples, 0.09%)</title><rect x="1102.9" y="339.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (151 samples, 0.09%)</title><rect x="1102.9" y="323.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1105.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (294 samples, 0.18%)</title><rect x="1104.0" y="339.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (294 samples, 0.18%)</title><rect x="1104.0" y="323.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1107.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (59 samples, 0.04%)</title><rect x="1106.1" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (59 samples, 0.04%)</title><rect x="1106.1" y="339.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1109.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (214 samples, 0.13%)</title><rect x="1106.6" y="355.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (214 samples, 0.13%)</title><rect x="1106.6" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (214 samples, 0.13%)</title><rect x="1106.6" y="323.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1109.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (214 samples, 0.13%)</title><rect x="1106.6" y="307.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1109.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (423 samples, 0.26%)</title><rect x="1108.1" y="355.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1111.1" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (113 samples, 0.07%)</title><rect x="1108.1" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.1" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (113 samples, 0.07%)</title><rect x="1108.1" y="323.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1111.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (310 samples, 0.19%)</title><rect x="1108.9" y="339.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.05%)</title><rect x="1108.9" y="323.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.05%)</title><rect x="1108.9" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1111.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$88/431735617.get$Lambda (76 samples, 0.05%)</title><rect x="1108.9" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$88 (76 samples, 0.05%)</title><rect x="1108.9" y="275.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1111.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (234 samples, 0.14%)</title><rect x="1109.5" y="323.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1112.5" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (234 samples, 0.14%)</title><rect x="1109.5" y="307.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1112.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (326 samples, 0.20%)</title><rect x="1111.1" y="355.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1114.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (326 samples, 0.20%)</title><rect x="1111.1" y="339.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1114.1" y="350.0"></text>
</g>
<g>
<title>[Worker_7 tid=27325] (10,649 samples, 6.48%)</title><rect x="1113.5" y="547.0" width="76.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1116.5" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (10,649 samples, 6.48%)</title><rect x="1113.5" y="531.0" width="76.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.5" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,649 samples, 6.48%)</title><rect x="1113.5" y="515.0" width="76.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1116.5" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,649 samples, 6.48%)</title><rect x="1113.5" y="499.0" width="76.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1116.5" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (128 samples, 0.08%)</title><rect x="1113.5" y="483.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1116.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (128 samples, 0.08%)</title><rect x="1113.5" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1116.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (118 samples, 0.07%)</title><rect x="1113.5" y="451.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1116.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (118 samples, 0.07%)</title><rect x="1113.5" y="435.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (118 samples, 0.07%)</title><rect x="1113.5" y="419.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1116.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$76/1230130518.run (10,521 samples, 6.41%)</title><rect x="1114.4" y="483.0" width="75.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.4" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$2 (10,521 samples, 6.41%)</title><rect x="1114.4" y="467.0" width="75.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.4" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (10,521 samples, 6.41%)</title><rect x="1114.4" y="451.0" width="75.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.4" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (126 samples, 0.08%)</title><rect x="1114.4" y="435.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1117.4" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (105 samples, 0.06%)</title><rect x="1115.3" y="435.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1118.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (650 samples, 0.40%)</title><rect x="1116.1" y="435.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (650 samples, 0.40%)</title><rect x="1116.1" y="419.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (459 samples, 0.28%)</title><rect x="1116.1" y="403.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (459 samples, 0.28%)</title><rect x="1116.1" y="387.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.1" y="398.0"></text>
</g>
<g>
<title>byte[] (459 samples, 0.28%)</title><rect x="1116.1" y="371.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1119.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (191 samples, 0.12%)</title><rect x="1119.4" y="403.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.4" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (191 samples, 0.12%)</title><rect x="1119.4" y="387.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1122.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (481 samples, 0.29%)</title><rect x="1120.7" y="435.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.7" y="446.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.12%)</title><rect x="1120.7" y="419.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1123.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (179 samples, 0.11%)</title><rect x="1122.1" y="419.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1125.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (113 samples, 0.07%)</title><rect x="1123.4" y="419.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1126.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (9,159 samples, 5.58%)</title><rect x="1124.2" y="435.0" width="65.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.2" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,203 samples, 0.73%)</title><rect x="1124.2" y="419.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,203 samples, 0.73%)</title><rect x="1124.2" y="403.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,203 samples, 0.73%)</title><rect x="1124.2" y="387.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1127.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,203 samples, 0.73%)</title><rect x="1124.2" y="371.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,203 samples, 0.73%)</title><rect x="1124.2" y="355.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (765 samples, 0.47%)</title><rect x="1124.2" y="339.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (765 samples, 0.47%)</title><rect x="1124.2" y="323.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (765 samples, 0.47%)</title><rect x="1124.2" y="307.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (765 samples, 0.47%)</title><rect x="1124.2" y="291.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (765 samples, 0.47%)</title><rect x="1124.2" y="275.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1127.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (765 samples, 0.47%)</title><rect x="1124.2" y="259.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (242 samples, 0.15%)</title><rect x="1124.2" y="243.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (242 samples, 0.15%)</title><rect x="1124.2" y="227.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.2" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (242 samples, 0.15%)</title><rect x="1124.2" y="211.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (242 samples, 0.15%)</title><rect x="1124.2" y="195.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (242 samples, 0.15%)</title><rect x="1124.2" y="179.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (242 samples, 0.15%)</title><rect x="1124.2" y="163.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (242 samples, 0.15%)</title><rect x="1124.2" y="147.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (242 samples, 0.15%)</title><rect x="1124.2" y="131.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (242 samples, 0.15%)</title><rect x="1124.2" y="115.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (242 samples, 0.15%)</title><rect x="1124.2" y="99.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (242 samples, 0.15%)</title><rect x="1124.2" y="83.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (242 samples, 0.15%)</title><rect x="1124.2" y="67.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (135 samples, 0.08%)</title><rect x="1124.2" y="51.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1127.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (107 samples, 0.07%)</title><rect x="1125.2" y="51.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.2" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (107 samples, 0.07%)</title><rect x="1125.2" y="35.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1128.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (523 samples, 0.32%)</title><rect x="1125.9" y="243.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (523 samples, 0.32%)</title><rect x="1125.9" y="227.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (523 samples, 0.32%)</title><rect x="1125.9" y="211.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (523 samples, 0.32%)</title><rect x="1125.9" y="195.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1128.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$149/388218747.apply (438 samples, 0.27%)</title><rect x="1129.7" y="339.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (438 samples, 0.27%)</title><rect x="1129.7" y="323.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (438 samples, 0.27%)</title><rect x="1129.7" y="307.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (438 samples, 0.27%)</title><rect x="1129.7" y="291.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1132.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (196 samples, 0.12%)</title><rect x="1132.8" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1135.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (196 samples, 0.12%)</title><rect x="1132.8" y="403.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$157/1694929854.apply (196 samples, 0.12%)</title><rect x="1132.8" y="387.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (196 samples, 0.12%)</title><rect x="1132.8" y="371.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (196 samples, 0.12%)</title><rect x="1132.8" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.8" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (196 samples, 0.12%)</title><rect x="1132.8" y="339.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.8" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (196 samples, 0.12%)</title><rect x="1132.8" y="323.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1135.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (235 samples, 0.14%)</title><rect x="1134.2" y="419.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (235 samples, 0.14%)</title><rect x="1134.2" y="403.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (235 samples, 0.14%)</title><rect x="1134.2" y="387.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (235 samples, 0.14%)</title><rect x="1134.2" y="371.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1137.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (250 samples, 0.15%)</title><rect x="1135.9" y="419.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (250 samples, 0.15%)</title><rect x="1135.9" y="403.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1138.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (250 samples, 0.15%)</title><rect x="1135.9" y="387.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (250 samples, 0.15%)</title><rect x="1135.9" y="371.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1138.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (7,275 samples, 4.43%)</title><rect x="1137.7" y="419.0" width="52.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.7" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (172 samples, 0.10%)</title><rect x="1137.7" y="403.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.7" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (172 samples, 0.10%)</title><rect x="1137.7" y="387.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1140.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,268 samples, 0.77%)</title><rect x="1139.0" y="403.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (62 samples, 0.04%)</title><rect x="1139.0" y="387.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1142.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,206 samples, 0.73%)</title><rect x="1139.4" y="387.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.4" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (135 samples, 0.08%)</title><rect x="1139.4" y="371.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1142.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (688 samples, 0.42%)</title><rect x="1140.4" y="371.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (688 samples, 0.42%)</title><rect x="1140.4" y="355.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (688 samples, 0.42%)</title><rect x="1140.4" y="339.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (688 samples, 0.42%)</title><rect x="1140.4" y="323.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (245 samples, 0.15%)</title><rect x="1140.4" y="307.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (245 samples, 0.15%)</title><rect x="1140.4" y="291.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.4" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (245 samples, 0.15%)</title><rect x="1140.4" y="275.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (245 samples, 0.15%)</title><rect x="1140.4" y="259.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (245 samples, 0.15%)</title><rect x="1140.4" y="243.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (245 samples, 0.15%)</title><rect x="1140.4" y="227.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (245 samples, 0.15%)</title><rect x="1140.4" y="211.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (245 samples, 0.15%)</title><rect x="1140.4" y="195.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (245 samples, 0.15%)</title><rect x="1140.4" y="179.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (245 samples, 0.15%)</title><rect x="1140.4" y="163.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (245 samples, 0.15%)</title><rect x="1140.4" y="147.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (245 samples, 0.15%)</title><rect x="1140.4" y="131.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.4" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (116 samples, 0.07%)</title><rect x="1140.4" y="115.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1143.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (129 samples, 0.08%)</title><rect x="1141.2" y="115.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.2" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (129 samples, 0.08%)</title><rect x="1141.2" y="99.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1144.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (443 samples, 0.27%)</title><rect x="1142.1" y="307.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (443 samples, 0.27%)</title><rect x="1142.1" y="291.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.1" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (443 samples, 0.27%)</title><rect x="1142.1" y="275.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.1" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (443 samples, 0.27%)</title><rect x="1142.1" y="259.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1145.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (127 samples, 0.08%)</title><rect x="1145.3" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (127 samples, 0.08%)</title><rect x="1145.3" y="355.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1148.3" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (143 samples, 0.09%)</title><rect x="1146.2" y="371.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1149.2" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (113 samples, 0.07%)</title><rect x="1147.3" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (113 samples, 0.07%)</title><rect x="1147.3" y="355.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1150.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (69 samples, 0.04%)</title><rect x="1148.1" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1151.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.04%)</title><rect x="1148.1" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.04%)</title><rect x="1148.1" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1151.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (69 samples, 0.04%)</title><rect x="1148.1" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1151.1" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (69 samples, 0.04%)</title><rect x="1148.1" y="339.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1151.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (199 samples, 0.12%)</title><rect x="1148.6" y="403.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (70 samples, 0.04%)</title><rect x="1148.6" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1151.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.04%)</title><rect x="1148.6" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1151.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.04%)</title><rect x="1148.6" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1151.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/348609246.get$Lambda (70 samples, 0.04%)</title><rect x="1148.6" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.6" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$124 (70 samples, 0.04%)</title><rect x="1148.6" y="323.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1151.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (129 samples, 0.08%)</title><rect x="1149.1" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1152.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (129 samples, 0.08%)</title><rect x="1149.1" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1152.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (129 samples, 0.08%)</title><rect x="1149.1" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1152.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$142/1659247134.get$Lambda (129 samples, 0.08%)</title><rect x="1149.1" y="339.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1152.1" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$142 (129 samples, 0.08%)</title><rect x="1149.1" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1152.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (200 samples, 0.12%)</title><rect x="1150.0" y="403.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1153.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (200 samples, 0.12%)</title><rect x="1150.0" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1153.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (200 samples, 0.12%)</title><rect x="1150.0" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1153.0" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (189 samples, 0.12%)</title><rect x="1150.0" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.0" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (189 samples, 0.12%)</title><rect x="1150.0" y="339.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.0" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (40 samples, 0.02%)</title><rect x="1150.0" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.0" y="334.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (40 samples, 0.02%)</title><rect x="1150.0" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1153.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (149 samples, 0.09%)</title><rect x="1150.3" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (149 samples, 0.09%)</title><rect x="1150.3" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (149 samples, 0.09%)</title><rect x="1150.3" y="291.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1153.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (798 samples, 0.49%)</title><rect x="1151.4" y="403.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.4" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (134 samples, 0.08%)</title><rect x="1151.4" y="387.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1154.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (664 samples, 0.40%)</title><rect x="1152.4" y="387.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (664 samples, 0.40%)</title><rect x="1152.4" y="371.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (664 samples, 0.40%)</title><rect x="1152.4" y="355.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1155.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (664 samples, 0.40%)</title><rect x="1152.4" y="339.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (664 samples, 0.40%)</title><rect x="1152.4" y="323.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (664 samples, 0.40%)</title><rect x="1152.4" y="307.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1155.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (664 samples, 0.40%)</title><rect x="1152.4" y="291.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (187 samples, 0.11%)</title><rect x="1152.4" y="275.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (187 samples, 0.11%)</title><rect x="1152.4" y="259.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.4" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (187 samples, 0.11%)</title><rect x="1152.4" y="243.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (187 samples, 0.11%)</title><rect x="1152.4" y="227.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (187 samples, 0.11%)</title><rect x="1152.4" y="211.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (187 samples, 0.11%)</title><rect x="1152.4" y="195.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (187 samples, 0.11%)</title><rect x="1152.4" y="179.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1155.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (187 samples, 0.11%)</title><rect x="1152.4" y="163.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (187 samples, 0.11%)</title><rect x="1152.4" y="147.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (187 samples, 0.11%)</title><rect x="1152.4" y="131.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (187 samples, 0.11%)</title><rect x="1152.4" y="115.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (187 samples, 0.11%)</title><rect x="1152.4" y="99.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (74 samples, 0.05%)</title><rect x="1152.4" y="83.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1155.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (113 samples, 0.07%)</title><rect x="1152.9" y="83.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (113 samples, 0.07%)</title><rect x="1152.9" y="67.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1155.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$103/1400053986.apply (477 samples, 0.29%)</title><rect x="1153.7" y="275.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1156.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (477 samples, 0.29%)</title><rect x="1153.7" y="259.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (477 samples, 0.29%)</title><rect x="1153.7" y="243.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (477 samples, 0.29%)</title><rect x="1153.7" y="227.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1156.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (4,569 samples, 2.78%)</title><rect x="1157.2" y="403.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.2" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (132 samples, 0.08%)</title><rect x="1157.2" y="387.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1160.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (167 samples, 0.10%)</title><rect x="1158.1" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (167 samples, 0.10%)</title><rect x="1158.1" y="371.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (167 samples, 0.10%)</title><rect x="1158.1" y="355.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1161.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (116 samples, 0.07%)</title><rect x="1159.3" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1162.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (116 samples, 0.07%)</title><rect x="1159.3" y="371.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1162.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (4,154 samples, 2.53%)</title><rect x="1160.1" y="387.0" width="29.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.1" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (176 samples, 0.11%)</title><rect x="1160.1" y="371.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1163.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (176 samples, 0.11%)</title><rect x="1160.1" y="355.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1163.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,691 samples, 1.03%)</title><rect x="1161.4" y="371.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (66 samples, 0.04%)</title><rect x="1161.4" y="355.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1164.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,625 samples, 0.99%)</title><rect x="1161.9" y="355.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.9" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (112 samples, 0.07%)</title><rect x="1161.9" y="339.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1164.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (118 samples, 0.07%)</title><rect x="1162.7" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1165.7" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (118 samples, 0.07%)</title><rect x="1162.7" y="323.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1165.7" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (154 samples, 0.09%)</title><rect x="1163.5" y="339.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1166.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (102 samples, 0.06%)</title><rect x="1164.6" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (102 samples, 0.06%)</title><rect x="1164.6" y="323.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1167.6" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,139 samples, 0.69%)</title><rect x="1165.4" y="339.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1168.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,139 samples, 0.69%)</title><rect x="1165.4" y="323.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,139 samples, 0.69%)</title><rect x="1165.4" y="307.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1168.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (231 samples, 0.14%)</title><rect x="1165.4" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1168.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (231 samples, 0.14%)</title><rect x="1165.4" y="275.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (231 samples, 0.14%)</title><rect x="1165.4" y="259.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1168.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (231 samples, 0.14%)</title><rect x="1165.4" y="243.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (231 samples, 0.14%)</title><rect x="1165.4" y="227.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (231 samples, 0.14%)</title><rect x="1165.4" y="211.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (231 samples, 0.14%)</title><rect x="1165.4" y="195.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.4" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (115 samples, 0.07%)</title><rect x="1165.4" y="179.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1168.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (116 samples, 0.07%)</title><rect x="1166.2" y="179.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.2" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (116 samples, 0.07%)</title><rect x="1166.2" y="163.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1169.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (908 samples, 0.55%)</title><rect x="1167.0" y="291.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1170.0" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (252 samples, 0.15%)</title><rect x="1167.0" y="275.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1170.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (150 samples, 0.09%)</title><rect x="1168.9" y="275.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (150 samples, 0.09%)</title><rect x="1168.9" y="259.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$95/217324818.get$Lambda (76 samples, 0.05%)</title><rect x="1168.9" y="243.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1171.9" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$95 (76 samples, 0.05%)</title><rect x="1168.9" y="227.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1171.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.get$Lambda (74 samples, 0.05%)</title><rect x="1169.4" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1172.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$97 (74 samples, 0.05%)</title><rect x="1169.4" y="227.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1172.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (118 samples, 0.07%)</title><rect x="1169.9" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1172.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (118 samples, 0.07%)</title><rect x="1169.9" y="259.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1172.9" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (118 samples, 0.07%)</title><rect x="1169.9" y="243.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1172.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (388 samples, 0.24%)</title><rect x="1170.8" y="275.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1173.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (388 samples, 0.24%)</title><rect x="1170.8" y="259.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1173.8" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (118 samples, 0.07%)</title><rect x="1173.6" y="371.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1176.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (113 samples, 0.07%)</title><rect x="1174.4" y="371.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (113 samples, 0.07%)</title><rect x="1174.4" y="355.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1177.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (177 samples, 0.11%)</title><rect x="1175.2" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (177 samples, 0.11%)</title><rect x="1175.2" y="355.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1178.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (40 samples, 0.02%)</title><rect x="1176.5" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (40 samples, 0.02%)</title><rect x="1176.5" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1179.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (40 samples, 0.02%)</title><rect x="1176.5" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.5" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (36 samples, 0.02%)</title><rect x="1176.5" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.5" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (36 samples, 0.02%)</title><rect x="1176.5" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (372 samples, 0.23%)</title><rect x="1176.8" y="371.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (117 samples, 0.07%)</title><rect x="1176.8" y="355.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1179.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (255 samples, 0.16%)</title><rect x="1177.6" y="355.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (255 samples, 0.16%)</title><rect x="1177.6" y="339.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (255 samples, 0.16%)</title><rect x="1177.6" y="323.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.6" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (255 samples, 0.16%)</title><rect x="1177.6" y="307.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (255 samples, 0.16%)</title><rect x="1177.6" y="291.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (255 samples, 0.16%)</title><rect x="1177.6" y="275.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (255 samples, 0.16%)</title><rect x="1177.6" y="259.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/147560532.getAsBoolean (255 samples, 0.16%)</title><rect x="1177.6" y="243.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (255 samples, 0.16%)</title><rect x="1177.6" y="227.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (255 samples, 0.16%)</title><rect x="1177.6" y="211.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1180.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (255 samples, 0.16%)</title><rect x="1177.6" y="195.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$81/1144009106.apply (255 samples, 0.16%)</title><rect x="1177.6" y="179.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (255 samples, 0.16%)</title><rect x="1177.6" y="163.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.6" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (125 samples, 0.08%)</title><rect x="1177.6" y="147.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1180.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (130 samples, 0.08%)</title><rect x="1178.5" y="147.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (130 samples, 0.08%)</title><rect x="1178.5" y="131.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1181.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (1,467 samples, 0.89%)</title><rect x="1179.5" y="371.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (420 samples, 0.26%)</title><rect x="1179.5" y="355.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1182.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (153 samples, 0.09%)</title><rect x="1179.5" y="339.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1182.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (153 samples, 0.09%)</title><rect x="1179.5" y="323.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1182.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (267 samples, 0.16%)</title><rect x="1180.6" y="339.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.6" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (267 samples, 0.16%)</title><rect x="1180.6" y="323.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1183.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (75 samples, 0.05%)</title><rect x="1182.5" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1185.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (75 samples, 0.05%)</title><rect x="1182.5" y="339.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1185.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (234 samples, 0.14%)</title><rect x="1183.0" y="355.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1186.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (234 samples, 0.14%)</title><rect x="1183.0" y="339.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1186.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (234 samples, 0.14%)</title><rect x="1183.0" y="323.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1186.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (234 samples, 0.14%)</title><rect x="1183.0" y="307.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1186.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (420 samples, 0.26%)</title><rect x="1184.7" y="355.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.7" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (118 samples, 0.07%)</title><rect x="1184.7" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1187.7" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (118 samples, 0.07%)</title><rect x="1184.7" y="323.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1187.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (302 samples, 0.18%)</title><rect x="1185.5" y="339.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.05%)</title><rect x="1185.5" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.05%)</title><rect x="1185.5" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$88/431735617.get$Lambda (77 samples, 0.05%)</title><rect x="1185.5" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.5" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$88 (77 samples, 0.05%)</title><rect x="1185.5" y="275.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1188.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (225 samples, 0.14%)</title><rect x="1186.1" y="323.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (225 samples, 0.14%)</title><rect x="1186.1" y="307.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1189.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (318 samples, 0.19%)</title><rect x="1187.7" y="355.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (318 samples, 0.19%)</title><rect x="1187.7" y="339.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1190.7" y="350.0"></text>
</g>
</g>
</svg>
