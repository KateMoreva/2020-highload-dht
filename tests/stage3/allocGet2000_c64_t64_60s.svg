<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (4,104 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 #0 tid=3469] (44 samples, 1.07%)</title><rect x="10.0" y="547.0" width="12.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (44 samples, 1.07%)</title><rect x="10.0" y="531.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (44 samples, 1.07%)</title><rect x="10.0" y="515.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (44 samples, 1.07%)</title><rect x="10.0" y="499.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (1 samples, 0.02%)</title><rect x="10.0" y="483.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (43 samples, 1.05%)</title><rect x="10.3" y="483.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.3" y="494.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.51%)</title><rect x="10.3" y="467.0" width="6.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.3" y="478.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.54%)</title><rect x="16.3" y="467.0" width="6.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="19.3" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=3461] (246 samples, 5.99%)</title><rect x="22.7" y="547.0" width="70.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="25.7" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (246 samples, 5.99%)</title><rect x="22.7" y="531.0" width="70.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.7" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19 samples, 0.46%)</title><rect x="22.7" y="515.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.7" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (19 samples, 0.46%)</title><rect x="22.7" y="499.0" width="5.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="25.7" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (227 samples, 5.53%)</title><rect x="28.1" y="515.0" width="65.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.1" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (227 samples, 5.53%)</title><rect x="28.1" y="499.0" width="65.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.1" y="510.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (227 samples, 5.53%)</title><rect x="28.1" y="483.0" width="65.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.1" y="494.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (92 samples, 2.24%)</title><rect x="28.1" y="467.0" width="26.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.1" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (92 samples, 2.24%)</title><rect x="28.1" y="451.0" width="26.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.1" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (61 samples, 1.49%)</title><rect x="28.1" y="435.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (20 samples, 0.49%)</title><rect x="28.1" y="419.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (20 samples, 0.49%)</title><rect x="28.1" y="403.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.49%)</title><rect x="28.1" y="387.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.49%)</title><rect x="28.1" y="371.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.29%)</title><rect x="28.1" y="355.0" width="3.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="31.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.19%)</title><rect x="31.6" y="355.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.6" y="366.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="31.6" y="339.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="34.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (41 samples, 1.00%)</title><rect x="33.9" y="419.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.29%)</title><rect x="33.9" y="403.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.29%)</title><rect x="33.9" y="387.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.29%)</title><rect x="33.9" y="371.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.29%)</title><rect x="33.9" y="355.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="36.9" y="366.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.29%)</title><rect x="33.9" y="339.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="36.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.51%)</title><rect x="37.3" y="403.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.51%)</title><rect x="37.3" y="387.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.51%)</title><rect x="37.3" y="371.0" width="6.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="40.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (8 samples, 0.19%)</title><rect x="43.4" y="403.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.19%)</title><rect x="43.4" y="387.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.19%)</title><rect x="43.4" y="371.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.get$Lambda (8 samples, 0.19%)</title><rect x="43.4" y="355.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.4" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$74 (8 samples, 0.19%)</title><rect x="43.4" y="339.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="46.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (31 samples, 0.76%)</title><rect x="45.7" y="435.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.76%)</title><rect x="45.7" y="419.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.76%)</title><rect x="45.7" y="403.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.22%)</title><rect x="45.7" y="387.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="48.7" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.54%)</title><rect x="48.2" y="387.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.2" y="398.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.54%)</title><rect x="48.2" y="371.0" width="6.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="51.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (91 samples, 2.22%)</title><rect x="54.6" y="467.0" width="26.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.6" y="478.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (12 samples, 0.29%)</title><rect x="54.6" y="451.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="57.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (31 samples, 0.76%)</title><rect x="58.0" y="451.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (31 samples, 0.76%)</title><rect x="58.0" y="435.0" width="8.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="61.0" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (48 samples, 1.17%)</title><rect x="66.9" y="451.0" width="13.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (48 samples, 1.17%)</title><rect x="66.9" y="435.0" width="13.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.9" y="446.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.34%)</title><rect x="66.9" y="419.0" width="4.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="69.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.44%)</title><rect x="71.0" y="419.0" width="5.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="74.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.39%)</title><rect x="76.1" y="419.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.39%)</title><rect x="76.1" y="403.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.39%)</title><rect x="76.1" y="387.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.1" y="398.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.39%)</title><rect x="76.1" y="371.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="79.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 1.07%)</title><rect x="80.7" y="467.0" width="12.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 1.07%)</title><rect x="80.7" y="451.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.7" y="462.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.61%)</title><rect x="80.7" y="435.0" width="7.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="83.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.15%)</title><rect x="87.9" y="435.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="90.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.32%)</title><rect x="89.6" y="435.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.32%)</title><rect x="89.6" y="419.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.32%)</title><rect x="89.6" y="403.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.6" y="414.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.32%)</title><rect x="89.6" y="387.0" width="3.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="92.6" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=3462] (236 samples, 5.75%)</title><rect x="93.4" y="547.0" width="67.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="96.4" y="558.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (236 samples, 5.75%)</title><rect x="93.4" y="531.0" width="67.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.4" y="542.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 0.51%)</title><rect x="93.4" y="515.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.4" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (21 samples, 0.51%)</title><rect x="93.4" y="499.0" width="6.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="96.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (215 samples, 5.24%)</title><rect x="99.4" y="515.0" width="61.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.4" y="526.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (215 samples, 5.24%)</title><rect x="99.4" y="499.0" width="61.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.4" y="510.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (215 samples, 5.24%)</title><rect x="99.4" y="483.0" width="61.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.4" y="494.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (69 samples, 1.68%)</title><rect x="99.4" y="467.0" width="19.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (69 samples, 1.68%)</title><rect x="99.4" y="451.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.4" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (58 samples, 1.41%)</title><rect x="99.4" y="435.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (21 samples, 0.51%)</title><rect x="99.4" y="419.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (21 samples, 0.51%)</title><rect x="99.4" y="403.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.51%)</title><rect x="99.4" y="387.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.51%)</title><rect x="99.4" y="371.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.37%)</title><rect x="99.4" y="355.0" width="4.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="102.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.15%)</title><rect x="103.7" y="355.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.7" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.15%)</title><rect x="103.7" y="339.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="106.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (37 samples, 0.90%)</title><rect x="105.5" y="419.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.24%)</title><rect x="105.5" y="403.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.24%)</title><rect x="105.5" y="387.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.24%)</title><rect x="105.5" y="371.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.5" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.24%)</title><rect x="105.5" y="355.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.5" y="366.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="105.5" y="339.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="108.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.44%)</title><rect x="108.3" y="403.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.44%)</title><rect x="108.3" y="387.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.44%)</title><rect x="108.3" y="371.0" width="5.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="111.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (9 samples, 0.22%)</title><rect x="113.5" y="403.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.22%)</title><rect x="113.5" y="387.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.22%)</title><rect x="113.5" y="371.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.get$Lambda (9 samples, 0.22%)</title><rect x="113.5" y="355.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.5" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$74 (9 samples, 0.22%)</title><rect x="113.5" y="339.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="116.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.27%)</title><rect x="116.1" y="435.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.27%)</title><rect x="116.1" y="419.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.27%)</title><rect x="116.1" y="403.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="116.1" y="387.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="119.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.19%)</title><rect x="117.0" y="387.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.0" y="398.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="117.0" y="371.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="120.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (103 samples, 2.51%)</title><rect x="119.3" y="467.0" width="29.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.3" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.46%)</title><rect x="119.3" y="451.0" width="5.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="122.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (35 samples, 0.85%)</title><rect x="124.7" y="451.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.85%)</title><rect x="124.7" y="435.0" width="10.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="127.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (49 samples, 1.19%)</title><rect x="134.8" y="451.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (49 samples, 1.19%)</title><rect x="134.8" y="435.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.8" y="446.0"></text>
</g>
<g>
<title>char[] (22 samples, 0.54%)</title><rect x="134.8" y="419.0" width="6.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="137.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="141.1" y="419.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="144.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.46%)</title><rect x="143.4" y="419.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.46%)</title><rect x="143.4" y="403.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (19 samples, 0.46%)</title><rect x="143.4" y="387.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.4" y="398.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.46%)</title><rect x="143.4" y="371.0" width="5.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="146.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 1.05%)</title><rect x="148.9" y="467.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.9" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 1.05%)</title><rect x="148.9" y="451.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.9" y="462.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.51%)</title><rect x="148.9" y="435.0" width="6.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="151.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.22%)</title><rect x="154.9" y="435.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="157.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.32%)</title><rect x="157.5" y="435.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.32%)</title><rect x="157.5" y="419.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.32%)</title><rect x="157.5" y="403.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.5" y="414.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.32%)</title><rect x="157.5" y="387.0" width="3.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="160.5" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=3463] (246 samples, 5.99%)</title><rect x="161.2" y="547.0" width="70.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="164.2" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (246 samples, 5.99%)</title><rect x="161.2" y="531.0" width="70.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.2" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 0.49%)</title><rect x="161.2" y="515.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.2" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (20 samples, 0.49%)</title><rect x="161.2" y="499.0" width="5.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="164.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (226 samples, 5.51%)</title><rect x="167.0" y="515.0" width="65.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.0" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (226 samples, 5.51%)</title><rect x="167.0" y="499.0" width="65.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.0" y="510.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (226 samples, 5.51%)</title><rect x="167.0" y="483.0" width="65.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.0" y="494.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (79 samples, 1.92%)</title><rect x="167.0" y="467.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.0" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (79 samples, 1.92%)</title><rect x="167.0" y="451.0" width="22.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.0" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (65 samples, 1.58%)</title><rect x="167.0" y="435.0" width="18.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (18 samples, 0.44%)</title><rect x="167.0" y="419.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.44%)</title><rect x="167.0" y="403.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.44%)</title><rect x="167.0" y="387.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.44%)</title><rect x="167.0" y="371.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.22%)</title><rect x="167.0" y="355.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="170.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.22%)</title><rect x="169.6" y="355.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.6" y="366.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.22%)</title><rect x="169.6" y="339.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="172.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (47 samples, 1.15%)</title><rect x="172.2" y="419.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.22%)</title><rect x="172.2" y="403.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.22%)</title><rect x="172.2" y="387.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.22%)</title><rect x="172.2" y="371.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.22%)</title><rect x="172.2" y="355.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.2" y="366.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.22%)</title><rect x="172.2" y="339.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="175.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.66%)</title><rect x="174.8" y="403.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.66%)</title><rect x="174.8" y="387.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.66%)</title><rect x="174.8" y="371.0" width="7.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="177.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (11 samples, 0.27%)</title><rect x="182.5" y="403.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.27%)</title><rect x="182.5" y="387.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.27%)</title><rect x="182.5" y="371.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.get$Lambda (11 samples, 0.27%)</title><rect x="182.5" y="355.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.5" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$74 (11 samples, 0.27%)</title><rect x="182.5" y="339.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="185.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (14 samples, 0.34%)</title><rect x="185.7" y="435.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="188.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.34%)</title><rect x="185.7" y="419.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.34%)</title><rect x="185.7" y="403.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.10%)</title><rect x="185.7" y="387.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="188.7" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.24%)</title><rect x="186.8" y="387.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.8" y="398.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="186.8" y="371.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="189.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (94 samples, 2.29%)</title><rect x="189.7" y="467.0" width="27.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.7" y="478.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (20 samples, 0.49%)</title><rect x="189.7" y="451.0" width="5.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="192.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (29 samples, 0.71%)</title><rect x="195.5" y="451.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (29 samples, 0.71%)</title><rect x="195.5" y="435.0" width="8.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="198.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (45 samples, 1.10%)</title><rect x="203.8" y="451.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (45 samples, 1.10%)</title><rect x="203.8" y="435.0" width="12.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.8" y="446.0"></text>
</g>
<g>
<title>char[] (26 samples, 0.63%)</title><rect x="203.8" y="419.0" width="7.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="206.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="211.3" y="419.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="214.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.34%)</title><rect x="212.7" y="419.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.34%)</title><rect x="212.7" y="403.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="215.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.34%)</title><rect x="212.7" y="387.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.7" y="398.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.34%)</title><rect x="212.7" y="371.0" width="4.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="215.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.29%)</title><rect x="216.7" y="467.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.29%)</title><rect x="216.7" y="451.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.7" y="462.0"></text>
</g>
<g>
<title>char[] (29 samples, 0.71%)</title><rect x="216.7" y="435.0" width="8.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="219.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.22%)</title><rect x="225.1" y="435.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="228.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.37%)</title><rect x="227.7" y="435.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.37%)</title><rect x="227.7" y="419.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.37%)</title><rect x="227.7" y="403.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.7" y="414.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.37%)</title><rect x="227.7" y="387.0" width="4.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="230.7" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=3464] (248 samples, 6.04%)</title><rect x="232.0" y="547.0" width="71.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="235.0" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (248 samples, 6.04%)</title><rect x="232.0" y="531.0" width="71.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.0" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (248 samples, 6.04%)</title><rect x="232.0" y="515.0" width="71.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.0" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (248 samples, 6.04%)</title><rect x="232.0" y="499.0" width="71.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.0" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (248 samples, 6.04%)</title><rect x="232.0" y="483.0" width="71.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.0" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (84 samples, 2.05%)</title><rect x="232.0" y="467.0" width="24.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.0" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (84 samples, 2.05%)</title><rect x="232.0" y="451.0" width="24.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.0" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (62 samples, 1.51%)</title><rect x="232.0" y="435.0" width="17.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (20 samples, 0.49%)</title><rect x="232.0" y="419.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (20 samples, 0.49%)</title><rect x="232.0" y="403.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.49%)</title><rect x="232.0" y="387.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.49%)</title><rect x="232.0" y="371.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="232.0" y="355.0" width="2.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="235.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.24%)</title><rect x="234.8" y="355.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.8" y="366.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="234.8" y="339.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="237.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (42 samples, 1.02%)</title><rect x="237.7" y="419.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.46%)</title><rect x="237.7" y="403.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.46%)</title><rect x="237.7" y="387.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.46%)</title><rect x="237.7" y="371.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.46%)</title><rect x="237.7" y="355.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.7" y="366.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.46%)</title><rect x="237.7" y="339.0" width="5.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="240.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.32%)</title><rect x="243.2" y="403.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.32%)</title><rect x="243.2" y="387.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.32%)</title><rect x="243.2" y="371.0" width="3.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="246.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (10 samples, 0.24%)</title><rect x="246.9" y="403.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.24%)</title><rect x="246.9" y="387.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.24%)</title><rect x="246.9" y="371.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.get$Lambda (10 samples, 0.24%)</title><rect x="246.9" y="355.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.9" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$74 (10 samples, 0.24%)</title><rect x="246.9" y="339.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="249.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.54%)</title><rect x="249.8" y="435.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.54%)</title><rect x="249.8" y="419.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.54%)</title><rect x="249.8" y="403.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.15%)</title><rect x="249.8" y="387.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="252.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.39%)</title><rect x="251.5" y="387.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.5" y="398.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.39%)</title><rect x="251.5" y="371.0" width="4.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="254.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (107 samples, 2.61%)</title><rect x="256.1" y="467.0" width="30.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.1" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (16 samples, 0.39%)</title><rect x="256.1" y="451.0" width="4.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="259.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (32 samples, 0.78%)</title><rect x="260.7" y="451.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (32 samples, 0.78%)</title><rect x="260.7" y="435.0" width="9.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="263.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.44%)</title><rect x="269.9" y="451.0" width="17.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.44%)</title><rect x="269.9" y="435.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.9" y="446.0"></text>
</g>
<g>
<title>char[] (31 samples, 0.76%)</title><rect x="269.9" y="419.0" width="8.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="272.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="278.8" y="419.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="281.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.49%)</title><rect x="281.1" y="419.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.49%)</title><rect x="281.1" y="403.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.49%)</title><rect x="281.1" y="387.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.1" y="398.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.49%)</title><rect x="281.1" y="371.0" width="5.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="284.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (57 samples, 1.39%)</title><rect x="286.9" y="467.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.9" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (57 samples, 1.39%)</title><rect x="286.9" y="451.0" width="16.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.9" y="462.0"></text>
</g>
<g>
<title>char[] (27 samples, 0.66%)</title><rect x="286.9" y="435.0" width="7.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="289.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.29%)</title><rect x="294.6" y="435.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="297.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.44%)</title><rect x="298.1" y="435.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.44%)</title><rect x="298.1" y="419.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (18 samples, 0.44%)</title><rect x="298.1" y="403.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.1" y="414.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.44%)</title><rect x="298.1" y="387.0" width="5.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="301.1" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=3465] (247 samples, 6.02%)</title><rect x="303.3" y="547.0" width="71.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="306.3" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (247 samples, 6.02%)</title><rect x="303.3" y="531.0" width="71.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.3" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 0.76%)</title><rect x="303.3" y="515.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.3" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (31 samples, 0.76%)</title><rect x="303.3" y="499.0" width="8.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="306.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (216 samples, 5.26%)</title><rect x="312.2" y="515.0" width="62.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.2" y="526.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (216 samples, 5.26%)</title><rect x="312.2" y="499.0" width="62.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.2" y="510.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (216 samples, 5.26%)</title><rect x="312.2" y="483.0" width="62.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.2" y="494.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (66 samples, 1.61%)</title><rect x="312.2" y="467.0" width="19.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="315.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (66 samples, 1.61%)</title><rect x="312.2" y="451.0" width="19.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.2" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (46 samples, 1.12%)</title><rect x="312.2" y="435.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (17 samples, 0.41%)</title><rect x="312.2" y="419.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (17 samples, 0.41%)</title><rect x="312.2" y="403.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.41%)</title><rect x="312.2" y="387.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="315.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.41%)</title><rect x="312.2" y="371.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="312.2" y="355.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="315.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.22%)</title><rect x="314.5" y="355.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.5" y="366.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.22%)</title><rect x="314.5" y="339.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="317.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (29 samples, 0.71%)</title><rect x="317.1" y="419.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.15%)</title><rect x="317.1" y="403.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.15%)</title><rect x="317.1" y="387.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.15%)</title><rect x="317.1" y="371.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.15%)</title><rect x="317.1" y="355.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.1" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.15%)</title><rect x="317.1" y="339.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="320.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.44%)</title><rect x="318.8" y="403.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.44%)</title><rect x="318.8" y="387.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.44%)</title><rect x="318.8" y="371.0" width="5.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="321.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (5 samples, 0.12%)</title><rect x="324.0" y="403.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="324.0" y="387.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="324.0" y="371.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.get$Lambda (5 samples, 0.12%)</title><rect x="324.0" y="355.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.0" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$74 (5 samples, 0.12%)</title><rect x="324.0" y="339.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="327.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (20 samples, 0.49%)</title><rect x="325.4" y="435.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.49%)</title><rect x="325.4" y="419.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.49%)</title><rect x="325.4" y="403.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="325.4" y="387.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="328.4" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.24%)</title><rect x="328.3" y="387.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.3" y="398.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="328.3" y="371.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="331.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (104 samples, 2.53%)</title><rect x="331.2" y="467.0" width="29.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.2" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (21 samples, 0.51%)</title><rect x="331.2" y="451.0" width="6.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="334.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (30 samples, 0.73%)</title><rect x="337.2" y="451.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 0.73%)</title><rect x="337.2" y="435.0" width="8.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="340.2" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.29%)</title><rect x="345.8" y="451.0" width="15.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="348.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.29%)</title><rect x="345.8" y="435.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="348.8" y="446.0"></text>
</g>
<g>
<title>char[] (29 samples, 0.71%)</title><rect x="345.8" y="419.0" width="8.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="348.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="354.2" y="419.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="357.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.34%)</title><rect x="357.0" y="419.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="360.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.34%)</title><rect x="357.0" y="403.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.34%)</title><rect x="357.0" y="387.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.0" y="398.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.34%)</title><rect x="357.0" y="371.0" width="4.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="360.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (46 samples, 1.12%)</title><rect x="361.1" y="467.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.1" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (46 samples, 1.12%)</title><rect x="361.1" y="451.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.1" y="462.0"></text>
</g>
<g>
<title>char[] (29 samples, 0.71%)</title><rect x="361.1" y="435.0" width="8.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="364.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.22%)</title><rect x="369.4" y="435.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="372.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.19%)</title><rect x="372.0" y="435.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.19%)</title><rect x="372.0" y="419.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.19%)</title><rect x="372.0" y="403.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.0" y="414.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="372.0" y="387.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="375.0" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=3466] (271 samples, 6.60%)</title><rect x="374.3" y="547.0" width="77.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="377.3" y="558.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (271 samples, 6.60%)</title><rect x="374.3" y="531.0" width="77.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.3" y="542.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 0.49%)</title><rect x="374.3" y="515.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.3" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (20 samples, 0.49%)</title><rect x="374.3" y="499.0" width="5.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="377.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (251 samples, 6.12%)</title><rect x="380.0" y="515.0" width="72.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.0" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (251 samples, 6.12%)</title><rect x="380.0" y="499.0" width="72.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.0" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (251 samples, 6.12%)</title><rect x="380.0" y="483.0" width="72.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.0" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (85 samples, 2.07%)</title><rect x="380.0" y="467.0" width="24.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.0" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (85 samples, 2.07%)</title><rect x="380.0" y="451.0" width="24.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.0" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (67 samples, 1.63%)</title><rect x="380.0" y="435.0" width="19.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (24 samples, 0.58%)</title><rect x="380.0" y="419.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="383.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.58%)</title><rect x="380.0" y="403.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.58%)</title><rect x="380.0" y="387.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.58%)</title><rect x="380.0" y="371.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.41%)</title><rect x="380.0" y="355.0" width="4.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="383.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.17%)</title><rect x="384.9" y="355.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.9" y="366.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="384.9" y="339.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="387.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (43 samples, 1.05%)</title><rect x="386.9" y="419.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.34%)</title><rect x="386.9" y="403.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.34%)</title><rect x="386.9" y="387.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.34%)</title><rect x="386.9" y="371.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.34%)</title><rect x="386.9" y="355.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.9" y="366.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.34%)</title><rect x="386.9" y="339.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="389.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.41%)</title><rect x="391.0" y="403.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.41%)</title><rect x="391.0" y="387.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.41%)</title><rect x="391.0" y="371.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="394.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (12 samples, 0.29%)</title><rect x="395.9" y="403.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.29%)</title><rect x="395.9" y="387.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.29%)</title><rect x="395.9" y="371.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.get$Lambda (12 samples, 0.29%)</title><rect x="395.9" y="355.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.9" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$74 (12 samples, 0.29%)</title><rect x="395.9" y="339.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="398.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (18 samples, 0.44%)</title><rect x="399.3" y="435.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.44%)</title><rect x="399.3" y="419.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="402.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.44%)</title><rect x="399.3" y="403.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.15%)</title><rect x="399.3" y="387.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="402.3" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.29%)</title><rect x="401.0" y="387.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.0" y="398.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.29%)</title><rect x="401.0" y="371.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="404.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (113 samples, 2.75%)</title><rect x="404.5" y="467.0" width="32.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.5" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (12 samples, 0.29%)</title><rect x="404.5" y="451.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="407.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (37 samples, 0.90%)</title><rect x="407.9" y="451.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (37 samples, 0.90%)</title><rect x="407.9" y="435.0" width="10.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="410.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (64 samples, 1.56%)</title><rect x="418.6" y="451.0" width="18.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (64 samples, 1.56%)</title><rect x="418.6" y="435.0" width="18.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.6" y="446.0"></text>
</g>
<g>
<title>char[] (36 samples, 0.88%)</title><rect x="418.6" y="419.0" width="10.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="421.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.27%)</title><rect x="428.9" y="419.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="431.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.41%)</title><rect x="432.1" y="419.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.41%)</title><rect x="432.1" y="403.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17 samples, 0.41%)</title><rect x="432.1" y="387.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.1" y="398.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.41%)</title><rect x="432.1" y="371.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="435.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.29%)</title><rect x="437.0" y="467.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.0" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.29%)</title><rect x="437.0" y="451.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="440.0" y="462.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.61%)</title><rect x="437.0" y="435.0" width="7.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="440.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="444.2" y="435.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="447.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.49%)</title><rect x="446.5" y="435.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.49%)</title><rect x="446.5" y="419.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.49%)</title><rect x="446.5" y="403.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.5" y="414.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.49%)</title><rect x="446.5" y="387.0" width="5.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="449.5" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=3467] (254 samples, 6.19%)</title><rect x="452.2" y="547.0" width="73.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="455.2" y="558.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (254 samples, 6.19%)</title><rect x="452.2" y="531.0" width="73.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.2" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (15 samples, 0.37%)</title><rect x="452.2" y="515.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.2" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (15 samples, 0.37%)</title><rect x="452.2" y="499.0" width="4.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="455.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (239 samples, 5.82%)</title><rect x="456.5" y="515.0" width="68.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.5" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (239 samples, 5.82%)</title><rect x="456.5" y="499.0" width="68.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.5" y="510.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (239 samples, 5.82%)</title><rect x="456.5" y="483.0" width="68.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.5" y="494.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (79 samples, 1.92%)</title><rect x="456.5" y="467.0" width="22.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.5" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (79 samples, 1.92%)</title><rect x="456.5" y="451.0" width="22.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.5" y="462.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (57 samples, 1.39%)</title><rect x="456.5" y="435.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (18 samples, 0.44%)</title><rect x="456.5" y="419.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.44%)</title><rect x="456.5" y="403.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.44%)</title><rect x="456.5" y="387.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.44%)</title><rect x="456.5" y="371.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.22%)</title><rect x="456.5" y="355.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="459.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.22%)</title><rect x="459.1" y="355.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.1" y="366.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.22%)</title><rect x="459.1" y="339.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="462.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (39 samples, 0.95%)</title><rect x="461.7" y="419.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.19%)</title><rect x="461.7" y="403.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.19%)</title><rect x="461.7" y="387.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.19%)</title><rect x="461.7" y="371.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.19%)</title><rect x="461.7" y="355.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.7" y="366.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="461.7" y="339.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="464.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.56%)</title><rect x="464.0" y="403.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.56%)</title><rect x="464.0" y="387.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.56%)</title><rect x="464.0" y="371.0" width="6.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="467.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (8 samples, 0.19%)</title><rect x="470.6" y="403.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.19%)</title><rect x="470.6" y="387.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.19%)</title><rect x="470.6" y="371.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.get$Lambda (8 samples, 0.19%)</title><rect x="470.6" y="355.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.6" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$74 (8 samples, 0.19%)</title><rect x="470.6" y="339.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="473.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.54%)</title><rect x="472.9" y="435.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.54%)</title><rect x="472.9" y="419.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.54%)</title><rect x="472.9" y="403.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.9" y="414.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="472.9" y="387.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="475.9" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.37%)</title><rect x="474.9" y="387.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.9" y="398.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.37%)</title><rect x="474.9" y="371.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="477.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (110 samples, 2.68%)</title><rect x="479.2" y="467.0" width="31.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.2" y="478.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (22 samples, 0.54%)</title><rect x="479.2" y="451.0" width="6.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="482.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (32 samples, 0.78%)</title><rect x="485.6" y="451.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (32 samples, 0.78%)</title><rect x="485.6" y="435.0" width="9.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="488.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 1.36%)</title><rect x="494.8" y="451.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 1.36%)</title><rect x="494.8" y="435.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.8" y="446.0"></text>
</g>
<g>
<title>char[] (32 samples, 0.78%)</title><rect x="494.8" y="419.0" width="9.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="497.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="504.0" y="419.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="507.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.34%)</title><rect x="506.8" y="419.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.34%)</title><rect x="506.8" y="403.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.34%)</title><rect x="506.8" y="387.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.8" y="398.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.34%)</title><rect x="506.8" y="371.0" width="4.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="509.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 1.22%)</title><rect x="510.9" y="467.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.9" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 1.22%)</title><rect x="510.9" y="451.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.9" y="462.0"></text>
</g>
<g>
<title>char[] (19 samples, 0.46%)</title><rect x="510.9" y="435.0" width="5.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="513.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="516.3" y="435.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="519.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.51%)</title><rect x="519.2" y="435.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.51%)</title><rect x="519.2" y="419.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (21 samples, 0.51%)</title><rect x="519.2" y="403.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.2" y="414.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.51%)</title><rect x="519.2" y="387.0" width="6.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="522.2" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=3468] (229 samples, 5.58%)</title><rect x="525.2" y="547.0" width="65.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="528.2" y="558.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (229 samples, 5.58%)</title><rect x="525.2" y="531.0" width="65.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.2" y="542.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 0.44%)</title><rect x="525.2" y="515.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.2" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (18 samples, 0.44%)</title><rect x="525.2" y="499.0" width="5.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="528.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (211 samples, 5.14%)</title><rect x="530.4" y="515.0" width="60.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.4" y="526.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (211 samples, 5.14%)</title><rect x="530.4" y="499.0" width="60.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.4" y="510.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (211 samples, 5.14%)</title><rect x="530.4" y="483.0" width="60.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.4" y="494.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (73 samples, 1.78%)</title><rect x="530.4" y="467.0" width="21.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="533.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (73 samples, 1.78%)</title><rect x="530.4" y="451.0" width="21.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.4" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (55 samples, 1.34%)</title><rect x="530.4" y="435.0" width="15.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (11 samples, 0.27%)</title><rect x="530.4" y="419.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.27%)</title><rect x="530.4" y="403.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.27%)</title><rect x="530.4" y="387.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.27%)</title><rect x="530.4" y="371.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="530.4" y="355.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="533.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="532.7" y="355.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.7" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="532.7" y="339.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="535.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (44 samples, 1.07%)</title><rect x="533.6" y="419.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.27%)</title><rect x="533.6" y="403.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.27%)</title><rect x="533.6" y="387.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.27%)</title><rect x="533.6" y="371.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.27%)</title><rect x="533.6" y="355.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.6" y="366.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.27%)</title><rect x="533.6" y="339.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="536.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.56%)</title><rect x="536.7" y="403.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.56%)</title><rect x="536.7" y="387.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.56%)</title><rect x="536.7" y="371.0" width="6.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="539.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getMethod (10 samples, 0.24%)</title><rect x="543.4" y="403.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.24%)</title><rect x="543.4" y="387.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.24%)</title><rect x="543.4" y="371.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.get$Lambda (10 samples, 0.24%)</title><rect x="543.4" y="355.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.4" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$74 (10 samples, 0.24%)</title><rect x="543.4" y="339.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="546.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (18 samples, 0.44%)</title><rect x="546.2" y="435.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.44%)</title><rect x="546.2" y="419.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.44%)</title><rect x="546.2" y="403.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="546.2" y="387.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="549.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.24%)</title><rect x="548.5" y="387.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.5" y="398.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="548.5" y="371.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="551.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (91 samples, 2.22%)</title><rect x="551.4" y="467.0" width="26.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.4" y="478.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (18 samples, 0.44%)</title><rect x="551.4" y="451.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="554.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (24 samples, 0.58%)</title><rect x="556.6" y="451.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (24 samples, 0.58%)</title><rect x="556.6" y="435.0" width="6.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="559.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (49 samples, 1.19%)</title><rect x="563.5" y="451.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.5" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (49 samples, 1.19%)</title><rect x="563.5" y="435.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.5" y="446.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.61%)</title><rect x="563.5" y="419.0" width="7.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="566.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.15%)</title><rect x="570.7" y="419.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="573.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.44%)</title><rect x="572.4" y="419.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.44%)</title><rect x="572.4" y="403.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (18 samples, 0.44%)</title><rect x="572.4" y="387.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="575.4" y="398.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.44%)</title><rect x="572.4" y="371.0" width="5.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="575.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 1.15%)</title><rect x="577.6" y="467.0" width="13.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.6" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 1.15%)</title><rect x="577.6" y="451.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.6" y="462.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.49%)</title><rect x="577.6" y="435.0" width="5.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="580.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.29%)</title><rect x="583.3" y="435.0" width="3.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="586.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.37%)</title><rect x="586.8" y="435.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.37%)</title><rect x="586.8" y="419.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.37%)</title><rect x="586.8" y="403.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.8" y="414.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.37%)</title><rect x="586.8" y="387.0" width="4.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="589.8" y="398.0"></text>
</g>
<g>
<title>[Worker_112 tid=6716] (264 samples, 6.43%)</title><rect x="591.1" y="547.0" width="75.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="594.1" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (264 samples, 6.43%)</title><rect x="591.1" y="531.0" width="75.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.1" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (264 samples, 6.43%)</title><rect x="591.1" y="515.0" width="75.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.1" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (264 samples, 6.43%)</title><rect x="591.1" y="499.0" width="75.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.1" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.15%)</title><rect x="591.1" y="483.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.15%)</title><rect x="591.1" y="467.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.15%)</title><rect x="591.1" y="451.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.15%)</title><rect x="591.1" y="435.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.15%)</title><rect x="591.1" y="419.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="594.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.run (258 samples, 6.29%)</title><rect x="592.8" y="483.0" width="74.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.8" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$3 (258 samples, 6.29%)</title><rect x="592.8" y="467.0" width="74.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.8" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (258 samples, 6.29%)</title><rect x="592.8" y="451.0" width="74.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.8" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="592.8" y="435.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="595.8" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.10%)</title><rect x="593.4" y="435.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="596.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (16 samples, 0.39%)</title><rect x="594.5" y="435.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (16 samples, 0.39%)</title><rect x="594.5" y="419.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.19%)</title><rect x="594.5" y="403.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.5" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.19%)</title><rect x="594.5" y="387.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.5" y="398.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="594.5" y="371.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="597.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.19%)</title><rect x="596.8" y="403.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.8" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.19%)</title><rect x="596.8" y="387.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="599.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.39%)</title><rect x="599.1" y="435.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.1" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.15%)</title><rect x="599.1" y="419.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="602.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.15%)</title><rect x="600.9" y="419.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="603.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.10%)</title><rect x="602.6" y="419.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="605.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (220 samples, 5.36%)</title><rect x="603.7" y="435.0" width="63.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.7" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (32 samples, 0.78%)</title><rect x="603.7" y="419.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (32 samples, 0.78%)</title><rect x="603.7" y="403.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (32 samples, 0.78%)</title><rect x="603.7" y="387.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (32 samples, 0.78%)</title><rect x="603.7" y="371.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (32 samples, 0.78%)</title><rect x="603.7" y="355.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.51%)</title><rect x="603.7" y="339.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (21 samples, 0.51%)</title><rect x="603.7" y="323.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (21 samples, 0.51%)</title><rect x="603.7" y="307.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (21 samples, 0.51%)</title><rect x="603.7" y="291.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (21 samples, 0.51%)</title><rect x="603.7" y="275.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (21 samples, 0.51%)</title><rect x="603.7" y="259.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.37%)</title><rect x="603.7" y="243.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (15 samples, 0.37%)</title><rect x="603.7" y="227.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (15 samples, 0.37%)</title><rect x="603.7" y="211.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (15 samples, 0.37%)</title><rect x="603.7" y="195.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (15 samples, 0.37%)</title><rect x="603.7" y="179.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (15 samples, 0.37%)</title><rect x="603.7" y="163.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (15 samples, 0.37%)</title><rect x="603.7" y="147.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (15 samples, 0.37%)</title><rect x="603.7" y="131.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (15 samples, 0.37%)</title><rect x="603.7" y="115.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.17%)</title><rect x="603.7" y="99.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.17%)</title><rect x="603.7" y="83.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.7" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.17%)</title><rect x="603.7" y="67.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="606.7" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.19%)</title><rect x="605.8" y="99.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (8 samples, 0.19%)</title><rect x="605.8" y="83.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (8 samples, 0.19%)</title><rect x="605.8" y="67.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="605.8" y="51.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="608.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (4 samples, 0.10%)</title><rect x="606.9" y="51.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.9" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (4 samples, 0.10%)</title><rect x="606.9" y="35.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="609.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (6 samples, 0.15%)</title><rect x="608.1" y="243.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (6 samples, 0.15%)</title><rect x="608.1" y="227.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.15%)</title><rect x="608.1" y="211.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.15%)</title><rect x="608.1" y="195.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="611.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$225/1054348470.apply (11 samples, 0.27%)</title><rect x="609.8" y="339.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (11 samples, 0.27%)</title><rect x="609.8" y="323.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.27%)</title><rect x="609.8" y="307.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.27%)</title><rect x="609.8" y="291.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="612.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.17%)</title><rect x="612.9" y="419.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (7 samples, 0.17%)</title><rect x="612.9" y="403.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$247/1413081072.apply (7 samples, 0.17%)</title><rect x="612.9" y="387.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (7 samples, 0.17%)</title><rect x="612.9" y="371.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (7 samples, 0.17%)</title><rect x="612.9" y="355.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.17%)</title><rect x="612.9" y="339.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="615.9" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.17%)</title><rect x="612.9" y="323.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="615.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (8 samples, 0.19%)</title><rect x="615.0" y="419.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.19%)</title><rect x="615.0" y="403.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.19%)</title><rect x="615.0" y="387.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.19%)</title><rect x="615.0" y="371.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="618.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (8 samples, 0.19%)</title><rect x="617.3" y="419.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.19%)</title><rect x="617.3" y="403.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.19%)</title><rect x="617.3" y="387.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.19%)</title><rect x="617.3" y="371.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="620.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (165 samples, 4.02%)</title><rect x="619.6" y="419.0" width="47.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.6" y="430.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 0.02%)</title><rect x="619.6" y="403.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.6" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (1 samples, 0.02%)</title><rect x="619.6" y="387.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="622.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (26 samples, 0.63%)</title><rect x="619.8" y="403.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 0.63%)</title><rect x="619.8" y="387.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.8" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.02%)</title><rect x="619.8" y="371.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="622.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (13 samples, 0.32%)</title><rect x="620.1" y="371.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (13 samples, 0.32%)</title><rect x="620.1" y="355.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (13 samples, 0.32%)</title><rect x="620.1" y="339.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.32%)</title><rect x="620.1" y="323.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.12%)</title><rect x="620.1" y="307.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.12%)</title><rect x="620.1" y="291.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.1" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.12%)</title><rect x="620.1" y="275.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.12%)</title><rect x="620.1" y="259.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.12%)</title><rect x="620.1" y="243.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.12%)</title><rect x="620.1" y="227.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (5 samples, 0.12%)</title><rect x="620.1" y="211.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.12%)</title><rect x="620.1" y="195.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.12%)</title><rect x="620.1" y="179.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.12%)</title><rect x="620.1" y="163.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (5 samples, 0.12%)</title><rect x="620.1" y="147.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.12%)</title><rect x="620.1" y="131.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.1" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.05%)</title><rect x="620.1" y="115.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="623.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="620.7" y="115.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.7" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="620.7" y="99.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="623.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (8 samples, 0.19%)</title><rect x="621.6" y="307.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (8 samples, 0.19%)</title><rect x="621.6" y="291.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.6" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.19%)</title><rect x="621.6" y="275.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.19%)</title><rect x="621.6" y="259.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="624.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.10%)</title><rect x="623.9" y="371.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="626.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.10%)</title><rect x="623.9" y="355.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="626.9" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.10%)</title><rect x="625.0" y="371.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="628.0" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.10%)</title><rect x="626.2" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.10%)</title><rect x="626.2" y="355.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="629.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.05%)</title><rect x="627.3" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="627.3" y="387.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="627.3" y="371.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (2 samples, 0.05%)</title><rect x="627.3" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.3" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (2 samples, 0.05%)</title><rect x="627.3" y="339.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="630.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (6 samples, 0.15%)</title><rect x="627.9" y="403.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.07%)</title><rect x="627.9" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="627.9" y="371.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="627.9" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (3 samples, 0.07%)</title><rect x="627.9" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.9" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (3 samples, 0.07%)</title><rect x="627.9" y="323.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="630.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.07%)</title><rect x="628.8" y="387.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="628.8" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="628.8" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$205/60315096.get$Lambda (3 samples, 0.07%)</title><rect x="628.8" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.8" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$205 (3 samples, 0.07%)</title><rect x="628.8" y="323.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="631.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="629.6" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="629.6" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="629.6" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.6" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="629.6" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.6" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="629.6" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="629.6" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="629.6" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.02%)</title><rect x="629.6" y="291.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="632.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.44%)</title><rect x="629.9" y="403.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.9" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.07%)</title><rect x="629.9" y="387.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="632.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (15 samples, 0.37%)</title><rect x="630.8" y="387.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.37%)</title><rect x="630.8" y="371.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (15 samples, 0.37%)</title><rect x="630.8" y="355.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15 samples, 0.37%)</title><rect x="630.8" y="339.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15 samples, 0.37%)</title><rect x="630.8" y="323.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15 samples, 0.37%)</title><rect x="630.8" y="307.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.37%)</title><rect x="630.8" y="291.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.17%)</title><rect x="630.8" y="275.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.17%)</title><rect x="630.8" y="259.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.8" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.17%)</title><rect x="630.8" y="243.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.17%)</title><rect x="630.8" y="227.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.17%)</title><rect x="630.8" y="211.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.17%)</title><rect x="630.8" y="195.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (7 samples, 0.17%)</title><rect x="630.8" y="179.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.17%)</title><rect x="630.8" y="163.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.17%)</title><rect x="630.8" y="147.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.17%)</title><rect x="630.8" y="131.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (7 samples, 0.17%)</title><rect x="630.8" y="115.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.17%)</title><rect x="630.8" y="99.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.8" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.07%)</title><rect x="630.8" y="83.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="633.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (4 samples, 0.10%)</title><rect x="631.6" y="83.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (4 samples, 0.10%)</title><rect x="631.6" y="67.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="634.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (8 samples, 0.19%)</title><rect x="632.8" y="275.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (8 samples, 0.19%)</title><rect x="632.8" y="259.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.19%)</title><rect x="632.8" y="243.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.19%)</title><rect x="632.8" y="227.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="635.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (111 samples, 2.70%)</title><rect x="635.1" y="403.0" width="31.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.1" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.10%)</title><rect x="635.1" y="387.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="638.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.12%)</title><rect x="636.2" y="387.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.12%)</title><rect x="636.2" y="371.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.12%)</title><rect x="636.2" y="355.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="639.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.10%)</title><rect x="637.7" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.10%)</title><rect x="637.7" y="371.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="640.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (98 samples, 2.39%)</title><rect x="638.8" y="387.0" width="28.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="641.8" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.07%)</title><rect x="638.8" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.07%)</title><rect x="638.8" y="355.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="641.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (40 samples, 0.97%)</title><rect x="639.7" y="371.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.7" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.02%)</title><rect x="639.7" y="355.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="642.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (39 samples, 0.95%)</title><rect x="640.0" y="355.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.0" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.10%)</title><rect x="640.0" y="339.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="643.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.05%)</title><rect x="641.1" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.1" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.05%)</title><rect x="641.1" y="323.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="644.1" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.12%)</title><rect x="641.7" y="339.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="644.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.07%)</title><rect x="643.1" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="643.1" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="646.1" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (25 samples, 0.61%)</title><rect x="644.0" y="339.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (25 samples, 0.61%)</title><rect x="644.0" y="323.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (25 samples, 0.61%)</title><rect x="644.0" y="307.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.02%)</title><rect x="644.0" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (1 samples, 0.02%)</title><rect x="644.0" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.02%)</title><rect x="644.0" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.02%)</title><rect x="644.0" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.02%)</title><rect x="644.0" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (1 samples, 0.02%)</title><rect x="644.0" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1 samples, 0.02%)</title><rect x="644.0" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.0" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="644.0" y="179.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="647.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (24 samples, 0.58%)</title><rect x="644.3" y="291.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.3" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (5 samples, 0.12%)</title><rect x="644.3" y="275.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="647.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.17%)</title><rect x="645.7" y="275.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="645.7" y="259.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$124/463011894.get$Lambda (5 samples, 0.12%)</title><rect x="645.7" y="243.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$124 (5 samples, 0.12%)</title><rect x="645.7" y="227.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="648.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.get$Lambda (2 samples, 0.05%)</title><rect x="647.2" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="650.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$135 (2 samples, 0.05%)</title><rect x="647.2" y="227.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="650.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.07%)</title><rect x="647.7" y="275.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (3 samples, 0.07%)</title><rect x="647.7" y="259.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.7" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (3 samples, 0.07%)</title><rect x="647.7" y="243.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="650.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (9 samples, 0.22%)</title><rect x="648.6" y="275.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.22%)</title><rect x="648.6" y="259.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="651.6" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.07%)</title><rect x="651.2" y="371.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="654.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="652.0" y="371.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="655.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="652.0" y="355.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="655.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.07%)</title><rect x="652.6" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (3 samples, 0.07%)</title><rect x="652.6" y="355.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="655.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.29%)</title><rect x="653.5" y="371.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.10%)</title><rect x="653.5" y="355.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="656.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.19%)</title><rect x="654.6" y="355.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.19%)</title><rect x="654.6" y="339.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="657.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.19%)</title><rect x="654.6" y="323.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.6" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.19%)</title><rect x="654.6" y="307.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.19%)</title><rect x="654.6" y="291.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.19%)</title><rect x="654.6" y="275.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.19%)</title><rect x="654.6" y="259.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (8 samples, 0.19%)</title><rect x="654.6" y="243.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.19%)</title><rect x="654.6" y="227.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.19%)</title><rect x="654.6" y="211.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.15%)</title><rect x="654.6" y="195.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.15%)</title><rect x="654.6" y="179.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.6" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.15%)</title><rect x="654.6" y="163.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="657.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.05%)</title><rect x="656.4" y="195.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (2 samples, 0.05%)</title><rect x="656.4" y="179.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2 samples, 0.05%)</title><rect x="656.4" y="163.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.4" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="656.4" y="147.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="659.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.02%)</title><rect x="656.6" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.02%)</title><rect x="656.6" y="131.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="659.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (35 samples, 0.85%)</title><rect x="656.9" y="371.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.24%)</title><rect x="656.9" y="355.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (3 samples, 0.07%)</title><rect x="656.9" y="339.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (3 samples, 0.07%)</title><rect x="656.9" y="323.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="659.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.17%)</title><rect x="657.8" y="339.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (7 samples, 0.17%)</title><rect x="657.8" y="323.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="660.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.02%)</title><rect x="659.8" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.02%)</title><rect x="659.8" y="339.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="662.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.17%)</title><rect x="660.1" y="355.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.17%)</title><rect x="660.1" y="339.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.17%)</title><rect x="660.1" y="323.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.17%)</title><rect x="660.1" y="307.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="663.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (11 samples, 0.27%)</title><rect x="662.1" y="355.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.1" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (4 samples, 0.10%)</title><rect x="662.1" y="339.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.1" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (4 samples, 0.10%)</title><rect x="662.1" y="323.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="665.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (7 samples, 0.17%)</title><rect x="663.3" y="339.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="663.3" y="323.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="663.3" y="307.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$119/1499123289.get$Lambda (1 samples, 0.02%)</title><rect x="663.3" y="291.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.3" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$119 (1 samples, 0.02%)</title><rect x="663.3" y="275.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="666.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (6 samples, 0.15%)</title><rect x="663.5" y="323.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.5" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (6 samples, 0.15%)</title><rect x="663.5" y="307.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="666.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (6 samples, 0.15%)</title><rect x="665.3" y="355.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (6 samples, 0.15%)</title><rect x="665.3" y="339.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="668.3" y="350.0"></text>
</g>
<g>
<title>[Worker_120 tid=6951] (256 samples, 6.24%)</title><rect x="667.0" y="547.0" width="73.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="670.0" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (256 samples, 6.24%)</title><rect x="667.0" y="531.0" width="73.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.0" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (256 samples, 6.24%)</title><rect x="667.0" y="515.0" width="73.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.0" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (256 samples, 6.24%)</title><rect x="667.0" y="499.0" width="73.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.0" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.07%)</title><rect x="667.0" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.07%)</title><rect x="667.0" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.07%)</title><rect x="667.0" y="451.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.07%)</title><rect x="667.0" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.07%)</title><rect x="667.0" y="419.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="670.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.run (253 samples, 6.16%)</title><rect x="667.9" y="483.0" width="72.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.9" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$3 (253 samples, 6.16%)</title><rect x="667.9" y="467.0" width="72.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.9" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (253 samples, 6.16%)</title><rect x="667.9" y="451.0" width="72.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.9" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="667.9" y="435.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="670.9" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.05%)</title><rect x="669.3" y="435.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="672.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 0.37%)</title><rect x="669.9" y="435.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 0.37%)</title><rect x="669.9" y="419.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.19%)</title><rect x="669.9" y="403.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.19%)</title><rect x="669.9" y="387.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.9" y="398.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="669.9" y="371.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="672.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.17%)</title><rect x="672.2" y="403.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.2" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.17%)</title><rect x="672.2" y="387.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="675.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.32%)</title><rect x="674.2" y="435.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.2" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="674.2" y="419.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="677.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.15%)</title><rect x="676.2" y="419.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="679.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (218 samples, 5.31%)</title><rect x="677.9" y="435.0" width="62.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.9" y="446.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (34 samples, 0.83%)</title><rect x="677.9" y="419.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (34 samples, 0.83%)</title><rect x="677.9" y="403.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (34 samples, 0.83%)</title><rect x="677.9" y="387.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (34 samples, 0.83%)</title><rect x="677.9" y="371.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (34 samples, 0.83%)</title><rect x="677.9" y="355.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.66%)</title><rect x="677.9" y="339.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (27 samples, 0.66%)</title><rect x="677.9" y="323.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (27 samples, 0.66%)</title><rect x="677.9" y="307.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (27 samples, 0.66%)</title><rect x="677.9" y="291.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (27 samples, 0.66%)</title><rect x="677.9" y="275.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 0.66%)</title><rect x="677.9" y="259.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.22%)</title><rect x="677.9" y="243.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.22%)</title><rect x="677.9" y="227.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.9" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.22%)</title><rect x="677.9" y="211.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.22%)</title><rect x="677.9" y="195.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.22%)</title><rect x="677.9" y="179.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.22%)</title><rect x="677.9" y="163.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (9 samples, 0.22%)</title><rect x="677.9" y="147.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.22%)</title><rect x="677.9" y="131.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.22%)</title><rect x="677.9" y="115.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="677.9" y="99.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="677.9" y="83.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.9" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.05%)</title><rect x="677.9" y="67.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="680.9" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.17%)</title><rect x="678.5" y="99.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (7 samples, 0.17%)</title><rect x="678.5" y="83.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.17%)</title><rect x="678.5" y="67.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (6 samples, 0.15%)</title><rect x="678.5" y="51.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="681.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.02%)</title><rect x="680.2" y="51.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.2" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.02%)</title><rect x="680.2" y="35.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="683.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (18 samples, 0.44%)</title><rect x="680.5" y="243.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (18 samples, 0.44%)</title><rect x="680.5" y="227.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.44%)</title><rect x="680.5" y="211.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.44%)</title><rect x="680.5" y="195.0" width="5.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="683.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$225/1054348470.apply (7 samples, 0.17%)</title><rect x="685.7" y="339.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (7 samples, 0.17%)</title><rect x="685.7" y="323.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.17%)</title><rect x="685.7" y="307.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.17%)</title><rect x="685.7" y="291.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="688.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.07%)</title><rect x="687.7" y="419.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.07%)</title><rect x="687.7" y="403.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$247/1413081072.apply (3 samples, 0.07%)</title><rect x="687.7" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (3 samples, 0.07%)</title><rect x="687.7" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (3 samples, 0.07%)</title><rect x="687.7" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.07%)</title><rect x="687.7" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.07%)</title><rect x="687.7" y="323.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="690.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.15%)</title><rect x="688.6" y="419.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.15%)</title><rect x="688.6" y="403.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.15%)</title><rect x="688.6" y="387.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.15%)</title><rect x="688.6" y="371.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="691.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (3 samples, 0.07%)</title><rect x="690.3" y="419.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.07%)</title><rect x="690.3" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.07%)</title><rect x="690.3" y="387.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.07%)</title><rect x="690.3" y="371.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="693.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (172 samples, 4.19%)</title><rect x="691.1" y="419.0" width="49.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.1" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (7 samples, 0.17%)</title><rect x="691.1" y="403.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.1" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (7 samples, 0.17%)</title><rect x="691.1" y="387.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="694.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (29 samples, 0.71%)</title><rect x="693.2" y="403.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.2" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.05%)</title><rect x="693.2" y="387.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="696.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (27 samples, 0.66%)</title><rect x="693.7" y="387.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.7" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.07%)</title><rect x="693.7" y="371.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="696.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15 samples, 0.37%)</title><rect x="694.6" y="371.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15 samples, 0.37%)</title><rect x="694.6" y="355.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15 samples, 0.37%)</title><rect x="694.6" y="339.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.37%)</title><rect x="694.6" y="323.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.15%)</title><rect x="694.6" y="307.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.15%)</title><rect x="694.6" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.6" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.15%)</title><rect x="694.6" y="275.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.15%)</title><rect x="694.6" y="259.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.15%)</title><rect x="694.6" y="243.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.15%)</title><rect x="694.6" y="227.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (6 samples, 0.15%)</title><rect x="694.6" y="211.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.15%)</title><rect x="694.6" y="195.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.15%)</title><rect x="694.6" y="179.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.15%)</title><rect x="694.6" y="163.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (6 samples, 0.15%)</title><rect x="694.6" y="147.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (6 samples, 0.15%)</title><rect x="694.6" y="131.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.6" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.07%)</title><rect x="694.6" y="115.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="697.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="695.5" y="115.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="695.5" y="99.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="698.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (9 samples, 0.22%)</title><rect x="696.3" y="307.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (9 samples, 0.22%)</title><rect x="696.3" y="291.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.3" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.22%)</title><rect x="696.3" y="275.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.3" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.22%)</title><rect x="696.3" y="259.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="699.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.05%)</title><rect x="698.9" y="371.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.05%)</title><rect x="698.9" y="355.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="701.9" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.05%)</title><rect x="699.5" y="371.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="702.5" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.12%)</title><rect x="700.1" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="700.1" y="355.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="703.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.10%)</title><rect x="701.5" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="701.5" y="387.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="701.5" y="371.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (4 samples, 0.10%)</title><rect x="701.5" y="355.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.5" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (4 samples, 0.10%)</title><rect x="701.5" y="339.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="704.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.19%)</title><rect x="702.6" y="403.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.10%)</title><rect x="702.6" y="387.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="702.6" y="371.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="702.6" y="355.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (4 samples, 0.10%)</title><rect x="702.6" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.6" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (4 samples, 0.10%)</title><rect x="702.6" y="323.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="705.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.10%)</title><rect x="703.8" y="387.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="703.8" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="703.8" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$205/60315096.get$Lambda (4 samples, 0.10%)</title><rect x="703.8" y="339.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.8" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$205 (4 samples, 0.10%)</title><rect x="703.8" y="323.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="706.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.07%)</title><rect x="704.9" y="403.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.07%)</title><rect x="704.9" y="387.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.07%)</title><rect x="704.9" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.9" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="704.9" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.9" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.07%)</title><rect x="704.9" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.9" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="704.9" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.9" y="334.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.02%)</title><rect x="704.9" y="307.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="707.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.05%)</title><rect x="705.2" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.05%)</title><rect x="705.2" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (2 samples, 0.05%)</title><rect x="705.2" y="291.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="708.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.29%)</title><rect x="705.8" y="403.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 0.29%)</title><rect x="705.8" y="387.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.29%)</title><rect x="705.8" y="371.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.29%)</title><rect x="705.8" y="355.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (12 samples, 0.29%)</title><rect x="705.8" y="339.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (12 samples, 0.29%)</title><rect x="705.8" y="323.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (12 samples, 0.29%)</title><rect x="705.8" y="307.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.29%)</title><rect x="705.8" y="291.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.10%)</title><rect x="705.8" y="275.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.10%)</title><rect x="705.8" y="259.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.8" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.10%)</title><rect x="705.8" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.10%)</title><rect x="705.8" y="227.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.10%)</title><rect x="705.8" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.10%)</title><rect x="705.8" y="195.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (4 samples, 0.10%)</title><rect x="705.8" y="179.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.10%)</title><rect x="705.8" y="163.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.10%)</title><rect x="705.8" y="147.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.10%)</title><rect x="705.8" y="131.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (4 samples, 0.10%)</title><rect x="705.8" y="115.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.10%)</title><rect x="705.8" y="99.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.8" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="705.8" y="83.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="708.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="706.1" y="83.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="706.1" y="67.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="709.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (8 samples, 0.19%)</title><rect x="707.0" y="275.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (8 samples, 0.19%)</title><rect x="707.0" y="259.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.19%)</title><rect x="707.0" y="243.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.0" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.19%)</title><rect x="707.0" y="227.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="710.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (109 samples, 2.66%)</title><rect x="709.3" y="403.0" width="31.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.3" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.10%)</title><rect x="709.3" y="387.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="712.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.07%)</title><rect x="710.4" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.07%)</title><rect x="710.4" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.07%)</title><rect x="710.4" y="355.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="713.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.10%)</title><rect x="711.3" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.10%)</title><rect x="711.3" y="371.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="714.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (98 samples, 2.39%)</title><rect x="712.4" y="387.0" width="28.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.4" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (2 samples, 0.05%)</title><rect x="712.4" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (2 samples, 0.05%)</title><rect x="712.4" y="355.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="715.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (41 samples, 1.00%)</title><rect x="713.0" y="371.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="716.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.05%)</title><rect x="713.0" y="355.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="716.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (39 samples, 0.95%)</title><rect x="713.6" y="355.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.6" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.05%)</title><rect x="713.6" y="339.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="716.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.17%)</title><rect x="714.1" y="339.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.1" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.17%)</title><rect x="714.1" y="323.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="717.1" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.05%)</title><rect x="716.2" y="339.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="719.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.02%)</title><rect x="716.7" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="716.7" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="719.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (27 samples, 0.66%)</title><rect x="717.0" y="339.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (27 samples, 0.66%)</title><rect x="717.0" y="323.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (27 samples, 0.66%)</title><rect x="717.0" y="307.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.22%)</title><rect x="717.0" y="291.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (9 samples, 0.22%)</title><rect x="717.0" y="275.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.22%)</title><rect x="717.0" y="259.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.22%)</title><rect x="717.0" y="243.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.22%)</title><rect x="717.0" y="227.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (9 samples, 0.22%)</title><rect x="717.0" y="211.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (9 samples, 0.22%)</title><rect x="717.0" y="195.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.0" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="717.0" y="179.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="720.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (5 samples, 0.12%)</title><rect x="718.2" y="179.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.2" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (5 samples, 0.12%)</title><rect x="718.2" y="163.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="721.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (18 samples, 0.44%)</title><rect x="719.6" y="291.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (4 samples, 0.10%)</title><rect x="719.6" y="275.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="722.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="720.8" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="720.8" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="723.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$124/463011894.get$Lambda (1 samples, 0.02%)</title><rect x="720.8" y="243.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$124 (1 samples, 0.02%)</title><rect x="720.8" y="227.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="723.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.get$Lambda (3 samples, 0.07%)</title><rect x="721.0" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$135 (3 samples, 0.07%)</title><rect x="721.0" y="227.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="724.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.05%)</title><rect x="721.9" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (2 samples, 0.05%)</title><rect x="721.9" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.9" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (2 samples, 0.05%)</title><rect x="721.9" y="243.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="724.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (8 samples, 0.19%)</title><rect x="722.5" y="275.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.19%)</title><rect x="722.5" y="259.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="725.5" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.05%)</title><rect x="724.8" y="371.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="727.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.05%)</title><rect x="725.4" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (2 samples, 0.05%)</title><rect x="725.4" y="355.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="728.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.44%)</title><rect x="725.9" y="371.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.9" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.12%)</title><rect x="725.9" y="355.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="728.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.32%)</title><rect x="727.4" y="355.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.32%)</title><rect x="727.4" y="339.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (13 samples, 0.32%)</title><rect x="727.4" y="323.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.4" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.32%)</title><rect x="727.4" y="307.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.32%)</title><rect x="727.4" y="291.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.32%)</title><rect x="727.4" y="275.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (13 samples, 0.32%)</title><rect x="727.4" y="259.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (13 samples, 0.32%)</title><rect x="727.4" y="243.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (13 samples, 0.32%)</title><rect x="727.4" y="227.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (13 samples, 0.32%)</title><rect x="727.4" y="211.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.07%)</title><rect x="727.4" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.07%)</title><rect x="727.4" y="179.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.4" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.07%)</title><rect x="727.4" y="163.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="730.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.24%)</title><rect x="728.2" y="195.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (10 samples, 0.24%)</title><rect x="728.2" y="179.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (10 samples, 0.24%)</title><rect x="728.2" y="163.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="728.2" y="147.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="731.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (6 samples, 0.15%)</title><rect x="729.4" y="147.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (6 samples, 0.15%)</title><rect x="729.4" y="131.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="732.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (33 samples, 0.80%)</title><rect x="731.1" y="371.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.24%)</title><rect x="731.1" y="355.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.15%)</title><rect x="731.1" y="339.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.15%)</title><rect x="731.1" y="323.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="734.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.10%)</title><rect x="732.8" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.10%)</title><rect x="732.8" y="323.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="735.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.02%)</title><rect x="734.0" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.02%)</title><rect x="734.0" y="339.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="737.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.10%)</title><rect x="734.3" y="355.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.10%)</title><rect x="734.3" y="339.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.10%)</title><rect x="734.3" y="323.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (4 samples, 0.10%)</title><rect x="734.3" y="307.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="737.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (9 samples, 0.22%)</title><rect x="735.4" y="355.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.4" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (3 samples, 0.07%)</title><rect x="735.4" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.4" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (3 samples, 0.07%)</title><rect x="735.4" y="323.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="738.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (6 samples, 0.15%)</title><rect x="736.3" y="339.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (6 samples, 0.15%)</title><rect x="736.3" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.3" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (6 samples, 0.15%)</title><rect x="736.3" y="307.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="739.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (9 samples, 0.22%)</title><rect x="738.0" y="355.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (9 samples, 0.22%)</title><rect x="738.0" y="339.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="741.0" y="350.0"></text>
</g>
<g>
<title>[Worker_121 tid=7026] (263 samples, 6.41%)</title><rect x="740.6" y="547.0" width="75.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="743.6" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (263 samples, 6.41%)</title><rect x="740.6" y="531.0" width="75.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.6" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (263 samples, 6.41%)</title><rect x="740.6" y="515.0" width="75.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.6" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (263 samples, 6.41%)</title><rect x="740.6" y="499.0" width="75.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.6" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.10%)</title><rect x="740.6" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.10%)</title><rect x="740.6" y="467.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.10%)</title><rect x="740.6" y="451.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.10%)</title><rect x="740.6" y="435.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.10%)</title><rect x="740.6" y="419.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="743.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.run (259 samples, 6.31%)</title><rect x="741.7" y="483.0" width="74.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.7" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$3 (259 samples, 6.31%)</title><rect x="741.7" y="467.0" width="74.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.7" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (259 samples, 6.31%)</title><rect x="741.7" y="451.0" width="74.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.7" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="741.7" y="435.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="744.7" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.12%)</title><rect x="742.3" y="435.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="745.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 0.32%)</title><rect x="743.8" y="435.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13 samples, 0.32%)</title><rect x="743.8" y="419.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.32%)</title><rect x="743.8" y="403.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.32%)</title><rect x="743.8" y="387.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.8" y="398.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.32%)</title><rect x="743.8" y="371.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="746.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.32%)</title><rect x="747.5" y="435.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.5" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="747.5" y="419.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="750.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.15%)</title><rect x="748.9" y="419.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="751.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="750.7" y="419.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="753.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (226 samples, 5.51%)</title><rect x="751.2" y="435.0" width="65.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.2" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (33 samples, 0.80%)</title><rect x="751.2" y="419.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (33 samples, 0.80%)</title><rect x="751.2" y="403.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (33 samples, 0.80%)</title><rect x="751.2" y="387.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (33 samples, 0.80%)</title><rect x="751.2" y="371.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (33 samples, 0.80%)</title><rect x="751.2" y="355.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.54%)</title><rect x="751.2" y="339.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (22 samples, 0.54%)</title><rect x="751.2" y="323.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (22 samples, 0.54%)</title><rect x="751.2" y="307.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (22 samples, 0.54%)</title><rect x="751.2" y="291.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (22 samples, 0.54%)</title><rect x="751.2" y="275.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 0.54%)</title><rect x="751.2" y="259.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.17%)</title><rect x="751.2" y="243.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.17%)</title><rect x="751.2" y="227.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.2" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.17%)</title><rect x="751.2" y="211.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.17%)</title><rect x="751.2" y="195.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.17%)</title><rect x="751.2" y="179.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.17%)</title><rect x="751.2" y="163.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (7 samples, 0.17%)</title><rect x="751.2" y="147.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.17%)</title><rect x="751.2" y="131.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.17%)</title><rect x="751.2" y="115.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="751.2" y="99.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="751.2" y="83.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.2" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.05%)</title><rect x="751.2" y="67.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="754.2" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.12%)</title><rect x="751.8" y="99.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (5 samples, 0.12%)</title><rect x="751.8" y="83.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.12%)</title><rect x="751.8" y="67.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="751.8" y="51.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="754.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.02%)</title><rect x="753.0" y="51.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.02%)</title><rect x="753.0" y="35.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="756.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (15 samples, 0.37%)</title><rect x="753.3" y="243.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (15 samples, 0.37%)</title><rect x="753.3" y="227.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.37%)</title><rect x="753.3" y="211.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.37%)</title><rect x="753.3" y="195.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="756.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$225/1054348470.apply (11 samples, 0.27%)</title><rect x="757.6" y="339.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (11 samples, 0.27%)</title><rect x="757.6" y="323.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.27%)</title><rect x="757.6" y="307.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.27%)</title><rect x="757.6" y="291.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="760.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.17%)</title><rect x="760.7" y="419.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (7 samples, 0.17%)</title><rect x="760.7" y="403.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$247/1413081072.apply (7 samples, 0.17%)</title><rect x="760.7" y="387.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (7 samples, 0.17%)</title><rect x="760.7" y="371.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="763.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (7 samples, 0.17%)</title><rect x="760.7" y="355.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.17%)</title><rect x="760.7" y="339.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.17%)</title><rect x="760.7" y="323.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="763.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.15%)</title><rect x="762.7" y="419.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.15%)</title><rect x="762.7" y="403.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.15%)</title><rect x="762.7" y="387.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.15%)</title><rect x="762.7" y="371.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="765.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (5 samples, 0.12%)</title><rect x="764.5" y="419.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.12%)</title><rect x="764.5" y="403.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.12%)</title><rect x="764.5" y="387.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.12%)</title><rect x="764.5" y="371.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="767.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (175 samples, 4.26%)</title><rect x="765.9" y="419.0" width="50.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.9" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.10%)</title><rect x="765.9" y="403.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.9" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (4 samples, 0.10%)</title><rect x="765.9" y="387.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="768.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (27 samples, 0.66%)</title><rect x="767.1" y="403.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.1" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.10%)</title><rect x="767.1" y="387.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="770.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (23 samples, 0.56%)</title><rect x="768.2" y="387.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.2" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.02%)</title><rect x="768.2" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="771.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (14 samples, 0.34%)</title><rect x="768.5" y="371.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (14 samples, 0.34%)</title><rect x="768.5" y="355.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (14 samples, 0.34%)</title><rect x="768.5" y="339.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.34%)</title><rect x="768.5" y="323.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.02%)</title><rect x="768.5" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.02%)</title><rect x="768.5" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.5" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.02%)</title><rect x="768.5" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.02%)</title><rect x="768.5" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.02%)</title><rect x="768.5" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.02%)</title><rect x="768.5" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (1 samples, 0.02%)</title><rect x="768.5" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.02%)</title><rect x="768.5" y="195.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.02%)</title><rect x="768.5" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.02%)</title><rect x="768.5" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (1 samples, 0.02%)</title><rect x="768.5" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1 samples, 0.02%)</title><rect x="768.5" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.02%)</title><rect x="768.5" y="115.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.02%)</title><rect x="768.5" y="99.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="771.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (13 samples, 0.32%)</title><rect x="768.8" y="307.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (13 samples, 0.32%)</title><rect x="768.8" y="291.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.32%)</title><rect x="768.8" y="275.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.8" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.32%)</title><rect x="768.8" y="259.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="771.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.05%)</title><rect x="772.5" y="371.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.05%)</title><rect x="772.5" y="355.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="775.5" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.07%)</title><rect x="773.1" y="371.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="776.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.07%)</title><rect x="774.0" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="774.0" y="355.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="777.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.10%)</title><rect x="774.8" y="403.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="774.8" y="387.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="774.8" y="371.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (4 samples, 0.10%)</title><rect x="774.8" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.8" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (4 samples, 0.10%)</title><rect x="774.8" y="339.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="777.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.07%)</title><rect x="776.0" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.0" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.07%)</title><rect x="776.0" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="779.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="776.0" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="776.0" y="355.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$205/60315096.get$Lambda (3 samples, 0.07%)</title><rect x="776.0" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.0" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$205 (3 samples, 0.07%)</title><rect x="776.0" y="323.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="779.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.05%)</title><rect x="776.8" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.05%)</title><rect x="776.8" y="387.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="779.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.05%)</title><rect x="776.8" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.8" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="776.8" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.8" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.05%)</title><rect x="776.8" y="339.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.05%)</title><rect x="776.8" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.05%)</title><rect x="776.8" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (2 samples, 0.05%)</title><rect x="776.8" y="291.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="779.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (20 samples, 0.49%)</title><rect x="777.4" y="403.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.4" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.05%)</title><rect x="777.4" y="387.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="780.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (18 samples, 0.44%)</title><rect x="778.0" y="387.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.44%)</title><rect x="778.0" y="371.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (18 samples, 0.44%)</title><rect x="778.0" y="355.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (18 samples, 0.44%)</title><rect x="778.0" y="339.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.44%)</title><rect x="778.0" y="323.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.44%)</title><rect x="778.0" y="307.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.44%)</title><rect x="778.0" y="291.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.10%)</title><rect x="778.0" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.10%)</title><rect x="778.0" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.0" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.10%)</title><rect x="778.0" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.10%)</title><rect x="778.0" y="227.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.10%)</title><rect x="778.0" y="211.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.10%)</title><rect x="778.0" y="195.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (4 samples, 0.10%)</title><rect x="778.0" y="179.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.10%)</title><rect x="778.0" y="163.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.10%)</title><rect x="778.0" y="147.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.10%)</title><rect x="778.0" y="131.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (4 samples, 0.10%)</title><rect x="778.0" y="115.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.10%)</title><rect x="778.0" y="99.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.07%)</title><rect x="778.0" y="83.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="781.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.02%)</title><rect x="778.8" y="83.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.02%)</title><rect x="778.8" y="67.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="781.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (14 samples, 0.34%)</title><rect x="779.1" y="275.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (14 samples, 0.34%)</title><rect x="779.1" y="259.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.34%)</title><rect x="779.1" y="243.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.34%)</title><rect x="779.1" y="227.0" width="4.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="782.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (115 samples, 2.80%)</title><rect x="783.2" y="403.0" width="33.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.2" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.15%)</title><rect x="783.2" y="387.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="786.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.12%)</title><rect x="784.9" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.12%)</title><rect x="784.9" y="371.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.12%)</title><rect x="784.9" y="355.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="787.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="786.3" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="786.3" y="371.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="789.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (102 samples, 2.49%)</title><rect x="786.9" y="387.0" width="29.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.9" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.15%)</title><rect x="786.9" y="371.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.15%)</title><rect x="786.9" y="355.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="789.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (42 samples, 1.02%)</title><rect x="788.6" y="371.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.05%)</title><rect x="788.6" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="791.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (40 samples, 0.97%)</title><rect x="789.2" y="355.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.2" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.07%)</title><rect x="789.2" y="339.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="792.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.12%)</title><rect x="790.1" y="339.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.1" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.12%)</title><rect x="790.1" y="323.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="793.1" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.02%)</title><rect x="791.5" y="339.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="794.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.12%)</title><rect x="791.8" y="339.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="791.8" y="323.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="794.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (26 samples, 0.63%)</title><rect x="793.2" y="339.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (26 samples, 0.63%)</title><rect x="793.2" y="323.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (26 samples, 0.63%)</title><rect x="793.2" y="307.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.10%)</title><rect x="793.2" y="291.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (4 samples, 0.10%)</title><rect x="793.2" y="275.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.10%)</title><rect x="793.2" y="259.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.10%)</title><rect x="793.2" y="243.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.10%)</title><rect x="793.2" y="227.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (4 samples, 0.10%)</title><rect x="793.2" y="211.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.10%)</title><rect x="793.2" y="195.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.2" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.05%)</title><rect x="793.2" y="179.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="796.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.05%)</title><rect x="793.8" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.8" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.05%)</title><rect x="793.8" y="163.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="796.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (22 samples, 0.54%)</title><rect x="794.4" y="291.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.4" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (6 samples, 0.15%)</title><rect x="794.4" y="275.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="797.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="796.1" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="796.1" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$124/463011894.get$Lambda (2 samples, 0.05%)</title><rect x="796.1" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$124 (2 samples, 0.05%)</title><rect x="796.1" y="227.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="799.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.get$Lambda (2 samples, 0.05%)</title><rect x="796.7" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$135 (2 samples, 0.05%)</title><rect x="796.7" y="227.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="799.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.10%)</title><rect x="797.2" y="275.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.10%)</title><rect x="797.2" y="259.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="800.2" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.10%)</title><rect x="797.2" y="243.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="800.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (8 samples, 0.19%)</title><rect x="798.4" y="275.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.19%)</title><rect x="798.4" y="259.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="801.4" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.05%)</title><rect x="800.7" y="371.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="803.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.12%)</title><rect x="801.3" y="371.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="801.3" y="355.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="804.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.10%)</title><rect x="802.7" y="371.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (4 samples, 0.10%)</title><rect x="802.7" y="355.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="805.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="803.9" y="371.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="803.9" y="355.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="803.9" y="339.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.9" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="803.9" y="323.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.9" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="803.9" y="307.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="803.9" y="291.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="803.9" y="275.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.02%)</title><rect x="803.9" y="259.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="806.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.24%)</title><rect x="804.1" y="371.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.1" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.02%)</title><rect x="804.1" y="355.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="807.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.22%)</title><rect x="804.4" y="355.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.22%)</title><rect x="804.4" y="339.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.22%)</title><rect x="804.4" y="323.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.4" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.22%)</title><rect x="804.4" y="307.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.22%)</title><rect x="804.4" y="291.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.22%)</title><rect x="804.4" y="275.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.22%)</title><rect x="804.4" y="259.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (9 samples, 0.22%)</title><rect x="804.4" y="243.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.22%)</title><rect x="804.4" y="227.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.22%)</title><rect x="804.4" y="211.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.12%)</title><rect x="804.4" y="195.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.12%)</title><rect x="804.4" y="179.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.4" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.12%)</title><rect x="804.4" y="163.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="807.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.10%)</title><rect x="805.9" y="195.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (4 samples, 0.10%)</title><rect x="805.9" y="179.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.10%)</title><rect x="805.9" y="163.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="805.9" y="147.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="808.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="806.2" y="147.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="806.2" y="131.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="809.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (32 samples, 0.78%)</title><rect x="807.0" y="371.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="810.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (9 samples, 0.22%)</title><rect x="807.0" y="355.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (2 samples, 0.05%)</title><rect x="807.0" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (2 samples, 0.05%)</title><rect x="807.0" y="323.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="810.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.17%)</title><rect x="807.6" y="339.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.6" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (7 samples, 0.17%)</title><rect x="807.6" y="323.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="810.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.05%)</title><rect x="809.6" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.05%)</title><rect x="809.6" y="339.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="812.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.05%)</title><rect x="810.2" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.05%)</title><rect x="810.2" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.05%)</title><rect x="810.2" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.05%)</title><rect x="810.2" y="307.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="813.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (14 samples, 0.34%)</title><rect x="810.8" y="355.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.8" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (4 samples, 0.10%)</title><rect x="810.8" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.8" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (4 samples, 0.10%)</title><rect x="810.8" y="323.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="813.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (10 samples, 0.24%)</title><rect x="811.9" y="339.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="811.9" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="811.9" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$119/1499123289.get$Lambda (2 samples, 0.05%)</title><rect x="811.9" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$119 (2 samples, 0.05%)</title><rect x="811.9" y="275.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="814.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (8 samples, 0.19%)</title><rect x="812.5" y="323.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="815.5" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (8 samples, 0.19%)</title><rect x="812.5" y="307.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="815.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (5 samples, 0.12%)</title><rect x="814.8" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (5 samples, 0.12%)</title><rect x="814.8" y="339.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="817.8" y="350.0"></text>
</g>
<g>
<title>[Worker_123 tid=7029] (265 samples, 6.46%)</title><rect x="816.2" y="547.0" width="76.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="819.2" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (265 samples, 6.46%)</title><rect x="816.2" y="531.0" width="76.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.2" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (265 samples, 6.46%)</title><rect x="816.2" y="515.0" width="76.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.2" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (265 samples, 6.46%)</title><rect x="816.2" y="499.0" width="76.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.2" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.12%)</title><rect x="816.2" y="483.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.12%)</title><rect x="816.2" y="467.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.12%)</title><rect x="816.2" y="451.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.12%)</title><rect x="816.2" y="435.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.12%)</title><rect x="816.2" y="419.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="819.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.run (260 samples, 6.34%)</title><rect x="817.7" y="483.0" width="74.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.7" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$3 (260 samples, 6.34%)</title><rect x="817.7" y="467.0" width="74.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.7" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (260 samples, 6.34%)</title><rect x="817.7" y="451.0" width="74.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.7" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="817.7" y="435.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="820.7" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.02%)</title><rect x="819.1" y="435.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="822.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 0.22%)</title><rect x="819.4" y="435.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 0.22%)</title><rect x="819.4" y="419.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.15%)</title><rect x="819.4" y="403.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.15%)</title><rect x="819.4" y="387.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.4" y="398.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.15%)</title><rect x="819.4" y="371.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="822.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.07%)</title><rect x="821.1" y="403.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.1" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.07%)</title><rect x="821.1" y="387.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="824.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.32%)</title><rect x="822.0" y="435.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.0" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="822.0" y="419.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="825.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.15%)</title><rect x="823.4" y="419.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="826.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="825.1" y="419.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="828.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (232 samples, 5.65%)</title><rect x="825.7" y="435.0" width="66.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.7" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (29 samples, 0.71%)</title><rect x="825.7" y="419.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (29 samples, 0.71%)</title><rect x="825.7" y="403.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (29 samples, 0.71%)</title><rect x="825.7" y="387.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (29 samples, 0.71%)</title><rect x="825.7" y="371.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (29 samples, 0.71%)</title><rect x="825.7" y="355.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.41%)</title><rect x="825.7" y="339.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (17 samples, 0.41%)</title><rect x="825.7" y="323.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (17 samples, 0.41%)</title><rect x="825.7" y="307.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (17 samples, 0.41%)</title><rect x="825.7" y="291.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (17 samples, 0.41%)</title><rect x="825.7" y="275.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (17 samples, 0.41%)</title><rect x="825.7" y="259.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.17%)</title><rect x="825.7" y="243.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.17%)</title><rect x="825.7" y="227.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.17%)</title><rect x="825.7" y="211.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.17%)</title><rect x="825.7" y="195.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.17%)</title><rect x="825.7" y="179.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.17%)</title><rect x="825.7" y="163.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (7 samples, 0.17%)</title><rect x="825.7" y="147.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.17%)</title><rect x="825.7" y="131.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.17%)</title><rect x="825.7" y="115.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="825.7" y="99.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="825.7" y="83.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.7" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.05%)</title><rect x="825.7" y="67.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="828.7" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.12%)</title><rect x="826.3" y="99.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (5 samples, 0.12%)</title><rect x="826.3" y="83.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.12%)</title><rect x="826.3" y="67.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="826.3" y="51.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="829.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (4 samples, 0.10%)</title><rect x="826.6" y="51.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.6" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (4 samples, 0.10%)</title><rect x="826.6" y="35.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="829.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (10 samples, 0.24%)</title><rect x="827.7" y="243.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (10 samples, 0.24%)</title><rect x="827.7" y="227.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.24%)</title><rect x="827.7" y="211.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.7" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.24%)</title><rect x="827.7" y="195.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="830.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$225/1054348470.apply (12 samples, 0.29%)</title><rect x="830.6" y="339.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (12 samples, 0.29%)</title><rect x="830.6" y="323.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.29%)</title><rect x="830.6" y="307.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.29%)</title><rect x="830.6" y="291.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="833.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.17%)</title><rect x="834.0" y="419.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (7 samples, 0.17%)</title><rect x="834.0" y="403.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$247/1413081072.apply (7 samples, 0.17%)</title><rect x="834.0" y="387.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (7 samples, 0.17%)</title><rect x="834.0" y="371.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (7 samples, 0.17%)</title><rect x="834.0" y="355.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.0" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.17%)</title><rect x="834.0" y="339.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.0" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.17%)</title><rect x="834.0" y="323.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="837.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (9 samples, 0.22%)</title><rect x="836.1" y="419.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.22%)</title><rect x="836.1" y="403.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.22%)</title><rect x="836.1" y="387.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.22%)</title><rect x="836.1" y="371.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="839.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (6 samples, 0.15%)</title><rect x="838.6" y="419.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.15%)</title><rect x="838.6" y="403.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.15%)</title><rect x="838.6" y="387.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.15%)</title><rect x="838.6" y="371.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="841.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (181 samples, 4.41%)</title><rect x="840.4" y="419.0" width="52.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.4" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.07%)</title><rect x="840.4" y="403.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.4" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.07%)</title><rect x="840.4" y="387.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="843.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (32 samples, 0.78%)</title><rect x="841.2" y="403.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="844.2" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.05%)</title><rect x="841.2" y="387.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="844.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (30 samples, 0.73%)</title><rect x="841.8" y="387.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="844.8" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (7 samples, 0.17%)</title><rect x="841.8" y="371.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="844.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15 samples, 0.37%)</title><rect x="843.8" y="371.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15 samples, 0.37%)</title><rect x="843.8" y="355.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15 samples, 0.37%)</title><rect x="843.8" y="339.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.37%)</title><rect x="843.8" y="323.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.17%)</title><rect x="843.8" y="307.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.17%)</title><rect x="843.8" y="291.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.8" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.17%)</title><rect x="843.8" y="275.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.17%)</title><rect x="843.8" y="259.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.17%)</title><rect x="843.8" y="243.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.17%)</title><rect x="843.8" y="227.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (7 samples, 0.17%)</title><rect x="843.8" y="211.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.17%)</title><rect x="843.8" y="195.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.17%)</title><rect x="843.8" y="179.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.17%)</title><rect x="843.8" y="163.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (7 samples, 0.17%)</title><rect x="843.8" y="147.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.17%)</title><rect x="843.8" y="131.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.8" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="843.8" y="115.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="846.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="845.0" y="115.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="848.0" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="845.0" y="99.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="848.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (8 samples, 0.19%)</title><rect x="845.8" y="307.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (8 samples, 0.19%)</title><rect x="845.8" y="291.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.19%)</title><rect x="845.8" y="275.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.8" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.19%)</title><rect x="845.8" y="259.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="848.8" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.10%)</title><rect x="848.1" y="371.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="851.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.10%)</title><rect x="849.3" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.10%)</title><rect x="849.3" y="355.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="852.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (5 samples, 0.12%)</title><rect x="850.4" y="403.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="850.4" y="387.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="850.4" y="371.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (5 samples, 0.12%)</title><rect x="850.4" y="355.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.4" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (5 samples, 0.12%)</title><rect x="850.4" y="339.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="853.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.05%)</title><rect x="851.9" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.05%)</title><rect x="851.9" y="387.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.05%)</title><rect x="851.9" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.9" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="851.9" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.9" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.05%)</title><rect x="851.9" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="854.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.05%)</title><rect x="851.9" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.05%)</title><rect x="851.9" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="854.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (2 samples, 0.05%)</title><rect x="851.9" y="291.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="854.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (20 samples, 0.49%)</title><rect x="852.4" y="403.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.4" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.05%)</title><rect x="852.4" y="387.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="855.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (18 samples, 0.44%)</title><rect x="853.0" y="387.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.44%)</title><rect x="853.0" y="371.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (18 samples, 0.44%)</title><rect x="853.0" y="355.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (18 samples, 0.44%)</title><rect x="853.0" y="339.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.44%)</title><rect x="853.0" y="323.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.44%)</title><rect x="853.0" y="307.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.44%)</title><rect x="853.0" y="291.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.05%)</title><rect x="853.0" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.05%)</title><rect x="853.0" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.0" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.05%)</title><rect x="853.0" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.05%)</title><rect x="853.0" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.05%)</title><rect x="853.0" y="211.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.05%)</title><rect x="853.0" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (2 samples, 0.05%)</title><rect x="853.0" y="179.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.05%)</title><rect x="853.0" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.05%)</title><rect x="853.0" y="147.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.05%)</title><rect x="853.0" y="131.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (2 samples, 0.05%)</title><rect x="853.0" y="115.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2 samples, 0.05%)</title><rect x="853.0" y="99.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.05%)</title><rect x="853.0" y="83.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="856.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (16 samples, 0.39%)</title><rect x="853.6" y="275.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (16 samples, 0.39%)</title><rect x="853.6" y="259.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.6" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.39%)</title><rect x="853.6" y="243.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.6" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.39%)</title><rect x="853.6" y="227.0" width="4.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="856.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (119 samples, 2.90%)</title><rect x="858.2" y="403.0" width="34.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="861.2" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.12%)</title><rect x="858.2" y="387.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="861.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.12%)</title><rect x="859.6" y="387.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.12%)</title><rect x="859.6" y="371.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.12%)</title><rect x="859.6" y="355.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="862.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="861.1" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="861.1" y="371.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="864.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (107 samples, 2.61%)</title><rect x="861.6" y="387.0" width="30.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.6" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.12%)</title><rect x="861.6" y="371.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="864.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.12%)</title><rect x="861.6" y="355.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="864.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (46 samples, 1.12%)</title><rect x="863.1" y="371.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.12%)</title><rect x="863.1" y="355.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="866.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (41 samples, 1.00%)</title><rect x="864.5" y="355.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.5" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.10%)</title><rect x="864.5" y="339.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="867.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.12%)</title><rect x="865.7" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="868.7" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.12%)</title><rect x="865.7" y="323.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="868.7" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.10%)</title><rect x="867.1" y="339.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="870.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.02%)</title><rect x="868.3" y="339.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.3" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="868.3" y="323.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="871.3" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (27 samples, 0.66%)</title><rect x="868.5" y="339.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="871.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (27 samples, 0.66%)</title><rect x="868.5" y="323.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (27 samples, 0.66%)</title><rect x="868.5" y="307.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.15%)</title><rect x="868.5" y="291.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (6 samples, 0.15%)</title><rect x="868.5" y="275.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="871.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.15%)</title><rect x="868.5" y="259.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="871.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.15%)</title><rect x="868.5" y="243.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="871.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.15%)</title><rect x="868.5" y="227.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="871.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (6 samples, 0.15%)</title><rect x="868.5" y="211.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="871.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (6 samples, 0.15%)</title><rect x="868.5" y="195.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.5" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="868.5" y="179.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="871.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.05%)</title><rect x="869.7" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="872.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.05%)</title><rect x="869.7" y="163.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="872.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (21 samples, 0.51%)</title><rect x="870.3" y="291.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.3" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (7 samples, 0.17%)</title><rect x="870.3" y="275.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="873.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="872.3" y="275.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="872.3" y="259.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$124/463011894.get$Lambda (3 samples, 0.07%)</title><rect x="872.3" y="243.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$124 (3 samples, 0.07%)</title><rect x="872.3" y="227.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="875.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.get$Lambda (2 samples, 0.05%)</title><rect x="873.1" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$135 (2 samples, 0.05%)</title><rect x="873.1" y="227.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="876.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.07%)</title><rect x="873.7" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (3 samples, 0.07%)</title><rect x="873.7" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.7" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (3 samples, 0.07%)</title><rect x="873.7" y="243.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="876.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (6 samples, 0.15%)</title><rect x="874.6" y="275.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.15%)</title><rect x="874.6" y="259.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="877.6" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.05%)</title><rect x="876.3" y="371.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="879.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="876.9" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="876.9" y="355.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="879.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.05%)</title><rect x="877.5" y="371.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="880.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (2 samples, 0.05%)</title><rect x="877.5" y="355.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="880.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.32%)</title><rect x="878.0" y="371.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.0" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.07%)</title><rect x="878.0" y="355.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="881.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.24%)</title><rect x="878.9" y="355.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="881.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.24%)</title><rect x="878.9" y="339.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (10 samples, 0.24%)</title><rect x="878.9" y="323.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10 samples, 0.24%)</title><rect x="878.9" y="307.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (10 samples, 0.24%)</title><rect x="878.9" y="291.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (10 samples, 0.24%)</title><rect x="878.9" y="275.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (10 samples, 0.24%)</title><rect x="878.9" y="259.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (10 samples, 0.24%)</title><rect x="878.9" y="243.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (10 samples, 0.24%)</title><rect x="878.9" y="227.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (10 samples, 0.24%)</title><rect x="878.9" y="211.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.07%)</title><rect x="878.9" y="195.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.07%)</title><rect x="878.9" y="179.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.9" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.07%)</title><rect x="878.9" y="163.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="881.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.17%)</title><rect x="879.8" y="195.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="882.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (7 samples, 0.17%)</title><rect x="879.8" y="179.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="882.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.17%)</title><rect x="879.8" y="163.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.8" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="879.8" y="147.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="882.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="880.9" y="147.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="880.9" y="131.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="883.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (37 samples, 0.90%)</title><rect x="881.8" y="371.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (9 samples, 0.22%)</title><rect x="881.8" y="355.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="884.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (1 samples, 0.02%)</title><rect x="881.8" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (1 samples, 0.02%)</title><rect x="881.8" y="323.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="884.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.19%)</title><rect x="882.1" y="339.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.19%)</title><rect x="882.1" y="323.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="885.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.05%)</title><rect x="884.4" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.05%)</title><rect x="884.4" y="339.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="887.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.17%)</title><rect x="884.9" y="355.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.17%)</title><rect x="884.9" y="339.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.17%)</title><rect x="884.9" y="323.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.17%)</title><rect x="884.9" y="307.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="887.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (7 samples, 0.17%)</title><rect x="886.9" y="355.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.9" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (1 samples, 0.02%)</title><rect x="886.9" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.9" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (1 samples, 0.02%)</title><rect x="886.9" y="323.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="889.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (6 samples, 0.15%)</title><rect x="887.2" y="339.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="887.2" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="887.2" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$119/1499123289.get$Lambda (2 samples, 0.05%)</title><rect x="887.2" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.2" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$119 (2 samples, 0.05%)</title><rect x="887.2" y="275.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="890.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (4 samples, 0.10%)</title><rect x="887.8" y="323.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.8" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (4 samples, 0.10%)</title><rect x="887.8" y="307.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="890.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (12 samples, 0.29%)</title><rect x="889.0" y="355.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="892.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (12 samples, 0.29%)</title><rect x="889.0" y="339.0" width="3.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="892.0" y="350.0"></text>
</g>
<g>
<title>[Worker_124 tid=7030] (263 samples, 6.41%)</title><rect x="892.4" y="547.0" width="75.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="895.4" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (263 samples, 6.41%)</title><rect x="892.4" y="531.0" width="75.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.4" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (263 samples, 6.41%)</title><rect x="892.4" y="515.0" width="75.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.4" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (263 samples, 6.41%)</title><rect x="892.4" y="499.0" width="75.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.4" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.10%)</title><rect x="892.4" y="483.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="895.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.10%)</title><rect x="892.4" y="467.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.10%)</title><rect x="892.4" y="451.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="895.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.10%)</title><rect x="892.4" y="435.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.10%)</title><rect x="892.4" y="419.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="895.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.run (259 samples, 6.31%)</title><rect x="893.6" y="483.0" width="74.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.6" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$3 (259 samples, 6.31%)</title><rect x="893.6" y="467.0" width="74.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.6" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (259 samples, 6.31%)</title><rect x="893.6" y="451.0" width="74.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.6" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="893.6" y="435.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="896.6" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.05%)</title><rect x="895.0" y="435.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="898.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 0.37%)</title><rect x="895.6" y="435.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 0.37%)</title><rect x="895.6" y="419.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.24%)</title><rect x="895.6" y="403.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.24%)</title><rect x="895.6" y="387.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.6" y="398.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="895.6" y="371.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="898.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.12%)</title><rect x="898.5" y="403.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.5" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.12%)</title><rect x="898.5" y="387.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="901.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.39%)</title><rect x="899.9" y="435.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.9" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.15%)</title><rect x="899.9" y="419.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="902.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.15%)</title><rect x="901.6" y="419.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="904.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.10%)</title><rect x="903.3" y="419.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="906.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (221 samples, 5.38%)</title><rect x="904.5" y="435.0" width="63.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.5" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (34 samples, 0.83%)</title><rect x="904.5" y="419.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (34 samples, 0.83%)</title><rect x="904.5" y="403.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (34 samples, 0.83%)</title><rect x="904.5" y="387.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (34 samples, 0.83%)</title><rect x="904.5" y="371.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (34 samples, 0.83%)</title><rect x="904.5" y="355.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.54%)</title><rect x="904.5" y="339.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (22 samples, 0.54%)</title><rect x="904.5" y="323.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (22 samples, 0.54%)</title><rect x="904.5" y="307.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (22 samples, 0.54%)</title><rect x="904.5" y="291.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (22 samples, 0.54%)</title><rect x="904.5" y="275.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 0.54%)</title><rect x="904.5" y="259.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.27%)</title><rect x="904.5" y="243.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="907.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.27%)</title><rect x="904.5" y="227.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.27%)</title><rect x="904.5" y="211.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.27%)</title><rect x="904.5" y="195.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.27%)</title><rect x="904.5" y="179.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (11 samples, 0.27%)</title><rect x="904.5" y="163.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (11 samples, 0.27%)</title><rect x="904.5" y="147.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (11 samples, 0.27%)</title><rect x="904.5" y="131.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (11 samples, 0.27%)</title><rect x="904.5" y="115.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.10%)</title><rect x="904.5" y="99.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.10%)</title><rect x="904.5" y="83.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.5" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.10%)</title><rect x="904.5" y="67.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="907.5" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.17%)</title><rect x="905.6" y="99.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (7 samples, 0.17%)</title><rect x="905.6" y="83.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.17%)</title><rect x="905.6" y="67.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="905.6" y="51.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="908.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="906.8" y="51.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.8" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="906.8" y="35.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="909.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (11 samples, 0.27%)</title><rect x="907.7" y="243.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (11 samples, 0.27%)</title><rect x="907.7" y="227.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.27%)</title><rect x="907.7" y="211.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.7" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.27%)</title><rect x="907.7" y="195.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="910.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$225/1054348470.apply (12 samples, 0.29%)</title><rect x="910.8" y="339.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (12 samples, 0.29%)</title><rect x="910.8" y="323.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.29%)</title><rect x="910.8" y="307.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.29%)</title><rect x="910.8" y="291.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="913.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (6 samples, 0.15%)</title><rect x="914.3" y="419.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (6 samples, 0.15%)</title><rect x="914.3" y="403.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$247/1413081072.apply (6 samples, 0.15%)</title><rect x="914.3" y="387.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (6 samples, 0.15%)</title><rect x="914.3" y="371.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (6 samples, 0.15%)</title><rect x="914.3" y="355.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.15%)</title><rect x="914.3" y="339.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.15%)</title><rect x="914.3" y="323.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="917.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (4 samples, 0.10%)</title><rect x="916.0" y="419.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.10%)</title><rect x="916.0" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.10%)</title><rect x="916.0" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="919.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.10%)</title><rect x="916.0" y="371.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="919.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (6 samples, 0.15%)</title><rect x="917.1" y="419.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.15%)</title><rect x="917.1" y="403.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.15%)</title><rect x="917.1" y="387.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.15%)</title><rect x="917.1" y="371.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="920.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (171 samples, 4.17%)</title><rect x="918.9" y="419.0" width="49.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.9" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (7 samples, 0.17%)</title><rect x="918.9" y="403.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.9" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (7 samples, 0.17%)</title><rect x="918.9" y="387.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="921.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (25 samples, 0.61%)</title><rect x="920.9" y="403.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="923.9" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.07%)</title><rect x="920.9" y="387.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="923.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (22 samples, 0.54%)</title><rect x="921.7" y="387.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.7" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.02%)</title><rect x="921.7" y="371.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="924.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (9 samples, 0.22%)</title><rect x="922.0" y="371.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (9 samples, 0.22%)</title><rect x="922.0" y="355.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (9 samples, 0.22%)</title><rect x="922.0" y="339.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="925.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.22%)</title><rect x="922.0" y="323.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.10%)</title><rect x="922.0" y="307.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.10%)</title><rect x="922.0" y="291.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="925.0" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.10%)</title><rect x="922.0" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="925.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.10%)</title><rect x="922.0" y="259.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="925.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.10%)</title><rect x="922.0" y="243.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.10%)</title><rect x="922.0" y="227.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (4 samples, 0.10%)</title><rect x="922.0" y="211.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.10%)</title><rect x="922.0" y="195.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.10%)</title><rect x="922.0" y="179.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="925.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.10%)</title><rect x="922.0" y="163.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (4 samples, 0.10%)</title><rect x="922.0" y="147.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.10%)</title><rect x="922.0" y="131.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.0" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="922.0" y="115.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="925.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (5 samples, 0.12%)</title><rect x="923.2" y="307.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="926.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5 samples, 0.12%)</title><rect x="923.2" y="291.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="926.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.12%)</title><rect x="923.2" y="275.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="926.2" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.12%)</title><rect x="923.2" y="259.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="926.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.12%)</title><rect x="924.6" y="371.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="927.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.12%)</title><rect x="924.6" y="355.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="927.6" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.10%)</title><rect x="926.1" y="371.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="929.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.07%)</title><rect x="927.2" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="927.2" y="355.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="930.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.02%)</title><rect x="928.1" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="931.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="928.1" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="931.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="928.1" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (1 samples, 0.02%)</title><rect x="928.1" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.1" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (1 samples, 0.02%)</title><rect x="928.1" y="339.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="931.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (9 samples, 0.22%)</title><rect x="928.4" y="403.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="931.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.10%)</title><rect x="928.4" y="387.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="928.4" y="371.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="931.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="928.4" y="355.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (4 samples, 0.10%)</title><rect x="928.4" y="339.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.4" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (4 samples, 0.10%)</title><rect x="928.4" y="323.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="931.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.12%)</title><rect x="929.5" y="387.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="932.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="929.5" y="371.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="932.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="929.5" y="355.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$205/60315096.get$Lambda (5 samples, 0.12%)</title><rect x="929.5" y="339.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.5" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$205 (5 samples, 0.12%)</title><rect x="929.5" y="323.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="932.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.07%)</title><rect x="930.9" y="403.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.07%)</title><rect x="930.9" y="387.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.07%)</title><rect x="930.9" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.9" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="930.9" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="933.9" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.07%)</title><rect x="930.9" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (3 samples, 0.07%)</title><rect x="930.9" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (3 samples, 0.07%)</title><rect x="930.9" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="933.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (3 samples, 0.07%)</title><rect x="930.9" y="291.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="933.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.32%)</title><rect x="931.8" y="403.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.8" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.02%)</title><rect x="931.8" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="934.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 0.29%)</title><rect x="932.1" y="387.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="935.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.29%)</title><rect x="932.1" y="371.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.29%)</title><rect x="932.1" y="355.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="935.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (12 samples, 0.29%)</title><rect x="932.1" y="339.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (12 samples, 0.29%)</title><rect x="932.1" y="323.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (12 samples, 0.29%)</title><rect x="932.1" y="307.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.29%)</title><rect x="932.1" y="291.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.05%)</title><rect x="932.1" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="935.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.05%)</title><rect x="932.1" y="259.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.1" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.05%)</title><rect x="932.1" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.05%)</title><rect x="932.1" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.05%)</title><rect x="932.1" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="935.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.05%)</title><rect x="932.1" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (2 samples, 0.05%)</title><rect x="932.1" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="935.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.05%)</title><rect x="932.1" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.05%)</title><rect x="932.1" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.05%)</title><rect x="932.1" y="131.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="935.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (2 samples, 0.05%)</title><rect x="932.1" y="115.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2 samples, 0.05%)</title><rect x="932.1" y="99.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.1" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="932.1" y="83.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="935.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.02%)</title><rect x="932.4" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.02%)</title><rect x="932.4" y="67.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="935.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (10 samples, 0.24%)</title><rect x="932.7" y="275.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (10 samples, 0.24%)</title><rect x="932.7" y="259.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.24%)</title><rect x="932.7" y="243.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="935.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.24%)</title><rect x="932.7" y="227.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="935.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (113 samples, 2.75%)</title><rect x="935.5" y="403.0" width="32.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="938.5" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.07%)</title><rect x="935.5" y="387.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="938.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.07%)</title><rect x="936.4" y="387.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="939.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.07%)</title><rect x="936.4" y="371.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="939.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.07%)</title><rect x="936.4" y="355.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="939.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.07%)</title><rect x="937.3" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="937.3" y="371.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="940.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (104 samples, 2.53%)</title><rect x="938.1" y="387.0" width="29.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="941.1" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.07%)</title><rect x="938.1" y="371.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.07%)</title><rect x="938.1" y="355.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="941.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (31 samples, 0.76%)</title><rect x="939.0" y="371.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.02%)</title><rect x="939.0" y="355.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="942.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (30 samples, 0.73%)</title><rect x="939.3" y="355.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="942.3" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.05%)</title><rect x="939.3" y="339.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="942.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.05%)</title><rect x="939.9" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.9" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.05%)</title><rect x="939.9" y="323.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="942.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.02%)</title><rect x="940.4" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="940.4" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="943.4" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (25 samples, 0.61%)</title><rect x="940.7" y="339.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (25 samples, 0.61%)</title><rect x="940.7" y="323.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="943.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (25 samples, 0.61%)</title><rect x="940.7" y="307.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="943.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.10%)</title><rect x="940.7" y="291.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (4 samples, 0.10%)</title><rect x="940.7" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.10%)</title><rect x="940.7" y="259.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="943.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.10%)</title><rect x="940.7" y="243.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.10%)</title><rect x="940.7" y="227.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (4 samples, 0.10%)</title><rect x="940.7" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="943.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.10%)</title><rect x="940.7" y="195.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.7" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="940.7" y="179.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="943.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="941.0" y="179.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.0" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="941.0" y="163.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="944.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (21 samples, 0.51%)</title><rect x="941.9" y="291.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (3 samples, 0.07%)</title><rect x="941.9" y="275.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="944.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.32%)</title><rect x="942.7" y="275.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.32%)</title><rect x="942.7" y="259.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="945.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$124/463011894.get$Lambda (6 samples, 0.15%)</title><rect x="942.7" y="243.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="945.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$124 (6 samples, 0.15%)</title><rect x="942.7" y="227.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="945.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.get$Lambda (7 samples, 0.17%)</title><rect x="944.5" y="243.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$135 (7 samples, 0.17%)</title><rect x="944.5" y="227.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="947.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="946.5" y="275.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="946.5" y="259.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="949.5" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.10%)</title><rect x="947.9" y="371.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="950.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.12%)</title><rect x="949.1" y="371.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="952.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="949.1" y="355.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="952.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.17%)</title><rect x="950.5" y="371.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (7 samples, 0.17%)</title><rect x="950.5" y="355.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="953.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.17%)</title><rect x="952.5" y="371.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.02%)</title><rect x="952.5" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="955.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.15%)</title><rect x="952.8" y="355.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="955.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.15%)</title><rect x="952.8" y="339.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.15%)</title><rect x="952.8" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.15%)</title><rect x="952.8" y="307.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="955.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.15%)</title><rect x="952.8" y="291.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="955.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.15%)</title><rect x="952.8" y="275.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.15%)</title><rect x="952.8" y="259.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (6 samples, 0.15%)</title><rect x="952.8" y="243.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="955.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.15%)</title><rect x="952.8" y="227.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.15%)</title><rect x="952.8" y="211.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.07%)</title><rect x="952.8" y="195.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.07%)</title><rect x="952.8" y="179.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.8" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.07%)</title><rect x="952.8" y="163.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="955.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.07%)</title><rect x="953.7" y="195.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="956.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (3 samples, 0.07%)</title><rect x="953.7" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="956.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (3 samples, 0.07%)</title><rect x="953.7" y="163.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.7" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.07%)</title><rect x="953.7" y="147.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="956.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (47 samples, 1.15%)</title><rect x="954.5" y="371.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (11 samples, 0.27%)</title><rect x="954.5" y="355.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="957.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (3 samples, 0.07%)</title><rect x="954.5" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (3 samples, 0.07%)</title><rect x="954.5" y="323.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="957.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.19%)</title><rect x="955.4" y="339.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.4" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.19%)</title><rect x="955.4" y="323.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="958.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (4 samples, 0.10%)</title><rect x="957.7" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (4 samples, 0.10%)</title><rect x="957.7" y="339.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="960.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.12%)</title><rect x="958.8" y="355.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.12%)</title><rect x="958.8" y="339.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.12%)</title><rect x="958.8" y="323.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="961.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (5 samples, 0.12%)</title><rect x="958.8" y="307.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="961.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (12 samples, 0.29%)</title><rect x="960.3" y="355.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="963.3" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (2 samples, 0.05%)</title><rect x="960.3" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="963.3" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (2 samples, 0.05%)</title><rect x="960.3" y="323.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="963.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (10 samples, 0.24%)</title><rect x="960.8" y="339.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="960.8" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="960.8" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$119/1499123289.get$Lambda (1 samples, 0.02%)</title><rect x="960.8" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="963.8" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$119 (1 samples, 0.02%)</title><rect x="960.8" y="275.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="963.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (9 samples, 0.22%)</title><rect x="961.1" y="323.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (9 samples, 0.22%)</title><rect x="961.1" y="307.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="964.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (15 samples, 0.37%)</title><rect x="963.7" y="355.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="966.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (15 samples, 0.37%)</title><rect x="963.7" y="339.0" width="4.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="966.7" y="350.0"></text>
</g>
<g>
<title>[Worker_125 tid=7028] (255 samples, 6.21%)</title><rect x="968.0" y="547.0" width="73.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="971.0" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (255 samples, 6.21%)</title><rect x="968.0" y="531.0" width="73.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.0" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (255 samples, 6.21%)</title><rect x="968.0" y="515.0" width="73.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.0" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (255 samples, 6.21%)</title><rect x="968.0" y="499.0" width="73.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.0" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.22%)</title><rect x="968.0" y="483.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.22%)</title><rect x="968.0" y="467.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.19%)</title><rect x="968.0" y="451.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.19%)</title><rect x="968.0" y="435.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.19%)</title><rect x="968.0" y="419.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="971.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="970.3" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="970.3" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.02%)</title><rect x="970.3" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="970.3" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="970.3" y="387.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="973.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.run (246 samples, 5.99%)</title><rect x="970.6" y="483.0" width="70.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.6" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$3 (246 samples, 5.99%)</title><rect x="970.6" y="467.0" width="70.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.6" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (246 samples, 5.99%)</title><rect x="970.6" y="451.0" width="70.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.6" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="970.6" y="435.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="973.6" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.05%)</title><rect x="970.9" y="435.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="973.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17 samples, 0.41%)</title><rect x="971.5" y="435.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 0.41%)</title><rect x="971.5" y="419.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.37%)</title><rect x="971.5" y="403.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="974.5" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.37%)</title><rect x="971.5" y="387.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.5" y="398.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.37%)</title><rect x="971.5" y="371.0" width="4.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="974.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.05%)</title><rect x="975.8" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.8" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.05%)</title><rect x="975.8" y="387.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="978.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.44%)</title><rect x="976.4" y="435.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.4" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="976.4" y="419.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="979.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.15%)</title><rect x="978.4" y="419.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="981.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="980.1" y="419.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="983.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (208 samples, 5.07%)</title><rect x="981.5" y="435.0" width="59.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.5" y="446.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (28 samples, 0.68%)</title><rect x="981.5" y="419.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (28 samples, 0.68%)</title><rect x="981.5" y="403.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (28 samples, 0.68%)</title><rect x="981.5" y="387.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (28 samples, 0.68%)</title><rect x="981.5" y="371.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (28 samples, 0.68%)</title><rect x="981.5" y="355.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.44%)</title><rect x="981.5" y="339.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="984.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (18 samples, 0.44%)</title><rect x="981.5" y="323.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (18 samples, 0.44%)</title><rect x="981.5" y="307.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.44%)</title><rect x="981.5" y="291.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.44%)</title><rect x="981.5" y="275.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.44%)</title><rect x="981.5" y="259.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.24%)</title><rect x="981.5" y="243.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (10 samples, 0.24%)</title><rect x="981.5" y="227.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="984.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10 samples, 0.24%)</title><rect x="981.5" y="211.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (10 samples, 0.24%)</title><rect x="981.5" y="195.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (10 samples, 0.24%)</title><rect x="981.5" y="179.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="984.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (10 samples, 0.24%)</title><rect x="981.5" y="163.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (10 samples, 0.24%)</title><rect x="981.5" y="147.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (10 samples, 0.24%)</title><rect x="981.5" y="131.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (10 samples, 0.24%)</title><rect x="981.5" y="115.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.07%)</title><rect x="981.5" y="99.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.07%)</title><rect x="981.5" y="83.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.5" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.07%)</title><rect x="981.5" y="67.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="984.5" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.17%)</title><rect x="982.4" y="99.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (7 samples, 0.17%)</title><rect x="982.4" y="83.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.17%)</title><rect x="982.4" y="67.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="985.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.07%)</title><rect x="982.4" y="51.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="985.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (4 samples, 0.10%)</title><rect x="983.3" y="51.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="986.3" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (4 samples, 0.10%)</title><rect x="983.3" y="35.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="986.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (8 samples, 0.19%)</title><rect x="984.4" y="243.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (8 samples, 0.19%)</title><rect x="984.4" y="227.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.19%)</title><rect x="984.4" y="211.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="987.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.19%)</title><rect x="984.4" y="195.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="987.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$225/1054348470.apply (10 samples, 0.24%)</title><rect x="986.7" y="339.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="989.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (10 samples, 0.24%)</title><rect x="986.7" y="323.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.24%)</title><rect x="986.7" y="307.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.24%)</title><rect x="986.7" y="291.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="989.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.12%)</title><rect x="989.6" y="419.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.12%)</title><rect x="989.6" y="403.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$247/1413081072.apply (5 samples, 0.12%)</title><rect x="989.6" y="387.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (5 samples, 0.12%)</title><rect x="989.6" y="371.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5 samples, 0.12%)</title><rect x="989.6" y="355.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="992.6" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.12%)</title><rect x="989.6" y="339.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="992.6" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.12%)</title><rect x="989.6" y="323.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="992.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.15%)</title><rect x="991.0" y="419.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.15%)</title><rect x="991.0" y="403.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.15%)</title><rect x="991.0" y="387.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.15%)</title><rect x="991.0" y="371.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="994.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1 samples, 0.02%)</title><rect x="992.8" y="419.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="995.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="992.8" y="403.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="995.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.02%)</title><rect x="992.8" y="387.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="995.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.02%)</title><rect x="992.8" y="371.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="995.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (168 samples, 4.09%)</title><rect x="993.0" y="419.0" width="48.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="996.0" y="430.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.07%)</title><rect x="993.0" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.07%)</title><rect x="993.0" y="387.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="996.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (27 samples, 0.66%)</title><rect x="993.9" y="403.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.9" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.02%)</title><rect x="993.9" y="387.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="996.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 0.63%)</title><rect x="994.2" y="387.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.2" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.07%)</title><rect x="994.2" y="371.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="997.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15 samples, 0.37%)</title><rect x="995.1" y="371.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15 samples, 0.37%)</title><rect x="995.1" y="355.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15 samples, 0.37%)</title><rect x="995.1" y="339.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="998.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.37%)</title><rect x="995.1" y="323.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.07%)</title><rect x="995.1" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.07%)</title><rect x="995.1" y="291.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="998.1" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.07%)</title><rect x="995.1" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.07%)</title><rect x="995.1" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.07%)</title><rect x="995.1" y="243.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="998.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.07%)</title><rect x="995.1" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (3 samples, 0.07%)</title><rect x="995.1" y="211.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="998.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.07%)</title><rect x="995.1" y="195.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.07%)</title><rect x="995.1" y="179.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.07%)</title><rect x="995.1" y="163.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (3 samples, 0.07%)</title><rect x="995.1" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (3 samples, 0.07%)</title><rect x="995.1" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.1" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="995.1" y="115.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="998.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.05%)</title><rect x="995.3" y="115.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.05%)</title><rect x="995.3" y="99.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="998.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (12 samples, 0.29%)</title><rect x="995.9" y="307.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (12 samples, 0.29%)</title><rect x="995.9" y="291.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.29%)</title><rect x="995.9" y="275.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.9" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.29%)</title><rect x="995.9" y="259.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="998.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.05%)</title><rect x="999.4" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.05%)</title><rect x="999.4" y="355.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1002.4" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.05%)</title><rect x="999.9" y="371.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1002.9" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1000.5" y="371.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.10%)</title><rect x="1000.5" y="355.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1003.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.05%)</title><rect x="1001.7" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1004.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1001.7" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1004.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1001.7" y="371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (2 samples, 0.05%)</title><rect x="1001.7" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1004.7" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (2 samples, 0.05%)</title><rect x="1001.7" y="339.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1004.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.12%)</title><rect x="1002.2" y="403.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.07%)</title><rect x="1002.2" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="1002.2" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1005.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="1002.2" y="355.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (3 samples, 0.07%)</title><rect x="1002.2" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1005.2" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (3 samples, 0.07%)</title><rect x="1002.2" y="323.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1005.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.05%)</title><rect x="1003.1" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1006.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1003.1" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1006.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1003.1" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$205/60315096.get$Lambda (2 samples, 0.05%)</title><rect x="1003.1" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.1" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$205 (2 samples, 0.05%)</title><rect x="1003.1" y="323.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1006.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.15%)</title><rect x="1003.7" y="403.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.15%)</title><rect x="1003.7" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.15%)</title><rect x="1003.7" y="371.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.7" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.12%)</title><rect x="1003.7" y="355.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.7" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.12%)</title><rect x="1003.7" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.07%)</title><rect x="1003.7" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.7" y="334.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (3 samples, 0.07%)</title><rect x="1003.7" y="307.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1006.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.05%)</title><rect x="1004.5" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.05%)</title><rect x="1004.5" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (2 samples, 0.05%)</title><rect x="1004.5" y="291.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1007.5" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="1005.1" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1008.1" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="1005.1" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1008.1" y="350.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.02%)</title><rect x="1005.1" y="323.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1008.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (16 samples, 0.39%)</title><rect x="1005.4" y="403.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1008.4" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.07%)</title><rect x="1005.4" y="387.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1008.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.32%)</title><rect x="1006.3" y="387.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.32%)</title><rect x="1006.3" y="371.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1009.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (13 samples, 0.32%)</title><rect x="1006.3" y="355.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (13 samples, 0.32%)</title><rect x="1006.3" y="339.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (13 samples, 0.32%)</title><rect x="1006.3" y="323.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1009.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (13 samples, 0.32%)</title><rect x="1006.3" y="307.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.32%)</title><rect x="1006.3" y="291.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.17%)</title><rect x="1006.3" y="275.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.17%)</title><rect x="1006.3" y="259.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.3" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.17%)</title><rect x="1006.3" y="243.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.17%)</title><rect x="1006.3" y="227.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.17%)</title><rect x="1006.3" y="211.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.17%)</title><rect x="1006.3" y="195.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1009.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (7 samples, 0.17%)</title><rect x="1006.3" y="179.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1009.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.17%)</title><rect x="1006.3" y="163.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.17%)</title><rect x="1006.3" y="147.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.17%)</title><rect x="1006.3" y="131.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (7 samples, 0.17%)</title><rect x="1006.3" y="115.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1009.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.17%)</title><rect x="1006.3" y="99.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="1006.3" y="83.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1009.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1007.4" y="83.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="1007.4" y="67.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1010.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (6 samples, 0.15%)</title><rect x="1008.3" y="275.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (6 samples, 0.15%)</title><rect x="1008.3" y="259.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.15%)</title><rect x="1008.3" y="243.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.15%)</title><rect x="1008.3" y="227.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1011.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (109 samples, 2.66%)</title><rect x="1010.0" y="403.0" width="31.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1013.0" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.05%)</title><rect x="1010.0" y="387.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1013.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.05%)</title><rect x="1010.6" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.05%)</title><rect x="1010.6" y="371.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1013.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (2 samples, 0.05%)</title><rect x="1010.6" y="355.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1013.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1011.2" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="1011.2" y="371.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1014.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (103 samples, 2.51%)</title><rect x="1011.7" y="387.0" width="29.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.7" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.15%)</title><rect x="1011.7" y="371.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.7" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.15%)</title><rect x="1011.7" y="355.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1014.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (42 samples, 1.02%)</title><rect x="1013.5" y="371.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1016.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.05%)</title><rect x="1013.5" y="355.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1016.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (40 samples, 0.97%)</title><rect x="1014.0" y="355.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.0" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.07%)</title><rect x="1014.0" y="339.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1017.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.12%)</title><rect x="1014.9" y="339.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.9" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.12%)</title><rect x="1014.9" y="323.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1017.9" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.17%)</title><rect x="1016.3" y="339.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1019.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1018.3" y="339.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1021.3" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.10%)</title><rect x="1018.3" y="323.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1021.3" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (21 samples, 0.51%)</title><rect x="1019.5" y="339.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1022.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (21 samples, 0.51%)</title><rect x="1019.5" y="323.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (21 samples, 0.51%)</title><rect x="1019.5" y="307.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.10%)</title><rect x="1019.5" y="291.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (4 samples, 0.10%)</title><rect x="1019.5" y="275.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.10%)</title><rect x="1019.5" y="259.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.10%)</title><rect x="1019.5" y="243.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1022.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.10%)</title><rect x="1019.5" y="227.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (4 samples, 0.10%)</title><rect x="1019.5" y="211.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.10%)</title><rect x="1019.5" y="195.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.5" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="1019.5" y="179.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1022.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1019.8" y="179.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1022.8" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="1019.8" y="163.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1022.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (17 samples, 0.41%)</title><rect x="1020.6" y="291.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1023.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (3 samples, 0.07%)</title><rect x="1020.6" y="275.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1023.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1021.5" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1024.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1021.5" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1024.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$124/463011894.get$Lambda (1 samples, 0.02%)</title><rect x="1021.5" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1024.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$124 (1 samples, 0.02%)</title><rect x="1021.5" y="227.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1024.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.get$Lambda (1 samples, 0.02%)</title><rect x="1021.8" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1024.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$135 (1 samples, 0.02%)</title><rect x="1021.8" y="227.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1024.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.05%)</title><rect x="1022.1" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (2 samples, 0.05%)</title><rect x="1022.1" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1025.1" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (2 samples, 0.05%)</title><rect x="1022.1" y="243.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1025.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (10 samples, 0.24%)</title><rect x="1022.7" y="275.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1025.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.24%)</title><rect x="1022.7" y="259.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1025.7" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.10%)</title><rect x="1025.5" y="371.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1028.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1026.7" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="1026.7" y="355.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1029.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.05%)</title><rect x="1027.5" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (2 samples, 0.05%)</title><rect x="1027.5" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1030.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.24%)</title><rect x="1028.1" y="371.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1031.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.24%)</title><rect x="1028.1" y="355.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.24%)</title><rect x="1028.1" y="339.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (10 samples, 0.24%)</title><rect x="1028.1" y="323.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1031.1" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10 samples, 0.24%)</title><rect x="1028.1" y="307.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (10 samples, 0.24%)</title><rect x="1028.1" y="291.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1031.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (10 samples, 0.24%)</title><rect x="1028.1" y="275.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (10 samples, 0.24%)</title><rect x="1028.1" y="259.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (10 samples, 0.24%)</title><rect x="1028.1" y="243.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (10 samples, 0.24%)</title><rect x="1028.1" y="227.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1031.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (10 samples, 0.24%)</title><rect x="1028.1" y="211.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1031.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.10%)</title><rect x="1028.1" y="195.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.10%)</title><rect x="1028.1" y="179.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.1" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.10%)</title><rect x="1028.1" y="163.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1031.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.15%)</title><rect x="1029.3" y="195.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1032.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (6 samples, 0.15%)</title><rect x="1029.3" y="179.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (6 samples, 0.15%)</title><rect x="1029.3" y="163.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1032.3" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.07%)</title><rect x="1029.3" y="147.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1032.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1030.1" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="1030.1" y="131.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1033.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (36 samples, 0.88%)</title><rect x="1031.0" y="371.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1034.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.24%)</title><rect x="1031.0" y="355.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.15%)</title><rect x="1031.0" y="339.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1034.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.15%)</title><rect x="1031.0" y="323.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1034.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.10%)</title><rect x="1032.7" y="339.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.10%)</title><rect x="1032.7" y="323.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1035.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.02%)</title><rect x="1033.9" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.02%)</title><rect x="1033.9" y="339.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1036.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.10%)</title><rect x="1034.2" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1037.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.10%)</title><rect x="1034.2" y="339.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.10%)</title><rect x="1034.2" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1037.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (4 samples, 0.10%)</title><rect x="1034.2" y="307.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1037.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (11 samples, 0.27%)</title><rect x="1035.3" y="355.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1038.3" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (1 samples, 0.02%)</title><rect x="1035.3" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1038.3" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (1 samples, 0.02%)</title><rect x="1035.3" y="323.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1038.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (10 samples, 0.24%)</title><rect x="1035.6" y="339.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1038.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1035.6" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1038.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1035.6" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$119/1499123289.get$Lambda (2 samples, 0.05%)</title><rect x="1035.6" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$119 (2 samples, 0.05%)</title><rect x="1035.6" y="275.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1038.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (8 samples, 0.19%)</title><rect x="1036.2" y="323.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1039.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (8 samples, 0.19%)</title><rect x="1036.2" y="307.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1039.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (10 samples, 0.24%)</title><rect x="1038.5" y="355.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1041.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (10 samples, 0.24%)</title><rect x="1038.5" y="339.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1041.5" y="350.0"></text>
</g>
<g>
<title>[Worker_127 tid=7135] (256 samples, 6.24%)</title><rect x="1041.3" y="547.0" width="73.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1044.3" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (256 samples, 6.24%)</title><rect x="1041.3" y="531.0" width="73.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.3" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (256 samples, 6.24%)</title><rect x="1041.3" y="515.0" width="73.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.3" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (256 samples, 6.24%)</title><rect x="1041.3" y="499.0" width="73.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.3" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.10%)</title><rect x="1041.3" y="483.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.10%)</title><rect x="1041.3" y="467.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.10%)</title><rect x="1041.3" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.10%)</title><rect x="1041.3" y="435.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.10%)</title><rect x="1041.3" y="419.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1044.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.run (252 samples, 6.14%)</title><rect x="1042.5" y="483.0" width="72.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.5" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$3 (252 samples, 6.14%)</title><rect x="1042.5" y="467.0" width="72.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.5" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (252 samples, 6.14%)</title><rect x="1042.5" y="451.0" width="72.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.5" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="1042.5" y="435.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1045.5" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.05%)</title><rect x="1043.1" y="435.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1046.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17 samples, 0.41%)</title><rect x="1043.7" y="435.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1046.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 0.41%)</title><rect x="1043.7" y="419.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.27%)</title><rect x="1043.7" y="403.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1046.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.27%)</title><rect x="1043.7" y="387.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1046.7" y="398.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.27%)</title><rect x="1043.7" y="371.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1046.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.15%)</title><rect x="1046.8" y="403.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1049.8" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.15%)</title><rect x="1046.8" y="387.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1049.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (19 samples, 0.46%)</title><rect x="1048.5" y="435.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.5" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.22%)</title><rect x="1048.5" y="419.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1051.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.19%)</title><rect x="1051.1" y="419.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1054.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="1053.4" y="419.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1056.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (212 samples, 5.17%)</title><rect x="1054.0" y="435.0" width="61.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.0" y="446.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (24 samples, 0.58%)</title><rect x="1054.0" y="419.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.58%)</title><rect x="1054.0" y="403.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.58%)</title><rect x="1054.0" y="387.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.58%)</title><rect x="1054.0" y="371.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.58%)</title><rect x="1054.0" y="355.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1057.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.41%)</title><rect x="1054.0" y="339.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (17 samples, 0.41%)</title><rect x="1054.0" y="323.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (17 samples, 0.41%)</title><rect x="1054.0" y="307.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (17 samples, 0.41%)</title><rect x="1054.0" y="291.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1057.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (17 samples, 0.41%)</title><rect x="1054.0" y="275.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1057.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (17 samples, 0.41%)</title><rect x="1054.0" y="259.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.27%)</title><rect x="1054.0" y="243.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.27%)</title><rect x="1054.0" y="227.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1057.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.27%)</title><rect x="1054.0" y="211.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.27%)</title><rect x="1054.0" y="195.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1057.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.27%)</title><rect x="1054.0" y="179.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (11 samples, 0.27%)</title><rect x="1054.0" y="163.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (11 samples, 0.27%)</title><rect x="1054.0" y="147.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (11 samples, 0.27%)</title><rect x="1054.0" y="131.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (11 samples, 0.27%)</title><rect x="1054.0" y="115.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1057.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.12%)</title><rect x="1054.0" y="99.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.12%)</title><rect x="1054.0" y="83.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.0" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.12%)</title><rect x="1054.0" y="67.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1057.0" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.15%)</title><rect x="1055.4" y="99.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (6 samples, 0.15%)</title><rect x="1055.4" y="83.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1058.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (6 samples, 0.15%)</title><rect x="1055.4" y="67.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1058.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (6 samples, 0.15%)</title><rect x="1055.4" y="51.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1058.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (6 samples, 0.15%)</title><rect x="1057.2" y="243.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1060.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (6 samples, 0.15%)</title><rect x="1057.2" y="227.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1060.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.15%)</title><rect x="1057.2" y="211.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1060.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.15%)</title><rect x="1057.2" y="195.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1060.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$225/1054348470.apply (7 samples, 0.17%)</title><rect x="1058.9" y="339.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1061.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (7 samples, 0.17%)</title><rect x="1058.9" y="323.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.17%)</title><rect x="1058.9" y="307.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1061.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.17%)</title><rect x="1058.9" y="291.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1061.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.10%)</title><rect x="1060.9" y="419.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.10%)</title><rect x="1060.9" y="403.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$247/1413081072.apply (4 samples, 0.10%)</title><rect x="1060.9" y="387.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (4 samples, 0.10%)</title><rect x="1060.9" y="371.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1063.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4 samples, 0.10%)</title><rect x="1060.9" y="355.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.10%)</title><rect x="1060.9" y="339.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.9" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.10%)</title><rect x="1060.9" y="323.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1063.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (10 samples, 0.24%)</title><rect x="1062.1" y="419.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1065.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (10 samples, 0.24%)</title><rect x="1062.1" y="403.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1065.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.24%)</title><rect x="1062.1" y="387.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.24%)</title><rect x="1062.1" y="371.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1065.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (4 samples, 0.10%)</title><rect x="1064.9" y="419.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1067.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.10%)</title><rect x="1064.9" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.10%)</title><rect x="1064.9" y="387.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.10%)</title><rect x="1064.9" y="371.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1067.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (170 samples, 4.14%)</title><rect x="1066.1" y="419.0" width="48.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.1" y="430.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (2 samples, 0.05%)</title><rect x="1066.1" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.1" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (2 samples, 0.05%)</title><rect x="1066.1" y="387.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1069.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (33 samples, 0.80%)</title><rect x="1066.7" y="403.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.7" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.02%)</title><rect x="1066.7" y="387.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1069.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (32 samples, 0.78%)</title><rect x="1066.9" y="387.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.9" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.02%)</title><rect x="1066.9" y="371.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1069.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (17 samples, 0.41%)</title><rect x="1067.2" y="371.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (17 samples, 0.41%)</title><rect x="1067.2" y="355.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1070.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (17 samples, 0.41%)</title><rect x="1067.2" y="339.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (17 samples, 0.41%)</title><rect x="1067.2" y="323.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.17%)</title><rect x="1067.2" y="307.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1070.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.17%)</title><rect x="1067.2" y="291.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.2" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.17%)</title><rect x="1067.2" y="275.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.17%)</title><rect x="1067.2" y="259.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.17%)</title><rect x="1067.2" y="243.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.17%)</title><rect x="1067.2" y="227.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (7 samples, 0.17%)</title><rect x="1067.2" y="211.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.17%)</title><rect x="1067.2" y="195.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.17%)</title><rect x="1067.2" y="179.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.17%)</title><rect x="1067.2" y="163.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (7 samples, 0.17%)</title><rect x="1067.2" y="147.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.17%)</title><rect x="1067.2" y="131.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.2" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="1067.2" y="115.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1070.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (6 samples, 0.15%)</title><rect x="1067.5" y="115.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1070.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (6 samples, 0.15%)</title><rect x="1067.5" y="99.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1070.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (10 samples, 0.24%)</title><rect x="1069.2" y="307.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (10 samples, 0.24%)</title><rect x="1069.2" y="291.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.24%)</title><rect x="1069.2" y="275.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.2" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.24%)</title><rect x="1069.2" y="259.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1072.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.12%)</title><rect x="1072.1" y="371.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.12%)</title><rect x="1072.1" y="355.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1075.1" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.12%)</title><rect x="1073.6" y="371.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1076.6" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1075.0" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1078.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.10%)</title><rect x="1075.0" y="355.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1078.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.07%)</title><rect x="1076.1" y="403.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="1076.1" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1079.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="1076.1" y="371.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1079.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (3 samples, 0.07%)</title><rect x="1076.1" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1079.1" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (3 samples, 0.07%)</title><rect x="1076.1" y="339.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1079.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.02%)</title><rect x="1077.0" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1080.0" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.02%)</title><rect x="1077.0" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="1077.0" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1080.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="1077.0" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (1 samples, 0.02%)</title><rect x="1077.0" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.0" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (1 samples, 0.02%)</title><rect x="1077.0" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1080.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="1077.3" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1080.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="1077.3" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1080.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="1077.3" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1080.3" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="1077.3" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1080.3" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="1077.3" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="1077.3" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="1077.3" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.02%)</title><rect x="1077.3" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1080.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (20 samples, 0.49%)</title><rect x="1077.6" y="403.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1080.6" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.10%)</title><rect x="1077.6" y="387.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1080.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (16 samples, 0.39%)</title><rect x="1078.7" y="387.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1081.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.39%)</title><rect x="1078.7" y="371.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1081.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (16 samples, 0.39%)</title><rect x="1078.7" y="355.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (16 samples, 0.39%)</title><rect x="1078.7" y="339.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (16 samples, 0.39%)</title><rect x="1078.7" y="323.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (16 samples, 0.39%)</title><rect x="1078.7" y="307.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (16 samples, 0.39%)</title><rect x="1078.7" y="291.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.22%)</title><rect x="1078.7" y="275.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.22%)</title><rect x="1078.7" y="259.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.7" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.22%)</title><rect x="1078.7" y="243.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1081.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.22%)</title><rect x="1078.7" y="227.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.22%)</title><rect x="1078.7" y="211.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.22%)</title><rect x="1078.7" y="195.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (9 samples, 0.22%)</title><rect x="1078.7" y="179.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.22%)</title><rect x="1078.7" y="163.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.22%)</title><rect x="1078.7" y="147.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.22%)</title><rect x="1078.7" y="131.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (9 samples, 0.22%)</title><rect x="1078.7" y="115.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (9 samples, 0.22%)</title><rect x="1078.7" y="99.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.7" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.10%)</title><rect x="1078.7" y="83.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1081.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1079.9" y="83.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1082.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (5 samples, 0.12%)</title><rect x="1079.9" y="67.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1082.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (7 samples, 0.17%)</title><rect x="1081.3" y="275.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (7 samples, 0.17%)</title><rect x="1081.3" y="259.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.17%)</title><rect x="1081.3" y="243.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.17%)</title><rect x="1081.3" y="227.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1084.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (110 samples, 2.68%)</title><rect x="1083.3" y="403.0" width="31.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1086.3" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.12%)</title><rect x="1083.3" y="387.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1086.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.12%)</title><rect x="1084.8" y="387.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.12%)</title><rect x="1084.8" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.12%)</title><rect x="1084.8" y="355.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1087.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1086.2" y="387.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="1086.2" y="371.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1089.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (98 samples, 2.39%)</title><rect x="1086.8" y="387.0" width="28.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.8" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.12%)</title><rect x="1086.8" y="371.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.12%)</title><rect x="1086.8" y="355.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1089.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (42 samples, 1.02%)</title><rect x="1088.2" y="371.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1091.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.02%)</title><rect x="1088.2" y="355.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1091.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (41 samples, 1.00%)</title><rect x="1088.5" y="355.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1091.5" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.05%)</title><rect x="1088.5" y="339.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1091.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.02%)</title><rect x="1089.1" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.1" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.02%)</title><rect x="1089.1" y="323.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1092.1" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.10%)</title><rect x="1089.4" y="339.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1092.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1090.5" y="339.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="1090.5" y="323.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1093.5" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (29 samples, 0.71%)</title><rect x="1092.0" y="339.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1095.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (29 samples, 0.71%)</title><rect x="1092.0" y="323.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (29 samples, 0.71%)</title><rect x="1092.0" y="307.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.12%)</title><rect x="1092.0" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (5 samples, 0.12%)</title><rect x="1092.0" y="275.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.12%)</title><rect x="1092.0" y="259.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.12%)</title><rect x="1092.0" y="243.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.12%)</title><rect x="1092.0" y="227.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (5 samples, 0.12%)</title><rect x="1092.0" y="211.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.12%)</title><rect x="1092.0" y="195.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.0" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.07%)</title><rect x="1092.0" y="179.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1095.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1092.8" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1095.8" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.05%)</title><rect x="1092.8" y="163.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1095.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (24 samples, 0.58%)</title><rect x="1093.4" y="291.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.4" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (3 samples, 0.07%)</title><rect x="1093.4" y="275.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1096.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="1094.3" y="275.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="1094.3" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1097.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$124/463011894.get$Lambda (3 samples, 0.07%)</title><rect x="1094.3" y="243.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$124 (3 samples, 0.07%)</title><rect x="1094.3" y="227.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1097.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.get$Lambda (1 samples, 0.02%)</title><rect x="1095.1" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$135 (1 samples, 0.02%)</title><rect x="1095.1" y="227.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1098.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.15%)</title><rect x="1095.4" y="275.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.15%)</title><rect x="1095.4" y="259.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.15%)</title><rect x="1095.4" y="243.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1098.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (11 samples, 0.27%)</title><rect x="1097.1" y="275.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1100.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.27%)</title><rect x="1097.1" y="259.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1100.1" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.10%)</title><rect x="1100.3" y="371.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1103.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1101.4" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1101.4" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1104.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.07%)</title><rect x="1101.7" y="371.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1104.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (3 samples, 0.07%)</title><rect x="1101.7" y="355.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1104.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.15%)</title><rect x="1102.6" y="371.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1105.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.15%)</title><rect x="1102.6" y="355.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1105.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.15%)</title><rect x="1102.6" y="339.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1105.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.15%)</title><rect x="1102.6" y="323.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1105.6" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.15%)</title><rect x="1102.6" y="307.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.15%)</title><rect x="1102.6" y="291.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.15%)</title><rect x="1102.6" y="275.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1105.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.15%)</title><rect x="1102.6" y="259.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (6 samples, 0.15%)</title><rect x="1102.6" y="243.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1105.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.15%)</title><rect x="1102.6" y="227.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.15%)</title><rect x="1102.6" y="211.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1105.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="1102.6" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="1102.6" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.6" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.05%)</title><rect x="1102.6" y="163.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1105.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.10%)</title><rect x="1103.2" y="195.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (4 samples, 0.10%)</title><rect x="1103.2" y="179.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1106.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.10%)</title><rect x="1103.2" y="163.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.05%)</title><rect x="1103.2" y="147.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1106.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1103.7" y="147.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.05%)</title><rect x="1103.7" y="131.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1106.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (37 samples, 0.90%)</title><rect x="1104.3" y="371.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1107.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (11 samples, 0.27%)</title><rect x="1104.3" y="355.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (3 samples, 0.07%)</title><rect x="1104.3" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (3 samples, 0.07%)</title><rect x="1104.3" y="323.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1107.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.19%)</title><rect x="1105.2" y="339.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1108.2" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.19%)</title><rect x="1105.2" y="323.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1108.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.05%)</title><rect x="1107.5" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1110.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.05%)</title><rect x="1107.5" y="339.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1110.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.15%)</title><rect x="1108.1" y="355.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1111.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.15%)</title><rect x="1108.1" y="339.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.15%)</title><rect x="1108.1" y="323.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.15%)</title><rect x="1108.1" y="307.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1111.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (11 samples, 0.27%)</title><rect x="1109.8" y="355.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.8" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (2 samples, 0.05%)</title><rect x="1109.8" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.8" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (2 samples, 0.05%)</title><rect x="1109.8" y="323.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1112.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (9 samples, 0.22%)</title><rect x="1110.4" y="339.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1110.4" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1110.4" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$119/1499123289.get$Lambda (2 samples, 0.05%)</title><rect x="1110.4" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.4" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$119 (2 samples, 0.05%)</title><rect x="1110.4" y="275.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1113.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (7 samples, 0.17%)</title><rect x="1110.9" y="323.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.9" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (7 samples, 0.17%)</title><rect x="1110.9" y="307.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1113.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (7 samples, 0.17%)</title><rect x="1112.9" y="355.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (7 samples, 0.17%)</title><rect x="1112.9" y="339.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1115.9" y="350.0"></text>
</g>
<g>
<title>[Worker_128 tid=7133] (261 samples, 6.36%)</title><rect x="1115.0" y="547.0" width="75.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1118.0" y="558.0">[Worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (261 samples, 6.36%)</title><rect x="1115.0" y="531.0" width="75.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.0" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (261 samples, 6.36%)</title><rect x="1115.0" y="515.0" width="75.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.0" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (261 samples, 6.36%)</title><rect x="1115.0" y="499.0" width="75.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.0" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.17%)</title><rect x="1115.0" y="483.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.17%)</title><rect x="1115.0" y="467.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.17%)</title><rect x="1115.0" y="451.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.17%)</title><rect x="1115.0" y="435.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.17%)</title><rect x="1115.0" y="419.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1118.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$74/195473808.run (254 samples, 6.19%)</title><rect x="1117.0" y="483.0" width="73.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.0" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getMethod$3 (254 samples, 6.19%)</title><rect x="1117.0" y="467.0" width="73.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.0" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (254 samples, 6.19%)</title><rect x="1117.0" y="451.0" width="73.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.0" y="462.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1117.0" y="435.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1120.0" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.02%)</title><rect x="1117.3" y="435.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1120.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 0.37%)</title><rect x="1117.5" y="435.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 0.37%)</title><rect x="1117.5" y="419.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.27%)</title><rect x="1117.5" y="403.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.5" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.27%)</title><rect x="1117.5" y="387.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.5" y="398.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.27%)</title><rect x="1117.5" y="371.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1120.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.10%)</title><rect x="1120.7" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.7" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.10%)</title><rect x="1120.7" y="387.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1123.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.19%)</title><rect x="1121.9" y="435.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.9" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="1121.9" y="419.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1124.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.02%)</title><rect x="1122.7" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1125.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.10%)</title><rect x="1123.0" y="419.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1126.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (229 samples, 5.58%)</title><rect x="1124.2" y="435.0" width="65.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.2" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (34 samples, 0.83%)</title><rect x="1124.2" y="419.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (34 samples, 0.83%)</title><rect x="1124.2" y="403.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (34 samples, 0.83%)</title><rect x="1124.2" y="387.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1127.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (34 samples, 0.83%)</title><rect x="1124.2" y="371.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (34 samples, 0.83%)</title><rect x="1124.2" y="355.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.58%)</title><rect x="1124.2" y="339.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (24 samples, 0.58%)</title><rect x="1124.2" y="323.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.58%)</title><rect x="1124.2" y="307.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.58%)</title><rect x="1124.2" y="291.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.58%)</title><rect x="1124.2" y="275.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.58%)</title><rect x="1124.2" y="259.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.17%)</title><rect x="1124.2" y="243.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.17%)</title><rect x="1124.2" y="227.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.2" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.17%)</title><rect x="1124.2" y="211.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.17%)</title><rect x="1124.2" y="195.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.17%)</title><rect x="1124.2" y="179.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.17%)</title><rect x="1124.2" y="163.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (7 samples, 0.17%)</title><rect x="1124.2" y="147.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.17%)</title><rect x="1124.2" y="131.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1127.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.17%)</title><rect x="1124.2" y="115.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="1124.2" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="1124.2" y="83.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.2" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.05%)</title><rect x="1124.2" y="67.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1127.2" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.12%)</title><rect x="1124.7" y="99.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (5 samples, 0.12%)</title><rect x="1124.7" y="83.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.12%)</title><rect x="1124.7" y="67.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.05%)</title><rect x="1124.7" y="51.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1127.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1125.3" y="51.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.3" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="1125.3" y="35.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1128.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (17 samples, 0.41%)</title><rect x="1126.2" y="243.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (17 samples, 0.41%)</title><rect x="1126.2" y="227.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.41%)</title><rect x="1126.2" y="211.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.41%)</title><rect x="1126.2" y="195.0" width="4.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1129.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$225/1054348470.apply (10 samples, 0.24%)</title><rect x="1131.1" y="339.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (10 samples, 0.24%)</title><rect x="1131.1" y="323.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.24%)</title><rect x="1131.1" y="307.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1134.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.24%)</title><rect x="1131.1" y="291.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1134.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.17%)</title><rect x="1133.9" y="419.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (7 samples, 0.17%)</title><rect x="1133.9" y="403.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$247/1413081072.apply (7 samples, 0.17%)</title><rect x="1133.9" y="387.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (7 samples, 0.17%)</title><rect x="1133.9" y="371.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1136.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (7 samples, 0.17%)</title><rect x="1133.9" y="355.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.17%)</title><rect x="1133.9" y="339.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.9" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.17%)</title><rect x="1133.9" y="323.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1136.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.12%)</title><rect x="1135.9" y="419.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.12%)</title><rect x="1135.9" y="403.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.12%)</title><rect x="1135.9" y="387.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.12%)</title><rect x="1135.9" y="371.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1138.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (11 samples, 0.27%)</title><rect x="1137.4" y="419.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.27%)</title><rect x="1137.4" y="403.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.27%)</title><rect x="1137.4" y="387.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.27%)</title><rect x="1137.4" y="371.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1140.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (172 samples, 4.19%)</title><rect x="1140.5" y="419.0" width="49.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.5" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.07%)</title><rect x="1140.5" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.5" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.07%)</title><rect x="1140.5" y="387.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1143.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (29 samples, 0.71%)</title><rect x="1141.4" y="403.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.4" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.07%)</title><rect x="1141.4" y="387.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1144.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 0.63%)</title><rect x="1142.3" y="387.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.3" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.12%)</title><rect x="1142.3" y="371.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1145.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (12 samples, 0.29%)</title><rect x="1143.7" y="371.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (12 samples, 0.29%)</title><rect x="1143.7" y="355.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (12 samples, 0.29%)</title><rect x="1143.7" y="339.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.29%)</title><rect x="1143.7" y="323.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.10%)</title><rect x="1143.7" y="307.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.10%)</title><rect x="1143.7" y="291.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.7" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.10%)</title><rect x="1143.7" y="275.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1146.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.10%)</title><rect x="1143.7" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.10%)</title><rect x="1143.7" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.10%)</title><rect x="1143.7" y="227.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (4 samples, 0.10%)</title><rect x="1143.7" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.10%)</title><rect x="1143.7" y="195.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.10%)</title><rect x="1143.7" y="179.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1146.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.10%)</title><rect x="1143.7" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (4 samples, 0.10%)</title><rect x="1143.7" y="147.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.10%)</title><rect x="1143.7" y="131.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.7" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.02%)</title><rect x="1143.7" y="115.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1146.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1144.0" y="115.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1147.0" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.07%)</title><rect x="1144.0" y="99.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1147.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (8 samples, 0.19%)</title><rect x="1144.9" y="307.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (8 samples, 0.19%)</title><rect x="1144.9" y="291.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1147.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.19%)</title><rect x="1144.9" y="275.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1147.9" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.19%)</title><rect x="1144.9" y="259.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1147.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.02%)</title><rect x="1147.2" y="371.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.02%)</title><rect x="1147.2" y="355.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1150.2" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.07%)</title><rect x="1147.4" y="371.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1150.4" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1148.3" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="1148.3" y="355.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1151.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.19%)</title><rect x="1149.7" y="403.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1152.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.10%)</title><rect x="1149.7" y="387.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1152.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="1149.7" y="371.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1152.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="1149.7" y="355.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$198/1619957283.get$Lambda (4 samples, 0.10%)</title><rect x="1149.7" y="339.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1152.7" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$198 (4 samples, 0.10%)</title><rect x="1149.7" y="323.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1152.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.10%)</title><rect x="1150.9" y="387.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1153.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.10%)</title><rect x="1150.9" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1153.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.10%)</title><rect x="1150.9" y="355.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$205/60315096.get$Lambda (4 samples, 0.10%)</title><rect x="1150.9" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.9" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$205 (4 samples, 0.10%)</title><rect x="1150.9" y="323.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1153.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.07%)</title><rect x="1152.0" y="403.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1155.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.07%)</title><rect x="1152.0" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.07%)</title><rect x="1152.0" y="371.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.0" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="1152.0" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.0" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.07%)</title><rect x="1152.0" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1155.0" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.05%)</title><rect x="1152.0" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.0" y="334.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (2 samples, 0.05%)</title><rect x="1152.0" y="307.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1155.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="1152.6" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="1152.6" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.02%)</title><rect x="1152.6" y="291.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1155.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (19 samples, 0.46%)</title><rect x="1152.9" y="403.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1155.9" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.05%)</title><rect x="1152.9" y="387.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1155.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (17 samples, 0.41%)</title><rect x="1153.5" y="387.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1156.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.41%)</title><rect x="1153.5" y="371.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (17 samples, 0.41%)</title><rect x="1153.5" y="355.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (17 samples, 0.41%)</title><rect x="1153.5" y="339.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (17 samples, 0.41%)</title><rect x="1153.5" y="323.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (17 samples, 0.41%)</title><rect x="1153.5" y="307.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1156.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (17 samples, 0.41%)</title><rect x="1153.5" y="291.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.17%)</title><rect x="1153.5" y="275.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1156.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.17%)</title><rect x="1153.5" y="259.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.5" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.17%)</title><rect x="1153.5" y="243.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.17%)</title><rect x="1153.5" y="227.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.17%)</title><rect x="1153.5" y="211.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.17%)</title><rect x="1153.5" y="195.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1156.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (7 samples, 0.17%)</title><rect x="1153.5" y="179.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.17%)</title><rect x="1153.5" y="163.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.17%)</title><rect x="1153.5" y="147.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.17%)</title><rect x="1153.5" y="131.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (7 samples, 0.17%)</title><rect x="1153.5" y="115.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.17%)</title><rect x="1153.5" y="99.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (5 samples, 0.12%)</title><rect x="1153.5" y="83.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1156.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1154.9" y="83.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.05%)</title><rect x="1154.9" y="67.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1157.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$165/561055503.apply (10 samples, 0.24%)</title><rect x="1155.5" y="275.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (10 samples, 0.24%)</title><rect x="1155.5" y="259.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.24%)</title><rect x="1155.5" y="243.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1158.5" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.24%)</title><rect x="1155.5" y="227.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1158.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (110 samples, 2.68%)</title><rect x="1158.4" y="403.0" width="31.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.4" y="414.0">ru..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.05%)</title><rect x="1158.4" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.05%)</title><rect x="1158.4" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (2 samples, 0.05%)</title><rect x="1158.4" y="355.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1161.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1158.9" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="1158.9" y="371.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1161.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (105 samples, 2.56%)</title><rect x="1159.8" y="387.0" width="30.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.8" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.10%)</title><rect x="1159.8" y="371.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (4 samples, 0.10%)</title><rect x="1159.8" y="355.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1162.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (46 samples, 1.12%)</title><rect x="1161.0" y="371.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (46 samples, 1.12%)</title><rect x="1161.0" y="355.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.0" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.02%)</title><rect x="1161.0" y="339.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1164.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.07%)</title><rect x="1161.2" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.2" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.07%)</title><rect x="1161.2" y="323.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1164.2" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.12%)</title><rect x="1162.1" y="339.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1165.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1163.5" y="339.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1166.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.10%)</title><rect x="1163.5" y="323.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1166.5" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (33 samples, 0.80%)</title><rect x="1164.7" y="339.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1167.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (33 samples, 0.80%)</title><rect x="1164.7" y="323.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (33 samples, 0.80%)</title><rect x="1164.7" y="307.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.29%)</title><rect x="1164.7" y="291.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (12 samples, 0.29%)</title><rect x="1164.7" y="275.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.29%)</title><rect x="1164.7" y="259.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.29%)</title><rect x="1164.7" y="243.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.29%)</title><rect x="1164.7" y="227.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (12 samples, 0.29%)</title><rect x="1164.7" y="211.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (12 samples, 0.29%)</title><rect x="1164.7" y="195.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.7" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (5 samples, 0.12%)</title><rect x="1164.7" y="179.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1167.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1166.1" y="179.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1169.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (7 samples, 0.17%)</title><rect x="1166.1" y="163.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1169.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (21 samples, 0.51%)</title><rect x="1168.1" y="291.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.1" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (4 samples, 0.10%)</title><rect x="1168.1" y="275.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1171.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1169.3" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1172.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1169.3" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1172.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$124/463011894.get$Lambda (2 samples, 0.05%)</title><rect x="1169.3" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1172.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$124 (2 samples, 0.05%)</title><rect x="1169.3" y="227.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1172.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.12%)</title><rect x="1169.9" y="275.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1172.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (5 samples, 0.12%)</title><rect x="1169.9" y="259.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1172.9" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (5 samples, 0.12%)</title><rect x="1169.9" y="243.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1172.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (10 samples, 0.24%)</title><rect x="1171.3" y="275.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.24%)</title><rect x="1171.3" y="259.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1174.3" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.05%)</title><rect x="1174.2" y="371.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1177.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1174.8" y="371.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1174.8" y="355.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1177.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.02%)</title><rect x="1175.0" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1178.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (1 samples, 0.02%)</title><rect x="1175.0" y="355.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1178.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (16 samples, 0.39%)</title><rect x="1175.3" y="371.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.3" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.07%)</title><rect x="1175.3" y="355.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1178.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.32%)</title><rect x="1176.2" y="355.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.32%)</title><rect x="1176.2" y="339.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (13 samples, 0.32%)</title><rect x="1176.2" y="323.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.2" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.32%)</title><rect x="1176.2" y="307.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.32%)</title><rect x="1176.2" y="291.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1179.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.32%)</title><rect x="1176.2" y="275.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (13 samples, 0.32%)</title><rect x="1176.2" y="259.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/787831469.getAsBoolean (13 samples, 0.32%)</title><rect x="1176.2" y="243.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (13 samples, 0.32%)</title><rect x="1176.2" y="227.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (13 samples, 0.32%)</title><rect x="1176.2" y="211.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.12%)</title><rect x="1176.2" y="195.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1179.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.12%)</title><rect x="1176.2" y="179.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.2" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.12%)</title><rect x="1176.2" y="163.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1179.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.19%)</title><rect x="1177.6" y="195.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$87/1787751120.apply (8 samples, 0.19%)</title><rect x="1177.6" y="179.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (8 samples, 0.19%)</title><rect x="1177.6" y="163.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.6" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (6 samples, 0.15%)</title><rect x="1177.6" y="147.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1180.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1179.4" y="147.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.05%)</title><rect x="1179.4" y="131.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1182.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (35 samples, 0.85%)</title><rect x="1179.9" y="371.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (12 samples, 0.29%)</title><rect x="1179.9" y="355.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (7 samples, 0.17%)</title><rect x="1179.9" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1182.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (7 samples, 0.17%)</title><rect x="1179.9" y="323.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1182.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.12%)</title><rect x="1181.9" y="339.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1184.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.12%)</title><rect x="1181.9" y="323.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1184.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.02%)</title><rect x="1183.4" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1186.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.02%)</title><rect x="1183.4" y="339.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1186.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.17%)</title><rect x="1183.7" y="355.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.17%)</title><rect x="1183.7" y="339.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.17%)</title><rect x="1183.7" y="323.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1186.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.17%)</title><rect x="1183.7" y="307.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1186.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (8 samples, 0.19%)</title><rect x="1185.7" y="355.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.7" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (2 samples, 0.05%)</title><rect x="1185.7" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.7" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (2 samples, 0.05%)</title><rect x="1185.7" y="323.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1188.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (6 samples, 0.15%)</title><rect x="1186.3" y="339.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1186.3" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1189.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1186.3" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$119/1499123289.get$Lambda (2 samples, 0.05%)</title><rect x="1186.3" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.3" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$119 (2 samples, 0.05%)</title><rect x="1186.3" y="275.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1189.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (4 samples, 0.10%)</title><rect x="1186.8" y="323.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.8" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (4 samples, 0.10%)</title><rect x="1186.8" y="307.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1189.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (7 samples, 0.17%)</title><rect x="1188.0" y="355.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (7 samples, 0.17%)</title><rect x="1188.0" y="339.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1191.0" y="350.0"></text>
</g>
</g>
</svg>
