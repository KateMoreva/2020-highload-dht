<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (23,495 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (187 samples, 0.80%)</title><rect x="10.3" y="883.0" width="9.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.3" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (183 samples, 0.78%)</title><rect x="10.5" y="867.0" width="9.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (177 samples, 0.75%)</title><rect x="10.7" y="851.0" width="8.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (164 samples, 0.70%)</title><rect x="11.0" y="835.0" width="8.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.0" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (5 samples, 0.02%)</title><rect x="11.3" y="819.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.3" y="830.0"></text>
</g>
<g>
<title>SpinPause (19 samples, 0.08%)</title><rect x="11.5" y="819.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.5" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (62 samples, 0.26%)</title><rect x="12.6" y="819.0" width="3.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.14%)</title><rect x="14.0" y="803.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="17.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.14%)</title><rect x="14.0" y="787.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="17.0" y="798.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.06%)</title><rect x="15.0" y="771.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.0" y="782.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.06%)</title><rect x="15.0" y="755.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="18.0" y="766.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.04%)</title><rect x="15.1" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="18.1" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (53 samples, 0.23%)</title><rect x="15.7" y="819.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="18.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.15%)</title><rect x="16.5" y="803.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="19.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.15%)</title><rect x="16.5" y="787.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="19.5" y="798.0"></text>
</g>
<g>
<title>sys_futex (27 samples, 0.11%)</title><rect x="17.0" y="771.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="20.0" y="782.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.10%)</title><rect x="17.1" y="755.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="20.1" y="766.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.09%)</title><rect x="17.1" y="739.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="20.1" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.05%)</title><rect x="17.2" y="723.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="20.2" y="734.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (8 samples, 0.03%)</title><rect x="17.2" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="20.2" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.03%)</title><rect x="17.3" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="20.3" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.02%)</title><rect x="17.8" y="723.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="20.8" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.02%)</title><rect x="18.3" y="819.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="21.3" y="830.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (6 samples, 0.03%)</title><rect x="18.8" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.8" y="830.0"></text>
</g>
<g>
<title>[not_walkable_Java] (58 samples, 0.25%)</title><rect x="19.8" y="883.0" width="3.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="22.8" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (40 samples, 0.17%)</title><rect x="20.1" y="867.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="23.1" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (38 samples, 0.16%)</title><rect x="20.2" y="851.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="23.2" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (9 samples, 0.04%)</title><rect x="20.2" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.2" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.02%)</title><rect x="20.4" y="819.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="23.4" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (28 samples, 0.12%)</title><rect x="20.7" y="835.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="23.7" y="846.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (10 samples, 0.04%)</title><rect x="21.1" y="819.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.1" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (9 samples, 0.04%)</title><rect x="21.7" y="819.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="24.7" y="830.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (5 samples, 0.02%)</title><rect x="21.9" y="803.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.9" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (7 samples, 0.03%)</title><rect x="22.4" y="867.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="25.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.03%)</title><rect x="22.8" y="883.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="25.8" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (20 samples, 0.09%)</title><rect x="23.1" y="883.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="26.1" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (8 samples, 0.03%)</title><rect x="23.7" y="867.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="26.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.run (17,063 samples, 72.62%)</title><rect x="24.2" y="883.0" width="856.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.2" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,063 samples, 72.62%)</title><rect x="24.2" y="867.0" width="856.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.2" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,063 samples, 72.62%)</title><rect x="24.2" y="851.0" width="856.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.2" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (14 samples, 0.06%)</title><rect x="27.0" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.06%)</title><rect x="27.0" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (14 samples, 0.06%)</title><rect x="27.0" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (13 samples, 0.06%)</title><rect x="27.0" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (13 samples, 0.06%)</title><rect x="27.0" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (13 samples, 0.06%)</title><rect x="27.0" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (31 samples, 0.13%)</title><rect x="27.7" y="835.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (31 samples, 0.13%)</title><rect x="27.7" y="819.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (25 samples, 0.11%)</title><rect x="28.0" y="803.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (25 samples, 0.11%)</title><rect x="28.0" y="787.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,937 samples, 8.24%)</title><rect x="29.3" y="835.0" width="97.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.3" y="846.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,882 samples, 8.01%)</title><rect x="31.9" y="819.0" width="94.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.9" y="830.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (22 samples, 0.09%)</title><rect x="32.7" y="803.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,369 samples, 5.83%)</title><rect x="33.8" y="803.0" width="68.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.8" y="814.0">java/ut..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (30 samples, 0.13%)</title><rect x="34.4" y="787.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (24 samples, 0.10%)</title><rect x="35.9" y="787.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.9" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.02%)</title><rect x="36.8" y="771.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="39.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (42 samples, 0.18%)</title><rect x="37.1" y="787.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.03%)</title><rect x="37.8" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.03%)</title><rect x="37.8" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.03%)</title><rect x="37.8" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.8" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.03%)</title><rect x="37.8" y="723.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="40.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (17 samples, 0.07%)</title><rect x="38.4" y="771.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (17 samples, 0.07%)</title><rect x="38.4" y="755.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (8 samples, 0.03%)</title><rect x="38.8" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (8 samples, 0.03%)</title><rect x="38.8" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (8 samples, 0.03%)</title><rect x="38.8" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (139 samples, 0.59%)</title><rect x="39.2" y="787.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (139 samples, 0.59%)</title><rect x="39.2" y="771.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (127 samples, 0.54%)</title><rect x="39.5" y="755.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (125 samples, 0.53%)</title><rect x="39.6" y="739.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (125 samples, 0.53%)</title><rect x="39.6" y="723.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (16 samples, 0.07%)</title><rect x="40.0" y="707.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="43.0" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (101 samples, 0.43%)</title><rect x="40.8" y="707.0" width="5.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="43.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 0.35%)</title><rect x="41.7" y="691.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="44.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (81 samples, 0.34%)</title><rect x="41.7" y="675.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="44.7" y="686.0"></text>
</g>
<g>
<title>sys_futex (77 samples, 0.33%)</title><rect x="41.9" y="659.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="44.9" y="670.0"></text>
</g>
<g>
<title>do_futex (77 samples, 0.33%)</title><rect x="41.9" y="643.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="44.9" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (73 samples, 0.31%)</title><rect x="42.1" y="627.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="45.1" y="638.0"></text>
</g>
<g>
<title>wake_up_q (62 samples, 0.26%)</title><rect x="42.6" y="611.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="45.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (62 samples, 0.26%)</title><rect x="42.6" y="595.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="45.6" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (62 samples, 0.26%)</title><rect x="42.6" y="579.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="45.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (6 samples, 0.03%)</title><rect x="45.9" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,121 samples, 4.77%)</title><rect x="46.3" y="787.0" width="56.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.3" y="798.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,119 samples, 4.76%)</title><rect x="46.4" y="771.0" width="56.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.4" y="782.0">jdk/in..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.02%)</title><rect x="46.7" y="755.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="49.7" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.05%)</title><rect x="47.0" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="50.0" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (5 samples, 0.02%)</title><rect x="47.5" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="50.5" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (1,066 samples, 4.54%)</title><rect x="47.8" y="755.0" width="53.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="50.8" y="766.0">Unsaf..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (5 samples, 0.02%)</title><rect x="49.4" y="739.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="52.4" y="750.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (10 samples, 0.04%)</title><rect x="49.6" y="739.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="52.6" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (98 samples, 0.42%)</title><rect x="50.4" y="739.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="53.4" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (24 samples, 0.10%)</title><rect x="53.0" y="723.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="56.0" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (18 samples, 0.08%)</title><rect x="54.4" y="723.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="57.4" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (10 samples, 0.04%)</title><rect x="55.5" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="58.5" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (6 samples, 0.03%)</title><rect x="56.0" y="739.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="59.0" y="750.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (34 samples, 0.14%)</title><rect x="56.3" y="739.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="59.3" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (476 samples, 2.03%)</title><rect x="58.0" y="739.0" width="23.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="61.0" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (332 samples, 1.41%)</title><rect x="65.2" y="723.0" width="16.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (314 samples, 1.34%)</title><rect x="65.3" y="707.0" width="15.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="68.3" y="718.0"></text>
</g>
<g>
<title>sys_futex (154 samples, 0.66%)</title><rect x="73.4" y="691.0" width="7.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.4" y="702.0"></text>
</g>
<g>
<title>do_futex (126 samples, 0.54%)</title><rect x="74.0" y="675.0" width="6.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="77.0" y="686.0"></text>
</g>
<g>
<title>futex_wake (90 samples, 0.38%)</title><rect x="74.9" y="659.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.9" y="670.0"></text>
</g>
<g>
<title>get_futex_key (52 samples, 0.22%)</title><rect x="76.6" y="643.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.6" y="654.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.9 (20 samples, 0.09%)</title><rect x="78.3" y="627.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="81.3" y="638.0"></text>
</g>
<g>
<title>get_futex_key (10 samples, 0.04%)</title><rect x="79.4" y="659.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="82.4" y="670.0"></text>
</g>
<g>
<title>hash_futex (9 samples, 0.04%)</title><rect x="79.9" y="659.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="82.9" y="670.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.06%)</title><rect x="80.4" y="675.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.4" y="686.0"></text>
</g>
<g>
<title>sys_futex (16 samples, 0.07%)</title><rect x="81.1" y="707.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="84.1" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (299 samples, 1.27%)</title><rect x="81.9" y="739.0" width="15.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="84.9" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (180 samples, 0.77%)</title><rect x="87.9" y="723.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="90.9" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (175 samples, 0.74%)</title><rect x="87.9" y="707.0" width="8.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.9" y="718.0"></text>
</g>
<g>
<title>sys_futex (126 samples, 0.54%)</title><rect x="90.4" y="691.0" width="6.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="93.4" y="702.0"></text>
</g>
<g>
<title>do_futex (117 samples, 0.50%)</title><rect x="90.6" y="675.0" width="5.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="93.6" y="686.0"></text>
</g>
<g>
<title>futex_wait (104 samples, 0.44%)</title><rect x="91.0" y="659.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="94.0" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (38 samples, 0.16%)</title><rect x="91.7" y="643.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="94.7" y="654.0"></text>
</g>
<g>
<title>plist_add (6 samples, 0.03%)</title><rect x="91.9" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="94.9" y="638.0"></text>
</g>
<g>
<title>schedule (28 samples, 0.12%)</title><rect x="92.2" y="627.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="95.2" y="638.0"></text>
</g>
<g>
<title>__schedule (26 samples, 0.11%)</title><rect x="92.3" y="611.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="95.3" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.03%)</title><rect x="93.3" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="96.3" y="606.0"></text>
</g>
<g>
<title>futex_wait_setup (42 samples, 0.18%)</title><rect x="93.6" y="643.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="96.6" y="654.0"></text>
</g>
<g>
<title>get_futex_key (9 samples, 0.04%)</title><rect x="94.6" y="627.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="97.6" y="638.0"></text>
</g>
<g>
<title>get_futex_value_locked (14 samples, 0.06%)</title><rect x="95.0" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="98.0" y="638.0"></text>
</g>
<g>
<title>hash_futex (7 samples, 0.03%)</title><rect x="95.7" y="643.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="98.7" y="654.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.02%)</title><rect x="96.4" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="99.4" y="686.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.02%)</title><rect x="96.7" y="707.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="99.7" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (15 samples, 0.06%)</title><rect x="96.9" y="739.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="99.9" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (8 samples, 0.03%)</title><rect x="97.8" y="739.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="100.8" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (10 samples, 0.04%)</title><rect x="98.2" y="739.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="101.2" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.04%)</title><rect x="98.8" y="739.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="101.8" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (8 samples, 0.03%)</title><rect x="99.3" y="739.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="102.3" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (8 samples, 0.03%)</title><rect x="99.7" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="102.7" y="750.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (11 samples, 0.05%)</title><rect x="100.1" y="739.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="103.1" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (6 samples, 0.03%)</title><rect x="100.7" y="739.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="103.7" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (7 samples, 0.03%)</title><rect x="101.0" y="739.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="104.0" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (18 samples, 0.08%)</title><rect x="101.3" y="755.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="104.3" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (7 samples, 0.03%)</title><rect x="102.2" y="755.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="105.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.03%)</title><rect x="102.6" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (103 samples, 0.44%)</title><rect x="102.9" y="803.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (85 samples, 0.36%)</title><rect x="103.8" y="787.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (14 samples, 0.06%)</title><rect x="103.8" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (36 samples, 0.15%)</title><rect x="104.5" y="771.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (5 samples, 0.02%)</title><rect x="104.7" y="755.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (27 samples, 0.11%)</title><rect x="104.9" y="755.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (25 samples, 0.11%)</title><rect x="105.0" y="739.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (24 samples, 0.10%)</title><rect x="105.1" y="723.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.1" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 0.10%)</title><rect x="105.1" y="707.0" width="1.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="108.1" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (12 samples, 0.05%)</title><rect x="105.3" y="691.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="108.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="105.5" y="675.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="105.5" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.5" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.02%)</title><rect x="105.9" y="691.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="108.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (32 samples, 0.14%)</title><rect x="106.3" y="771.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (32 samples, 0.14%)</title><rect x="106.3" y="755.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (10 samples, 0.04%)</title><rect x="107.4" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (10 samples, 0.04%)</title><rect x="107.4" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (10 samples, 0.04%)</title><rect x="107.4" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (367 samples, 1.56%)</title><rect x="108.0" y="803.0" width="18.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (6 samples, 0.03%)</title><rect x="108.0" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (361 samples, 1.54%)</title><rect x="108.3" y="787.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (335 samples, 1.43%)</title><rect x="109.6" y="771.0" width="16.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (335 samples, 1.43%)</title><rect x="109.6" y="755.0" width="16.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (335 samples, 1.43%)</title><rect x="109.6" y="739.0" width="16.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.6" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (53 samples, 0.23%)</title><rect x="110.0" y="723.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="113.0" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (5 samples, 0.02%)</title><rect x="110.6" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="113.6" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (7 samples, 0.03%)</title><rect x="110.9" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="113.9" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.03%)</title><rect x="111.3" y="707.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="114.3" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (9 samples, 0.04%)</title><rect x="111.8" y="707.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="114.8" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (273 samples, 1.16%)</title><rect x="112.7" y="723.0" width="13.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="115.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (234 samples, 1.00%)</title><rect x="114.6" y="707.0" width="11.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="117.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (233 samples, 0.99%)</title><rect x="114.6" y="691.0" width="11.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.6" y="702.0"></text>
</g>
<g>
<title>sys_futex (216 samples, 0.92%)</title><rect x="115.5" y="675.0" width="10.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="118.5" y="686.0"></text>
</g>
<g>
<title>do_futex (213 samples, 0.91%)</title><rect x="115.6" y="659.0" width="10.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="118.6" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock (11 samples, 0.05%)</title><rect x="115.7" y="643.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="118.7" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (199 samples, 0.85%)</title><rect x="116.3" y="643.0" width="10.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.3" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (15 samples, 0.06%)</title><rect x="117.5" y="627.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="120.5" y="638.0"></text>
</g>
<g>
<title>wake_up_q (160 samples, 0.68%)</title><rect x="118.2" y="627.0" width="8.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="121.2" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (158 samples, 0.67%)</title><rect x="118.3" y="611.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.3" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (157 samples, 0.67%)</title><rect x="118.4" y="595.0" width="7.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="121.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$66/1590969358.run (15,024 samples, 63.95%)</title><rect x="126.6" y="835.0" width="754.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.6" y="846.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$66/1590969358.run</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (15,009 samples, 63.88%)</title><rect x="127.3" y="819.0" width="753.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.3" y="830.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1</text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.05%)</title><rect x="128.5" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.05%)</title><rect x="128.5" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.05%)</title><rect x="128.5" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.5" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.03%)</title><rect x="128.7" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.isBlank (33 samples, 0.14%)</title><rect x="129.0" y="803.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOfNonWhitespace (32 samples, 0.14%)</title><rect x="129.0" y="787.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (11 samples, 0.05%)</title><rect x="129.8" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (9 samples, 0.04%)</title><rect x="129.9" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (9 samples, 0.04%)</title><rect x="129.9" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.9" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.isWhitespace (9 samples, 0.04%)</title><rect x="129.9" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 0.21%)</title><rect x="130.7" y="803.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.15%)</title><rect x="130.8" y="787.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.8" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="132.1" y="771.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="135.1" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="132.1" y="755.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="135.1" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="132.1" y="739.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="135.1" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="132.1" y="723.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="135.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="132.4" y="771.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.4" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (11 samples, 0.05%)</title><rect x="132.6" y="787.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="135.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.isMe (13 samples, 0.06%)</title><rect x="133.3" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.isMe (13 samples, 0.06%)</title><rect x="133.3" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="136.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (12 samples, 0.05%)</title><rect x="133.3" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (29 samples, 0.12%)</title><rect x="134.0" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (29 samples, 0.12%)</title><rect x="134.0" y="787.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (8 samples, 0.03%)</title><rect x="134.8" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.proxy (5,142 samples, 21.89%)</title><rect x="135.4" y="803.0" width="258.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.4" y="814.0">ru/mail/polis/service/kate/moreva/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.15%)</title><rect x="135.4" y="787.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/373182087.invoke (35 samples, 0.15%)</title><rect x="135.4" y="771.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="135.4" y="755.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (8 samples, 0.03%)</title><rect x="136.0" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.03%)</title><rect x="136.0" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (8 samples, 0.03%)</title><rect x="136.0" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.02%)</title><rect x="136.4" y="739.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.02%)</title><rect x="136.4" y="723.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1500056228.invoke (10 samples, 0.04%)</title><rect x="136.6" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="136.6" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (10 samples, 0.04%)</title><rect x="136.6" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.04%)</title><rect x="136.6" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.03%)</title><rect x="136.8" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (206 samples, 0.88%)</title><rect x="137.2" y="787.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (178 samples, 0.76%)</title><rect x="137.2" y="771.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (6 samples, 0.03%)</title><rect x="145.8" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (28 samples, 0.12%)</title><rect x="146.1" y="771.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.1" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.03%)</title><rect x="146.6" y="755.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="149.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (12 samples, 0.05%)</title><rect x="146.9" y="755.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.9" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.02%)</title><rect x="147.5" y="787.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="150.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4,889 samples, 20.81%)</title><rect x="147.8" y="787.0" width="245.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="150.8" y="798.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4,889 samples, 20.81%)</title><rect x="147.8" y="771.0" width="245.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.8" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (99 samples, 0.42%)</title><rect x="148.1" y="755.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (76 samples, 0.32%)</title><rect x="149.2" y="739.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (16 samples, 0.07%)</title><rect x="149.7" y="723.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (50 samples, 0.21%)</title><rect x="150.5" y="723.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (18 samples, 0.08%)</title><rect x="152.1" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (959 samples, 4.08%)</title><rect x="153.1" y="755.0" width="48.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.1" y="766.0">one/..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (61 samples, 0.26%)</title><rect x="153.2" y="739.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="156.2" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.02%)</title><rect x="153.4" y="723.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="156.4" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (52 samples, 0.22%)</title><rect x="153.7" y="723.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="156.7" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (47 samples, 0.20%)</title><rect x="153.8" y="707.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="156.8" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (42 samples, 0.18%)</title><rect x="153.9" y="691.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="156.9" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (6 samples, 0.03%)</title><rect x="154.3" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="157.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (9 samples, 0.04%)</title><rect x="154.8" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="157.8" y="686.0"></text>
</g>
<g>
<title>__memset_avx2 (10 samples, 0.04%)</title><rect x="155.5" y="675.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="158.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (890 samples, 3.79%)</title><rect x="156.5" y="739.0" width="44.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.5" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (71 samples, 0.30%)</title><rect x="158.0" y="723.0" width="3.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="161.0" y="734.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (12 samples, 0.05%)</title><rect x="159.6" y="707.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="162.6" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (28 samples, 0.12%)</title><rect x="160.2" y="707.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="163.2" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (9 samples, 0.04%)</title><rect x="161.1" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="164.1" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (12 samples, 0.05%)</title><rect x="161.6" y="723.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="164.6" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (17 samples, 0.07%)</title><rect x="162.2" y="723.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="165.2" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.03%)</title><rect x="163.0" y="723.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="166.0" y="734.0"></text>
</g>
<g>
<title>recv (751 samples, 3.20%)</title><rect x="163.4" y="723.0" width="37.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="166.4" y="734.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (615 samples, 2.62%)</title><rect x="170.0" y="707.0" width="30.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="173.0" y="718.0">en..</text>
</g>
<g>
<title>do_syscall_64 (610 samples, 2.60%)</title><rect x="170.0" y="691.0" width="30.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="173.0" y="702.0">do..</text>
</g>
<g>
<title>SYSC_recvfrom (5 samples, 0.02%)</title><rect x="172.4" y="675.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="175.4" y="686.0"></text>
</g>
<g>
<title>sys_recvfrom (557 samples, 2.37%)</title><rect x="172.6" y="675.0" width="28.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="175.6" y="686.0">s..</text>
</g>
<g>
<title>SYSC_recvfrom (539 samples, 2.29%)</title><rect x="172.6" y="659.0" width="27.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="175.6" y="670.0">S..</text>
</g>
<g>
<title>sock_recvmsg (485 samples, 2.06%)</title><rect x="174.0" y="643.0" width="24.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="177.0" y="654.0">s..</text>
</g>
<g>
<title>inet_recvmsg (459 samples, 1.95%)</title><rect x="174.1" y="627.0" width="23.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="177.1" y="638.0">i..</text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.03%)</title><rect x="175.0" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="178.0" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (434 samples, 1.85%)</title><rect x="175.3" y="611.0" width="21.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="178.3" y="622.0">t..</text>
</g>
<g>
<title>__kfree_skb (87 samples, 0.37%)</title><rect x="179.1" y="595.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.1" y="606.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.03%)</title><rect x="179.2" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.2" y="590.0"></text>
</g>
<g>
<title>skb_release_all (71 samples, 0.30%)</title><rect x="179.6" y="579.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="182.6" y="590.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 0.08%)</title><rect x="179.8" y="563.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="182.8" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (9 samples, 0.04%)</title><rect x="180.7" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="183.7" y="574.0"></text>
</g>
<g>
<title>sock_rfree (39 samples, 0.17%)</title><rect x="181.2" y="563.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="184.2" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.02%)</title><rect x="183.2" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="186.2" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (13 samples, 0.06%)</title><rect x="183.6" y="595.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="186.6" y="606.0"></text>
</g>
<g>
<title>release_sock (10 samples, 0.04%)</title><rect x="184.6" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="187.6" y="606.0"></text>
</g>
<g>
<title>sk_wait_data (86 samples, 0.37%)</title><rect x="185.2" y="595.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="188.2" y="606.0"></text>
</g>
<g>
<title>add_wait_queue (13 samples, 0.06%)</title><rect x="185.7" y="579.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="188.7" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.05%)</title><rect x="185.7" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="188.7" y="574.0"></text>
</g>
<g>
<title>wait_woken (55 samples, 0.23%)</title><rect x="186.7" y="579.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="189.7" y="590.0"></text>
</g>
<g>
<title>schedule_timeout (49 samples, 0.21%)</title><rect x="187.0" y="563.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="190.0" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (33 samples, 0.14%)</title><rect x="187.2" y="547.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="190.2" y="558.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.05%)</title><rect x="188.9" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="191.9" y="558.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.04%)</title><rect x="189.0" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="192.0" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (69 samples, 0.29%)</title><rect x="189.5" y="595.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="192.5" y="606.0"></text>
</g>
<g>
<title>__check_object_size (16 samples, 0.07%)</title><rect x="189.6" y="579.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="192.6" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.02%)</title><rect x="190.2" y="563.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.2" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (44 samples, 0.19%)</title><rect x="190.4" y="579.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="193.4" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (35 samples, 0.15%)</title><rect x="190.7" y="563.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="193.7" y="574.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.02%)</title><rect x="192.7" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="195.7" y="590.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.04%)</title><rect x="193.0" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="196.0" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (39 samples, 0.17%)</title><rect x="193.4" y="595.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="196.4" y="606.0"></text>
</g>
<g>
<title>__tcp_select_window (5 samples, 0.02%)</title><rect x="195.0" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="198.0" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (21 samples, 0.09%)</title><rect x="195.4" y="595.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="198.4" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (9 samples, 0.04%)</title><rect x="196.4" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="199.4" y="606.0"></text>
</g>
<g>
<title>wait_woken (5 samples, 0.02%)</title><rect x="196.9" y="595.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="199.9" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (20 samples, 0.09%)</title><rect x="197.1" y="627.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="200.1" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (16 samples, 0.07%)</title><rect x="197.3" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="200.3" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (14 samples, 0.06%)</title><rect x="197.4" y="595.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="200.4" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (12 samples, 0.05%)</title><rect x="197.5" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="200.5" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (27 samples, 0.11%)</title><rect x="198.3" y="643.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="201.3" y="654.0"></text>
</g>
<g>
<title>__fdget (21 samples, 0.09%)</title><rect x="198.3" y="627.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="201.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (21 samples, 0.09%)</title><rect x="198.3" y="611.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="201.3" y="622.0"></text>
</g>
<g>
<title>__fget (21 samples, 0.09%)</title><rect x="198.3" y="595.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="201.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="199.4" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="202.4" y="638.0"></text>
</g>
<g>
<title>fput (17 samples, 0.07%)</title><rect x="199.7" y="659.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="202.7" y="670.0"></text>
</g>
<g>
<title>sys_recvfrom (5 samples, 0.02%)</title><rect x="200.6" y="691.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="203.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.02%)</title><rect x="200.8" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="203.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.02%)</title><rect x="200.8" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="203.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.02%)</title><rect x="200.8" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="203.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (264 samples, 1.12%)</title><rect x="201.3" y="755.0" width="13.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (17 samples, 0.07%)</title><rect x="202.3" y="739.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (17 samples, 0.07%)</title><rect x="202.3" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.06%)</title><rect x="202.5" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (11 samples, 0.05%)</title><rect x="202.5" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (11 samples, 0.05%)</title><rect x="202.5" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.5" y="686.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (10 samples, 0.04%)</title><rect x="202.6" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (6 samples, 0.03%)</title><rect x="203.1" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.06%)</title><rect x="203.4" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.05%)</title><rect x="203.6" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.04%)</title><rect x="203.6" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.6" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.03%)</title><rect x="203.8" y="691.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="206.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (125 samples, 0.53%)</title><rect x="204.1" y="739.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.03%)</title><rect x="205.0" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (100 samples, 0.43%)</title><rect x="205.4" y="723.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (100 samples, 0.43%)</title><rect x="205.4" y="707.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.08%)</title><rect x="209.0" y="691.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.07%)</title><rect x="209.0" y="675.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.07%)</title><rect x="209.1" y="659.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.1" y="670.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (6 samples, 0.03%)</title><rect x="209.9" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.10%)</title><rect x="210.4" y="739.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (7 samples, 0.03%)</title><rect x="211.5" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (41 samples, 0.17%)</title><rect x="211.9" y="739.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.03%)</title><rect x="212.6" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.06%)</title><rect x="212.9" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.06%)</title><rect x="213.0" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.03%)</title><rect x="213.6" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.03%)</title><rect x="213.7" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (5 samples, 0.02%)</title><rect x="214.0" y="739.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.03%)</title><rect x="214.2" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (189 samples, 0.80%)</title><rect x="214.5" y="755.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (138 samples, 0.59%)</title><rect x="216.2" y="739.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (18 samples, 0.08%)</title><rect x="216.9" y="723.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.9" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (13 samples, 0.06%)</title><rect x="217.1" y="707.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="220.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (11 samples, 0.05%)</title><rect x="217.8" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="220.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (53 samples, 0.23%)</title><rect x="218.4" y="723.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.04%)</title><rect x="220.2" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (6 samples, 0.03%)</title><rect x="220.3" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.03%)</title><rect x="220.7" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="223.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (42 samples, 0.18%)</title><rect x="221.0" y="723.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (41 samples, 0.17%)</title><rect x="221.1" y="707.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (41 samples, 0.17%)</title><rect x="221.1" y="691.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.04%)</title><rect x="222.5" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="225.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (9 samples, 0.04%)</title><rect x="222.5" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (15 samples, 0.06%)</title><rect x="223.1" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (34 samples, 0.14%)</title><rect x="224.0" y="755.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.07%)</title><rect x="224.3" y="739.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.06%)</title><rect x="224.4" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.06%)</title><rect x="225.1" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.05%)</title><rect x="225.1" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.03%)</title><rect x="225.2" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (508 samples, 2.16%)</title><rect x="225.7" y="755.0" width="25.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.7" y="766.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (6 samples, 0.03%)</title><rect x="226.2" y="739.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="229.2" y="750.0"></text>
</g>
<g>
<title>__GI___setsockopt (492 samples, 2.09%)</title><rect x="226.5" y="739.0" width="24.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="229.5" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (273 samples, 1.16%)</title><rect x="237.3" y="723.0" width="13.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="240.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (269 samples, 1.14%)</title><rect x="237.4" y="707.0" width="13.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="240.4" y="718.0"></text>
</g>
<g>
<title>fput (9 samples, 0.04%)</title><rect x="241.1" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="244.1" y="702.0"></text>
</g>
<g>
<title>sys_setsockopt (180 samples, 0.77%)</title><rect x="241.8" y="691.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="244.8" y="702.0"></text>
</g>
<g>
<title>__get_user_4 (18 samples, 0.08%)</title><rect x="242.0" y="675.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="245.0" y="686.0"></text>
</g>
<g>
<title>security_socket_setsockopt (23 samples, 0.10%)</title><rect x="243.2" y="675.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="246.2" y="686.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (7 samples, 0.03%)</title><rect x="243.2" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="246.2" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (16 samples, 0.07%)</title><rect x="243.5" y="659.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="246.5" y="670.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (15 samples, 0.06%)</title><rect x="243.6" y="643.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="246.6" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.03%)</title><rect x="244.0" y="627.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="247.0" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (69 samples, 0.29%)</title><rect x="244.4" y="675.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="247.4" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (13 samples, 0.06%)</title><rect x="245.7" y="659.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="248.7" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.02%)</title><rect x="246.4" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="249.4" y="670.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.03%)</title><rect x="246.7" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="249.7" y="670.0"></text>
</g>
<g>
<title>sock_set_timeout (15 samples, 0.06%)</title><rect x="247.1" y="659.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="250.1" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (8 samples, 0.03%)</title><rect x="247.4" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="250.4" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (59 samples, 0.25%)</title><rect x="247.9" y="675.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="250.9" y="686.0"></text>
</g>
<g>
<title>__fdget (39 samples, 0.17%)</title><rect x="248.0" y="659.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="251.0" y="670.0"></text>
</g>
<g>
<title>__fget_light (39 samples, 0.17%)</title><rect x="248.0" y="643.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="251.0" y="654.0"></text>
</g>
<g>
<title>__fget (39 samples, 0.17%)</title><rect x="248.0" y="627.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="251.0" y="638.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.08%)</title><rect x="250.0" y="659.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2,787 samples, 11.86%)</title><rect x="251.2" y="755.0" width="140.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.2" y="766.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (66 samples, 0.28%)</title><rect x="252.3" y="739.0" width="3.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="255.3" y="750.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (16 samples, 0.07%)</title><rect x="253.4" y="723.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="256.4" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (26 samples, 0.11%)</title><rect x="254.2" y="723.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="257.2" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (8 samples, 0.03%)</title><rect x="254.4" y="707.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="257.4" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (11 samples, 0.05%)</title><rect x="254.9" y="707.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="257.9" y="718.0"></text>
</g>
<g>
<title>send (2,688 samples, 11.44%)</title><rect x="256.1" y="739.0" width="135.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="259.1" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,615 samples, 11.13%)</title><rect x="259.8" y="723.0" width="131.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="262.8" y="734.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (2,610 samples, 11.11%)</title><rect x="259.8" y="707.0" width="131.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="262.8" y="718.0">do_syscall_64</text>
</g>
<g>
<title>exit_to_usermode_loop (22 samples, 0.09%)</title><rect x="261.7" y="691.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.7" y="702.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.06%)</title><rect x="262.1" y="675.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="265.1" y="686.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.06%)</title><rect x="262.1" y="659.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="265.1" y="670.0"></text>
</g>
<g>
<title>sys_sendto (2,550 samples, 10.85%)</title><rect x="262.8" y="691.0" width="128.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="265.8" y="702.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (2,544 samples, 10.83%)</title><rect x="262.8" y="675.0" width="127.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.8" y="686.0">SYSC_sendto</text>
</g>
<g>
<title>inet_sendmsg (5 samples, 0.02%)</title><rect x="263.2" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="266.2" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (2,518 samples, 10.72%)</title><rect x="263.6" y="659.0" width="126.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="266.6" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (2,491 samples, 10.60%)</title><rect x="263.8" y="643.0" width="125.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="266.8" y="654.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (2,478 samples, 10.55%)</title><rect x="264.2" y="627.0" width="124.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="267.2" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (11 samples, 0.05%)</title><rect x="264.4" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="267.4" y="622.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.03%)</title><rect x="265.0" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="268.0" y="622.0"></text>
</g>
<g>
<title>sock_zerocopy_put (5 samples, 0.02%)</title><rect x="265.5" y="611.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="268.5" y="622.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 0.03%)</title><rect x="265.7" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="268.7" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (8 samples, 0.03%)</title><rect x="266.0" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="269.0" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2,427 samples, 10.33%)</title><rect x="266.4" y="611.0" width="121.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="269.4" y="622.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (14 samples, 0.06%)</title><rect x="267.7" y="595.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="270.7" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (10 samples, 0.04%)</title><rect x="267.9" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="270.9" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (20 samples, 0.09%)</title><rect x="268.6" y="595.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="271.6" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.04%)</title><rect x="268.9" y="579.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="271.9" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (85 samples, 0.36%)</title><rect x="269.8" y="595.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="272.8" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (75 samples, 0.32%)</title><rect x="270.0" y="579.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="273.0" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (33 samples, 0.14%)</title><rect x="270.6" y="563.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (26 samples, 0.11%)</title><rect x="270.6" y="547.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="273.6" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (14 samples, 0.06%)</title><rect x="271.2" y="531.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="274.2" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (5 samples, 0.02%)</title><rect x="272.0" y="547.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.0" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (21 samples, 0.09%)</title><rect x="272.2" y="563.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="275.2" y="574.0"></text>
</g>
<g>
<title>ksize (9 samples, 0.04%)</title><rect x="273.3" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="276.3" y="574.0"></text>
</g>
<g>
<title>skb_entail (12 samples, 0.05%)</title><rect x="274.1" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="277.1" y="606.0"></text>
</g>
<g>
<title>tcp_push (2,218 samples, 9.44%)</title><rect x="274.8" y="595.0" width="111.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="277.8" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (2,211 samples, 9.41%)</title><rect x="275.0" y="579.0" width="111.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="278.0" y="590.0">__tcp_push_pe..</text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 0.02%)</title><rect x="275.0" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="278.0" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (2,195 samples, 9.34%)</title><rect x="275.8" y="563.0" width="110.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="278.8" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (2,107 samples, 8.97%)</title><rect x="277.0" y="547.0" width="105.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.0" y="558.0">__tcp_transmi..</text>
</g>
<g>
<title>ip_queue_xmit (2,002 samples, 8.52%)</title><rect x="280.6" y="531.0" width="100.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="283.6" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.02%)</title><rect x="281.2" y="515.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="284.2" y="526.0"></text>
</g>
<g>
<title>ip_local_out (1,972 samples, 8.39%)</title><rect x="281.6" y="515.0" width="99.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="284.6" y="526.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (388 samples, 1.65%)</title><rect x="281.7" y="499.0" width="19.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="284.7" y="510.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.03%)</title><rect x="282.0" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="285.0" y="494.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (5 samples, 0.02%)</title><rect x="282.3" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="285.3" y="494.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (6 samples, 0.03%)</title><rect x="282.6" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="285.6" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (21 samples, 0.09%)</title><rect x="282.9" y="483.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="285.9" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (5 samples, 0.02%)</title><rect x="283.9" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="286.9" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (338 samples, 1.44%)</title><rect x="284.2" y="483.0" width="16.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="287.2" y="494.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.03%)</title><rect x="284.5" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="287.5" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (48 samples, 0.20%)</title><rect x="284.8" y="467.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="287.8" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (34 samples, 0.14%)</title><rect x="285.5" y="451.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="288.5" y="462.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (27 samples, 0.11%)</title><rect x="287.2" y="467.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.2" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (20 samples, 0.09%)</title><rect x="287.6" y="451.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="290.6" y="462.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (14 samples, 0.06%)</title><rect x="288.6" y="467.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="291.6" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (14 samples, 0.06%)</title><rect x="288.6" y="451.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="291.6" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (9 samples, 0.04%)</title><rect x="288.7" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="291.7" y="446.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (6 samples, 0.03%)</title><rect x="288.8" y="419.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="291.8" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (227 samples, 0.97%)</title><rect x="289.3" y="467.0" width="11.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="292.3" y="478.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (7 samples, 0.03%)</title><rect x="289.5" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="292.5" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (191 samples, 0.81%)</title><rect x="290.0" y="451.0" width="9.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="293.0" y="462.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (39 samples, 0.17%)</title><rect x="291.8" y="435.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="294.8" y="446.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (7 samples, 0.03%)</title><rect x="293.7" y="435.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="296.7" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.02%)</title><rect x="294.1" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="297.1" y="446.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (10 samples, 0.04%)</title><rect x="294.4" y="435.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="297.4" y="446.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (8 samples, 0.03%)</title><rect x="295.0" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="298.0" y="446.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (9 samples, 0.04%)</title><rect x="295.4" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="298.4" y="446.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (66 samples, 0.28%)</title><rect x="295.9" y="435.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="298.9" y="446.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (5 samples, 0.02%)</title><rect x="297.2" y="419.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="300.2" y="430.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (33 samples, 0.14%)</title><rect x="297.5" y="419.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="300.5" y="430.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (8 samples, 0.03%)</title><rect x="299.2" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="302.2" y="446.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (12 samples, 0.05%)</title><rect x="300.1" y="451.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="303.1" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (5 samples, 0.02%)</title><rect x="300.9" y="467.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="303.9" y="478.0"></text>
</g>
<g>
<title>ip_output (1,569 samples, 6.68%)</title><rect x="301.3" y="499.0" width="78.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="304.3" y="510.0">ip_output</text>
</g>
<g>
<title>__indirect_thunk_start (6 samples, 0.03%)</title><rect x="301.7" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="304.7" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (1,492 samples, 6.35%)</title><rect x="302.1" y="483.0" width="74.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="305.1" y="494.0">ip_finis..</text>
</g>
<g>
<title>ip_finish_output2 (1,480 samples, 6.30%)</title><rect x="302.7" y="467.0" width="74.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="305.7" y="478.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (1,352 samples, 5.75%)</title><rect x="304.5" y="451.0" width="67.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="307.5" y="462.0">__local..</text>
</g>
<g>
<title>do_softirq.part.17 (1,348 samples, 5.74%)</title><rect x="304.7" y="435.0" width="67.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="307.7" y="446.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (1,344 samples, 5.72%)</title><rect x="304.9" y="419.0" width="67.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="307.9" y="430.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (1,342 samples, 5.71%)</title><rect x="304.9" y="403.0" width="67.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="307.9" y="414.0">__softi..</text>
</g>
<g>
<title>__kfree_skb_flush (5 samples, 0.02%)</title><rect x="306.0" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="309.0" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1,298 samples, 5.52%)</title><rect x="306.5" y="387.0" width="65.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="309.5" y="398.0">net_rx_..</text>
</g>
<g>
<title>__kfree_skb_flush (6 samples, 0.03%)</title><rect x="307.3" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="310.3" y="382.0"></text>
</g>
<g>
<title>process_backlog (1,271 samples, 5.41%)</title><rect x="307.8" y="371.0" width="63.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="310.8" y="382.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (1,248 samples, 5.31%)</title><rect x="308.7" y="355.0" width="62.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="311.7" y="366.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (1,242 samples, 5.29%)</title><rect x="308.7" y="339.0" width="62.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="311.7" y="350.0">__neti..</text>
</g>
<g>
<title>ip_rcv (1,192 samples, 5.07%)</title><rect x="310.6" y="323.0" width="59.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="313.6" y="334.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (7 samples, 0.03%)</title><rect x="311.4" y="307.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="314.4" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (1,107 samples, 4.71%)</title><rect x="311.8" y="307.0" width="55.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="314.8" y="318.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (1,095 samples, 4.66%)</title><rect x="312.1" y="291.0" width="55.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="315.1" y="302.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (1,014 samples, 4.32%)</title><rect x="312.5" y="275.0" width="51.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="315.5" y="286.0">ip_lo..</text>
</g>
<g>
<title>_raw_spin_lock (6 samples, 0.03%)</title><rect x="313.1" y="259.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="316.1" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (989 samples, 4.21%)</title><rect x="313.8" y="259.0" width="49.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="316.8" y="270.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (30 samples, 0.13%)</title><rect x="315.1" y="243.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="318.1" y="254.0"></text>
</g>
<g>
<title>inet_ehashfn (6 samples, 0.03%)</title><rect x="316.3" y="227.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="319.3" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (14 samples, 0.06%)</title><rect x="316.9" y="243.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="319.9" y="254.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (7 samples, 0.03%)</title><rect x="317.0" y="227.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="320.0" y="238.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.02%)</title><rect x="317.4" y="227.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="320.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (905 samples, 3.85%)</title><rect x="317.7" y="243.0" width="45.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="320.7" y="254.0">tcp_..</text>
</g>
<g>
<title>tcp_check_space (7 samples, 0.03%)</title><rect x="318.1" y="227.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="321.1" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (889 samples, 3.78%)</title><rect x="318.5" y="227.0" width="44.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="321.5" y="238.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (13 samples, 0.06%)</title><rect x="319.3" y="211.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="322.3" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (12 samples, 0.05%)</title><rect x="319.4" y="195.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="322.4" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.03%)</title><rect x="319.6" y="179.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="322.6" y="190.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.03%)</title><rect x="319.6" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="322.6" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (7 samples, 0.03%)</title><rect x="320.0" y="211.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="323.0" y="222.0"></text>
</g>
<g>
<title>dst_release (8 samples, 0.03%)</title><rect x="320.3" y="211.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="323.3" y="222.0"></text>
</g>
<g>
<title>sched_clock_cpu (7 samples, 0.03%)</title><rect x="320.9" y="211.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="323.9" y="222.0"></text>
</g>
<g>
<title>sched_clock (6 samples, 0.03%)</title><rect x="320.9" y="195.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="323.9" y="206.0"></text>
</g>
<g>
<title>native_sched_clock (6 samples, 0.03%)</title><rect x="320.9" y="179.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="323.9" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.05%)</title><rect x="321.3" y="211.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="324.3" y="222.0"></text>
</g>
<g>
<title>tcp_ack (242 samples, 1.03%)</title><rect x="321.9" y="211.0" width="12.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="324.9" y="222.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (7 samples, 0.03%)</title><rect x="324.4" y="195.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="327.4" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (163 samples, 0.69%)</title><rect x="325.2" y="195.0" width="8.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="328.2" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (89 samples, 0.38%)</title><rect x="326.6" y="179.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="329.6" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (23 samples, 0.10%)</title><rect x="326.6" y="163.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="329.6" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (21 samples, 0.09%)</title><rect x="326.7" y="147.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="329.7" y="158.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.03%)</title><rect x="327.4" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="330.4" y="142.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (5 samples, 0.02%)</title><rect x="327.4" y="115.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="330.4" y="126.0"></text>
</g>
<g>
<title>skb_release_all (60 samples, 0.26%)</title><rect x="327.8" y="163.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="330.8" y="174.0"></text>
</g>
<g>
<title>skb_release_data (57 samples, 0.24%)</title><rect x="327.8" y="147.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="330.8" y="158.0"></text>
</g>
<g>
<title>skb_free_head (34 samples, 0.14%)</title><rect x="328.9" y="131.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="331.9" y="142.0"></text>
</g>
<g>
<title>kfree (34 samples, 0.14%)</title><rect x="328.9" y="115.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="331.9" y="126.0"></text>
</g>
<g>
<title>__slab_free (13 samples, 0.06%)</title><rect x="329.9" y="99.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="332.9" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (29 samples, 0.12%)</title><rect x="331.5" y="179.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="334.5" y="190.0"></text>
</g>
<g>
<title>minmax_running_min (5 samples, 0.02%)</title><rect x="332.5" y="163.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="335.5" y="174.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (5 samples, 0.02%)</title><rect x="333.1" y="179.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.1" y="190.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (7 samples, 0.03%)</title><rect x="333.7" y="195.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="336.7" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (558 samples, 2.37%)</title><rect x="334.2" y="211.0" width="28.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="337.2" y="222.0">tc..</text>
</g>
<g>
<title>dst_release (8 samples, 0.03%)</title><rect x="335.1" y="195.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="338.1" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (518 samples, 2.20%)</title><rect x="335.5" y="195.0" width="26.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="338.5" y="206.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (505 samples, 2.15%)</title><rect x="336.2" y="179.0" width="25.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="339.2" y="190.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (502 samples, 2.14%)</title><rect x="336.4" y="163.0" width="25.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="339.4" y="174.0">_..</text>
</g>
<g>
<title>__lock_text_start (502 samples, 2.14%)</title><rect x="336.4" y="147.0" width="25.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="339.4" y="158.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (7 samples, 0.03%)</title><rect x="361.6" y="195.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="364.6" y="206.0"></text>
</g>
<g>
<title>tcp_queue_rcv (7 samples, 0.03%)</title><rect x="361.9" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="364.9" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (50 samples, 0.21%)</title><rect x="364.3" y="275.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="367.3" y="286.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (24 samples, 0.10%)</title><rect x="364.4" y="259.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="367.4" y="270.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (24 samples, 0.10%)</title><rect x="364.4" y="243.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="367.4" y="254.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (14 samples, 0.06%)</title><rect x="365.6" y="259.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="368.6" y="270.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (11 samples, 0.05%)</title><rect x="365.7" y="243.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="368.7" y="254.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (5 samples, 0.02%)</title><rect x="366.4" y="259.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="369.4" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.02%)</title><rect x="366.8" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="369.8" y="286.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (8 samples, 0.03%)</title><rect x="367.4" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="370.4" y="318.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (5 samples, 0.02%)</title><rect x="367.9" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="370.9" y="318.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (7 samples, 0.03%)</title><rect x="368.2" y="307.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.2" y="318.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (5 samples, 0.02%)</title><rect x="368.5" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="371.5" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (34 samples, 0.14%)</title><rect x="368.8" y="307.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="371.8" y="318.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (8 samples, 0.03%)</title><rect x="368.9" y="291.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="371.9" y="302.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (8 samples, 0.03%)</title><rect x="368.9" y="275.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="371.9" y="286.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (10 samples, 0.04%)</title><rect x="369.3" y="291.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="372.3" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (9 samples, 0.04%)</title><rect x="369.4" y="275.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="372.4" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (7 samples, 0.03%)</title><rect x="369.5" y="259.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="372.5" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (10 samples, 0.04%)</title><rect x="369.9" y="291.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="372.9" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (10 samples, 0.04%)</title><rect x="369.9" y="275.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="372.9" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.03%)</title><rect x="370.7" y="323.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="373.7" y="334.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.02%)</title><rect x="371.1" y="339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="374.1" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.03%)</title><rect x="371.4" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="374.4" y="366.0"></text>
</g>
<g>
<title>process_backlog (7 samples, 0.03%)</title><rect x="371.7" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="374.7" y="398.0"></text>
</g>
<g>
<title>rcu_bh_qs (6 samples, 0.03%)</title><rect x="372.0" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.0" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (90 samples, 0.38%)</title><rect x="372.4" y="451.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="375.4" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (88 samples, 0.37%)</title><rect x="372.4" y="435.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="375.4" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (48 samples, 0.20%)</title><rect x="373.7" y="419.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="376.7" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (31 samples, 0.13%)</title><rect x="374.1" y="403.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="377.1" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.02%)</title><rect x="374.4" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="377.4" y="398.0"></text>
</g>
<g>
<title>netif_rx (13 samples, 0.06%)</title><rect x="374.7" y="387.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="377.7" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (12 samples, 0.05%)</title><rect x="374.7" y="371.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="377.7" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (12 samples, 0.05%)</title><rect x="374.7" y="355.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="377.7" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.02%)</title><rect x="375.4" y="387.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="378.4" y="398.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (6 samples, 0.03%)</title><rect x="375.6" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="378.6" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.03%)</title><rect x="376.3" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="379.3" y="430.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (5 samples, 0.02%)</title><rect x="377.3" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="380.3" y="494.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (7 samples, 0.03%)</title><rect x="377.6" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="380.6" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (42 samples, 0.18%)</title><rect x="378.0" y="483.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="381.0" y="494.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (17 samples, 0.07%)</title><rect x="378.2" y="467.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="381.2" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (17 samples, 0.07%)</title><rect x="378.2" y="451.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.2" y="462.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (6 samples, 0.03%)</title><rect x="379.1" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.1" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (5 samples, 0.02%)</title><rect x="379.4" y="467.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="382.4" y="478.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (5 samples, 0.02%)</title><rect x="379.4" y="451.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="382.4" y="462.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (7 samples, 0.03%)</title><rect x="379.6" y="467.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="382.6" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.03%)</title><rect x="380.2" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="383.2" y="510.0"></text>
</g>
<g>
<title>ip_output (8 samples, 0.03%)</title><rect x="380.6" y="515.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="383.6" y="526.0"></text>
</g>
<g>
<title>skb_clone (21 samples, 0.09%)</title><rect x="381.1" y="531.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="384.1" y="542.0"></text>
</g>
<g>
<title>__skb_clone (15 samples, 0.06%)</title><rect x="381.4" y="515.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="384.4" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (5 samples, 0.02%)</title><rect x="382.3" y="531.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="385.3" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (5 samples, 0.02%)</title><rect x="382.9" y="547.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="385.9" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 0.03%)</title><rect x="383.1" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="386.1" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.07%)</title><rect x="383.8" y="547.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="386.8" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.03%)</title><rect x="384.3" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="387.3" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (6 samples, 0.03%)</title><rect x="384.3" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="387.3" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.02%)</title><rect x="384.4" y="499.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.4" y="510.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.02%)</title><rect x="384.4" y="483.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.4" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.03%)</title><rect x="385.2" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="388.2" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (8 samples, 0.03%)</title><rect x="385.6" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="388.6" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (36 samples, 0.15%)</title><rect x="386.4" y="595.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="389.4" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (8 samples, 0.03%)</title><rect x="386.6" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="389.6" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (24 samples, 0.10%)</title><rect x="387.0" y="579.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="390.0" y="590.0"></text>
</g>
<g>
<title>tcp_established_options (9 samples, 0.04%)</title><rect x="387.6" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="390.6" y="574.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (5 samples, 0.02%)</title><rect x="387.8" y="547.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="390.8" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (5 samples, 0.02%)</title><rect x="388.6" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="391.6" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (16 samples, 0.07%)</title><rect x="388.9" y="643.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="391.9" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.02%)</title><rect x="389.0" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="392.0" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.03%)</title><rect x="389.3" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="392.3" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.03%)</title><rect x="389.3" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="392.3" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (8 samples, 0.03%)</title><rect x="389.7" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="392.7" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.04%)</title><rect x="390.1" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="393.1" y="670.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.03%)</title><rect x="390.1" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="393.1" y="654.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="390.1" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="393.1" y="638.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.03%)</title><rect x="390.1" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="393.1" y="622.0"></text>
</g>
<g>
<title>sys_sendto (5 samples, 0.02%)</title><rect x="390.9" y="707.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="393.9" y="718.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (18 samples, 0.08%)</title><rect x="391.2" y="755.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.2" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.05%)</title><rect x="391.4" y="739.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="394.4" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (12 samples, 0.05%)</title><rect x="391.4" y="723.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="394.4" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.05%)</title><rect x="391.4" y="707.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="394.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (11 samples, 0.05%)</title><rect x="391.4" y="691.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="394.4" y="702.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (24 samples, 0.10%)</title><rect x="392.1" y="755.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.1" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.06%)</title><rect x="392.5" y="739.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="395.5" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 0.06%)</title><rect x="392.5" y="723.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="395.5" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (14 samples, 0.06%)</title><rect x="392.5" y="707.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="395.5" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (13 samples, 0.06%)</title><rect x="392.5" y="691.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="395.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (6 samples, 0.03%)</title><rect x="393.3" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (5 samples, 0.02%)</title><rect x="393.4" y="771.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.proxyRequest (3,820 samples, 16.26%)</title><rect x="393.7" y="803.0" width="191.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.7" y="814.0">ru/mail/polis/service/kat..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3,799 samples, 16.17%)</title><rect x="394.1" y="787.0" width="190.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.1" y="798.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>gettimeofday (11 samples, 0.05%)</title><rect x="394.8" y="771.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="397.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (13 samples, 0.06%)</title><rect x="395.4" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.05%)</title><rect x="395.4" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.03%)</title><rect x="395.5" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,575 samples, 15.22%)</title><rect x="396.1" y="771.0" width="179.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.1" y="782.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (107 samples, 0.46%)</title><rect x="397.1" y="755.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (80 samples, 0.34%)</title><rect x="398.4" y="739.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (12 samples, 0.05%)</title><rect x="398.5" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.5" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.03%)</title><rect x="398.8" y="707.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="401.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (17 samples, 0.07%)</title><rect x="399.1" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (24 samples, 0.10%)</title><rect x="400.0" y="723.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="403.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (24 samples, 0.10%)</title><rect x="401.2" y="723.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (24 samples, 0.10%)</title><rect x="401.2" y="707.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (24 samples, 0.10%)</title><rect x="401.2" y="691.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3,447 samples, 14.67%)</title><rect x="402.5" y="755.0" width="173.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="405.5" y="766.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (3,440 samples, 14.64%)</title><rect x="402.8" y="739.0" width="172.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.8" y="750.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3,425 samples, 14.58%)</title><rect x="403.6" y="723.0" width="172.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.6" y="734.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3,425 samples, 14.58%)</title><rect x="403.6" y="707.0" width="172.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.6" y="718.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (52 samples, 0.22%)</title><rect x="404.8" y="691.0" width="2.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="407.8" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (5 samples, 0.02%)</title><rect x="406.1" y="675.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="409.1" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (16 samples, 0.07%)</title><rect x="406.3" y="675.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="409.3" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (7 samples, 0.03%)</title><rect x="406.8" y="659.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="409.8" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.02%)</title><rect x="407.4" y="691.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="410.4" y="702.0"></text>
</g>
<g>
<title>send (3,337 samples, 14.20%)</title><rect x="407.9" y="691.0" width="167.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="410.9" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3,248 samples, 13.82%)</title><rect x="412.2" y="675.0" width="163.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="415.2" y="686.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>do_syscall_64 (3,244 samples, 13.81%)</title><rect x="412.3" y="659.0" width="162.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="415.3" y="670.0">do_syscall_64</text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.04%)</title><rect x="415.4" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="418.4" y="654.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.02%)</title><rect x="415.6" y="627.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="418.6" y="638.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.02%)</title><rect x="415.6" y="611.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="418.6" y="622.0"></text>
</g>
<g>
<title>sys_sendto (3,171 samples, 13.50%)</title><rect x="416.0" y="643.0" width="159.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="419.0" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (3,154 samples, 13.42%)</title><rect x="416.0" y="627.0" width="158.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="419.0" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>sock_sendmsg (3,085 samples, 13.13%)</title><rect x="417.0" y="611.0" width="154.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="420.0" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (3,056 samples, 13.01%)</title><rect x="417.0" y="595.0" width="153.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="420.0" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (3,049 samples, 12.98%)</title><rect x="417.3" y="579.0" width="153.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="420.3" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.04%)</title><rect x="417.6" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="420.6" y="574.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.03%)</title><rect x="418.3" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="421.3" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.03%)</title><rect x="418.6" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="421.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3,000 samples, 12.77%)</title><rect x="419.2" y="563.0" width="150.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="422.2" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (15 samples, 0.06%)</title><rect x="421.6" y="547.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="424.6" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (12 samples, 0.05%)</title><rect x="421.7" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.7" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.03%)</title><rect x="422.6" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="425.6" y="558.0"></text>
</g>
<g>
<title>check_stack_object (5 samples, 0.02%)</title><rect x="423.0" y="547.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="426.0" y="558.0"></text>
</g>
<g>
<title>copyin (6 samples, 0.03%)</title><rect x="423.2" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="426.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (115 samples, 0.49%)</title><rect x="423.6" y="547.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="426.6" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (96 samples, 0.41%)</title><rect x="424.3" y="531.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="427.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (54 samples, 0.23%)</title><rect x="425.2" y="515.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="428.2" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (38 samples, 0.16%)</title><rect x="425.2" y="499.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="428.2" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (21 samples, 0.09%)</title><rect x="426.1" y="483.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="429.1" y="494.0"></text>
</g>
<g>
<title>kmalloc_slab (12 samples, 0.05%)</title><rect x="427.3" y="499.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="430.3" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (16 samples, 0.07%)</title><rect x="427.9" y="515.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.9" y="526.0"></text>
</g>
<g>
<title>ksize (8 samples, 0.03%)</title><rect x="428.7" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="431.7" y="526.0"></text>
</g>
<g>
<title>skb_entail (13 samples, 0.06%)</title><rect x="429.4" y="547.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="432.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (2,724 samples, 11.59%)</title><rect x="430.2" y="547.0" width="136.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="433.2" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (2,716 samples, 11.56%)</title><rect x="430.4" y="531.0" width="136.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="433.4" y="542.0">__tcp_push_pendin..</text>
</g>
<g>
<title>tcp_write_xmit (2,699 samples, 11.49%)</title><rect x="431.3" y="515.0" width="135.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="434.3" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (2,594 samples, 11.04%)</title><rect x="432.8" y="499.0" width="130.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="435.8" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (5 samples, 0.02%)</title><rect x="435.7" y="483.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="438.7" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (2,494 samples, 10.62%)</title><rect x="436.4" y="483.0" width="125.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="439.4" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (7 samples, 0.03%)</title><rect x="437.0" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.0" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.02%)</title><rect x="437.1" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="440.1" y="462.0"></text>
</g>
<g>
<title>ip_local_out (2,466 samples, 10.50%)</title><rect x="437.4" y="467.0" width="123.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="440.4" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (482 samples, 2.05%)</title><rect x="437.7" y="451.0" width="24.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="440.7" y="462.0">_..</text>
</g>
<g>
<title>ip_send_check (6 samples, 0.03%)</title><rect x="438.1" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="441.1" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (10 samples, 0.04%)</title><rect x="438.4" y="435.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="441.4" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (6 samples, 0.03%)</title><rect x="438.9" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.9" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (10 samples, 0.04%)</title><rect x="439.2" y="435.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="442.2" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (20 samples, 0.09%)</title><rect x="439.7" y="435.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="442.7" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (10 samples, 0.04%)</title><rect x="440.7" y="435.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="443.7" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (413 samples, 1.76%)</title><rect x="441.2" y="435.0" width="20.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="444.2" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (39 samples, 0.17%)</title><rect x="441.6" y="419.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="444.6" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (33 samples, 0.14%)</title><rect x="441.9" y="403.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.9" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (34 samples, 0.14%)</title><rect x="443.6" y="419.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="446.6" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (27 samples, 0.11%)</title><rect x="443.9" y="403.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="446.9" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (21 samples, 0.09%)</title><rect x="445.3" y="419.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="448.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (19 samples, 0.08%)</title><rect x="445.4" y="403.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="448.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (5 samples, 0.02%)</title><rect x="445.6" y="387.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="448.6" y="398.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (10 samples, 0.04%)</title><rect x="445.8" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.8" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (301 samples, 1.28%)</title><rect x="446.3" y="419.0" width="15.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="449.3" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (5 samples, 0.02%)</title><rect x="446.6" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="449.6" y="414.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (5 samples, 0.02%)</title><rect x="447.2" y="403.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="450.2" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (249 samples, 1.06%)</title><rect x="447.4" y="403.0" width="12.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="450.4" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (45 samples, 0.19%)</title><rect x="449.2" y="387.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="452.2" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (8 samples, 0.03%)</title><rect x="451.4" y="387.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="454.4" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.03%)</title><rect x="451.8" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="454.8" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (7 samples, 0.03%)</title><rect x="452.1" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.1" y="398.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (6 samples, 0.03%)</title><rect x="452.5" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="455.5" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (12 samples, 0.05%)</title><rect x="452.9" y="387.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.9" y="398.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (8 samples, 0.03%)</title><rect x="453.0" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.0" y="382.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (8 samples, 0.03%)</title><rect x="453.5" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="456.5" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (107 samples, 0.46%)</title><rect x="454.0" y="387.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="457.0" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (13 samples, 0.06%)</title><rect x="456.0" y="371.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="459.0" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (7 samples, 0.03%)</title><rect x="456.8" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="459.8" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (45 samples, 0.19%)</title><rect x="457.1" y="371.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="460.1" y="382.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (11 samples, 0.05%)</title><rect x="459.4" y="387.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="462.4" y="398.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (10 samples, 0.04%)</title><rect x="460.1" y="403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="463.1" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (15 samples, 0.06%)</title><rect x="460.7" y="403.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="463.7" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.03%)</title><rect x="461.5" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="464.5" y="430.0"></text>
</g>
<g>
<title>ip_output (1,969 samples, 8.38%)</title><rect x="462.1" y="451.0" width="98.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="465.1" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.02%)</title><rect x="462.7" y="435.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.7" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (1,867 samples, 7.95%)</title><rect x="462.9" y="435.0" width="93.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.9" y="446.0">ip_finish_o..</text>
</g>
<g>
<title>ip_finish_output2 (1,856 samples, 7.90%)</title><rect x="463.3" y="419.0" width="93.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="466.3" y="430.0">ip_finish_o..</text>
</g>
<g>
<title>__local_bh_enable_ip (1,703 samples, 7.25%)</title><rect x="465.0" y="403.0" width="85.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="468.0" y="414.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.17 (1,698 samples, 7.23%)</title><rect x="465.2" y="387.0" width="85.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="468.2" y="398.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (1,691 samples, 7.20%)</title><rect x="465.6" y="371.0" width="84.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="468.6" y="382.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (1,681 samples, 7.15%)</title><rect x="465.6" y="355.0" width="84.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="468.6" y="366.0">__softirqe..</text>
</g>
<g>
<title>__kfree_skb_flush (5 samples, 0.02%)</title><rect x="467.1" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="470.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1,635 samples, 6.96%)</title><rect x="467.5" y="339.0" width="82.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="470.5" y="350.0">net_rx_ac..</text>
</g>
<g>
<title>__netif_receive_skb (9 samples, 0.04%)</title><rect x="468.3" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="471.3" y="334.0"></text>
</g>
<g>
<title>process_backlog (1,610 samples, 6.85%)</title><rect x="468.7" y="323.0" width="80.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="471.7" y="334.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb (1,586 samples, 6.75%)</title><rect x="469.8" y="307.0" width="79.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="472.8" y="318.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (1,577 samples, 6.71%)</title><rect x="470.0" y="291.0" width="79.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="473.0" y="302.0">__netif_r..</text>
</g>
<g>
<title>ip_rcv (1,534 samples, 6.53%)</title><rect x="471.7" y="275.0" width="77.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="474.7" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (7 samples, 0.03%)</title><rect x="473.0" y="259.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="476.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (1,421 samples, 6.05%)</title><rect x="473.3" y="259.0" width="71.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="476.3" y="270.0">ip_rcv_f..</text>
</g>
<g>
<title>ip_local_deliver (1,395 samples, 5.94%)</title><rect x="474.0" y="243.0" width="70.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="477.0" y="254.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (1,282 samples, 5.46%)</title><rect x="474.6" y="227.0" width="64.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.6" y="238.0">ip_loca..</text>
</g>
<g>
<title>_raw_spin_lock (8 samples, 0.03%)</title><rect x="475.6" y="211.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="478.6" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (10 samples, 0.04%)</title><rect x="476.0" y="211.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="479.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1,240 samples, 5.28%)</title><rect x="476.7" y="211.0" width="62.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="479.7" y="222.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (70 samples, 0.30%)</title><rect x="478.6" y="195.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="481.6" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (6 samples, 0.03%)</title><rect x="481.8" y="179.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="484.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (14 samples, 0.06%)</title><rect x="482.4" y="195.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="485.4" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (7 samples, 0.03%)</title><rect x="482.6" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="485.6" y="190.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (6 samples, 0.03%)</title><rect x="483.1" y="195.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="486.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1,104 samples, 4.70%)</title><rect x="483.5" y="195.0" width="55.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.5" y="206.0">tcp_v..</text>
</g>
<g>
<title>tcp_check_space (19 samples, 0.08%)</title><rect x="483.8" y="179.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="486.8" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.02%)</title><rect x="484.8" y="179.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1,073 samples, 4.57%)</title><rect x="485.0" y="179.0" width="53.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="488.0" y="190.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (21 samples, 0.09%)</title><rect x="486.2" y="163.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="489.2" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (19 samples, 0.08%)</title><rect x="486.3" y="147.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="489.3" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.06%)</title><rect x="486.5" y="131.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="489.5" y="142.0"></text>
</g>
<g>
<title>mod_timer (15 samples, 0.06%)</title><rect x="486.5" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="489.5" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.04%)</title><rect x="486.7" y="99.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="489.7" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (7 samples, 0.03%)</title><rect x="487.2" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="490.2" y="174.0"></text>
</g>
<g>
<title>sched_clock_cpu (6 samples, 0.03%)</title><rect x="488.0" y="163.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="491.0" y="174.0"></text>
</g>
<g>
<title>sched_clock (6 samples, 0.03%)</title><rect x="488.0" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="491.0" y="158.0"></text>
</g>
<g>
<title>native_sched_clock (6 samples, 0.03%)</title><rect x="488.0" y="131.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="491.0" y="142.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (5 samples, 0.02%)</title><rect x="488.3" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="491.3" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.03%)</title><rect x="488.6" y="163.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="491.6" y="174.0"></text>
</g>
<g>
<title>tcp_ack (314 samples, 1.34%)</title><rect x="488.9" y="163.0" width="15.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="491.9" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (6 samples, 0.03%)</title><rect x="492.0" y="147.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="495.0" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (7 samples, 0.03%)</title><rect x="492.3" y="147.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="495.3" y="158.0"></text>
</g>
<g>
<title>rb_erase (5 samples, 0.02%)</title><rect x="492.7" y="147.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="495.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (205 samples, 0.87%)</title><rect x="493.4" y="147.0" width="10.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="496.4" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (94 samples, 0.40%)</title><rect x="495.6" y="131.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.6" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (30 samples, 0.13%)</title><rect x="495.6" y="115.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="498.6" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (28 samples, 0.12%)</title><rect x="495.7" y="99.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="498.7" y="110.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.02%)</title><rect x="496.8" y="83.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="499.8" y="94.0"></text>
</g>
<g>
<title>skb_release_all (62 samples, 0.26%)</title><rect x="497.1" y="115.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="500.1" y="126.0"></text>
</g>
<g>
<title>skb_release_data (57 samples, 0.24%)</title><rect x="497.1" y="99.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="500.1" y="110.0"></text>
</g>
<g>
<title>skb_free_head (28 samples, 0.12%)</title><rect x="498.6" y="83.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="501.6" y="94.0"></text>
</g>
<g>
<title>kfree (26 samples, 0.11%)</title><rect x="498.7" y="67.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="501.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (11 samples, 0.05%)</title><rect x="499.4" y="51.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="502.4" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (9 samples, 0.04%)</title><rect x="500.3" y="131.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.3" y="142.0"></text>
</g>
<g>
<title>rb_erase (6 samples, 0.03%)</title><rect x="501.0" y="131.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="504.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (32 samples, 0.14%)</title><rect x="501.5" y="131.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="504.5" y="142.0"></text>
</g>
<g>
<title>minmax_running_min (7 samples, 0.03%)</title><rect x="502.6" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="505.6" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (5 samples, 0.02%)</title><rect x="503.1" y="131.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="506.1" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (11 samples, 0.05%)</title><rect x="504.1" y="147.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="507.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.03%)</title><rect x="504.7" y="163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="507.7" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (661 samples, 2.81%)</title><rect x="505.0" y="163.0" width="33.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="508.0" y="174.0">tc..</text>
</g>
<g>
<title>dst_release (6 samples, 0.03%)</title><rect x="505.7" y="147.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="508.7" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (629 samples, 2.68%)</title><rect x="506.0" y="147.0" width="31.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="509.0" y="158.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (607 samples, 2.58%)</title><rect x="507.1" y="131.0" width="30.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="510.1" y="142.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (606 samples, 2.58%)</title><rect x="507.1" y="115.0" width="30.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="510.1" y="126.0">__..</text>
</g>
<g>
<title>__lock_text_start (605 samples, 2.58%)</title><rect x="507.2" y="99.0" width="30.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="510.2" y="110.0">__..</text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.02%)</title><rect x="537.5" y="147.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="540.5" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (7 samples, 0.03%)</title><rect x="537.8" y="147.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="540.8" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (6 samples, 0.03%)</title><rect x="538.1" y="163.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="541.1" y="174.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (8 samples, 0.03%)</title><rect x="539.0" y="227.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="542.0" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (5 samples, 0.02%)</title><rect x="539.6" y="227.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="542.6" y="238.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (8 samples, 0.03%)</title><rect x="539.9" y="227.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="542.9" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (65 samples, 0.28%)</title><rect x="540.3" y="227.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="543.3" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (42 samples, 0.18%)</title><rect x="540.5" y="211.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="543.5" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (41 samples, 0.17%)</title><rect x="540.6" y="195.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="543.6" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (11 samples, 0.05%)</title><rect x="542.6" y="211.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="545.6" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.04%)</title><rect x="542.7" y="195.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="545.7" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (7 samples, 0.03%)</title><rect x="543.5" y="227.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="546.5" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 0.03%)</title><rect x="544.1" y="243.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="547.1" y="254.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (17 samples, 0.07%)</title><rect x="544.7" y="259.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="547.7" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (12 samples, 0.05%)</title><rect x="545.6" y="259.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.6" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (6 samples, 0.03%)</title><rect x="546.2" y="259.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="549.2" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (44 samples, 0.19%)</title><rect x="546.5" y="259.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="549.5" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (11 samples, 0.05%)</title><rect x="546.8" y="243.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="549.8" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (10 samples, 0.04%)</title><rect x="546.9" y="227.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="549.9" y="238.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (6 samples, 0.03%)</title><rect x="547.4" y="243.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="550.4" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (6 samples, 0.03%)</title><rect x="547.4" y="227.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="550.4" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (5 samples, 0.02%)</title><rect x="547.4" y="211.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="550.4" y="222.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (13 samples, 0.06%)</title><rect x="547.7" y="243.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="550.7" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (13 samples, 0.06%)</title><rect x="547.7" y="227.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="550.7" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (8 samples, 0.03%)</title><rect x="548.3" y="243.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="551.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.02%)</title><rect x="548.7" y="275.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="551.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 0.03%)</title><rect x="549.2" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="552.2" y="302.0"></text>
</g>
<g>
<title>net_rx_action (7 samples, 0.03%)</title><rect x="550.0" y="355.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="553.0" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (120 samples, 0.51%)</title><rect x="550.5" y="403.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="553.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (118 samples, 0.50%)</title><rect x="550.5" y="387.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="553.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (62 samples, 0.26%)</title><rect x="551.9" y="371.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="554.9" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (47 samples, 0.20%)</title><rect x="552.4" y="355.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="555.4" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.03%)</title><rect x="552.7" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="555.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (27 samples, 0.11%)</title><rect x="553.0" y="339.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="556.0" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (26 samples, 0.11%)</title><rect x="553.1" y="323.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="556.1" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (25 samples, 0.11%)</title><rect x="553.1" y="307.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="556.1" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.02%)</title><rect x="554.5" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="557.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.02%)</title><rect x="555.0" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.0" y="382.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (7 samples, 0.03%)</title><rect x="555.3" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="558.3" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (13 samples, 0.06%)</title><rect x="555.7" y="371.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="558.7" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (6 samples, 0.03%)</title><rect x="555.8" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="558.8" y="366.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (6 samples, 0.03%)</title><rect x="557.0" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="560.0" y="446.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (8 samples, 0.03%)</title><rect x="557.3" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="560.3" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.02%)</title><rect x="557.7" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="560.7" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (60 samples, 0.26%)</title><rect x="558.0" y="435.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="561.0" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (24 samples, 0.10%)</title><rect x="558.1" y="419.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="561.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (21 samples, 0.09%)</title><rect x="558.3" y="403.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.3" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (12 samples, 0.05%)</title><rect x="559.3" y="419.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="562.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (12 samples, 0.05%)</title><rect x="559.3" y="403.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="562.3" y="414.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (8 samples, 0.03%)</title><rect x="559.9" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="562.9" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (7 samples, 0.03%)</title><rect x="560.0" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="563.0" y="414.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (9 samples, 0.04%)</title><rect x="560.3" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="563.3" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.02%)</title><rect x="561.0" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.0" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.02%)</title><rect x="561.5" y="467.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="564.5" y="478.0"></text>
</g>
<g>
<title>skb_clone (16 samples, 0.07%)</title><rect x="561.7" y="483.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="564.7" y="494.0"></text>
</g>
<g>
<title>__skb_clone (9 samples, 0.04%)</title><rect x="562.1" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="565.1" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (5 samples, 0.02%)</title><rect x="563.2" y="499.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="566.2" y="510.0"></text>
</g>
<g>
<title>sched_clock_cpu (5 samples, 0.02%)</title><rect x="563.6" y="499.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="566.6" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (26 samples, 0.11%)</title><rect x="564.1" y="499.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="567.1" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (16 samples, 0.07%)</title><rect x="564.6" y="483.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="567.6" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (16 samples, 0.07%)</title><rect x="564.6" y="467.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="567.6" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.06%)</title><rect x="564.7" y="451.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="567.7" y="462.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.06%)</title><rect x="564.7" y="435.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="567.7" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.02%)</title><rect x="565.1" y="419.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="568.1" y="430.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (5 samples, 0.02%)</title><rect x="565.5" y="499.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="568.5" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.02%)</title><rect x="565.7" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="568.7" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.03%)</title><rect x="566.0" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="569.0" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (8 samples, 0.03%)</title><rect x="566.4" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="569.4" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (6 samples, 0.03%)</title><rect x="567.0" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="570.0" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (50 samples, 0.21%)</title><rect x="567.3" y="547.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="570.3" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (10 samples, 0.04%)</title><rect x="567.4" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.4" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (38 samples, 0.16%)</title><rect x="567.9" y="531.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="570.9" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (12 samples, 0.05%)</title><rect x="569.1" y="515.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="572.1" y="526.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (7 samples, 0.03%)</title><rect x="570.1" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="573.1" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (22 samples, 0.09%)</title><rect x="570.5" y="595.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="573.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (21 samples, 0.09%)</title><rect x="570.5" y="579.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="573.5" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (20 samples, 0.09%)</title><rect x="570.6" y="563.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="573.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 0.03%)</title><rect x="571.6" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="574.6" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (49 samples, 0.21%)</title><rect x="571.9" y="611.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="574.9" y="622.0"></text>
</g>
<g>
<title>__fdget (45 samples, 0.19%)</title><rect x="571.9" y="595.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="574.9" y="606.0"></text>
</g>
<g>
<title>__fget_light (45 samples, 0.19%)</title><rect x="571.9" y="579.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="574.9" y="590.0"></text>
</g>
<g>
<title>__fget (45 samples, 0.19%)</title><rect x="571.9" y="563.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="574.9" y="574.0"></text>
</g>
<g>
<title>fput (16 samples, 0.07%)</title><rect x="574.4" y="627.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="577.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (162 samples, 0.69%)</title><rect x="575.6" y="771.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (132 samples, 0.56%)</title><rect x="576.6" y="755.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.6" y="766.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (6 samples, 0.03%)</title><rect x="576.8" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="579.8" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (101 samples, 0.43%)</title><rect x="577.1" y="739.0" width="5.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="580.1" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (89 samples, 0.38%)</title><rect x="577.5" y="723.0" width="4.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="580.5" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (5 samples, 0.02%)</title><rect x="577.6" y="707.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="580.6" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (79 samples, 0.34%)</title><rect x="577.9" y="707.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="580.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 0.30%)</title><rect x="578.4" y="691.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (70 samples, 0.30%)</title><rect x="578.4" y="675.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="581.4" y="686.0"></text>
</g>
<g>
<title>sys_futex (65 samples, 0.28%)</title><rect x="578.6" y="659.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="581.6" y="670.0"></text>
</g>
<g>
<title>do_futex (62 samples, 0.26%)</title><rect x="578.7" y="643.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="581.7" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (59 samples, 0.25%)</title><rect x="578.9" y="627.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="581.9" y="638.0"></text>
</g>
<g>
<title>wake_up_q (47 samples, 0.20%)</title><rect x="579.5" y="611.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="582.5" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (47 samples, 0.20%)</title><rect x="579.5" y="595.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="582.5" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (47 samples, 0.20%)</title><rect x="579.5" y="579.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="582.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (20 samples, 0.09%)</title><rect x="582.2" y="739.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.05%)</title><rect x="583.2" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.2" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (20 samples, 0.09%)</title><rect x="583.9" y="771.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="586.9" y="782.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.04%)</title><rect x="584.4" y="755.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="587.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.proxy (12 samples, 0.05%)</title><rect x="584.9" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.putMethod (5,882 samples, 25.04%)</title><rect x="585.7" y="803.0" width="295.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.7" y="814.0">ru/mail/polis/service/kate/moreva/MySimp..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.putEntity (5,882 samples, 25.04%)</title><rect x="585.7" y="787.0" width="295.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.7" y="798.0">ru/mail/polis/service/kate/moreva/MySimp..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (43 samples, 0.18%)</title><rect x="586.4" y="771.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (43 samples, 0.18%)</title><rect x="586.4" y="755.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (38 samples, 0.16%)</title><rect x="586.6" y="739.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.16%)</title><rect x="586.7" y="723.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.7" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (10 samples, 0.04%)</title><rect x="587.6" y="707.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="590.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.02%)</title><rect x="588.1" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4,926 samples, 20.97%)</title><rect x="588.6" y="771.0" width="247.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.6" y="782.0">one/nio/http/HttpSession.sendResp..</text>
</g>
<g>
<title>gettimeofday (5 samples, 0.02%)</title><rect x="589.4" y="755.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="592.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (13 samples, 0.06%)</title><rect x="589.7" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.05%)</title><rect x="589.8" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="592.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.02%)</title><rect x="589.9" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4,754 samples, 20.23%)</title><rect x="590.4" y="755.0" width="238.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.4" y="766.0">one/nio/http/HttpSession.writeRe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (150 samples, 0.64%)</title><rect x="592.0" y="739.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.06%)</title><rect x="594.5" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.5" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (12 samples, 0.05%)</title><rect x="594.7" y="707.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="597.7" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.04%)</title><rect x="594.8" y="691.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="597.8" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.04%)</title><rect x="594.8" y="675.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="597.8" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.03%)</title><rect x="594.8" y="659.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="597.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (85 samples, 0.36%)</title><rect x="595.3" y="723.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.03%)</title><rect x="595.6" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.6" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.03%)</title><rect x="595.6" y="691.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="598.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (17 samples, 0.07%)</title><rect x="596.0" y="707.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.03%)</title><rect x="596.5" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (32 samples, 0.14%)</title><rect x="596.8" y="707.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.04%)</title><rect x="597.9" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (5 samples, 0.02%)</title><rect x="597.9" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.09%)</title><rect x="598.4" y="707.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.09%)</title><rect x="598.4" y="691.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.09%)</title><rect x="598.4" y="675.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.02%)</title><rect x="599.2" y="659.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (5 samples, 0.02%)</title><rect x="599.2" y="643.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4,571 samples, 19.46%)</title><rect x="599.6" y="739.0" width="229.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.6" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (4,564 samples, 19.43%)</title><rect x="599.9" y="723.0" width="229.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.9" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4,547 samples, 19.35%)</title><rect x="600.8" y="707.0" width="228.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.8" y="718.0">one/nio/net/Session$ArrayQueue..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4,546 samples, 19.35%)</title><rect x="600.8" y="691.0" width="228.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.8" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (108 samples, 0.46%)</title><rect x="602.2" y="675.0" width="5.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="605.2" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (6 samples, 0.03%)</title><rect x="603.8" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="606.8" y="670.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (18 samples, 0.08%)</title><rect x="604.1" y="659.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="607.1" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (44 samples, 0.19%)</title><rect x="605.0" y="659.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="608.0" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (6 samples, 0.03%)</title><rect x="605.5" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="608.5" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.03%)</title><rect x="605.8" y="643.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="608.8" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (22 samples, 0.09%)</title><rect x="606.2" y="643.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="609.2" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (14 samples, 0.06%)</title><rect x="607.6" y="675.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="610.6" y="686.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.02%)</title><rect x="608.3" y="675.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="611.3" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.02%)</title><rect x="608.6" y="675.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="611.6" y="686.0"></text>
</g>
<g>
<title>send (4,386 samples, 18.67%)</title><rect x="608.8" y="675.0" width="220.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="611.8" y="686.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4,216 samples, 17.94%)</title><rect x="617.4" y="659.0" width="211.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="620.4" y="670.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (4,210 samples, 17.92%)</title><rect x="617.4" y="643.0" width="211.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.4" y="654.0">do_syscall_64</text>
</g>
<g>
<title>SYSC_sendto (5 samples, 0.02%)</title><rect x="621.5" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="624.5" y="638.0"></text>
</g>
<g>
<title>sys_sendto (4,122 samples, 17.54%)</title><rect x="621.8" y="627.0" width="207.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="624.8" y="638.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (4,102 samples, 17.46%)</title><rect x="621.8" y="611.0" width="206.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="624.8" y="622.0">SYSC_sendto</text>
</g>
<g>
<title>sock_sendmsg (4,023 samples, 17.12%)</title><rect x="622.8" y="595.0" width="202.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="625.8" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (3,981 samples, 16.94%)</title><rect x="622.9" y="579.0" width="199.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="625.9" y="590.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (3,966 samples, 16.88%)</title><rect x="623.6" y="563.0" width="199.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.6" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (17 samples, 0.07%)</title><rect x="623.9" y="547.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="626.9" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.03%)</title><rect x="624.7" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="627.7" y="558.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.03%)</title><rect x="625.1" y="547.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="628.1" y="558.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 0.02%)</title><rect x="625.9" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="628.9" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (11 samples, 0.05%)</title><rect x="626.2" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="629.2" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (6 samples, 0.03%)</title><rect x="626.7" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="629.7" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3,877 samples, 16.50%)</title><rect x="627.0" y="547.0" width="194.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="630.0" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (19 samples, 0.08%)</title><rect x="630.2" y="531.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="633.2" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (12 samples, 0.05%)</title><rect x="630.6" y="515.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="633.6" y="526.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 0.02%)</title><rect x="631.2" y="531.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="634.2" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.02%)</title><rect x="631.4" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="634.4" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (17 samples, 0.07%)</title><rect x="631.7" y="531.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="634.7" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (11 samples, 0.05%)</title><rect x="631.7" y="515.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="634.7" y="526.0"></text>
</g>
<g>
<title>check_stack_object (7 samples, 0.03%)</title><rect x="632.5" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="635.5" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (171 samples, 0.73%)</title><rect x="633.0" y="531.0" width="8.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="636.0" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (153 samples, 0.65%)</title><rect x="633.5" y="515.0" width="7.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="636.5" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (63 samples, 0.27%)</title><rect x="634.6" y="499.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.6" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (49 samples, 0.21%)</title><rect x="634.7" y="483.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.7" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (23 samples, 0.10%)</title><rect x="636.0" y="467.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="639.0" y="478.0"></text>
</g>
<g>
<title>kmalloc_slab (9 samples, 0.04%)</title><rect x="637.2" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="640.2" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (47 samples, 0.20%)</title><rect x="637.8" y="499.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="640.8" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.02%)</title><rect x="639.9" y="483.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="642.9" y="494.0"></text>
</g>
<g>
<title>ksize (19 samples, 0.08%)</title><rect x="640.2" y="499.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="643.2" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (5 samples, 0.02%)</title><rect x="641.2" y="515.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="644.2" y="526.0"></text>
</g>
<g>
<title>skb_entail (20 samples, 0.09%)</title><rect x="641.6" y="531.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.6" y="542.0"></text>
</g>
<g>
<title>tcp_push (3,484 samples, 14.83%)</title><rect x="642.8" y="531.0" width="174.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="645.8" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (3,474 samples, 14.79%)</title><rect x="643.2" y="515.0" width="174.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="646.2" y="526.0">__tcp_push_pending_fra..</text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.03%)</title><rect x="643.2" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="646.2" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.03%)</title><rect x="643.8" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="646.8" y="510.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.29 (6 samples, 0.03%)</title><rect x="644.2" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="647.2" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (3,447 samples, 14.67%)</title><rect x="644.5" y="499.0" width="173.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="647.5" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (3,291 samples, 14.01%)</title><rect x="646.8" y="483.0" width="165.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="649.8" y="494.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__tcp_v4_send_check (5 samples, 0.02%)</title><rect x="651.8" y="467.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="654.8" y="478.0"></text>
</g>
<g>
<title>ip_local_out (8 samples, 0.03%)</title><rect x="652.1" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="655.1" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (3,127 samples, 13.31%)</title><rect x="652.5" y="467.0" width="157.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="655.5" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (11 samples, 0.05%)</title><rect x="653.4" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="656.4" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (7 samples, 0.03%)</title><rect x="653.6" y="435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="656.6" y="446.0"></text>
</g>
<g>
<title>ip_local_out (3,080 samples, 13.11%)</title><rect x="654.0" y="451.0" width="154.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="657.0" y="462.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (659 samples, 2.80%)</title><rect x="654.2" y="435.0" width="33.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="657.2" y="446.0">__..</text>
</g>
<g>
<title>ip_send_check (10 samples, 0.04%)</title><rect x="654.6" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="657.6" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.02%)</title><rect x="655.1" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="658.1" y="430.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (21 samples, 0.09%)</title><rect x="655.4" y="419.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="658.4" y="430.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (11 samples, 0.05%)</title><rect x="656.4" y="419.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.4" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (18 samples, 0.08%)</title><rect x="657.0" y="419.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="660.0" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (9 samples, 0.04%)</title><rect x="657.9" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="660.9" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (577 samples, 2.46%)</title><rect x="658.3" y="419.0" width="29.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="661.3" y="430.0">nf..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (55 samples, 0.23%)</title><rect x="659.2" y="403.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="662.2" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (45 samples, 0.19%)</title><rect x="659.7" y="387.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="662.7" y="398.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (60 samples, 0.26%)</title><rect x="662.0" y="403.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="665.0" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (46 samples, 0.20%)</title><rect x="662.7" y="387.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="665.7" y="398.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (15 samples, 0.06%)</title><rect x="665.0" y="403.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="668.0" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (14 samples, 0.06%)</title><rect x="665.0" y="387.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="668.0" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (8 samples, 0.03%)</title><rect x="665.2" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="668.2" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (413 samples, 1.76%)</title><rect x="665.7" y="403.0" width="20.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="668.7" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (5 samples, 0.02%)</title><rect x="665.9" y="387.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="668.9" y="398.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (8 samples, 0.03%)</title><rect x="666.3" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="669.3" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (352 samples, 1.50%)</title><rect x="666.7" y="387.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="669.7" y="398.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (67 samples, 0.29%)</title><rect x="669.9" y="371.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="672.9" y="382.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (15 samples, 0.06%)</title><rect x="673.3" y="371.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="676.3" y="382.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (20 samples, 0.09%)</title><rect x="674.3" y="371.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="677.3" y="382.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (20 samples, 0.09%)</title><rect x="675.3" y="371.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="678.3" y="382.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (11 samples, 0.05%)</title><rect x="676.3" y="371.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="679.3" y="382.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (21 samples, 0.09%)</title><rect x="676.8" y="371.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="679.8" y="382.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (12 samples, 0.05%)</title><rect x="677.1" y="355.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="680.1" y="366.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (21 samples, 0.09%)</title><rect x="677.9" y="371.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.9" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (95 samples, 0.40%)</title><rect x="679.0" y="371.0" width="4.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="682.0" y="382.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (9 samples, 0.04%)</title><rect x="680.4" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="683.4" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (6 samples, 0.03%)</title><rect x="680.8" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="683.8" y="366.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (12 samples, 0.05%)</title><rect x="681.1" y="355.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="684.1" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (40 samples, 0.17%)</title><rect x="681.7" y="355.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="684.7" y="366.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (13 samples, 0.06%)</title><rect x="683.7" y="371.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="686.7" y="382.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (5 samples, 0.02%)</title><rect x="684.4" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="687.4" y="398.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (19 samples, 0.08%)</title><rect x="684.7" y="387.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="687.7" y="398.0"></text>
</g>
<g>
<title>tcp_get_timeouts?[nf_conntrack] (7 samples, 0.03%)</title><rect x="685.6" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="688.6" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (10 samples, 0.04%)</title><rect x="686.0" y="387.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="689.0" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (8 samples, 0.03%)</title><rect x="686.5" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="689.5" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (9 samples, 0.04%)</title><rect x="686.9" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="689.9" y="414.0"></text>
</g>
<g>
<title>ip_output (2,402 samples, 10.22%)</title><rect x="687.5" y="435.0" width="120.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="690.5" y="446.0">ip_output</text>
</g>
<g>
<title>__indirect_thunk_start (6 samples, 0.03%)</title><rect x="687.9" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.9" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (9 samples, 0.04%)</title><rect x="688.2" y="419.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="691.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (2,271 samples, 9.67%)</title><rect x="688.7" y="419.0" width="114.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="691.7" y="430.0">ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (2,253 samples, 9.59%)</title><rect x="689.5" y="403.0" width="113.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="692.5" y="414.0">ip_finish_outp..</text>
</g>
<g>
<title>__local_bh_enable_ip (2,001 samples, 8.52%)</title><rect x="692.2" y="387.0" width="100.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="695.2" y="398.0">__local_bh_e..</text>
</g>
<g>
<title>do_softirq.part.17 (1,997 samples, 8.50%)</title><rect x="692.4" y="371.0" width="100.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="695.4" y="382.0">do_softirq.p..</text>
</g>
<g>
<title>do_softirq_own_stack (1,980 samples, 8.43%)</title><rect x="693.2" y="355.0" width="99.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="696.2" y="366.0">do_softirq_o..</text>
</g>
<g>
<title>__softirqentry_text_start (1,966 samples, 8.37%)</title><rect x="693.3" y="339.0" width="98.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="696.3" y="350.0">__softirqent..</text>
</g>
<g>
<title>__usecs_to_jiffies (7 samples, 0.03%)</title><rect x="695.7" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="698.7" y="334.0"></text>
</g>
<g>
<title>net_rx_action (1,902 samples, 8.10%)</title><rect x="696.1" y="323.0" width="95.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="699.1" y="334.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (12 samples, 0.05%)</title><rect x="697.5" y="307.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="700.5" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.02%)</title><rect x="698.1" y="307.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="701.1" y="318.0"></text>
</g>
<g>
<title>process_backlog (1,856 samples, 7.90%)</title><rect x="698.4" y="307.0" width="93.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="701.4" y="318.0">process_bac..</text>
</g>
<g>
<title>__netif_receive_skb (1,833 samples, 7.80%)</title><rect x="699.2" y="291.0" width="92.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="702.2" y="302.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_core (1,807 samples, 7.69%)</title><rect x="699.7" y="275.0" width="90.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="702.7" y="286.0">__netif_re..</text>
</g>
<g>
<title>ip_rcv (1,746 samples, 7.43%)</title><rect x="702.2" y="259.0" width="87.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="705.2" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (10 samples, 0.04%)</title><rect x="704.0" y="243.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="707.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (1,601 samples, 6.81%)</title><rect x="704.5" y="243.0" width="80.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="707.5" y="254.0">ip_rcv_fi..</text>
</g>
<g>
<title>ip_local_deliver (1,577 samples, 6.71%)</title><rect x="705.2" y="227.0" width="79.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="708.2" y="238.0">ip_local_..</text>
</g>
<g>
<title>ip_local_deliver_finish (1,424 samples, 6.06%)</title><rect x="706.0" y="211.0" width="71.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="709.0" y="222.0">ip_local..</text>
</g>
<g>
<title>_raw_spin_lock (10 samples, 0.04%)</title><rect x="707.1" y="195.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="710.1" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.02%)</title><rect x="707.6" y="195.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="710.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1,381 samples, 5.88%)</title><rect x="708.2" y="195.0" width="69.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="711.2" y="206.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (55 samples, 0.23%)</title><rect x="710.0" y="179.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="713.0" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (22 samples, 0.09%)</title><rect x="713.0" y="179.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="716.0" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (12 samples, 0.05%)</title><rect x="713.1" y="163.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="716.1" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (8 samples, 0.03%)</title><rect x="713.7" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="716.7" y="174.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (5 samples, 0.02%)</title><rect x="714.1" y="179.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="717.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1,248 samples, 5.31%)</title><rect x="714.4" y="179.0" width="62.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="717.4" y="190.0">tcp_v4..</text>
</g>
<g>
<title>tcp_check_space (16 samples, 0.07%)</title><rect x="715.2" y="163.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="718.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1,211 samples, 5.15%)</title><rect x="716.1" y="163.0" width="60.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="719.1" y="174.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (27 samples, 0.11%)</title><rect x="717.3" y="147.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (22 samples, 0.09%)</title><rect x="717.5" y="131.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="720.5" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (16 samples, 0.07%)</title><rect x="717.8" y="115.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="720.8" y="126.0"></text>
</g>
<g>
<title>mod_timer (16 samples, 0.07%)</title><rect x="717.8" y="99.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="720.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.04%)</title><rect x="718.2" y="83.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="721.2" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (12 samples, 0.05%)</title><rect x="718.7" y="147.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="721.7" y="158.0"></text>
</g>
<g>
<title>ktime_get_real_seconds (8 samples, 0.03%)</title><rect x="719.5" y="147.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="722.5" y="158.0"></text>
</g>
<g>
<title>sched_clock_cpu (9 samples, 0.04%)</title><rect x="719.9" y="147.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="722.9" y="158.0"></text>
</g>
<g>
<title>sched_clock (7 samples, 0.03%)</title><rect x="720.0" y="131.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="723.0" y="142.0"></text>
</g>
<g>
<title>native_sched_clock (7 samples, 0.03%)</title><rect x="720.0" y="115.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="723.0" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.04%)</title><rect x="720.4" y="147.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="723.4" y="158.0"></text>
</g>
<g>
<title>tcp_ack (381 samples, 1.62%)</title><rect x="720.9" y="147.0" width="19.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="723.9" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (12 samples, 0.05%)</title><rect x="724.6" y="131.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="727.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (6 samples, 0.03%)</title><rect x="725.5" y="131.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="728.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (250 samples, 1.06%)</title><rect x="726.0" y="131.0" width="12.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="729.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (119 samples, 0.51%)</title><rect x="728.7" y="115.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="731.7" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (33 samples, 0.14%)</title><rect x="728.7" y="99.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="731.7" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (32 samples, 0.14%)</title><rect x="728.7" y="83.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="731.7" y="94.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.03%)</title><rect x="729.9" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="732.9" y="78.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (8 samples, 0.03%)</title><rect x="729.9" y="51.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.9" y="62.0"></text>
</g>
<g>
<title>skb_release_all (78 samples, 0.33%)</title><rect x="730.5" y="99.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="733.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (66 samples, 0.28%)</title><rect x="730.8" y="83.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="733.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (38 samples, 0.16%)</title><rect x="732.2" y="67.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.2" y="78.0"></text>
</g>
<g>
<title>kfree (38 samples, 0.16%)</title><rect x="732.2" y="51.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="735.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (19 samples, 0.08%)</title><rect x="733.1" y="35.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="736.1" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (7 samples, 0.03%)</title><rect x="734.1" y="83.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="737.1" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (5 samples, 0.02%)</title><rect x="734.7" y="115.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="737.7" y="126.0"></text>
</g>
<g>
<title>rb_erase (5 samples, 0.02%)</title><rect x="735.1" y="115.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="738.1" y="126.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.03%)</title><rect x="735.4" y="115.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="738.4" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (48 samples, 0.20%)</title><rect x="735.7" y="115.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="738.7" y="126.0"></text>
</g>
<g>
<title>minmax_running_min (14 samples, 0.06%)</title><rect x="737.3" y="99.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="740.3" y="110.0"></text>
</g>
<g>
<title>minmax_subwin_update (9 samples, 0.04%)</title><rect x="737.6" y="83.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="740.6" y="94.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (6 samples, 0.03%)</title><rect x="738.9" y="131.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="741.9" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (15 samples, 0.06%)</title><rect x="739.2" y="131.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="742.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.03%)</title><rect x="740.0" y="147.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="743.0" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (690 samples, 2.94%)</title><rect x="740.3" y="147.0" width="34.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="743.3" y="158.0">tc..</text>
</g>
<g>
<title>dst_release (7 samples, 0.03%)</title><rect x="741.4" y="131.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="744.4" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (635 samples, 2.70%)</title><rect x="741.8" y="131.0" width="31.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="744.8" y="142.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (611 samples, 2.60%)</title><rect x="743.0" y="115.0" width="30.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="746.0" y="126.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (609 samples, 2.59%)</title><rect x="743.0" y="99.0" width="30.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="746.0" y="110.0">__..</text>
</g>
<g>
<title>__lock_text_start (606 samples, 2.58%)</title><rect x="743.2" y="83.0" width="30.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="746.2" y="94.0">__..</text>
</g>
<g>
<title>tcp_event_data_recv (14 samples, 0.06%)</title><rect x="773.6" y="131.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="776.6" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (12 samples, 0.05%)</title><rect x="774.4" y="131.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="777.4" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (10 samples, 0.04%)</title><rect x="775.0" y="147.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="778.0" y="158.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (8 samples, 0.03%)</title><rect x="775.6" y="147.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="778.6" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (5 samples, 0.02%)</title><rect x="776.0" y="147.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.0" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.03%)</title><rect x="776.2" y="147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="779.2" y="158.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.03%)</title><rect x="777.5" y="211.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="780.5" y="222.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (7 samples, 0.03%)</title><rect x="777.9" y="211.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="780.9" y="222.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (7 samples, 0.03%)</title><rect x="778.2" y="211.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="781.2" y="222.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (6 samples, 0.03%)</title><rect x="778.6" y="211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="781.6" y="222.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (10 samples, 0.04%)</title><rect x="778.9" y="211.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="781.9" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (88 samples, 0.37%)</title><rect x="779.4" y="211.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="782.4" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (40 samples, 0.17%)</title><rect x="779.7" y="195.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="782.7" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (39 samples, 0.17%)</title><rect x="779.7" y="179.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="782.7" y="190.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (18 samples, 0.08%)</title><rect x="781.7" y="195.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="784.7" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (14 samples, 0.06%)</title><rect x="781.9" y="179.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.9" y="190.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (5 samples, 0.02%)</title><rect x="782.6" y="195.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.6" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (5 samples, 0.02%)</title><rect x="782.6" y="179.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="785.6" y="190.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (14 samples, 0.06%)</title><rect x="782.8" y="195.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="785.8" y="206.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (9 samples, 0.04%)</title><rect x="783.1" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="786.1" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (8 samples, 0.03%)</title><rect x="783.8" y="211.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="786.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.02%)</title><rect x="784.2" y="211.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="787.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 0.03%)</title><rect x="784.4" y="227.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="787.4" y="238.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (15 samples, 0.06%)</title><rect x="784.9" y="243.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="787.9" y="254.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (8 samples, 0.03%)</title><rect x="785.8" y="243.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="788.8" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (10 samples, 0.04%)</title><rect x="786.2" y="243.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="789.2" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (7 samples, 0.03%)</title><rect x="786.7" y="243.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="789.7" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (57 samples, 0.24%)</title><rect x="787.0" y="243.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="790.0" y="254.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (14 samples, 0.06%)</title><rect x="787.6" y="227.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="790.6" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (12 samples, 0.05%)</title><rect x="787.7" y="211.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="790.7" y="222.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (9 samples, 0.04%)</title><rect x="788.3" y="227.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="791.3" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (9 samples, 0.04%)</title><rect x="788.3" y="211.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="791.3" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (5 samples, 0.02%)</title><rect x="788.5" y="195.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="791.5" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (13 samples, 0.06%)</title><rect x="788.7" y="227.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="791.7" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (13 samples, 0.06%)</title><rect x="788.7" y="211.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="791.7" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (7 samples, 0.03%)</title><rect x="789.5" y="227.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="792.5" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.03%)</title><rect x="790.0" y="259.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="793.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv (17 samples, 0.07%)</title><rect x="790.4" y="275.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="793.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.03%)</title><rect x="791.3" y="291.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="794.3" y="302.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.03%)</title><rect x="791.6" y="323.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="794.6" y="334.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.03%)</title><rect x="792.1" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="795.1" y="350.0"></text>
</g>
<g>
<title>rcu_bh_qs (6 samples, 0.03%)</title><rect x="792.4" y="339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="795.4" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (195 samples, 0.83%)</title><rect x="792.7" y="387.0" width="9.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="795.7" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (186 samples, 0.79%)</title><rect x="792.7" y="371.0" width="9.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="795.7" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (101 samples, 0.43%)</title><rect x="794.6" y="355.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="797.6" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.02%)</title><rect x="795.0" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="798.0" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (68 samples, 0.29%)</title><rect x="795.3" y="339.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="798.3" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (13 samples, 0.06%)</title><rect x="795.7" y="323.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="798.7" y="334.0"></text>
</g>
<g>
<title>netif_rx (30 samples, 0.13%)</title><rect x="796.4" y="323.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="799.4" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (28 samples, 0.12%)</title><rect x="796.5" y="307.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="799.5" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (25 samples, 0.11%)</title><rect x="796.6" y="291.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="799.6" y="302.0"></text>
</g>
<g>
<title>sk_free (11 samples, 0.05%)</title><rect x="797.9" y="323.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="800.9" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.02%)</title><rect x="798.5" y="323.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="801.5" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (8 samples, 0.03%)</title><rect x="798.8" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="801.8" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (9 samples, 0.04%)</title><rect x="799.2" y="339.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="802.2" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.03%)</title><rect x="799.7" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="802.7" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (8 samples, 0.03%)</title><rect x="800.1" y="355.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="803.1" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (29 samples, 0.12%)</title><rect x="800.5" y="355.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="803.5" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (17 samples, 0.07%)</title><rect x="800.8" y="339.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="803.8" y="350.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (6 samples, 0.03%)</title><rect x="802.7" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="805.7" y="430.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (8 samples, 0.03%)</title><rect x="803.2" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="806.2" y="430.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (7 samples, 0.03%)</title><rect x="803.6" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="806.6" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.03%)</title><rect x="803.9" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="806.9" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (76 samples, 0.32%)</title><rect x="804.3" y="419.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="807.3" y="430.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (27 samples, 0.11%)</title><rect x="804.7" y="403.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="807.7" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (26 samples, 0.11%)</title><rect x="804.7" y="387.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="807.7" y="398.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (13 samples, 0.06%)</title><rect x="806.0" y="403.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="809.0" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (13 samples, 0.06%)</title><rect x="806.0" y="387.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="809.0" y="398.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (11 samples, 0.05%)</title><rect x="806.7" y="403.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="809.7" y="414.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (8 samples, 0.03%)</title><rect x="806.8" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="809.8" y="398.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (9 samples, 0.04%)</title><rect x="807.2" y="403.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="810.2" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (8 samples, 0.03%)</title><rect x="807.7" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="810.7" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.05%)</title><rect x="808.2" y="435.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="811.2" y="446.0"></text>
</g>
<g>
<title>ip_output (7 samples, 0.03%)</title><rect x="808.7" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="811.7" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (9 samples, 0.04%)</title><rect x="809.1" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="812.1" y="462.0"></text>
</g>
<g>
<title>skb_clone (22 samples, 0.09%)</title><rect x="809.5" y="467.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="812.5" y="478.0"></text>
</g>
<g>
<title>__skb_clone (16 samples, 0.07%)</title><rect x="809.8" y="451.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="812.8" y="462.0"></text>
</g>
<g>
<title>__copy_skb_header (6 samples, 0.03%)</title><rect x="810.3" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="813.3" y="446.0"></text>
</g>
<g>
<title>tcp_established_options (9 samples, 0.04%)</title><rect x="810.7" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="813.7" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (6 samples, 0.03%)</title><rect x="811.1" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="814.1" y="478.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (6 samples, 0.03%)</title><rect x="811.5" y="467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="814.5" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.02%)</title><rect x="811.8" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="814.8" y="478.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (5 samples, 0.02%)</title><rect x="811.8" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="814.8" y="462.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (8 samples, 0.03%)</title><rect x="812.1" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="815.1" y="494.0"></text>
</g>
<g>
<title>sched_clock_cpu (10 samples, 0.04%)</title><rect x="813.0" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="816.0" y="494.0"></text>
</g>
<g>
<title>sched_clock (9 samples, 0.04%)</title><rect x="813.0" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="816.0" y="478.0"></text>
</g>
<g>
<title>native_sched_clock (9 samples, 0.04%)</title><rect x="813.0" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="816.0" y="462.0"></text>
</g>
<g>
<title>skb_push (6 samples, 0.03%)</title><rect x="813.7" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="816.7" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (30 samples, 0.13%)</title><rect x="814.0" y="483.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="817.0" y="494.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (6 samples, 0.03%)</title><rect x="814.4" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="817.4" y="478.0"></text>
</g>
<g>
<title>rb_insert_color (5 samples, 0.02%)</title><rect x="814.5" y="451.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="817.5" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (16 samples, 0.07%)</title><rect x="814.7" y="467.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="817.7" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (15 samples, 0.06%)</title><rect x="814.8" y="451.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="817.8" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.04%)</title><rect x="815.1" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="818.1" y="446.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.03%)</title><rect x="815.1" y="419.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.1" y="430.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (5 samples, 0.02%)</title><rect x="815.9" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="818.9" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (13 samples, 0.06%)</title><rect x="816.2" y="483.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="819.2" y="494.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (6 samples, 0.03%)</title><rect x="816.4" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="819.4" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (8 samples, 0.03%)</title><rect x="817.2" y="483.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="820.2" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (71 samples, 0.30%)</title><rect x="817.9" y="531.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="820.9" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (10 samples, 0.04%)</title><rect x="818.2" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="821.2" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (54 samples, 0.23%)</title><rect x="818.7" y="515.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="821.7" y="526.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.02%)</title><rect x="820.1" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="823.1" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (15 samples, 0.06%)</title><rect x="820.4" y="499.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="823.4" y="510.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (6 samples, 0.03%)</title><rect x="821.1" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="824.1" y="510.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.02%)</title><rect x="821.5" y="531.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="824.5" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (12 samples, 0.05%)</title><rect x="821.8" y="547.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="824.8" y="558.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (9 samples, 0.04%)</title><rect x="822.4" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="825.4" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (36 samples, 0.15%)</title><rect x="822.8" y="579.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="825.8" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (32 samples, 0.14%)</title><rect x="823.0" y="563.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="826.0" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (31 samples, 0.13%)</title><rect x="823.1" y="547.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="826.1" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (17 samples, 0.07%)</title><rect x="823.8" y="531.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="826.8" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (59 samples, 0.25%)</title><rect x="824.8" y="595.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="827.8" y="606.0"></text>
</g>
<g>
<title>__fdget (52 samples, 0.22%)</title><rect x="824.9" y="579.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="827.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (51 samples, 0.22%)</title><rect x="824.9" y="563.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="827.9" y="574.0"></text>
</g>
<g>
<title>__fget (50 samples, 0.21%)</title><rect x="825.0" y="547.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="828.0" y="558.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="827.5" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="830.5" y="590.0"></text>
</g>
<g>
<title>fput (19 samples, 0.08%)</title><rect x="827.8" y="611.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="830.8" y="622.0"></text>
</g>
<g>
<title>sys_sendto (6 samples, 0.03%)</title><rect x="828.8" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="831.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (123 samples, 0.52%)</title><rect x="829.1" y="755.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (81 samples, 0.34%)</title><rect x="831.1" y="739.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.1" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (48 samples, 0.20%)</title><rect x="831.3" y="723.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="834.3" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (45 samples, 0.19%)</title><rect x="831.5" y="707.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="834.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (37 samples, 0.16%)</title><rect x="831.8" y="691.0" width="1.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="834.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.13%)</title><rect x="832.1" y="675.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="835.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.13%)</title><rect x="832.1" y="659.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.1" y="670.0"></text>
</g>
<g>
<title>sys_futex (27 samples, 0.11%)</title><rect x="832.3" y="643.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="835.3" y="654.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.11%)</title><rect x="832.3" y="627.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="835.3" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (25 samples, 0.11%)</title><rect x="832.4" y="611.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="835.4" y="622.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.09%)</title><rect x="832.6" y="595.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="835.6" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.09%)</title><rect x="832.6" y="579.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="835.6" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.09%)</title><rect x="832.6" y="563.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="835.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (24 samples, 0.10%)</title><rect x="833.9" y="723.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (7 samples, 0.03%)</title><rect x="834.5" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.03%)</title><rect x="834.6" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.6" y="702.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (5 samples, 0.02%)</title><rect x="834.6" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.6" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.02%)</title><rect x="834.9" y="707.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.9" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (11 samples, 0.05%)</title><rect x="835.4" y="755.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="838.4" y="766.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.03%)</title><rect x="835.6" y="739.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="838.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (19 samples, 0.08%)</title><rect x="836.0" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.0" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="836.5" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="839.5" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="836.5" y="739.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="839.5" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.02%)</title><rect x="836.5" y="723.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="839.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.upsert (879 samples, 3.74%)</title><rect x="836.9" y="771.0" width="44.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.9" y="782.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (85 samples, 0.36%)</title><rect x="837.8" y="755.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (80 samples, 0.34%)</title><rect x="838.1" y="739.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (80 samples, 0.34%)</title><rect x="838.1" y="723.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (71 samples, 0.30%)</title><rect x="838.5" y="707.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (53 samples, 0.23%)</title><rect x="839.4" y="691.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (17 samples, 0.07%)</title><rect x="839.4" y="675.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (17 samples, 0.07%)</title><rect x="839.4" y="659.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.4" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (17 samples, 0.07%)</title><rect x="839.4" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (36 samples, 0.15%)</title><rect x="840.3" y="675.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (35 samples, 0.15%)</title><rect x="840.3" y="659.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.3" y="670.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.03%)</title><rect x="840.4" y="643.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="843.4" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (23 samples, 0.10%)</title><rect x="840.9" y="643.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="843.9" y="654.0"></text>
</g>
<g>
<title>gettimeofday (22 samples, 0.09%)</title><rect x="841.0" y="627.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="844.0" y="638.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.03%)</title><rect x="841.8" y="611.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="844.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.upsert (776 samples, 3.30%)</title><rect x="842.1" y="755.0" width="39.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.1" y="766.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.02%)</title><rect x="842.3" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.3" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.02%)</title><rect x="842.3" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="845.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.06%)</title><rect x="842.6" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="845.6" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.02%)</title><rect x="842.8" y="723.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="845.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (30 samples, 0.13%)</title><rect x="843.3" y="739.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (30 samples, 0.13%)</title><rect x="843.3" y="723.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (29 samples, 0.12%)</title><rect x="843.4" y="707.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.4" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.03%)</title><rect x="843.6" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.6" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.02%)</title><rect x="843.7" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 0.04%)</title><rect x="844.0" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.upsert (719 samples, 3.06%)</title><rect x="845.0" y="739.0" width="36.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.0" y="750.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (699 samples, 2.98%)</title><rect x="845.1" y="723.0" width="35.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.1" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (699 samples, 2.98%)</title><rect x="845.1" y="707.0" width="35.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.1" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.02%)</title><rect x="860.5" y="691.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="863.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.02%)</title><rect x="860.5" y="675.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.04%)</title><rect x="860.7" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (18 samples, 0.08%)</title><rect x="861.2" y="691.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (357 samples, 1.52%)</title><rect x="862.2" y="691.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="865.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (350 samples, 1.49%)</title><rect x="862.5" y="675.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (312 samples, 1.33%)</title><rect x="864.4" y="659.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.4" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.03%)</title><rect x="865.8" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.8" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (17 samples, 0.07%)</title><rect x="866.1" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.1" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (208 samples, 0.89%)</title><rect x="866.9" y="643.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.9" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (128 samples, 0.54%)</title><rect x="870.7" y="627.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.7" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (67 samples, 0.29%)</title><rect x="873.0" y="611.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.0" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (14 samples, 0.06%)</title><rect x="876.4" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (52 samples, 0.22%)</title><rect x="877.5" y="643.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="880.5" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (44 samples, 0.19%)</title><rect x="877.7" y="627.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="880.7" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (33 samples, 0.14%)</title><rect x="878.3" y="611.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="881.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.changeSize (17 samples, 0.07%)</title><rect x="880.2" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="883.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.07%)</title><rect x="880.3" y="707.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="883.3" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="880.3" y="691.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="883.3" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.02%)</title><rect x="880.3" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="883.3" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.02%)</title><rect x="880.3" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="883.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (10 samples, 0.04%)</title><rect x="880.6" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.6" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.04%)</title><rect x="880.6" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="883.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.04%)</title><rect x="880.6" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.6" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="880.7" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="880.7" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="880.7" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.7" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,707 samples, 24.29%)</title><rect x="881.2" y="883.0" width="286.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="884.2" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (34 samples, 0.14%)</title><rect x="882.4" y="867.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (34 samples, 0.14%)</title><rect x="882.4" y="851.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (8 samples, 0.03%)</title><rect x="883.7" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,937 samples, 8.24%)</title><rect x="884.1" y="867.0" width="97.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.1" y="878.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (29 samples, 0.12%)</title><rect x="885.9" y="851.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="888.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (10 samples, 0.04%)</title><rect x="886.9" y="835.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1,872 samples, 7.97%)</title><rect x="887.4" y="851.0" width="94.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.4" y="862.0">one/nio/net..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (21 samples, 0.09%)</title><rect x="890.7" y="835.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="893.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="891.7" y="835.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="894.7" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.02%)</title><rect x="891.7" y="819.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="894.7" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (12 samples, 0.05%)</title><rect x="892.0" y="835.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="895.0" y="846.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (24 samples, 0.10%)</title><rect x="892.6" y="835.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="895.6" y="846.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (16 samples, 0.07%)</title><rect x="893.8" y="835.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="896.8" y="846.0"></text>
</g>
<g>
<title>clock_gettime@plt (5 samples, 0.02%)</title><rect x="894.6" y="835.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="897.6" y="846.0"></text>
</g>
<g>
<title>epoll_wait (1,659 samples, 7.06%)</title><rect x="894.9" y="835.0" width="83.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="897.9" y="846.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (839 samples, 3.57%)</title><rect x="936.1" y="819.0" width="42.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="939.1" y="830.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (819 samples, 3.49%)</title><rect x="936.1" y="803.0" width="41.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="939.1" y="814.0">do_..</text>
</g>
<g>
<title>fput (93 samples, 0.40%)</title><rect x="941.6" y="787.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="944.6" y="798.0"></text>
</g>
<g>
<title>sys_epoll_wait (616 samples, 2.62%)</title><rect x="946.3" y="787.0" width="30.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="949.3" y="798.0">sy..</text>
</g>
<g>
<title>__fdget (52 samples, 0.22%)</title><rect x="947.7" y="771.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="950.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (52 samples, 0.22%)</title><rect x="947.7" y="755.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="950.7" y="766.0"></text>
</g>
<g>
<title>__fget (52 samples, 0.22%)</title><rect x="947.7" y="739.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="950.7" y="750.0"></text>
</g>
<g>
<title>ep_poll (527 samples, 2.24%)</title><rect x="950.6" y="771.0" width="26.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="953.6" y="782.0">e..</text>
</g>
<g>
<title>__lock_text_start (43 samples, 0.18%)</title><rect x="951.8" y="755.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="954.8" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (5 samples, 0.02%)</title><rect x="954.0" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.0" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list (348 samples, 1.48%)</title><rect x="954.3" y="755.0" width="17.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="957.3" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (60 samples, 0.26%)</title><rect x="955.0" y="739.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="958.0" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (8 samples, 0.03%)</title><rect x="958.2" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="961.2" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (251 samples, 1.07%)</title><rect x="958.8" y="739.0" width="12.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="961.8" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (156 samples, 0.66%)</title><rect x="963.0" y="723.0" width="7.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="966.0" y="734.0"></text>
</g>
<g>
<title>sock_poll (126 samples, 0.54%)</title><rect x="964.3" y="707.0" width="6.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="967.3" y="718.0"></text>
</g>
<g>
<title>tcp_poll (52 samples, 0.22%)</title><rect x="966.7" y="691.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="969.7" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (8 samples, 0.03%)</title><rect x="968.9" y="675.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="971.9" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (27 samples, 0.11%)</title><rect x="969.3" y="691.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="972.3" y="702.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.04%)</title><rect x="970.9" y="723.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="973.9" y="734.0"></text>
</g>
<g>
<title>mutex_lock (7 samples, 0.03%)</title><rect x="971.4" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="974.4" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (12 samples, 0.05%)</title><rect x="971.7" y="755.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="974.7" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (20 samples, 0.09%)</title><rect x="972.3" y="755.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="975.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (72 samples, 0.31%)</title><rect x="973.3" y="755.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="976.3" y="766.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.03%)</title><rect x="973.3" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="976.3" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (65 samples, 0.28%)</title><rect x="973.7" y="739.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="976.7" y="750.0"></text>
</g>
<g>
<title>schedule (60 samples, 0.26%)</title><rect x="973.9" y="723.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="976.9" y="734.0"></text>
</g>
<g>
<title>__schedule (50 samples, 0.21%)</title><rect x="974.4" y="707.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="977.4" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.06%)</title><rect x="976.2" y="691.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="979.2" y="702.0"></text>
</g>
<g>
<title>sys_epoll_wait (20 samples, 0.09%)</title><rect x="977.2" y="803.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="980.2" y="814.0"></text>
</g>
<g>
<title>epoll_wait@plt (5 samples, 0.02%)</title><rect x="978.2" y="835.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="981.2" y="846.0"></text>
</g>
<g>
<title>gettimeofday (28 samples, 0.12%)</title><rect x="978.5" y="835.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="981.5" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (28 samples, 0.12%)</title><rect x="978.5" y="819.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="981.5" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (24 samples, 0.10%)</title><rect x="978.7" y="803.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="981.7" y="814.0"></text>
</g>
<g>
<title>[vdso] (16 samples, 0.07%)</title><rect x="979.1" y="787.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="982.1" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (31 samples, 0.13%)</title><rect x="979.9" y="835.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="982.9" y="846.0"></text>
</g>
<g>
<title>gettimeofday (31 samples, 0.13%)</title><rect x="979.9" y="819.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="982.9" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (19 samples, 0.08%)</title><rect x="979.9" y="803.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="982.9" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (7 samples, 0.03%)</title><rect x="980.5" y="787.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="983.5" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (12 samples, 0.05%)</title><rect x="980.8" y="803.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="983.8" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,711 samples, 15.79%)</title><rect x="981.4" y="867.0" width="186.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="984.4" y="878.0">one/nio/net/Session.proc..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (54 samples, 0.23%)</title><rect x="985.7" y="851.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="988.7" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (47 samples, 0.20%)</title><rect x="986.0" y="835.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="989.0" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (35 samples, 0.15%)</title><rect x="986.3" y="819.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="989.3" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (14 samples, 0.06%)</title><rect x="986.3" y="803.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="989.3" y="814.0"></text>
</g>
<g>
<title>SpinPause (21 samples, 0.09%)</title><rect x="987.0" y="803.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="990.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.04%)</title><rect x="988.4" y="851.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="991.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.04%)</title><rect x="988.4" y="835.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="991.4" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.04%)</title><rect x="988.4" y="819.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="991.4" y="830.0"></text>
</g>
<g>
<title>gettimeofday (11 samples, 0.05%)</title><rect x="988.9" y="851.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="991.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,520 samples, 14.98%)</title><rect x="989.5" y="851.0" width="176.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.5" y="862.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,107 samples, 8.97%)</title><rect x="990.2" y="835.0" width="105.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="993.2" y="846.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (35 samples, 0.15%)</title><rect x="995.7" y="819.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.7" y="830.0"></text>
</g>
<g>
<title>itable stub (59 samples, 0.25%)</title><rect x="997.5" y="819.0" width="3.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1000.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,100 samples, 4.68%)</title><rect x="1000.5" y="819.0" width="55.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.5" y="830.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,070 samples, 4.55%)</title><rect x="1002.0" y="803.0" width="53.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.0" y="814.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (988 samples, 4.21%)</title><rect x="1002.1" y="787.0" width="49.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.1" y="798.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (114 samples, 0.49%)</title><rect x="1002.1" y="771.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (93 samples, 0.40%)</title><rect x="1002.1" y="755.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1005.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (17 samples, 0.07%)</title><rect x="1002.2" y="739.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (17 samples, 0.07%)</title><rect x="1002.2" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.08%)</title><rect x="1003.2" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.06%)</title><rect x="1003.4" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.04%)</title><rect x="1003.6" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1006.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (53 samples, 0.23%)</title><rect x="1004.1" y="739.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (44 samples, 0.19%)</title><rect x="1004.6" y="723.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (44 samples, 0.19%)</title><rect x="1004.6" y="707.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1007.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (40 samples, 0.17%)</title><rect x="1004.8" y="691.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1007.8" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (20 samples, 0.09%)</title><rect x="1006.8" y="755.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1009.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (874 samples, 3.72%)</title><rect x="1007.8" y="771.0" width="43.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.8" y="782.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.06%)</title><rect x="1008.2" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.06%)</title><rect x="1008.2" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$66/1590969358.get$Lambda (13 samples, 0.06%)</title><rect x="1008.2" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1011.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (852 samples, 3.63%)</title><rect x="1008.9" y="755.0" width="42.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.9" y="766.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (835 samples, 3.55%)</title><rect x="1009.6" y="739.0" width="41.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.6" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (49 samples, 0.21%)</title><rect x="1010.1" y="723.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (22 samples, 0.09%)</title><rect x="1011.5" y="707.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1014.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (22 samples, 0.09%)</title><rect x="1011.5" y="691.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1014.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (17 samples, 0.07%)</title><rect x="1011.7" y="675.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1014.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (8 samples, 0.03%)</title><rect x="1012.0" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1015.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (8 samples, 0.03%)</title><rect x="1012.0" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1015.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (8 samples, 0.03%)</title><rect x="1012.0" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (74 samples, 0.31%)</title><rect x="1012.6" y="723.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1015.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (73 samples, 0.31%)</title><rect x="1012.6" y="707.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1015.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (29 samples, 0.12%)</title><rect x="1012.6" y="691.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1015.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (26 samples, 0.11%)</title><rect x="1012.7" y="675.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1015.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 0.11%)</title><rect x="1012.7" y="659.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 0.11%)</title><rect x="1012.7" y="643.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1015.7" y="654.0"></text>
</g>
<g>
<title>Unsafe_Park (24 samples, 0.10%)</title><rect x="1012.7" y="627.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1015.7" y="638.0"></text>
</g>
<g>
<title>__lll_unlock_wake (9 samples, 0.04%)</title><rect x="1013.0" y="611.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1016.0" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1013.1" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1016.1" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1013.1" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1016.1" y="590.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.02%)</title><rect x="1013.2" y="563.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1016.2" y="574.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.02%)</title><rect x="1013.2" y="547.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1016.2" y="558.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.02%)</title><rect x="1013.2" y="531.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1016.2" y="542.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.03%)</title><rect x="1013.4" y="611.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1016.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (42 samples, 0.18%)</title><rect x="1014.2" y="691.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1017.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (42 samples, 0.18%)</title><rect x="1014.2" y="675.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1017.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (20 samples, 0.09%)</title><rect x="1014.5" y="659.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (20 samples, 0.09%)</title><rect x="1014.5" y="643.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (20 samples, 0.09%)</title><rect x="1014.5" y="627.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (15 samples, 0.06%)</title><rect x="1015.5" y="659.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1018.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (702 samples, 2.99%)</title><rect x="1016.3" y="723.0" width="35.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1019.3" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (701 samples, 2.98%)</title><rect x="1016.3" y="707.0" width="35.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1019.3" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (685 samples, 2.92%)</title><rect x="1017.0" y="691.0" width="34.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.0" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (680 samples, 2.89%)</title><rect x="1017.2" y="675.0" width="34.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.2" y="686.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (680 samples, 2.89%)</title><rect x="1017.2" y="659.0" width="34.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.2" y="670.0">jd..</text>
</g>
<g>
<title>Parker::unpark() (5 samples, 0.02%)</title><rect x="1017.5" y="643.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.5" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (7 samples, 0.03%)</title><rect x="1017.8" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1020.8" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (6 samples, 0.03%)</title><rect x="1018.1" y="643.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1021.1" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (77 samples, 0.33%)</title><rect x="1018.7" y="643.0" width="3.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1021.7" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.02%)</title><rect x="1019.1" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1022.1" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (6 samples, 0.03%)</title><rect x="1019.6" y="627.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1022.6" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (17 samples, 0.07%)</title><rect x="1019.9" y="627.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1022.9" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (19 samples, 0.08%)</title><rect x="1020.9" y="627.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1023.9" y="638.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (6 samples, 0.03%)</title><rect x="1022.2" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1025.2" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (539 samples, 2.29%)</title><rect x="1022.6" y="643.0" width="27.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1025.6" y="654.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (462 samples, 1.97%)</title><rect x="1026.4" y="627.0" width="23.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1029.4" y="638.0">e..</text>
</g>
<g>
<title>do_syscall_64 (458 samples, 1.95%)</title><rect x="1026.5" y="611.0" width="23.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1029.5" y="622.0">d..</text>
</g>
<g>
<title>sys_futex (423 samples, 1.80%)</title><rect x="1028.2" y="595.0" width="21.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1031.2" y="606.0">s..</text>
</g>
<g>
<title>do_futex (412 samples, 1.75%)</title><rect x="1028.6" y="579.0" width="20.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1031.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock (9 samples, 0.04%)</title><rect x="1028.9" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1031.9" y="574.0"></text>
</g>
<g>
<title>futex_wake_op (383 samples, 1.63%)</title><rect x="1029.4" y="563.0" width="19.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1032.4" y="574.0"></text>
</g>
<g>
<title>get_futex_key (12 samples, 0.05%)</title><rect x="1031.2" y="547.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1034.2" y="558.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.9 (5 samples, 0.02%)</title><rect x="1031.5" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1034.5" y="542.0"></text>
</g>
<g>
<title>mark_wake_futex (21 samples, 0.09%)</title><rect x="1031.9" y="547.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1034.9" y="558.0"></text>
</g>
<g>
<title>wake_q_add (6 samples, 0.03%)</title><rect x="1032.7" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1035.7" y="542.0"></text>
</g>
<g>
<title>wake_up_q (312 samples, 1.33%)</title><rect x="1033.0" y="547.0" width="15.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1036.0" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (308 samples, 1.31%)</title><rect x="1033.2" y="531.0" width="15.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1036.2" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (307 samples, 1.31%)</title><rect x="1033.3" y="515.0" width="15.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1036.3" y="526.0"></text>
</g>
<g>
<title>hash_futex (12 samples, 0.05%)</title><rect x="1048.7" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1051.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (15 samples, 0.06%)</title><rect x="1049.6" y="643.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1052.6" y="654.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (13 samples, 0.06%)</title><rect x="1050.4" y="643.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1053.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (47 samples, 0.20%)</title><rect x="1051.8" y="787.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (47 samples, 0.20%)</title><rect x="1051.8" y="771.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (45 samples, 0.19%)</title><rect x="1051.8" y="755.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (14 samples, 0.06%)</title><rect x="1053.4" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (31 samples, 0.13%)</title><rect x="1054.1" y="787.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.12%)</title><rect x="1054.2" y="771.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (7 samples, 0.03%)</title><rect x="1054.2" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1057.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.coder (5 samples, 0.02%)</title><rect x="1054.3" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1057.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.09%)</title><rect x="1054.6" y="755.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1057.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1054.8" y="739.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1057.8" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.06%)</title><rect x="1055.0" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (416 samples, 1.77%)</title><rect x="1055.7" y="819.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (201 samples, 0.86%)</title><rect x="1058.0" y="803.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.0" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (10 samples, 0.04%)</title><rect x="1064.0" y="787.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1067.0" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (9 samples, 0.04%)</title><rect x="1064.0" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1067.0" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.03%)</title><rect x="1064.1" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1067.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (56 samples, 0.24%)</title><rect x="1064.6" y="787.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (56 samples, 0.24%)</title><rect x="1064.6" y="771.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.08%)</title><rect x="1065.3" y="755.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1068.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (22 samples, 0.09%)</title><rect x="1066.3" y="755.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.04%)</title><rect x="1067.6" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 0.50%)</title><rect x="1068.1" y="803.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (115 samples, 0.49%)</title><rect x="1068.2" y="787.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.2" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.03%)</title><rect x="1072.5" y="771.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1075.5" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.03%)</title><rect x="1072.5" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1075.5" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.03%)</title><rect x="1072.5" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1075.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.07%)</title><rect x="1072.9" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1075.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.07%)</title><rect x="1072.9" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1075.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.06%)</title><rect x="1072.9" y="739.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (53 samples, 0.23%)</title><rect x="1073.9" y="803.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1076.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (38 samples, 0.16%)</title><rect x="1076.6" y="819.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1079.6" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (28 samples, 0.12%)</title><rect x="1076.8" y="803.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (28 samples, 0.12%)</title><rect x="1076.8" y="787.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (21 samples, 0.09%)</title><rect x="1077.2" y="771.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (18 samples, 0.08%)</title><rect x="1077.3" y="755.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (5 samples, 0.02%)</title><rect x="1078.3" y="803.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (9 samples, 0.04%)</title><rect x="1078.5" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (163 samples, 0.69%)</title><rect x="1079.0" y="819.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1082.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (93 samples, 0.40%)</title><rect x="1079.7" y="803.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (39 samples, 0.17%)</title><rect x="1079.9" y="787.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1082.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.06%)</title><rect x="1081.1" y="771.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1084.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (44 samples, 0.19%)</title><rect x="1081.9" y="787.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1084.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (31 samples, 0.13%)</title><rect x="1082.1" y="771.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1085.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (31 samples, 0.13%)</title><rect x="1082.1" y="755.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1085.1" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (13 samples, 0.06%)</title><rect x="1082.1" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1085.1" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (18 samples, 0.08%)</title><rect x="1082.7" y="739.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (9 samples, 0.04%)</title><rect x="1083.6" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (9 samples, 0.04%)</title><rect x="1083.6" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1086.6" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (6 samples, 0.03%)</title><rect x="1083.8" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.8" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.02%)</title><rect x="1083.8" y="723.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1086.8" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.02%)</title><rect x="1084.1" y="787.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1087.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (55 samples, 0.23%)</title><rect x="1084.4" y="803.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.23%)</title><rect x="1084.5" y="787.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.19%)</title><rect x="1084.7" y="771.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1087.7" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (18 samples, 0.08%)</title><rect x="1084.9" y="755.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1087.9" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (22 samples, 0.09%)</title><rect x="1085.8" y="755.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1088.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (176 samples, 0.75%)</title><rect x="1087.1" y="819.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (171 samples, 0.73%)</title><rect x="1087.4" y="803.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.4" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (10 samples, 0.04%)</title><rect x="1092.9" y="787.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1095.9" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.04%)</title><rect x="1093.0" y="771.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1096.0" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.04%)</title><rect x="1093.0" y="755.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1096.0" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.02%)</title><rect x="1093.0" y="739.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.0" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="1093.4" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1096.4" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="1093.4" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1096.4" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.02%)</title><rect x="1093.4" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1096.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.14%)</title><rect x="1093.8" y="787.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.14%)</title><rect x="1093.8" y="771.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.14%)</title><rect x="1093.8" y="755.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.8" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.03%)</title><rect x="1095.0" y="739.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1098.0" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.03%)</title><rect x="1095.0" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1098.0" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.03%)</title><rect x="1095.0" y="707.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1098.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.02%)</title><rect x="1095.1" y="691.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1098.1" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (10 samples, 0.04%)</title><rect x="1095.5" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1,400 samples, 5.96%)</title><rect x="1096.0" y="835.0" width="70.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1099.0" y="846.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1,400 samples, 5.96%)</title><rect x="1096.0" y="819.0" width="70.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1099.0" y="830.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (191 samples, 0.81%)</title><rect x="1097.5" y="803.0" width="9.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1100.5" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (12 samples, 0.05%)</title><rect x="1098.5" y="787.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.5" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (15 samples, 0.06%)</title><rect x="1099.1" y="787.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1102.1" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (9 samples, 0.04%)</title><rect x="1099.8" y="787.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1102.8" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (27 samples, 0.11%)</title><rect x="1100.3" y="787.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1103.3" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (99 samples, 0.42%)</title><rect x="1101.7" y="787.0" width="4.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1104.7" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (21 samples, 0.09%)</title><rect x="1103.2" y="771.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1106.2" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (16 samples, 0.07%)</title><rect x="1104.2" y="771.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1107.2" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (32 samples, 0.14%)</title><rect x="1105.0" y="771.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1108.0" y="782.0"></text>
</g>
<g>
<title>memmove@plt (5 samples, 0.02%)</title><rect x="1106.6" y="787.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1109.6" y="798.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (5 samples, 0.02%)</title><rect x="1106.9" y="787.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1109.9" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.03%)</title><rect x="1107.1" y="803.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1110.1" y="814.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (9 samples, 0.04%)</title><rect x="1107.5" y="803.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1110.5" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (13 samples, 0.06%)</title><rect x="1107.9" y="803.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1110.9" y="814.0"></text>
</g>
<g>
<title>recv (1,146 samples, 4.88%)</title><rect x="1108.6" y="803.0" width="57.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1111.6" y="814.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (785 samples, 3.34%)</title><rect x="1126.7" y="787.0" width="39.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1129.7" y="798.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (767 samples, 3.26%)</title><rect x="1126.8" y="771.0" width="38.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1129.8" y="782.0">do_..</text>
</g>
<g>
<title>SYSC_recvfrom (13 samples, 0.06%)</title><rect x="1133.9" y="755.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1136.9" y="766.0"></text>
</g>
<g>
<title>sys_recvfrom (614 samples, 2.61%)</title><rect x="1134.5" y="755.0" width="30.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1137.5" y="766.0">sy..</text>
</g>
<g>
<title>SYSC_recvfrom (596 samples, 2.54%)</title><rect x="1134.5" y="739.0" width="29.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1137.5" y="750.0">SY..</text>
</g>
<g>
<title>import_single_range (8 samples, 0.03%)</title><rect x="1135.4" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1138.4" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (500 samples, 2.13%)</title><rect x="1135.9" y="723.0" width="25.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1138.9" y="734.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.03%)</title><rect x="1136.1" y="707.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1139.1" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (423 samples, 1.80%)</title><rect x="1136.5" y="707.0" width="21.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1139.5" y="718.0">i..</text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.02%)</title><rect x="1136.8" y="691.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1139.8" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (403 samples, 1.72%)</title><rect x="1137.5" y="691.0" width="20.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1140.5" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (69 samples, 0.29%)</title><rect x="1141.6" y="675.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1144.6" y="686.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.03%)</title><rect x="1141.6" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1144.6" y="670.0"></text>
</g>
<g>
<title>skb_release_all (57 samples, 0.24%)</title><rect x="1141.9" y="659.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1144.9" y="670.0"></text>
</g>
<g>
<title>__indirect_thunk_start (6 samples, 0.03%)</title><rect x="1141.9" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1144.9" y="654.0"></text>
</g>
<g>
<title>skb_release_data (16 samples, 0.07%)</title><rect x="1142.2" y="643.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1145.2" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.03%)</title><rect x="1143.0" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1146.0" y="654.0"></text>
</g>
<g>
<title>sock_rfree (29 samples, 0.12%)</title><rect x="1143.3" y="643.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1146.3" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.02%)</title><rect x="1144.8" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1147.8" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (24 samples, 0.10%)</title><rect x="1145.6" y="675.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1148.6" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (8 samples, 0.03%)</title><rect x="1147.0" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1150.0" y="686.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.03%)</title><rect x="1147.4" y="675.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1150.4" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (144 samples, 0.61%)</title><rect x="1147.8" y="675.0" width="7.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1150.8" y="686.0"></text>
</g>
<g>
<title>__check_object_size (68 samples, 0.29%)</title><rect x="1148.0" y="659.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.0" y="670.0"></text>
</g>
<g>
<title>__check_heap_object (12 samples, 0.05%)</title><rect x="1149.2" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1152.2" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (33 samples, 0.14%)</title><rect x="1149.8" y="643.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1152.8" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (56 samples, 0.24%)</title><rect x="1151.6" y="659.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1154.6" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (51 samples, 0.22%)</title><rect x="1151.8" y="643.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1154.8" y="654.0"></text>
</g>
<g>
<title>check_stack_object (8 samples, 0.03%)</title><rect x="1154.4" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1157.4" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (28 samples, 0.12%)</title><rect x="1155.1" y="675.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.1" y="686.0"></text>
</g>
<g>
<title>__tcp_select_window (8 samples, 0.03%)</title><rect x="1156.1" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1159.1" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (16 samples, 0.07%)</title><rect x="1156.6" y="675.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.6" y="686.0"></text>
</g>
<g>
<title>sched_clock_cpu (8 samples, 0.03%)</title><rect x="1157.0" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1160.0" y="670.0"></text>
</g>
<g>
<title>sched_clock (5 samples, 0.02%)</title><rect x="1157.1" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.1" y="654.0"></text>
</g>
<g>
<title>native_sched_clock (5 samples, 0.02%)</title><rect x="1157.1" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.1" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (7 samples, 0.03%)</title><rect x="1157.4" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1160.4" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (58 samples, 0.25%)</title><rect x="1157.7" y="707.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1160.7" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.03%)</title><rect x="1158.0" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1161.0" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (47 samples, 0.20%)</title><rect x="1158.3" y="691.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1161.3" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (46 samples, 0.20%)</title><rect x="1158.3" y="675.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1161.3" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (40 samples, 0.17%)</title><rect x="1158.6" y="659.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1161.6" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.03%)</title><rect x="1160.6" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1163.6" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (68 samples, 0.29%)</title><rect x="1161.0" y="723.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1164.0" y="734.0"></text>
</g>
<g>
<title>__fdget (42 samples, 0.18%)</title><rect x="1161.0" y="707.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.0" y="718.0"></text>
</g>
<g>
<title>__fget_light (41 samples, 0.17%)</title><rect x="1161.1" y="691.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1164.1" y="702.0"></text>
</g>
<g>
<title>__fget (41 samples, 0.17%)</title><rect x="1161.1" y="675.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1164.1" y="686.0"></text>
</g>
<g>
<title>__fget_light (26 samples, 0.11%)</title><rect x="1163.1" y="707.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1166.1" y="718.0"></text>
</g>
<g>
<title>fput (7 samples, 0.03%)</title><rect x="1164.4" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1167.4" y="750.0"></text>
</g>
<g>
<title>import_single_range (9 samples, 0.04%)</title><rect x="1164.8" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1167.8" y="750.0"></text>
</g>
<g>
<title>sys_recvfrom (16 samples, 0.07%)</title><rect x="1165.3" y="771.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1168.3" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (30 samples, 0.13%)</title><rect x="1166.3" y="851.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.3" y="862.0"></text>
</g>
<g>
<title>gettimeofday (21 samples, 0.09%)</title><rect x="1166.7" y="835.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1169.7" y="846.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.03%)</title><rect x="1167.4" y="819.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1170.4" y="830.0"></text>
</g>
<g>
<title>start_thread (442 samples, 1.88%)</title><rect x="1167.8" y="883.0" width="22.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1170.8" y="894.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (442 samples, 1.88%)</title><rect x="1167.8" y="867.0" width="22.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1170.8" y="878.0">t..</text>
</g>
<g>
<title>GangWorker::loop() (286 samples, 1.22%)</title><rect x="1167.9" y="851.0" width="14.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.9" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (278 samples, 1.18%)</title><rect x="1168.0" y="835.0" width="13.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.0" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (223 samples, 0.95%)</title><rect x="1168.0" y="819.0" width="11.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.0" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (49 samples, 0.21%)</title><rect x="1168.1" y="803.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.1" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (26 samples, 0.11%)</title><rect x="1169.2" y="787.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.2" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (13 samples, 0.06%)</title><rect x="1169.9" y="771.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.9" y="782.0"></text>
</g>
<g>
<title>SpinPause (169 samples, 0.72%)</title><rect x="1170.7" y="803.0" width="8.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1173.7" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (23 samples, 0.10%)</title><rect x="1179.2" y="819.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.2" y="830.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (23 samples, 0.10%)</title><rect x="1179.2" y="803.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.2" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (23 samples, 0.10%)</title><rect x="1179.2" y="787.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.2" y="798.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (23 samples, 0.10%)</title><rect x="1179.2" y="771.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.2" y="782.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (20 samples, 0.09%)</title><rect x="1179.3" y="755.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.3" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (10 samples, 0.04%)</title><rect x="1179.3" y="739.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.3" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.02%)</title><rect x="1179.5" y="723.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (10 samples, 0.04%)</title><rect x="1179.8" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.8" y="750.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (8 samples, 0.03%)</title><rect x="1179.8" y="723.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.8" y="734.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (7 samples, 0.03%)</title><rect x="1180.4" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.4" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (6 samples, 0.03%)</title><rect x="1180.4" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.4" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.02%)</title><rect x="1180.4" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.4" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (23 samples, 0.10%)</title><rect x="1180.7" y="819.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.7" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (15 samples, 0.06%)</title><rect x="1180.9" y="803.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.9" y="814.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (13 samples, 0.06%)</title><rect x="1181.0" y="787.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.0" y="798.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (11 samples, 0.05%)</title><rect x="1181.1" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.1" y="782.0"></text>
</g>
<g>
<title>JavaThread::run() (136 samples, 0.58%)</title><rect x="1182.2" y="851.0" width="6.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.2" y="862.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (136 samples, 0.58%)</title><rect x="1182.2" y="835.0" width="6.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.2" y="846.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (134 samples, 0.57%)</title><rect x="1182.2" y="819.0" width="6.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.2" y="830.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (132 samples, 0.56%)</title><rect x="1182.2" y="803.0" width="6.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.2" y="814.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (116 samples, 0.49%)</title><rect x="1182.2" y="787.0" width="5.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.2" y="798.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (116 samples, 0.49%)</title><rect x="1182.2" y="771.0" width="5.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.2" y="782.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (67 samples, 0.29%)</title><rect x="1182.2" y="755.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.2" y="766.0"></text>
</g>
<g>
<title>Matcher::match() (7 samples, 0.03%)</title><rect x="1182.4" y="739.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.4" y="750.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (6 samples, 0.03%)</title><rect x="1182.4" y="723.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (5 samples, 0.02%)</title><rect x="1182.8" y="739.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.8" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (5 samples, 0.02%)</title><rect x="1182.8" y="723.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.8" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (51 samples, 0.22%)</title><rect x="1183.0" y="739.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.0" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (6 samples, 0.03%)</title><rect x="1183.2" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.2" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (13 samples, 0.06%)</title><rect x="1183.6" y="723.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.6" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (5 samples, 0.02%)</title><rect x="1184.3" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.3" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (6 samples, 0.03%)</title><rect x="1184.7" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.7" y="734.0"></text>
</g>
<g>
<title>Compile::Optimize() (35 samples, 0.15%)</title><rect x="1185.6" y="755.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (24 samples, 0.10%)</title><rect x="1185.8" y="739.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.8" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (11 samples, 0.05%)</title><rect x="1186.2" y="723.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (6 samples, 0.03%)</title><rect x="1186.4" y="707.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.4" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.04%)</title><rect x="1187.4" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.04%)</title><rect x="1187.4" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.04%)</title><rect x="1187.4" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.04%)</title><rect x="1187.4" y="707.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.04%)</title><rect x="1187.4" y="691.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.04%)</title><rect x="1187.4" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.4" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.04%)</title><rect x="1187.4" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.04%)</title><rect x="1187.4" y="643.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.04%)</title><rect x="1187.4" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.04%)</title><rect x="1187.4" y="611.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.04%)</title><rect x="1187.4" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.03%)</title><rect x="1187.4" y="579.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.02%)</title><rect x="1187.6" y="563.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.6" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.02%)</title><rect x="1187.6" y="547.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.02%)</title><rect x="1187.6" y="531.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.02%)</title><rect x="1187.6" y="515.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.02%)</title><rect x="1187.6" y="499.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.6" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.02%)</title><rect x="1187.6" y="483.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.6" y="494.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (16 samples, 0.07%)</title><rect x="1188.0" y="787.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.0" y="798.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (16 samples, 0.07%)</title><rect x="1188.0" y="771.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.0" y="782.0"></text>
</g>
<g>
<title>Compilation::compile_method() (16 samples, 0.07%)</title><rect x="1188.0" y="755.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.0" y="766.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (16 samples, 0.07%)</title><rect x="1188.0" y="739.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.0" y="750.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (8 samples, 0.03%)</title><rect x="1188.0" y="723.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.0" y="734.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (5 samples, 0.02%)</title><rect x="1188.0" y="707.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.0" y="718.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (5 samples, 0.02%)</title><rect x="1188.0" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.0" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (5 samples, 0.02%)</title><rect x="1188.0" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.0" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.02%)</title><rect x="1188.0" y="659.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.0" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.02%)</title><rect x="1188.0" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.0" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.02%)</title><rect x="1188.0" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.0" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.02%)</title><rect x="1188.0" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.0" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.02%)</title><rect x="1188.0" y="595.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.0" y="606.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (7 samples, 0.03%)</title><rect x="1188.4" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.4" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (16 samples, 0.07%)</title><rect x="1189.0" y="851.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.0" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (15 samples, 0.06%)</title><rect x="1189.0" y="835.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.0" y="846.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (8 samples, 0.03%)</title><rect x="1189.0" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.0" y="830.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (5 samples, 0.02%)</title><rect x="1189.4" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (5 samples, 0.02%)</title><rect x="1189.4" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (5 samples, 0.02%)</title><rect x="1189.4" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (5 samples, 0.02%)</title><rect x="1189.4" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
</g>
</svg>
