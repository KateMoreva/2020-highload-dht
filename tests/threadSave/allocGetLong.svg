<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="645"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="645"> </text>
<g id="frames">
<g>
<title>all (2,598 samples, 100.00%)</title><rect x="10.0" y="611.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="622.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 #0 tid=7346] (1 samples, 0.04%)</title><rect x="10.0" y="595.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.04%)</title><rect x="10.0" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (1 samples, 0.04%)</title><rect x="10.0" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (1 samples, 0.04%)</title><rect x="10.0" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (1 samples, 0.04%)</title><rect x="10.0" y="531.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=7338] (473 samples, 18.21%)</title><rect x="10.5" y="595.0" width="214.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.5" y="606.0">[NIO Selector #0 tid=7338]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (473 samples, 18.21%)</title><rect x="10.5" y="579.0" width="214.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.5" y="590.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.54%)</title><rect x="10.5" y="563.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.5" y="574.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (14 samples, 0.54%)</title><rect x="10.5" y="547.0" width="6.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (459 samples, 17.67%)</title><rect x="16.8" y="563.0" width="208.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.8" y="574.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (459 samples, 17.67%)</title><rect x="16.8" y="547.0" width="208.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.8" y="558.0">one/nio/http/HttpSession.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (459 samples, 17.67%)</title><rect x="16.8" y="531.0" width="208.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.8" y="542.0">one/nio/http/HttpSession.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (405 samples, 15.59%)</title><rect x="16.8" y="515.0" width="184.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.8" y="526.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (405 samples, 15.59%)</title><rect x="16.8" y="499.0" width="184.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.8" y="510.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (397 samples, 15.28%)</title><rect x="16.8" y="483.0" width="180.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.8" y="494.0">RequestHandler1_entity...</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 0.77%)</title><rect x="16.8" y="467.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 0.77%)</title><rect x="16.8" y="451.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.50%)</title><rect x="16.8" y="435.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.8" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.50%)</title><rect x="16.8" y="419.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.8" y="430.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.50%)</title><rect x="16.8" y="403.0" width="5.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="19.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.27%)</title><rect x="22.7" y="435.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.7" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.27%)</title><rect x="22.7" y="419.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="25.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.23%)</title><rect x="25.9" y="467.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.23%)</title><rect x="25.9" y="451.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.23%)</title><rect x="25.9" y="435.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.23%)</title><rect x="25.9" y="419.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.08%)</title><rect x="25.9" y="403.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="28.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.15%)</title><rect x="26.8" y="403.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.8" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="26.8" y="387.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="29.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (371 samples, 14.28%)</title><rect x="28.6" y="467.0" width="168.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.6" y="478.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.35%)</title><rect x="28.6" y="451.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.35%)</title><rect x="28.6" y="435.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.35%)</title><rect x="28.6" y="419.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.35%)</title><rect x="28.6" y="403.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.6" y="414.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.35%)</title><rect x="28.6" y="387.0" width="4.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="31.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.27%)</title><rect x="32.7" y="451.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.27%)</title><rect x="32.7" y="435.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.7" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.27%)</title><rect x="32.7" y="419.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="35.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (355 samples, 13.66%)</title><rect x="35.9" y="451.0" width="161.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.9" y="462.0">ru/mail/polis/service..</text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="35.9" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="38.9" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.12%)</title><rect x="36.3" y="435.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.3" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.12%)</title><rect x="36.3" y="419.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="39.3" y="430.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.12%)</title><rect x="37.7" y="435.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="40.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14 samples, 0.54%)</title><rect x="39.1" y="435.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.1" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.19%)</title><rect x="39.1" y="419.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="42.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.31%)</title><rect x="41.3" y="419.0" width="3.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="44.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="45.0" y="419.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="48.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (334 samples, 12.86%)</title><rect x="45.4" y="435.0" width="151.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.4" y="446.0">ru/mail/polis/dao/D..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (29 samples, 1.12%)</title><rect x="45.4" y="419.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (29 samples, 1.12%)</title><rect x="45.4" y="403.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (29 samples, 1.12%)</title><rect x="45.4" y="387.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (29 samples, 1.12%)</title><rect x="45.4" y="371.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (29 samples, 1.12%)</title><rect x="45.4" y="355.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.81%)</title><rect x="45.4" y="339.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (21 samples, 0.81%)</title><rect x="45.4" y="323.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (21 samples, 0.81%)</title><rect x="45.4" y="307.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (21 samples, 0.81%)</title><rect x="45.4" y="291.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (21 samples, 0.81%)</title><rect x="45.4" y="275.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (21 samples, 0.81%)</title><rect x="45.4" y="259.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.31%)</title><rect x="45.4" y="243.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.31%)</title><rect x="45.4" y="227.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.4" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.31%)</title><rect x="45.4" y="211.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.31%)</title><rect x="45.4" y="195.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.31%)</title><rect x="45.4" y="179.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.31%)</title><rect x="45.4" y="163.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (8 samples, 0.31%)</title><rect x="45.4" y="147.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.31%)</title><rect x="45.4" y="131.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.31%)</title><rect x="45.4" y="115.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.23%)</title><rect x="45.4" y="99.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.23%)</title><rect x="45.4" y="83.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.4" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.23%)</title><rect x="45.4" y="67.0" width="2.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="48.4" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.08%)</title><rect x="48.2" y="99.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (2 samples, 0.08%)</title><rect x="48.2" y="83.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2 samples, 0.08%)</title><rect x="48.2" y="67.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.04%)</title><rect x="48.2" y="51.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="51.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.04%)</title><rect x="48.6" y="51.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.6" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.04%)</title><rect x="48.6" y="35.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="51.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (13 samples, 0.50%)</title><rect x="49.1" y="243.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (13 samples, 0.50%)</title><rect x="49.1" y="227.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.50%)</title><rect x="49.1" y="211.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.50%)</title><rect x="49.1" y="195.0" width="5.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="52.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$141/1823291526.apply (8 samples, 0.31%)</title><rect x="55.0" y="339.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (8 samples, 0.31%)</title><rect x="55.0" y="323.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.31%)</title><rect x="55.0" y="307.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.31%)</title><rect x="55.0" y="291.0" width="3.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="58.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.12%)</title><rect x="58.6" y="419.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.12%)</title><rect x="58.6" y="403.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$155/1514748197.apply (3 samples, 0.12%)</title><rect x="58.6" y="387.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (3 samples, 0.12%)</title><rect x="58.6" y="371.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (3 samples, 0.12%)</title><rect x="58.6" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.6" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.12%)</title><rect x="58.6" y="339.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.6" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.12%)</title><rect x="58.6" y="323.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="61.6" y="334.0"></text>
</g>
<g>
<title>java.util.NoSuchElementException (2 samples, 0.08%)</title><rect x="60.0" y="419.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="63.0" y="430.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (39 samples, 1.50%)</title><rect x="60.9" y="419.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.9" y="430.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (39 samples, 1.50%)</title><rect x="60.9" y="403.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.9" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (39 samples, 1.50%)</title><rect x="60.9" y="387.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (39 samples, 1.50%)</title><rect x="60.9" y="371.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.9" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (39 samples, 1.50%)</title><rect x="60.9" y="355.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (39 samples, 1.50%)</title><rect x="60.9" y="339.0" width="17.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.9" y="350.0"></text>
</g>
<g>
<title>int[] (6 samples, 0.23%)</title><rect x="60.9" y="323.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="63.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.46%)</title><rect x="63.6" y="323.0" width="5.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="66.6" y="334.0"></text>
</g>
<g>
<title>long[] (16 samples, 0.62%)</title><rect x="69.0" y="323.0" width="7.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="72.0" y="334.0"></text>
</g>
<g>
<title>short[] (5 samples, 0.19%)</title><rect x="76.3" y="323.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="79.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (11 samples, 0.42%)</title><rect x="78.6" y="419.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.42%)</title><rect x="78.6" y="403.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.42%)</title><rect x="78.6" y="387.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.42%)</title><rect x="78.6" y="371.0" width="5.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="81.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (13 samples, 0.50%)</title><rect x="83.6" y="419.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (13 samples, 0.50%)</title><rect x="83.6" y="403.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.50%)</title><rect x="83.6" y="387.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.50%)</title><rect x="83.6" y="371.0" width="5.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="86.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (237 samples, 9.12%)</title><rect x="89.5" y="419.0" width="107.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.5" y="430.0">ru/mail/polis..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.19%)</title><rect x="89.5" y="403.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.5" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.19%)</title><rect x="89.5" y="387.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="92.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (51 samples, 1.96%)</title><rect x="91.8" y="403.0" width="23.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.8" y="414.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.15%)</title><rect x="91.8" y="387.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="94.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (47 samples, 1.81%)</title><rect x="93.6" y="387.0" width="21.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.6" y="398.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.08%)</title><rect x="93.6" y="371.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="96.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (30 samples, 1.15%)</title><rect x="94.5" y="371.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (30 samples, 1.15%)</title><rect x="94.5" y="355.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (30 samples, 1.15%)</title><rect x="94.5" y="339.0" width="13.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (30 samples, 1.15%)</title><rect x="94.5" y="323.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.35%)</title><rect x="94.5" y="307.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.35%)</title><rect x="94.5" y="291.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.5" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.35%)</title><rect x="94.5" y="275.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.35%)</title><rect x="94.5" y="259.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.35%)</title><rect x="94.5" y="243.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.35%)</title><rect x="94.5" y="227.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (9 samples, 0.35%)</title><rect x="94.5" y="211.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.35%)</title><rect x="94.5" y="195.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.35%)</title><rect x="94.5" y="179.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.35%)</title><rect x="94.5" y="163.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (9 samples, 0.35%)</title><rect x="94.5" y="147.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (9 samples, 0.35%)</title><rect x="94.5" y="131.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.5" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (5 samples, 0.19%)</title><rect x="94.5" y="115.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="97.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (4 samples, 0.15%)</title><rect x="96.8" y="115.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.8" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (4 samples, 0.15%)</title><rect x="96.8" y="99.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="99.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (21 samples, 0.81%)</title><rect x="98.6" y="307.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (21 samples, 0.81%)</title><rect x="98.6" y="291.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.6" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.81%)</title><rect x="98.6" y="275.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.81%)</title><rect x="98.6" y="259.0" width="9.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="101.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.12%)</title><rect x="108.1" y="371.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.12%)</title><rect x="108.1" y="355.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="111.1" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (8 samples, 0.31%)</title><rect x="109.5" y="371.0" width="3.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="112.5" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.15%)</title><rect x="113.1" y="371.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.15%)</title><rect x="113.1" y="355.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="116.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.08%)</title><rect x="114.9" y="403.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="114.9" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="114.9" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (2 samples, 0.08%)</title><rect x="114.9" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.9" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (2 samples, 0.08%)</title><rect x="114.9" y="339.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="117.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.12%)</title><rect x="115.8" y="403.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.8" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.12%)</title><rect x="115.8" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.12%)</title><rect x="115.8" y="371.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.12%)</title><rect x="115.8" y="355.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/805521818.get$Lambda (3 samples, 0.12%)</title><rect x="115.8" y="339.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.8" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$137 (3 samples, 0.12%)</title><rect x="115.8" y="323.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="118.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (26 samples, 1.00%)</title><rect x="117.2" y="403.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.2" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.04%)</title><rect x="117.2" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="120.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (25 samples, 0.96%)</title><rect x="117.6" y="387.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.96%)</title><rect x="117.6" y="371.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (25 samples, 0.96%)</title><rect x="117.6" y="355.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (25 samples, 0.96%)</title><rect x="117.6" y="339.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (25 samples, 0.96%)</title><rect x="117.6" y="323.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (25 samples, 0.96%)</title><rect x="117.6" y="307.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.96%)</title><rect x="117.6" y="291.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.27%)</title><rect x="117.6" y="275.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.27%)</title><rect x="117.6" y="259.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.6" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.27%)</title><rect x="117.6" y="243.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.27%)</title><rect x="117.6" y="227.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.27%)</title><rect x="117.6" y="211.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.27%)</title><rect x="117.6" y="195.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (7 samples, 0.27%)</title><rect x="117.6" y="179.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.27%)</title><rect x="117.6" y="163.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.27%)</title><rect x="117.6" y="147.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.27%)</title><rect x="117.6" y="131.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (7 samples, 0.27%)</title><rect x="117.6" y="115.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.27%)</title><rect x="117.6" y="99.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.6" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="117.6" y="83.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="120.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (4 samples, 0.15%)</title><rect x="119.0" y="83.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (4 samples, 0.15%)</title><rect x="119.0" y="67.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="122.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (18 samples, 0.69%)</title><rect x="120.8" y="275.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (18 samples, 0.69%)</title><rect x="120.8" y="259.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.69%)</title><rect x="120.8" y="243.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.69%)</title><rect x="120.8" y="227.0" width="8.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="123.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (150 samples, 5.77%)</title><rect x="129.0" y="403.0" width="68.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.0" y="414.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.27%)</title><rect x="129.0" y="387.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="132.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.31%)</title><rect x="132.2" y="387.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.31%)</title><rect x="132.2" y="371.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (8 samples, 0.31%)</title><rect x="132.2" y="355.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="135.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.15%)</title><rect x="135.8" y="387.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.15%)</title><rect x="135.8" y="371.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="138.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (131 samples, 5.04%)</title><rect x="137.6" y="387.0" width="59.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.6" y="398.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (8 samples, 0.31%)</title><rect x="137.6" y="371.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (8 samples, 0.31%)</title><rect x="137.6" y="355.0" width="3.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="140.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (55 samples, 2.12%)</title><rect x="141.3" y="371.0" width="24.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.3" y="382.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (6 samples, 0.23%)</title><rect x="141.3" y="355.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="144.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (49 samples, 1.89%)</title><rect x="144.0" y="355.0" width="22.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.0" y="366.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.19%)</title><rect x="144.0" y="339.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="147.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.15%)</title><rect x="146.3" y="339.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.3" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.15%)</title><rect x="146.3" y="323.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="149.3" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.12%)</title><rect x="148.1" y="339.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="151.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.12%)</title><rect x="149.4" y="339.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.12%)</title><rect x="149.4" y="323.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="152.4" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (34 samples, 1.31%)</title><rect x="150.8" y="339.0" width="15.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (34 samples, 1.31%)</title><rect x="150.8" y="323.0" width="15.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (34 samples, 1.31%)</title><rect x="150.8" y="307.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.15%)</title><rect x="150.8" y="291.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (4 samples, 0.15%)</title><rect x="150.8" y="275.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.15%)</title><rect x="150.8" y="259.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.15%)</title><rect x="150.8" y="243.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.15%)</title><rect x="150.8" y="227.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (4 samples, 0.15%)</title><rect x="150.8" y="211.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.15%)</title><rect x="150.8" y="195.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.8" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="150.8" y="179.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="153.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="151.7" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="151.7" y="163.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="154.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (30 samples, 1.15%)</title><rect x="152.6" y="291.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (7 samples, 0.27%)</title><rect x="152.6" y="275.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="155.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.23%)</title><rect x="155.8" y="275.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.23%)</title><rect x="155.8" y="259.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$82/163585558.get$Lambda (2 samples, 0.08%)</title><rect x="155.8" y="243.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$82 (2 samples, 0.08%)</title><rect x="155.8" y="227.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="158.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.get$Lambda (4 samples, 0.15%)</title><rect x="156.7" y="243.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$91 (4 samples, 0.15%)</title><rect x="156.7" y="227.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="159.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.23%)</title><rect x="158.5" y="275.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.23%)</title><rect x="158.5" y="259.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.5" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.23%)</title><rect x="158.5" y="243.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="161.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (11 samples, 0.42%)</title><rect x="161.2" y="275.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.42%)</title><rect x="161.2" y="259.0" width="5.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="164.2" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.08%)</title><rect x="166.2" y="371.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="169.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (9 samples, 0.35%)</title><rect x="167.2" y="371.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.35%)</title><rect x="167.2" y="355.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="170.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.19%)</title><rect x="171.2" y="371.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (5 samples, 0.19%)</title><rect x="171.2" y="355.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="174.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.58%)</title><rect x="173.5" y="371.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.08%)</title><rect x="173.5" y="355.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="176.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.50%)</title><rect x="174.4" y="355.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.50%)</title><rect x="174.4" y="339.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (13 samples, 0.50%)</title><rect x="174.4" y="323.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.4" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.50%)</title><rect x="174.4" y="307.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.50%)</title><rect x="174.4" y="291.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.50%)</title><rect x="174.4" y="275.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (13 samples, 0.50%)</title><rect x="174.4" y="259.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (13 samples, 0.50%)</title><rect x="174.4" y="243.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (13 samples, 0.50%)</title><rect x="174.4" y="227.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (13 samples, 0.50%)</title><rect x="174.4" y="211.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.19%)</title><rect x="174.4" y="195.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.19%)</title><rect x="174.4" y="179.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.4" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.19%)</title><rect x="174.4" y="163.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="177.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.31%)</title><rect x="176.7" y="195.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (8 samples, 0.31%)</title><rect x="176.7" y="179.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (8 samples, 0.31%)</title><rect x="176.7" y="163.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.7" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="176.7" y="147.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="179.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (5 samples, 0.19%)</title><rect x="178.1" y="147.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (5 samples, 0.19%)</title><rect x="178.1" y="131.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="181.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (37 samples, 1.42%)</title><rect x="180.3" y="371.0" width="16.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (9 samples, 0.35%)</title><rect x="180.3" y="355.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (4 samples, 0.15%)</title><rect x="180.3" y="339.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (4 samples, 0.15%)</title><rect x="180.3" y="323.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="183.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.19%)</title><rect x="182.1" y="339.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.19%)</title><rect x="182.1" y="323.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="185.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (4 samples, 0.15%)</title><rect x="184.4" y="355.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (4 samples, 0.15%)</title><rect x="184.4" y="339.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="187.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.38%)</title><rect x="186.2" y="355.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.38%)</title><rect x="186.2" y="339.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.38%)</title><rect x="186.2" y="323.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (10 samples, 0.38%)</title><rect x="186.2" y="307.0" width="4.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="189.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (10 samples, 0.38%)</title><rect x="190.8" y="355.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.8" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (2 samples, 0.08%)</title><rect x="190.8" y="339.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.8" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (2 samples, 0.08%)</title><rect x="190.8" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="193.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (8 samples, 0.31%)</title><rect x="191.7" y="339.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.12%)</title><rect x="191.7" y="323.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.12%)</title><rect x="191.7" y="307.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$76/345481905.get$Lambda (3 samples, 0.12%)</title><rect x="191.7" y="291.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$76 (3 samples, 0.12%)</title><rect x="191.7" y="275.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="194.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (5 samples, 0.19%)</title><rect x="193.0" y="323.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.0" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (5 samples, 0.19%)</title><rect x="193.0" y="307.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="196.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (4 samples, 0.15%)</title><rect x="195.3" y="355.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (4 samples, 0.15%)</title><rect x="195.3" y="339.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="198.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.31%)</title><rect x="197.1" y="483.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.31%)</title><rect x="197.1" y="467.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.31%)</title><rect x="197.1" y="451.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.19%)</title><rect x="197.1" y="435.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="200.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.12%)</title><rect x="199.4" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.4" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="199.4" y="419.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="202.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (39 samples, 1.50%)</title><rect x="200.8" y="515.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.8" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.27%)</title><rect x="200.8" y="499.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="203.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.42%)</title><rect x="203.9" y="499.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.9" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.42%)</title><rect x="203.9" y="483.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="206.9" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.81%)</title><rect x="208.9" y="499.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.9" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.81%)</title><rect x="208.9" y="483.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.9" y="494.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.50%)</title><rect x="208.9" y="467.0" width="5.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="211.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="214.8" y="467.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="217.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.19%)</title><rect x="216.2" y="467.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.19%)</title><rect x="216.2" y="451.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.19%)</title><rect x="216.2" y="435.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.2" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.19%)</title><rect x="216.2" y="419.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="219.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.58%)</title><rect x="218.5" y="515.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.5" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.58%)</title><rect x="218.5" y="499.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.5" y="510.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.35%)</title><rect x="218.5" y="483.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="221.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="222.6" y="483.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="225.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="223.9" y="483.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.9" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="223.9" y="467.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.12%)</title><rect x="223.9" y="451.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.9" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="223.9" y="435.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="226.9" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=7339] (244 samples, 9.39%)</title><rect x="225.3" y="595.0" width="110.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="228.3" y="606.0">[NIO Selector..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (244 samples, 9.39%)</title><rect x="225.3" y="579.0" width="110.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.3" y="590.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/Session.process (244 samples, 9.39%)</title><rect x="225.3" y="563.0" width="110.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.3" y="574.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (244 samples, 9.39%)</title><rect x="225.3" y="547.0" width="110.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.3" y="558.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (244 samples, 9.39%)</title><rect x="225.3" y="531.0" width="110.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.3" y="542.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (206 samples, 7.93%)</title><rect x="225.3" y="515.0" width="93.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.3" y="526.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (206 samples, 7.93%)</title><rect x="225.3" y="499.0" width="93.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.3" y="510.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (203 samples, 7.81%)</title><rect x="225.3" y="483.0" width="92.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.3" y="494.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.38%)</title><rect x="225.3" y="467.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="228.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.38%)</title><rect x="225.3" y="451.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.19%)</title><rect x="225.3" y="435.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.3" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.19%)</title><rect x="225.3" y="419.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.3" y="430.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.19%)</title><rect x="225.3" y="403.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="228.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.19%)</title><rect x="227.6" y="435.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.6" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.19%)</title><rect x="227.6" y="419.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="230.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.19%)</title><rect x="229.8" y="467.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.19%)</title><rect x="229.8" y="451.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.19%)</title><rect x="229.8" y="435.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.19%)</title><rect x="229.8" y="419.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.08%)</title><rect x="229.8" y="403.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="232.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.12%)</title><rect x="230.7" y="403.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.7" y="414.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="230.7" y="387.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="233.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (188 samples, 7.24%)</title><rect x="232.1" y="467.0" width="85.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.1" y="478.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="232.1" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.04%)</title><rect x="232.1" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.04%)</title><rect x="232.1" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="232.1" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.1" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="232.1" y="387.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="235.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.19%)</title><rect x="232.6" y="451.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.19%)</title><rect x="232.6" y="435.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.19%)</title><rect x="232.6" y="419.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="235.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (182 samples, 7.01%)</title><rect x="234.8" y="451.0" width="82.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.8" y="462.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="234.8" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.04%)</title><rect x="234.8" y="419.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="237.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.42%)</title><rect x="235.3" y="435.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.3" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="235.3" y="419.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="238.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.19%)</title><rect x="236.6" y="419.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="239.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="238.9" y="419.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="241.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (170 samples, 6.54%)</title><rect x="240.3" y="435.0" width="77.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="243.3" y="446.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (24 samples, 0.92%)</title><rect x="240.3" y="419.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.92%)</title><rect x="240.3" y="403.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.92%)</title><rect x="240.3" y="387.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.92%)</title><rect x="240.3" y="371.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.92%)</title><rect x="240.3" y="355.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.38%)</title><rect x="240.3" y="339.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (10 samples, 0.38%)</title><rect x="240.3" y="323.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (10 samples, 0.38%)</title><rect x="240.3" y="307.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="243.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (10 samples, 0.38%)</title><rect x="240.3" y="291.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (10 samples, 0.38%)</title><rect x="240.3" y="275.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.38%)</title><rect x="240.3" y="259.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.15%)</title><rect x="240.3" y="243.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.15%)</title><rect x="240.3" y="227.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.3" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.15%)</title><rect x="240.3" y="211.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.15%)</title><rect x="240.3" y="195.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.15%)</title><rect x="240.3" y="179.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.15%)</title><rect x="240.3" y="163.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (4 samples, 0.15%)</title><rect x="240.3" y="147.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.15%)</title><rect x="240.3" y="131.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.15%)</title><rect x="240.3" y="115.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.3" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.15%)</title><rect x="240.3" y="99.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (4 samples, 0.15%)</title><rect x="240.3" y="83.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.15%)</title><rect x="240.3" y="67.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.04%)</title><rect x="240.3" y="51.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="243.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.12%)</title><rect x="240.7" y="51.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.7" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.12%)</title><rect x="240.7" y="35.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="243.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (6 samples, 0.23%)</title><rect x="242.1" y="243.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (6 samples, 0.23%)</title><rect x="242.1" y="227.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.23%)</title><rect x="242.1" y="211.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.23%)</title><rect x="242.1" y="195.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="245.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$141/1823291526.apply (14 samples, 0.54%)</title><rect x="244.8" y="339.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (14 samples, 0.54%)</title><rect x="244.8" y="323.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.54%)</title><rect x="244.8" y="307.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.54%)</title><rect x="244.8" y="291.0" width="6.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="247.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.12%)</title><rect x="251.2" y="419.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.12%)</title><rect x="251.2" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$155/1514748197.apply (3 samples, 0.12%)</title><rect x="251.2" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (3 samples, 0.12%)</title><rect x="251.2" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (3 samples, 0.12%)</title><rect x="251.2" y="355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.2" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.12%)</title><rect x="251.2" y="339.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.2" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.12%)</title><rect x="251.2" y="323.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="254.2" y="334.0"></text>
</g>
<g>
<title>java.util.NoSuchElementException (1 samples, 0.04%)</title><rect x="252.5" y="419.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="255.5" y="430.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (32 samples, 1.23%)</title><rect x="253.0" y="419.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="256.0" y="430.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (32 samples, 1.23%)</title><rect x="253.0" y="403.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (32 samples, 1.23%)</title><rect x="253.0" y="387.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (32 samples, 1.23%)</title><rect x="253.0" y="371.0" width="14.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (32 samples, 1.23%)</title><rect x="253.0" y="355.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (32 samples, 1.23%)</title><rect x="253.0" y="339.0" width="14.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.0" y="350.0"></text>
</g>
<g>
<title>int[] (8 samples, 0.31%)</title><rect x="253.0" y="323.0" width="3.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="256.0" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.31%)</title><rect x="256.6" y="323.0" width="3.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="259.6" y="334.0"></text>
</g>
<g>
<title>long[] (13 samples, 0.50%)</title><rect x="260.3" y="323.0" width="5.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="263.3" y="334.0"></text>
</g>
<g>
<title>short[] (3 samples, 0.12%)</title><rect x="266.2" y="323.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="269.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.12%)</title><rect x="267.5" y="419.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="270.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.12%)</title><rect x="267.5" y="403.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.12%)</title><rect x="267.5" y="387.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.12%)</title><rect x="267.5" y="371.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="270.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2 samples, 0.08%)</title><rect x="268.9" y="419.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.08%)</title><rect x="268.9" y="403.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.08%)</title><rect x="268.9" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.08%)</title><rect x="268.9" y="371.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="271.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (105 samples, 4.04%)</title><rect x="269.8" y="419.0" width="47.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.8" y="430.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.12%)</title><rect x="269.8" y="403.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.8" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.12%)</title><rect x="269.8" y="387.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="272.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (14 samples, 0.54%)</title><rect x="271.2" y="403.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (14 samples, 0.54%)</title><rect x="271.2" y="387.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.2" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.08%)</title><rect x="271.2" y="371.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="274.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.23%)</title><rect x="272.1" y="371.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.23%)</title><rect x="272.1" y="355.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.23%)</title><rect x="272.1" y="339.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.23%)</title><rect x="272.1" y="323.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.08%)</title><rect x="272.1" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.08%)</title><rect x="272.1" y="291.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.1" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.08%)</title><rect x="272.1" y="275.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.08%)</title><rect x="272.1" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.08%)</title><rect x="272.1" y="243.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.08%)</title><rect x="272.1" y="227.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (2 samples, 0.08%)</title><rect x="272.1" y="211.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.08%)</title><rect x="272.1" y="195.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.08%)</title><rect x="272.1" y="179.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.08%)</title><rect x="272.1" y="163.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (2 samples, 0.08%)</title><rect x="272.1" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2 samples, 0.08%)</title><rect x="272.1" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.1" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.04%)</title><rect x="272.1" y="115.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="275.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.04%)</title><rect x="272.5" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.04%)</title><rect x="272.5" y="99.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="275.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (4 samples, 0.15%)</title><rect x="273.0" y="307.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="276.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4 samples, 0.15%)</title><rect x="273.0" y="291.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.0" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.15%)</title><rect x="273.0" y="275.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.0" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.15%)</title><rect x="273.0" y="259.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="276.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.08%)</title><rect x="274.8" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.08%)</title><rect x="274.8" y="355.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="277.8" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.04%)</title><rect x="275.7" y="371.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="278.7" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.12%)</title><rect x="276.2" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.12%)</title><rect x="276.2" y="355.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="279.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.12%)</title><rect x="277.5" y="403.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="277.5" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="277.5" y="371.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="280.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="277.5" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (1 samples, 0.04%)</title><rect x="277.5" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.5" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (1 samples, 0.04%)</title><rect x="277.5" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="280.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.08%)</title><rect x="278.0" y="387.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="281.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="278.0" y="371.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="278.0" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/805521818.get$Lambda (2 samples, 0.08%)</title><rect x="278.0" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.0" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$137 (2 samples, 0.08%)</title><rect x="278.0" y="323.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="281.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.58%)</title><rect x="278.9" y="403.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.9" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.15%)</title><rect x="278.9" y="387.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="281.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (11 samples, 0.42%)</title><rect x="280.7" y="387.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.42%)</title><rect x="280.7" y="371.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.42%)</title><rect x="280.7" y="355.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 0.42%)</title><rect x="280.7" y="339.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 0.42%)</title><rect x="280.7" y="323.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 0.42%)</title><rect x="280.7" y="307.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.42%)</title><rect x="280.7" y="291.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.12%)</title><rect x="280.7" y="275.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.12%)</title><rect x="280.7" y="259.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.7" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.12%)</title><rect x="280.7" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.12%)</title><rect x="280.7" y="227.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.12%)</title><rect x="280.7" y="211.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.12%)</title><rect x="280.7" y="195.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (3 samples, 0.12%)</title><rect x="280.7" y="179.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.12%)</title><rect x="280.7" y="163.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.12%)</title><rect x="280.7" y="147.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.12%)</title><rect x="280.7" y="131.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (3 samples, 0.12%)</title><rect x="280.7" y="115.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (3 samples, 0.12%)</title><rect x="280.7" y="99.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.7" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.04%)</title><rect x="280.7" y="83.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="283.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="281.2" y="83.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="281.2" y="67.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="284.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (8 samples, 0.31%)</title><rect x="282.1" y="275.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (8 samples, 0.31%)</title><rect x="282.1" y="259.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.31%)</title><rect x="282.1" y="243.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.31%)</title><rect x="282.1" y="227.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="285.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (70 samples, 2.69%)</title><rect x="285.7" y="403.0" width="31.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.7" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.12%)</title><rect x="285.7" y="387.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="288.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.04%)</title><rect x="287.1" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.04%)</title><rect x="287.1" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.04%)</title><rect x="287.1" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="290.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.08%)</title><rect x="287.5" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.08%)</title><rect x="287.5" y="371.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="290.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (64 samples, 2.46%)</title><rect x="288.4" y="387.0" width="29.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.4" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.12%)</title><rect x="288.4" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.12%)</title><rect x="288.4" y="355.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="291.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (25 samples, 0.96%)</title><rect x="289.8" y="371.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (25 samples, 0.96%)</title><rect x="289.8" y="355.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.8" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.15%)</title><rect x="289.8" y="339.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="292.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.12%)</title><rect x="291.6" y="339.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.6" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.12%)</title><rect x="291.6" y="323.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="294.6" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.08%)</title><rect x="293.0" y="339.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="296.0" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (16 samples, 0.62%)</title><rect x="293.9" y="339.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (16 samples, 0.62%)</title><rect x="293.9" y="323.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (16 samples, 0.62%)</title><rect x="293.9" y="307.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="293.9" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (1 samples, 0.04%)</title><rect x="293.9" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="293.9" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="293.9" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="293.9" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (1 samples, 0.04%)</title><rect x="293.9" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="296.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="293.9" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.9" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.04%)</title><rect x="293.9" y="179.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="296.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (15 samples, 0.58%)</title><rect x="294.3" y="291.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.3" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (4 samples, 0.15%)</title><rect x="294.3" y="275.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="297.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.15%)</title><rect x="296.1" y="275.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="299.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.15%)</title><rect x="296.1" y="259.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.get$Lambda (4 samples, 0.15%)</title><rect x="296.1" y="243.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$91 (4 samples, 0.15%)</title><rect x="296.1" y="227.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="299.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (7 samples, 0.27%)</title><rect x="298.0" y="275.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.27%)</title><rect x="298.0" y="259.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="301.0" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.12%)</title><rect x="301.1" y="371.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="304.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.08%)</title><rect x="302.5" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.08%)</title><rect x="302.5" y="355.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="305.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.19%)</title><rect x="303.4" y="371.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (5 samples, 0.19%)</title><rect x="303.4" y="355.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="306.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.35%)</title><rect x="305.7" y="371.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.7" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.04%)</title><rect x="305.7" y="355.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="308.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.31%)</title><rect x="306.1" y="355.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.31%)</title><rect x="306.1" y="339.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.31%)</title><rect x="306.1" y="323.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.1" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.31%)</title><rect x="306.1" y="307.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="309.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.31%)</title><rect x="306.1" y="291.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.31%)</title><rect x="306.1" y="275.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.31%)</title><rect x="306.1" y="259.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="309.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (8 samples, 0.31%)</title><rect x="306.1" y="243.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.31%)</title><rect x="306.1" y="227.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.31%)</title><rect x="306.1" y="211.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="306.1" y="195.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="306.1" y="179.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.1" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.12%)</title><rect x="306.1" y="163.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="309.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.19%)</title><rect x="307.5" y="195.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (5 samples, 0.19%)</title><rect x="307.5" y="179.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.19%)</title><rect x="307.5" y="163.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.5" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="307.5" y="147.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="310.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="308.9" y="147.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="308.9" y="131.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="311.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (17 samples, 0.65%)</title><rect x="309.8" y="371.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.23%)</title><rect x="309.8" y="355.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (3 samples, 0.12%)</title><rect x="309.8" y="339.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (3 samples, 0.12%)</title><rect x="309.8" y="323.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="312.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.12%)</title><rect x="311.1" y="339.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.12%)</title><rect x="311.1" y="323.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="314.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.04%)</title><rect x="312.5" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.04%)</title><rect x="312.5" y="339.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="315.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.15%)</title><rect x="312.9" y="355.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.15%)</title><rect x="312.9" y="339.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.15%)</title><rect x="312.9" y="323.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="315.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (4 samples, 0.15%)</title><rect x="312.9" y="307.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="315.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (4 samples, 0.15%)</title><rect x="314.8" y="355.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (4 samples, 0.15%)</title><rect x="314.8" y="339.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (4 samples, 0.15%)</title><rect x="314.8" y="323.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.8" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (4 samples, 0.15%)</title><rect x="314.8" y="307.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="317.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (2 samples, 0.08%)</title><rect x="316.6" y="355.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.6" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (2 samples, 0.08%)</title><rect x="316.6" y="339.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="319.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.12%)</title><rect x="317.5" y="483.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.12%)</title><rect x="317.5" y="467.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.12%)</title><rect x="317.5" y="451.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.08%)</title><rect x="317.5" y="435.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="320.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="318.4" y="435.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.4" y="446.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="318.4" y="419.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="321.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (28 samples, 1.08%)</title><rect x="318.9" y="515.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.9" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.12%)</title><rect x="318.9" y="499.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="321.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.38%)</title><rect x="320.2" y="499.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.38%)</title><rect x="320.2" y="483.0" width="4.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="323.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.58%)</title><rect x="324.8" y="499.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="327.8" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.58%)</title><rect x="324.8" y="483.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.8" y="494.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.42%)</title><rect x="324.8" y="467.0" width="5.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="327.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="329.8" y="467.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="332.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="331.1" y="467.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="331.1" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.04%)</title><rect x="331.1" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.1" y="446.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="331.1" y="419.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="334.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.38%)</title><rect x="331.6" y="515.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.6" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.38%)</title><rect x="331.6" y="499.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.6" y="510.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.19%)</title><rect x="331.6" y="483.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="334.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.08%)</title><rect x="333.8" y="483.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="336.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="334.7" y="483.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="334.7" y="467.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.12%)</title><rect x="334.7" y="451.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.7" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="334.7" y="435.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="337.7" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=7340] (220 samples, 8.47%)</title><rect x="336.1" y="595.0" width="99.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="339.1" y="606.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (220 samples, 8.47%)</title><rect x="336.1" y="579.0" width="99.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.1" y="590.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/Session.process (220 samples, 8.47%)</title><rect x="336.1" y="563.0" width="99.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.1" y="574.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (220 samples, 8.47%)</title><rect x="336.1" y="547.0" width="99.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.1" y="558.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (220 samples, 8.47%)</title><rect x="336.1" y="531.0" width="99.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.1" y="542.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (188 samples, 7.24%)</title><rect x="336.1" y="515.0" width="85.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.1" y="526.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (188 samples, 7.24%)</title><rect x="336.1" y="499.0" width="85.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.1" y="510.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (184 samples, 7.08%)</title><rect x="336.1" y="483.0" width="83.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.1" y="494.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.19%)</title><rect x="336.1" y="467.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="339.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.19%)</title><rect x="336.1" y="451.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.15%)</title><rect x="336.1" y="435.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.15%)</title><rect x="336.1" y="419.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.1" y="430.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="336.1" y="403.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="339.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.04%)</title><rect x="337.9" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.9" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.04%)</title><rect x="337.9" y="419.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="340.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.27%)</title><rect x="338.4" y="467.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.27%)</title><rect x="338.4" y="451.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="341.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.27%)</title><rect x="338.4" y="435.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.27%)</title><rect x="338.4" y="419.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="341.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="338.4" y="403.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="341.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.15%)</title><rect x="339.7" y="403.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.7" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="339.7" y="387.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="342.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (172 samples, 6.62%)</title><rect x="341.6" y="467.0" width="78.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.6" y="478.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (172 samples, 6.62%)</title><rect x="341.6" y="451.0" width="78.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.6" y="462.0">ru/mail/p..</text>
</g>
<g>
<title>byte[] (2 samples, 0.08%)</title><rect x="341.6" y="435.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="344.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.12%)</title><rect x="342.5" y="435.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.5" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.12%)</title><rect x="342.5" y="419.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="345.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.27%)</title><rect x="343.8" y="435.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="346.8" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="343.8" y="419.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="346.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.12%)</title><rect x="345.7" y="419.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="348.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (160 samples, 6.16%)</title><rect x="347.0" y="435.0" width="72.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.0" y="446.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (17 samples, 0.65%)</title><rect x="347.0" y="419.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (17 samples, 0.65%)</title><rect x="347.0" y="403.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (17 samples, 0.65%)</title><rect x="347.0" y="387.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (17 samples, 0.65%)</title><rect x="347.0" y="371.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (17 samples, 0.65%)</title><rect x="347.0" y="355.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.23%)</title><rect x="347.0" y="339.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.23%)</title><rect x="347.0" y="323.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.23%)</title><rect x="347.0" y="307.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.23%)</title><rect x="347.0" y="291.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.23%)</title><rect x="347.0" y="275.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.23%)</title><rect x="347.0" y="259.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.15%)</title><rect x="347.0" y="243.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.15%)</title><rect x="347.0" y="227.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="350.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.15%)</title><rect x="347.0" y="211.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.15%)</title><rect x="347.0" y="195.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.15%)</title><rect x="347.0" y="179.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.15%)</title><rect x="347.0" y="163.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (4 samples, 0.15%)</title><rect x="347.0" y="147.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.15%)</title><rect x="347.0" y="131.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.15%)</title><rect x="347.0" y="115.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="347.0" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="347.0" y="83.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.0" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1 samples, 0.04%)</title><rect x="347.0" y="67.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="350.0" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.12%)</title><rect x="347.5" y="99.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (3 samples, 0.12%)</title><rect x="347.5" y="83.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="350.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (3 samples, 0.12%)</title><rect x="347.5" y="67.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="347.5" y="51.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="350.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.04%)</title><rect x="348.4" y="51.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.4" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.04%)</title><rect x="348.4" y="35.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="351.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (2 samples, 0.08%)</title><rect x="348.8" y="243.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (2 samples, 0.08%)</title><rect x="348.8" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.08%)</title><rect x="348.8" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.08%)</title><rect x="348.8" y="195.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="351.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$141/1823291526.apply (11 samples, 0.42%)</title><rect x="349.7" y="339.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (11 samples, 0.42%)</title><rect x="349.7" y="323.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.42%)</title><rect x="349.7" y="307.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.42%)</title><rect x="349.7" y="291.0" width="5.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="352.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.19%)</title><rect x="354.7" y="419.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.19%)</title><rect x="354.7" y="403.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$155/1514748197.apply (5 samples, 0.19%)</title><rect x="354.7" y="387.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (5 samples, 0.19%)</title><rect x="354.7" y="371.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5 samples, 0.19%)</title><rect x="354.7" y="355.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.19%)</title><rect x="354.7" y="339.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.19%)</title><rect x="354.7" y="323.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="357.7" y="334.0"></text>
</g>
<g>
<title>java.util.NoSuchElementException (1 samples, 0.04%)</title><rect x="357.0" y="419.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="360.0" y="430.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (25 samples, 0.96%)</title><rect x="357.5" y="419.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.5" y="430.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (25 samples, 0.96%)</title><rect x="357.5" y="403.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.5" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (25 samples, 0.96%)</title><rect x="357.5" y="387.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (25 samples, 0.96%)</title><rect x="357.5" y="371.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (25 samples, 0.96%)</title><rect x="357.5" y="355.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.5" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (25 samples, 0.96%)</title><rect x="357.5" y="339.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.5" y="350.0"></text>
</g>
<g>
<title>int[] (6 samples, 0.23%)</title><rect x="357.5" y="323.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="360.5" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.27%)</title><rect x="360.2" y="323.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="363.2" y="334.0"></text>
</g>
<g>
<title>long[] (11 samples, 0.42%)</title><rect x="363.4" y="323.0" width="5.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="366.4" y="334.0"></text>
</g>
<g>
<title>short[] (1 samples, 0.04%)</title><rect x="368.4" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="371.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (9 samples, 0.35%)</title><rect x="368.8" y="419.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.35%)</title><rect x="368.8" y="403.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.35%)</title><rect x="368.8" y="387.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.35%)</title><rect x="368.8" y="371.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="371.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1 samples, 0.04%)</title><rect x="372.9" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="372.9" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="372.9" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.04%)</title><rect x="372.9" y="371.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="375.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (102 samples, 3.93%)</title><rect x="373.4" y="419.0" width="46.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.4" y="430.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.12%)</title><rect x="373.4" y="403.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.4" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.12%)</title><rect x="373.4" y="387.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="376.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (21 samples, 0.81%)</title><rect x="374.7" y="403.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.7" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.04%)</title><rect x="374.7" y="387.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="377.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (20 samples, 0.77%)</title><rect x="375.2" y="387.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.2" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.04%)</title><rect x="375.2" y="371.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="378.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (13 samples, 0.50%)</title><rect x="375.6" y="371.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (13 samples, 0.50%)</title><rect x="375.6" y="355.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (13 samples, 0.50%)</title><rect x="375.6" y="339.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.50%)</title><rect x="375.6" y="323.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.27%)</title><rect x="375.6" y="307.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.27%)</title><rect x="375.6" y="291.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.6" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.27%)</title><rect x="375.6" y="275.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.27%)</title><rect x="375.6" y="259.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.27%)</title><rect x="375.6" y="243.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.27%)</title><rect x="375.6" y="227.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (7 samples, 0.27%)</title><rect x="375.6" y="211.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.27%)</title><rect x="375.6" y="195.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.27%)</title><rect x="375.6" y="179.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="378.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.27%)</title><rect x="375.6" y="163.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (7 samples, 0.27%)</title><rect x="375.6" y="147.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.27%)</title><rect x="375.6" y="131.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.6" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (5 samples, 0.19%)</title><rect x="375.6" y="115.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="378.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="377.9" y="115.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.9" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="377.9" y="99.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="380.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (6 samples, 0.23%)</title><rect x="378.8" y="307.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (6 samples, 0.23%)</title><rect x="378.8" y="291.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.23%)</title><rect x="378.8" y="275.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.8" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.23%)</title><rect x="378.8" y="259.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="381.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.04%)</title><rect x="381.5" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.04%)</title><rect x="381.5" y="355.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="384.5" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.12%)</title><rect x="382.0" y="371.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="385.0" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.08%)</title><rect x="383.3" y="371.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.08%)</title><rect x="383.3" y="355.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="386.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.12%)</title><rect x="384.3" y="403.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.12%)</title><rect x="384.3" y="387.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.12%)</title><rect x="384.3" y="371.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (3 samples, 0.12%)</title><rect x="384.3" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.3" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (3 samples, 0.12%)</title><rect x="384.3" y="339.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="387.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.08%)</title><rect x="385.6" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.08%)</title><rect x="385.6" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="385.6" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="385.6" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (2 samples, 0.08%)</title><rect x="385.6" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.6" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (2 samples, 0.08%)</title><rect x="385.6" y="323.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="388.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.35%)</title><rect x="386.5" y="403.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.5" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.12%)</title><rect x="386.5" y="387.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="389.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.23%)</title><rect x="387.9" y="387.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.23%)</title><rect x="387.9" y="371.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.23%)</title><rect x="387.9" y="355.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.23%)</title><rect x="387.9" y="339.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.23%)</title><rect x="387.9" y="323.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.23%)</title><rect x="387.9" y="307.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.23%)</title><rect x="387.9" y="291.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.08%)</title><rect x="387.9" y="275.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.08%)</title><rect x="387.9" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.9" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.08%)</title><rect x="387.9" y="243.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.08%)</title><rect x="387.9" y="227.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.08%)</title><rect x="387.9" y="211.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.08%)</title><rect x="387.9" y="195.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (2 samples, 0.08%)</title><rect x="387.9" y="179.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.08%)</title><rect x="387.9" y="163.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.08%)</title><rect x="387.9" y="147.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.08%)</title><rect x="387.9" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (2 samples, 0.08%)</title><rect x="387.9" y="115.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2 samples, 0.08%)</title><rect x="387.9" y="99.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="387.9" y="83.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="387.9" y="67.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="390.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (4 samples, 0.15%)</title><rect x="388.8" y="275.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4 samples, 0.15%)</title><rect x="388.8" y="259.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.15%)</title><rect x="388.8" y="243.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.15%)</title><rect x="388.8" y="227.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="391.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (64 samples, 2.46%)</title><rect x="390.6" y="403.0" width="29.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.6" y="414.0">ru..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.19%)</title><rect x="390.6" y="387.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.19%)</title><rect x="390.6" y="371.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.19%)</title><rect x="390.6" y="355.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="393.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.12%)</title><rect x="392.9" y="387.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.12%)</title><rect x="392.9" y="371.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="395.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (56 samples, 2.16%)</title><rect x="394.2" y="387.0" width="25.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.2" y="398.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.12%)</title><rect x="394.2" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.12%)</title><rect x="394.2" y="355.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="397.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (20 samples, 0.77%)</title><rect x="395.6" y="371.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (20 samples, 0.77%)</title><rect x="395.6" y="355.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.6" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.08%)</title><rect x="395.6" y="339.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="398.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.04%)</title><rect x="396.5" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.5" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.04%)</title><rect x="396.5" y="323.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="399.5" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.08%)</title><rect x="397.0" y="339.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="400.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.08%)</title><rect x="397.9" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.08%)</title><rect x="397.9" y="323.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="400.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.50%)</title><rect x="398.8" y="339.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.50%)</title><rect x="398.8" y="323.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.50%)</title><rect x="398.8" y="307.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.08%)</title><rect x="398.8" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (2 samples, 0.08%)</title><rect x="398.8" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.08%)</title><rect x="398.8" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.08%)</title><rect x="398.8" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.08%)</title><rect x="398.8" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (2 samples, 0.08%)</title><rect x="398.8" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2 samples, 0.08%)</title><rect x="398.8" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="398.8" y="179.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.8" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="398.8" y="163.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="401.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (11 samples, 0.42%)</title><rect x="399.7" y="291.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (2 samples, 0.08%)</title><rect x="399.7" y="275.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="402.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="400.6" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="400.6" y="259.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$82/163585558.get$Lambda (1 samples, 0.04%)</title><rect x="400.6" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="403.6" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$82 (1 samples, 0.04%)</title><rect x="400.6" y="227.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="403.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.get$Lambda (1 samples, 0.04%)</title><rect x="401.1" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$91 (1 samples, 0.04%)</title><rect x="401.1" y="227.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="404.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.15%)</title><rect x="401.5" y="275.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.15%)</title><rect x="401.5" y="259.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.5" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.15%)</title><rect x="401.5" y="243.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="404.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="403.3" y="275.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.12%)</title><rect x="403.3" y="259.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="406.3" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.19%)</title><rect x="404.7" y="371.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="407.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="407.0" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="407.0" y="355.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="410.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.12%)</title><rect x="407.4" y="371.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (3 samples, 0.12%)</title><rect x="407.4" y="355.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="410.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.19%)</title><rect x="408.8" y="371.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.08%)</title><rect x="408.8" y="355.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="411.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.12%)</title><rect x="409.7" y="355.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.12%)</title><rect x="409.7" y="339.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.12%)</title><rect x="409.7" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.12%)</title><rect x="409.7" y="307.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.12%)</title><rect x="409.7" y="291.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="412.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.12%)</title><rect x="409.7" y="275.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.12%)</title><rect x="409.7" y="259.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (3 samples, 0.12%)</title><rect x="409.7" y="243.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.12%)</title><rect x="409.7" y="227.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.12%)</title><rect x="409.7" y="211.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="409.7" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="412.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="409.7" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.7" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1 samples, 0.04%)</title><rect x="409.7" y="163.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="412.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.08%)</title><rect x="410.1" y="195.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (2 samples, 0.08%)</title><rect x="410.1" y="179.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2 samples, 0.08%)</title><rect x="410.1" y="163.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.1" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1 samples, 0.04%)</title><rect x="410.1" y="147.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="413.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.04%)</title><rect x="410.6" y="147.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.04%)</title><rect x="410.6" y="131.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="413.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (19 samples, 0.73%)</title><rect x="411.1" y="371.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.19%)</title><rect x="411.1" y="355.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (1 samples, 0.04%)</title><rect x="411.1" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (1 samples, 0.04%)</title><rect x="411.1" y="323.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="414.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.15%)</title><rect x="411.5" y="339.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.5" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.15%)</title><rect x="411.5" y="323.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="414.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.04%)</title><rect x="413.3" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.04%)</title><rect x="413.3" y="339.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="416.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.15%)</title><rect x="413.8" y="355.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.15%)</title><rect x="413.8" y="339.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.15%)</title><rect x="413.8" y="323.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (4 samples, 0.15%)</title><rect x="413.8" y="307.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="416.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (6 samples, 0.23%)</title><rect x="415.6" y="355.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (6 samples, 0.23%)</title><rect x="415.6" y="339.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="415.6" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="415.6" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$76/345481905.get$Lambda (1 samples, 0.04%)</title><rect x="415.6" y="291.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$76 (1 samples, 0.04%)</title><rect x="415.6" y="275.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="418.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (5 samples, 0.19%)</title><rect x="416.1" y="323.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (5 samples, 0.19%)</title><rect x="416.1" y="307.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="419.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (3 samples, 0.12%)</title><rect x="418.3" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (3 samples, 0.12%)</title><rect x="418.3" y="339.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="421.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.15%)</title><rect x="419.7" y="483.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.15%)</title><rect x="419.7" y="467.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.15%)</title><rect x="419.7" y="451.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="419.7" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="422.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.12%)</title><rect x="420.1" y="435.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.1" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="420.1" y="419.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="423.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (24 samples, 0.92%)</title><rect x="421.5" y="515.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.5" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.15%)</title><rect x="421.5" y="499.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="424.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.31%)</title><rect x="423.3" y="499.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.31%)</title><rect x="423.3" y="483.0" width="3.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="426.3" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.46%)</title><rect x="427.0" y="499.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.0" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.46%)</title><rect x="427.0" y="483.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.0" y="494.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.31%)</title><rect x="427.0" y="467.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="430.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.15%)</title><rect x="430.6" y="467.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.15%)</title><rect x="430.6" y="451.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.15%)</title><rect x="430.6" y="435.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.6" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="430.6" y="419.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="433.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.31%)</title><rect x="432.4" y="515.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="435.4" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.31%)</title><rect x="432.4" y="499.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.4" y="510.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.04%)</title><rect x="432.4" y="483.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="435.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.08%)</title><rect x="432.9" y="483.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="435.9" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.19%)</title><rect x="433.8" y="483.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.19%)</title><rect x="433.8" y="467.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.19%)</title><rect x="433.8" y="451.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.8" y="462.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.19%)</title><rect x="433.8" y="435.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="436.8" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=7341] (279 samples, 10.74%)</title><rect x="436.0" y="595.0" width="126.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="439.0" y="606.0">[NIO Selector #3..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (279 samples, 10.74%)</title><rect x="436.0" y="579.0" width="126.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.0" y="590.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/Session.process (279 samples, 10.74%)</title><rect x="436.0" y="563.0" width="126.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.0" y="574.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (279 samples, 10.74%)</title><rect x="436.0" y="547.0" width="126.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.0" y="558.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (279 samples, 10.74%)</title><rect x="436.0" y="531.0" width="126.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.0" y="542.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (237 samples, 9.12%)</title><rect x="436.0" y="515.0" width="107.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.0" y="526.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (237 samples, 9.12%)</title><rect x="436.0" y="499.0" width="107.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.0" y="510.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (235 samples, 9.05%)</title><rect x="436.0" y="483.0" width="106.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.0" y="494.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 0.73%)</title><rect x="436.0" y="467.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 0.73%)</title><rect x="436.0" y="451.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.46%)</title><rect x="436.0" y="435.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.0" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12 samples, 0.46%)</title><rect x="436.0" y="419.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.0" y="430.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.46%)</title><rect x="436.0" y="403.0" width="5.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="439.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.27%)</title><rect x="441.5" y="435.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.5" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.27%)</title><rect x="441.5" y="419.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="444.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.23%)</title><rect x="444.7" y="467.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.23%)</title><rect x="444.7" y="451.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="447.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.23%)</title><rect x="444.7" y="435.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.23%)</title><rect x="444.7" y="419.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.08%)</title><rect x="444.7" y="403.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="447.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.15%)</title><rect x="445.6" y="403.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.6" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="445.6" y="387.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="448.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (210 samples, 8.08%)</title><rect x="447.4" y="467.0" width="95.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.4" y="478.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="447.4" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.04%)</title><rect x="447.4" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.04%)</title><rect x="447.4" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="447.4" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.4" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="447.4" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="450.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.19%)</title><rect x="447.8" y="451.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.19%)</title><rect x="447.8" y="435.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.19%)</title><rect x="447.8" y="419.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="450.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (204 samples, 7.85%)</title><rect x="450.1" y="451.0" width="92.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.1" y="462.0">ru/mail/pol..</text>
</g>
<g>
<title>byte[] (2 samples, 0.08%)</title><rect x="450.1" y="435.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="453.1" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.08%)</title><rect x="451.0" y="435.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.08%)</title><rect x="451.0" y="419.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="454.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.42%)</title><rect x="451.9" y="435.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="454.9" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.19%)</title><rect x="451.9" y="419.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="454.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.12%)</title><rect x="454.2" y="419.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="457.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="455.6" y="419.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="458.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (189 samples, 7.27%)</title><rect x="456.9" y="435.0" width="85.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.9" y="446.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (25 samples, 0.96%)</title><rect x="456.9" y="419.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (25 samples, 0.96%)</title><rect x="456.9" y="403.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (25 samples, 0.96%)</title><rect x="456.9" y="387.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (25 samples, 0.96%)</title><rect x="456.9" y="371.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.96%)</title><rect x="456.9" y="355.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.77%)</title><rect x="456.9" y="339.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (20 samples, 0.77%)</title><rect x="456.9" y="323.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (20 samples, 0.77%)</title><rect x="456.9" y="307.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="459.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (20 samples, 0.77%)</title><rect x="456.9" y="291.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (20 samples, 0.77%)</title><rect x="456.9" y="275.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (20 samples, 0.77%)</title><rect x="456.9" y="259.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.42%)</title><rect x="456.9" y="243.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.42%)</title><rect x="456.9" y="227.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.9" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.42%)</title><rect x="456.9" y="211.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.42%)</title><rect x="456.9" y="195.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.42%)</title><rect x="456.9" y="179.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (11 samples, 0.42%)</title><rect x="456.9" y="163.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (11 samples, 0.42%)</title><rect x="456.9" y="147.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (11 samples, 0.42%)</title><rect x="456.9" y="131.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (11 samples, 0.42%)</title><rect x="456.9" y="115.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.15%)</title><rect x="456.9" y="99.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.15%)</title><rect x="456.9" y="83.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.9" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.15%)</title><rect x="456.9" y="67.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="459.9" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.27%)</title><rect x="458.7" y="99.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (7 samples, 0.27%)</title><rect x="458.7" y="83.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.27%)</title><rect x="458.7" y="67.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="458.7" y="51.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="461.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (5 samples, 0.19%)</title><rect x="459.7" y="51.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.7" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (5 samples, 0.19%)</title><rect x="459.7" y="35.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="462.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (9 samples, 0.35%)</title><rect x="461.9" y="243.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (9 samples, 0.35%)</title><rect x="461.9" y="227.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.35%)</title><rect x="461.9" y="211.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.35%)</title><rect x="461.9" y="195.0" width="4.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="464.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$141/1823291526.apply (5 samples, 0.19%)</title><rect x="466.0" y="339.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5 samples, 0.19%)</title><rect x="466.0" y="323.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.19%)</title><rect x="466.0" y="307.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.19%)</title><rect x="466.0" y="291.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="469.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.08%)</title><rect x="468.3" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.08%)</title><rect x="468.3" y="403.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$155/1514748197.apply (2 samples, 0.08%)</title><rect x="468.3" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (2 samples, 0.08%)</title><rect x="468.3" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (2 samples, 0.08%)</title><rect x="468.3" y="355.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.08%)</title><rect x="468.3" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.08%)</title><rect x="468.3" y="323.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="471.3" y="334.0"></text>
</g>
<g>
<title>java.util.NoSuchElementException (2 samples, 0.08%)</title><rect x="469.2" y="419.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="472.2" y="430.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (34 samples, 1.31%)</title><rect x="470.1" y="419.0" width="15.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.1" y="430.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (34 samples, 1.31%)</title><rect x="470.1" y="403.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (34 samples, 1.31%)</title><rect x="470.1" y="387.0" width="15.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (34 samples, 1.31%)</title><rect x="470.1" y="371.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (34 samples, 1.31%)</title><rect x="470.1" y="355.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="473.1" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (34 samples, 1.31%)</title><rect x="470.1" y="339.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="473.1" y="350.0"></text>
</g>
<g>
<title>int[] (9 samples, 0.35%)</title><rect x="470.1" y="323.0" width="4.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="473.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.35%)</title><rect x="474.2" y="323.0" width="4.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="477.2" y="334.0"></text>
</g>
<g>
<title>long[] (12 samples, 0.46%)</title><rect x="478.3" y="323.0" width="5.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="481.3" y="334.0"></text>
</g>
<g>
<title>short[] (4 samples, 0.15%)</title><rect x="483.7" y="323.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="486.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.23%)</title><rect x="485.5" y="419.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.23%)</title><rect x="485.5" y="403.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.23%)</title><rect x="485.5" y="387.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.23%)</title><rect x="485.5" y="371.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="488.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1 samples, 0.04%)</title><rect x="488.3" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="488.3" y="403.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="488.3" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.04%)</title><rect x="488.3" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="491.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (119 samples, 4.58%)</title><rect x="488.7" y="419.0" width="54.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.7" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.15%)</title><rect x="488.7" y="403.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.7" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (4 samples, 0.15%)</title><rect x="488.7" y="387.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="491.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (25 samples, 0.96%)</title><rect x="490.5" y="403.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.5" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.04%)</title><rect x="490.5" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="493.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (24 samples, 0.92%)</title><rect x="491.0" y="387.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.0" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.04%)</title><rect x="491.0" y="371.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="494.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (18 samples, 0.69%)</title><rect x="491.4" y="371.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.69%)</title><rect x="491.4" y="355.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.69%)</title><rect x="491.4" y="339.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.69%)</title><rect x="491.4" y="323.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.19%)</title><rect x="491.4" y="307.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.19%)</title><rect x="491.4" y="291.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.4" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.19%)</title><rect x="491.4" y="275.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.19%)</title><rect x="491.4" y="259.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.19%)</title><rect x="491.4" y="243.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.19%)</title><rect x="491.4" y="227.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (5 samples, 0.19%)</title><rect x="491.4" y="211.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.19%)</title><rect x="491.4" y="195.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.19%)</title><rect x="491.4" y="179.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.19%)</title><rect x="491.4" y="163.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (5 samples, 0.19%)</title><rect x="491.4" y="147.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.19%)</title><rect x="491.4" y="131.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.4" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="491.4" y="115.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="494.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.12%)</title><rect x="492.4" y="115.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.4" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.12%)</title><rect x="492.4" y="99.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="495.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (13 samples, 0.50%)</title><rect x="493.7" y="307.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (13 samples, 0.50%)</title><rect x="493.7" y="291.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.7" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.50%)</title><rect x="493.7" y="275.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.7" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.50%)</title><rect x="493.7" y="259.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="496.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.04%)</title><rect x="499.6" y="371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.04%)</title><rect x="499.6" y="355.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="502.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.15%)</title><rect x="500.1" y="371.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.15%)</title><rect x="500.1" y="355.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="503.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="501.9" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="501.9" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="501.9" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (1 samples, 0.04%)</title><rect x="501.9" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.9" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (1 samples, 0.04%)</title><rect x="501.9" y="339.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="504.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.12%)</title><rect x="502.3" y="403.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.3" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.12%)</title><rect x="502.3" y="387.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.12%)</title><rect x="502.3" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.12%)</title><rect x="502.3" y="355.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="505.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/805521818.get$Lambda (3 samples, 0.12%)</title><rect x="502.3" y="339.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.3" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$137 (3 samples, 0.12%)</title><rect x="502.3" y="323.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="505.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.35%)</title><rect x="503.7" y="403.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.7" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.04%)</title><rect x="503.7" y="387.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="506.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.31%)</title><rect x="504.2" y="387.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.31%)</title><rect x="504.2" y="371.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.31%)</title><rect x="504.2" y="355.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (8 samples, 0.31%)</title><rect x="504.2" y="339.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.31%)</title><rect x="504.2" y="323.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="507.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.31%)</title><rect x="504.2" y="307.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.31%)</title><rect x="504.2" y="291.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.15%)</title><rect x="504.2" y="275.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.15%)</title><rect x="504.2" y="259.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.2" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.15%)</title><rect x="504.2" y="243.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.15%)</title><rect x="504.2" y="227.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.15%)</title><rect x="504.2" y="211.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.15%)</title><rect x="504.2" y="195.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (4 samples, 0.15%)</title><rect x="504.2" y="179.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.15%)</title><rect x="504.2" y="163.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.15%)</title><rect x="504.2" y="147.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.15%)</title><rect x="504.2" y="131.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (4 samples, 0.15%)</title><rect x="504.2" y="115.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.15%)</title><rect x="504.2" y="99.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.2" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="504.2" y="83.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="507.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.04%)</title><rect x="505.5" y="83.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.04%)</title><rect x="505.5" y="67.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="508.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (4 samples, 0.15%)</title><rect x="506.0" y="275.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4 samples, 0.15%)</title><rect x="506.0" y="259.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.15%)</title><rect x="506.0" y="243.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.0" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.15%)</title><rect x="506.0" y="227.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="509.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (77 samples, 2.96%)</title><rect x="507.8" y="403.0" width="35.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.8" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.04%)</title><rect x="507.8" y="387.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="510.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.19%)</title><rect x="508.3" y="387.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.19%)</title><rect x="508.3" y="371.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.19%)</title><rect x="508.3" y="355.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="511.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (71 samples, 2.73%)</title><rect x="510.5" y="387.0" width="32.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.5" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.15%)</title><rect x="510.5" y="371.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (4 samples, 0.15%)</title><rect x="510.5" y="355.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="513.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (24 samples, 0.92%)</title><rect x="512.3" y="371.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (24 samples, 0.92%)</title><rect x="512.3" y="355.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.3" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.19%)</title><rect x="512.3" y="339.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="515.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.04%)</title><rect x="514.6" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.6" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.04%)</title><rect x="514.6" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="517.6" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.15%)</title><rect x="515.1" y="339.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="518.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.04%)</title><rect x="516.9" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="516.9" y="323.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="519.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.50%)</title><rect x="517.3" y="339.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.50%)</title><rect x="517.3" y="323.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.50%)</title><rect x="517.3" y="307.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.08%)</title><rect x="517.3" y="291.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (2 samples, 0.08%)</title><rect x="517.3" y="275.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.08%)</title><rect x="517.3" y="259.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.08%)</title><rect x="517.3" y="243.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.08%)</title><rect x="517.3" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (2 samples, 0.08%)</title><rect x="517.3" y="211.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2 samples, 0.08%)</title><rect x="517.3" y="195.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="517.3" y="179.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="520.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (11 samples, 0.42%)</title><rect x="518.2" y="291.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.2" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (2 samples, 0.08%)</title><rect x="518.2" y="275.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="521.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="519.2" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="519.2" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.get$Lambda (1 samples, 0.04%)</title><rect x="519.2" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$91 (1 samples, 0.04%)</title><rect x="519.2" y="227.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="522.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.12%)</title><rect x="519.6" y="275.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (3 samples, 0.12%)</title><rect x="519.6" y="259.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.6" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (3 samples, 0.12%)</title><rect x="519.6" y="243.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="522.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="521.0" y="275.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.19%)</title><rect x="521.0" y="259.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="524.0" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.23%)</title><rect x="523.2" y="371.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="526.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.08%)</title><rect x="526.0" y="371.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.08%)</title><rect x="526.0" y="355.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="529.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.12%)</title><rect x="526.9" y="371.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (3 samples, 0.12%)</title><rect x="526.9" y="355.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="529.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.31%)</title><rect x="528.2" y="371.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.2" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.04%)</title><rect x="528.2" y="355.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="531.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.27%)</title><rect x="528.7" y="355.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.27%)</title><rect x="528.7" y="339.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.27%)</title><rect x="528.7" y="323.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.27%)</title><rect x="528.7" y="307.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.27%)</title><rect x="528.7" y="291.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.27%)</title><rect x="528.7" y="275.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.27%)</title><rect x="528.7" y="259.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (7 samples, 0.27%)</title><rect x="528.7" y="243.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.27%)</title><rect x="528.7" y="227.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.27%)</title><rect x="528.7" y="211.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="528.7" y="195.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="528.7" y="179.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.7" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.12%)</title><rect x="528.7" y="163.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="531.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.15%)</title><rect x="530.1" y="195.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (4 samples, 0.15%)</title><rect x="530.1" y="179.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="533.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.15%)</title><rect x="530.1" y="163.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.1" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="530.1" y="147.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="533.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.04%)</title><rect x="531.4" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.04%)</title><rect x="531.4" y="131.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="534.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (24 samples, 0.92%)</title><rect x="531.9" y="371.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.23%)</title><rect x="531.9" y="355.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (2 samples, 0.08%)</title><rect x="531.9" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (2 samples, 0.08%)</title><rect x="531.9" y="323.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="534.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.15%)</title><rect x="532.8" y="339.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.15%)</title><rect x="532.8" y="323.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="535.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.04%)</title><rect x="534.6" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.04%)</title><rect x="534.6" y="339.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="537.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.08%)</title><rect x="535.1" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.08%)</title><rect x="535.1" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.08%)</title><rect x="535.1" y="323.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.08%)</title><rect x="535.1" y="307.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="538.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (11 samples, 0.42%)</title><rect x="536.0" y="355.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.0" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (1 samples, 0.04%)</title><rect x="536.0" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.0" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (1 samples, 0.04%)</title><rect x="536.0" y="323.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="539.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (10 samples, 0.38%)</title><rect x="536.4" y="339.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.15%)</title><rect x="536.4" y="323.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.15%)</title><rect x="536.4" y="307.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$76/345481905.get$Lambda (4 samples, 0.15%)</title><rect x="536.4" y="291.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.4" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$76 (4 samples, 0.15%)</title><rect x="536.4" y="275.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="539.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (6 samples, 0.23%)</title><rect x="538.2" y="323.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (6 samples, 0.23%)</title><rect x="538.2" y="307.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="541.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (4 samples, 0.15%)</title><rect x="541.0" y="355.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (4 samples, 0.15%)</title><rect x="541.0" y="339.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="544.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.08%)</title><rect x="542.8" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="542.8" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.08%)</title><rect x="542.8" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="542.8" y="435.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="545.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="543.2" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.2" y="446.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="543.2" y="419.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="546.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (32 samples, 1.23%)</title><rect x="543.7" y="515.0" width="14.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.7" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.15%)</title><rect x="543.7" y="499.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="546.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.42%)</title><rect x="545.5" y="499.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.42%)</title><rect x="545.5" y="483.0" width="5.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="548.5" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.65%)</title><rect x="550.5" y="499.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.5" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.65%)</title><rect x="550.5" y="483.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.5" y="494.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.42%)</title><rect x="550.5" y="467.0" width="5.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="553.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="555.5" y="467.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="558.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="556.9" y="467.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="556.9" y="451.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.12%)</title><rect x="556.9" y="435.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.9" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="556.9" y="419.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="559.9" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.38%)</title><rect x="558.2" y="515.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.2" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.38%)</title><rect x="558.2" y="499.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.2" y="510.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.23%)</title><rect x="558.2" y="483.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="561.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="560.9" y="483.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="563.9" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="561.4" y="483.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="561.4" y="467.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.12%)</title><rect x="561.4" y="451.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.4" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="561.4" y="435.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="564.4" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=7342] (352 samples, 13.55%)</title><rect x="562.8" y="595.0" width="159.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="565.8" y="606.0">[NIO Selector #4 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (352 samples, 13.55%)</title><rect x="562.8" y="579.0" width="159.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.8" y="590.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/Session.process (352 samples, 13.55%)</title><rect x="562.8" y="563.0" width="159.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.8" y="574.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (352 samples, 13.55%)</title><rect x="562.8" y="547.0" width="159.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.8" y="558.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (352 samples, 13.55%)</title><rect x="562.8" y="531.0" width="159.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.8" y="542.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (312 samples, 12.01%)</title><rect x="562.8" y="515.0" width="141.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.8" y="526.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (312 samples, 12.01%)</title><rect x="562.8" y="499.0" width="141.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.8" y="510.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (305 samples, 11.74%)</title><rect x="562.8" y="483.0" width="138.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.8" y="494.0">RequestHandler1_e..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 0.77%)</title><rect x="562.8" y="467.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 0.77%)</title><rect x="562.8" y="451.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.54%)</title><rect x="562.8" y="435.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.8" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.54%)</title><rect x="562.8" y="419.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.8" y="430.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.54%)</title><rect x="562.8" y="403.0" width="6.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="565.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.23%)</title><rect x="569.1" y="435.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.1" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.23%)</title><rect x="569.1" y="419.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="572.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.04%)</title><rect x="571.8" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="571.8" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="571.8" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="571.8" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="571.8" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.8" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="571.8" y="387.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="574.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (284 samples, 10.93%)</title><rect x="572.3" y="467.0" width="129.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.3" y="478.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="572.3" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.04%)</title><rect x="572.3" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.04%)</title><rect x="572.3" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="572.3" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.3" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="572.3" y="387.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="575.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.23%)</title><rect x="572.7" y="451.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.23%)</title><rect x="572.7" y="435.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.7" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.23%)</title><rect x="572.7" y="419.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="575.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (277 samples, 10.66%)</title><rect x="575.5" y="451.0" width="125.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.5" y="462.0">ru/mail/polis/s..</text>
</g>
<g>
<title>byte[] (2 samples, 0.08%)</title><rect x="575.5" y="435.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="578.5" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.19%)</title><rect x="576.4" y="435.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="579.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.19%)</title><rect x="576.4" y="419.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="579.4" y="430.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.08%)</title><rect x="578.7" y="435.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="581.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (20 samples, 0.77%)</title><rect x="579.6" y="435.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.6" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.27%)</title><rect x="579.6" y="419.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="582.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.35%)</title><rect x="582.7" y="419.0" width="4.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="585.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.15%)</title><rect x="586.8" y="419.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="589.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (248 samples, 9.55%)</title><rect x="588.6" y="435.0" width="112.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.6" y="446.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (24 samples, 0.92%)</title><rect x="588.6" y="419.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.92%)</title><rect x="588.6" y="403.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.92%)</title><rect x="588.6" y="387.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.92%)</title><rect x="588.6" y="371.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.92%)</title><rect x="588.6" y="355.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.46%)</title><rect x="588.6" y="339.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.46%)</title><rect x="588.6" y="323.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (12 samples, 0.46%)</title><rect x="588.6" y="307.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (12 samples, 0.46%)</title><rect x="588.6" y="291.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (12 samples, 0.46%)</title><rect x="588.6" y="275.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.46%)</title><rect x="588.6" y="259.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.23%)</title><rect x="588.6" y="243.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.23%)</title><rect x="588.6" y="227.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.6" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.23%)</title><rect x="588.6" y="211.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.23%)</title><rect x="588.6" y="195.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.23%)</title><rect x="588.6" y="179.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.23%)</title><rect x="588.6" y="163.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (6 samples, 0.23%)</title><rect x="588.6" y="147.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.23%)</title><rect x="588.6" y="131.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.23%)</title><rect x="588.6" y="115.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="588.6" y="99.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="588.6" y="83.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.6" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.12%)</title><rect x="588.6" y="67.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="591.6" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.12%)</title><rect x="590.0" y="99.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (3 samples, 0.12%)</title><rect x="590.0" y="83.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (3 samples, 0.12%)</title><rect x="590.0" y="67.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.12%)</title><rect x="590.0" y="51.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.12%)</title><rect x="590.0" y="35.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="593.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (6 samples, 0.23%)</title><rect x="591.4" y="243.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (6 samples, 0.23%)</title><rect x="591.4" y="227.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.23%)</title><rect x="591.4" y="211.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.23%)</title><rect x="591.4" y="195.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="594.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$141/1823291526.apply (12 samples, 0.46%)</title><rect x="594.1" y="339.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (12 samples, 0.46%)</title><rect x="594.1" y="323.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.46%)</title><rect x="594.1" y="307.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.46%)</title><rect x="594.1" y="291.0" width="5.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="597.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (8 samples, 0.31%)</title><rect x="599.5" y="419.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (8 samples, 0.31%)</title><rect x="599.5" y="403.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$155/1514748197.apply (8 samples, 0.31%)</title><rect x="599.5" y="387.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (8 samples, 0.31%)</title><rect x="599.5" y="371.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (8 samples, 0.31%)</title><rect x="599.5" y="355.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.31%)</title><rect x="599.5" y="339.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.5" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.31%)</title><rect x="599.5" y="323.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="602.5" y="334.0"></text>
</g>
<g>
<title>java.util.NoSuchElementException (2 samples, 0.08%)</title><rect x="603.2" y="419.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="606.2" y="430.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (33 samples, 1.27%)</title><rect x="604.1" y="419.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.1" y="430.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (33 samples, 1.27%)</title><rect x="604.1" y="403.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (33 samples, 1.27%)</title><rect x="604.1" y="387.0" width="15.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (33 samples, 1.27%)</title><rect x="604.1" y="371.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (33 samples, 1.27%)</title><rect x="604.1" y="355.0" width="15.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.1" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (33 samples, 1.27%)</title><rect x="604.1" y="339.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.1" y="350.0"></text>
</g>
<g>
<title>int[] (5 samples, 0.19%)</title><rect x="604.1" y="323.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="607.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.27%)</title><rect x="606.4" y="323.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="609.4" y="334.0"></text>
</g>
<g>
<title>long[] (18 samples, 0.69%)</title><rect x="609.5" y="323.0" width="8.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="612.5" y="334.0"></text>
</g>
<g>
<title>short[] (3 samples, 0.12%)</title><rect x="617.7" y="323.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="620.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.12%)</title><rect x="619.1" y="419.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.12%)</title><rect x="619.1" y="403.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.12%)</title><rect x="619.1" y="387.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="622.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.12%)</title><rect x="619.1" y="371.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="622.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (3 samples, 0.12%)</title><rect x="620.4" y="419.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.12%)</title><rect x="620.4" y="403.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.12%)</title><rect x="620.4" y="387.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.12%)</title><rect x="620.4" y="371.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="623.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (175 samples, 6.74%)</title><rect x="621.8" y="419.0" width="79.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.8" y="430.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.19%)</title><rect x="621.8" y="403.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.8" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.19%)</title><rect x="621.8" y="387.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="624.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (29 samples, 1.12%)</title><rect x="624.1" y="403.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.1" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.19%)</title><rect x="624.1" y="387.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="627.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (24 samples, 0.92%)</title><rect x="626.3" y="387.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (14 samples, 0.54%)</title><rect x="626.3" y="371.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (14 samples, 0.54%)</title><rect x="626.3" y="355.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (14 samples, 0.54%)</title><rect x="626.3" y="339.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.54%)</title><rect x="626.3" y="323.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.35%)</title><rect x="626.3" y="307.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.35%)</title><rect x="626.3" y="291.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.3" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.35%)</title><rect x="626.3" y="275.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.35%)</title><rect x="626.3" y="259.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.35%)</title><rect x="626.3" y="243.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.35%)</title><rect x="626.3" y="227.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (9 samples, 0.35%)</title><rect x="626.3" y="211.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.35%)</title><rect x="626.3" y="195.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.35%)</title><rect x="626.3" y="179.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.35%)</title><rect x="626.3" y="163.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (9 samples, 0.35%)</title><rect x="626.3" y="147.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (9 samples, 0.35%)</title><rect x="626.3" y="131.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.3" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.15%)</title><rect x="626.3" y="115.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="629.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (5 samples, 0.19%)</title><rect x="628.2" y="115.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.2" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (5 samples, 0.19%)</title><rect x="628.2" y="99.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="631.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (5 samples, 0.19%)</title><rect x="630.4" y="307.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5 samples, 0.19%)</title><rect x="630.4" y="291.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.4" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.19%)</title><rect x="630.4" y="275.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.4" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.19%)</title><rect x="630.4" y="259.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="633.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.27%)</title><rect x="632.7" y="371.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.7" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.27%)</title><rect x="632.7" y="355.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="635.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.12%)</title><rect x="635.9" y="371.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.12%)</title><rect x="635.9" y="355.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="638.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.12%)</title><rect x="637.2" y="403.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="637.2" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="637.2" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="637.2" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (1 samples, 0.04%)</title><rect x="637.2" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.2" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (1 samples, 0.04%)</title><rect x="637.2" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="640.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.08%)</title><rect x="637.7" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="637.7" y="371.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="637.7" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/805521818.get$Lambda (2 samples, 0.08%)</title><rect x="637.7" y="339.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.7" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$137 (2 samples, 0.08%)</title><rect x="637.7" y="323.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="640.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.50%)</title><rect x="638.6" y="403.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.6" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.08%)</title><rect x="638.6" y="387.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="641.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (11 samples, 0.42%)</title><rect x="639.5" y="387.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.42%)</title><rect x="639.5" y="371.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.42%)</title><rect x="639.5" y="355.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 0.42%)</title><rect x="639.5" y="339.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 0.42%)</title><rect x="639.5" y="323.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 0.42%)</title><rect x="639.5" y="307.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.42%)</title><rect x="639.5" y="291.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.19%)</title><rect x="639.5" y="275.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.19%)</title><rect x="639.5" y="259.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.5" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.19%)</title><rect x="639.5" y="243.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.19%)</title><rect x="639.5" y="227.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.19%)</title><rect x="639.5" y="211.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.19%)</title><rect x="639.5" y="195.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (5 samples, 0.19%)</title><rect x="639.5" y="179.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.19%)</title><rect x="639.5" y="163.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.19%)</title><rect x="639.5" y="147.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.19%)</title><rect x="639.5" y="131.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (5 samples, 0.19%)</title><rect x="639.5" y="115.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.19%)</title><rect x="639.5" y="99.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="639.5" y="83.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="642.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="640.9" y="83.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="640.9" y="67.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="643.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (6 samples, 0.23%)</title><rect x="641.8" y="275.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (6 samples, 0.23%)</title><rect x="641.8" y="259.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.23%)</title><rect x="641.8" y="243.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.23%)</title><rect x="641.8" y="227.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="644.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (125 samples, 4.81%)</title><rect x="644.5" y="403.0" width="56.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.5" y="414.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.12%)</title><rect x="644.5" y="387.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="647.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.31%)</title><rect x="645.9" y="387.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.31%)</title><rect x="645.9" y="371.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (8 samples, 0.31%)</title><rect x="645.9" y="355.0" width="3.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="648.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.15%)</title><rect x="649.5" y="387.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.15%)</title><rect x="649.5" y="371.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="652.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (110 samples, 4.23%)</title><rect x="651.3" y="387.0" width="50.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.3" y="398.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.23%)</title><rect x="651.3" y="371.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.23%)</title><rect x="651.3" y="355.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="654.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (41 samples, 1.58%)</title><rect x="654.0" y="371.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.15%)</title><rect x="654.0" y="355.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="657.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (37 samples, 1.42%)</title><rect x="655.9" y="355.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.9" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.12%)</title><rect x="655.9" y="339.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="658.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.08%)</title><rect x="657.2" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.2" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.08%)</title><rect x="657.2" y="323.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="660.2" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.15%)</title><rect x="658.1" y="339.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="661.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.12%)</title><rect x="660.0" y="339.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.12%)</title><rect x="660.0" y="323.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="663.0" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (25 samples, 0.96%)</title><rect x="661.3" y="339.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (25 samples, 0.96%)</title><rect x="661.3" y="323.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (25 samples, 0.96%)</title><rect x="661.3" y="307.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.23%)</title><rect x="661.3" y="291.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (6 samples, 0.23%)</title><rect x="661.3" y="275.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.23%)</title><rect x="661.3" y="259.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.23%)</title><rect x="661.3" y="243.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.23%)</title><rect x="661.3" y="227.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (6 samples, 0.23%)</title><rect x="661.3" y="211.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (6 samples, 0.23%)</title><rect x="661.3" y="195.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.15%)</title><rect x="661.3" y="179.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="664.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="663.1" y="179.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="663.1" y="163.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="666.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (19 samples, 0.73%)</title><rect x="664.0" y="291.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.0" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (3 samples, 0.12%)</title><rect x="664.0" y="275.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="667.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.23%)</title><rect x="665.4" y="275.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.23%)</title><rect x="665.4" y="259.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$82/163585558.get$Lambda (2 samples, 0.08%)</title><rect x="665.4" y="243.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$82 (2 samples, 0.08%)</title><rect x="665.4" y="227.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="668.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.get$Lambda (4 samples, 0.15%)</title><rect x="666.3" y="243.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$91 (4 samples, 0.15%)</title><rect x="666.3" y="227.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="669.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.08%)</title><rect x="668.1" y="275.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (2 samples, 0.08%)</title><rect x="668.1" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.1" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (2 samples, 0.08%)</title><rect x="668.1" y="243.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="671.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (8 samples, 0.31%)</title><rect x="669.0" y="275.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.31%)</title><rect x="669.0" y="259.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="672.0" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.15%)</title><rect x="672.7" y="371.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="675.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.08%)</title><rect x="674.5" y="371.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.08%)</title><rect x="674.5" y="355.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="677.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.27%)</title><rect x="675.4" y="371.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (7 samples, 0.27%)</title><rect x="675.4" y="355.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="678.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.38%)</title><rect x="678.6" y="371.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.6" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.19%)</title><rect x="678.6" y="355.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="681.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.19%)</title><rect x="680.8" y="355.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.19%)</title><rect x="680.8" y="339.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.19%)</title><rect x="680.8" y="323.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.19%)</title><rect x="680.8" y="307.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.19%)</title><rect x="680.8" y="291.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.19%)</title><rect x="680.8" y="275.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.19%)</title><rect x="680.8" y="259.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (5 samples, 0.19%)</title><rect x="680.8" y="243.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.19%)</title><rect x="680.8" y="227.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.19%)</title><rect x="680.8" y="211.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="680.8" y="195.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="680.8" y="179.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.8" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.12%)</title><rect x="680.8" y="163.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="683.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.08%)</title><rect x="682.2" y="195.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (2 samples, 0.08%)</title><rect x="682.2" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2 samples, 0.08%)</title><rect x="682.2" y="163.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="682.2" y="147.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="682.2" y="131.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="685.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (40 samples, 1.54%)</title><rect x="683.1" y="371.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.31%)</title><rect x="683.1" y="355.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (2 samples, 0.08%)</title><rect x="683.1" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (2 samples, 0.08%)</title><rect x="683.1" y="323.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="686.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.23%)</title><rect x="684.0" y="339.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (6 samples, 0.23%)</title><rect x="684.0" y="323.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="687.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.08%)</title><rect x="686.8" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.08%)</title><rect x="686.8" y="339.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="689.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.23%)</title><rect x="687.7" y="355.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.23%)</title><rect x="687.7" y="339.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.23%)</title><rect x="687.7" y="323.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.23%)</title><rect x="687.7" y="307.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="690.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (12 samples, 0.46%)</title><rect x="690.4" y="355.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.4" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (4 samples, 0.15%)</title><rect x="690.4" y="339.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.4" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (4 samples, 0.15%)</title><rect x="690.4" y="323.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="693.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (8 samples, 0.31%)</title><rect x="692.2" y="339.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="692.2" y="323.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="692.2" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$76/345481905.get$Lambda (2 samples, 0.08%)</title><rect x="692.2" y="291.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.2" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$76 (2 samples, 0.08%)</title><rect x="692.2" y="275.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="695.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (6 samples, 0.23%)</title><rect x="693.1" y="323.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (6 samples, 0.23%)</title><rect x="693.1" y="307.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="696.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (12 samples, 0.46%)</title><rect x="695.8" y="355.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (12 samples, 0.46%)</title><rect x="695.8" y="339.0" width="5.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="698.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.27%)</title><rect x="701.3" y="483.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.27%)</title><rect x="701.3" y="467.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.27%)</title><rect x="701.3" y="451.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.08%)</title><rect x="701.3" y="435.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="704.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.19%)</title><rect x="702.2" y="435.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.2" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.19%)</title><rect x="702.2" y="419.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="705.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (32 samples, 1.23%)</title><rect x="704.5" y="515.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.5" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.12%)</title><rect x="704.5" y="499.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="707.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.46%)</title><rect x="705.8" y="499.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.46%)</title><rect x="705.8" y="483.0" width="5.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="708.8" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.65%)</title><rect x="711.3" y="499.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.3" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.65%)</title><rect x="711.3" y="483.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.3" y="494.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.38%)</title><rect x="711.3" y="467.0" width="4.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="714.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.15%)</title><rect x="715.8" y="467.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="718.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="717.6" y="467.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="717.6" y="451.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.12%)</title><rect x="717.6" y="435.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.6" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="717.6" y="419.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="720.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.31%)</title><rect x="719.0" y="515.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.0" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.31%)</title><rect x="719.0" y="499.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.0" y="510.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.19%)</title><rect x="719.0" y="483.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="722.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="721.3" y="483.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="724.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.08%)</title><rect x="721.7" y="483.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.08%)</title><rect x="721.7" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.08%)</title><rect x="721.7" y="451.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.7" y="462.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.08%)</title><rect x="721.7" y="435.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="724.7" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=7343] (286 samples, 11.01%)</title><rect x="722.6" y="595.0" width="129.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="725.6" y="606.0">[NIO Selector #5..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (286 samples, 11.01%)</title><rect x="722.6" y="579.0" width="129.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.6" y="590.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/Session.process (286 samples, 11.01%)</title><rect x="722.6" y="563.0" width="129.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.6" y="574.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (286 samples, 11.01%)</title><rect x="722.6" y="547.0" width="129.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.6" y="558.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (286 samples, 11.01%)</title><rect x="722.6" y="531.0" width="129.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.6" y="542.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (245 samples, 9.43%)</title><rect x="722.6" y="515.0" width="111.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.6" y="526.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (245 samples, 9.43%)</title><rect x="722.6" y="499.0" width="111.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.6" y="510.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (239 samples, 9.20%)</title><rect x="722.6" y="483.0" width="108.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.6" y="494.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 0.35%)</title><rect x="722.6" y="467.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 0.35%)</title><rect x="722.6" y="451.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.23%)</title><rect x="722.6" y="435.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.23%)</title><rect x="722.6" y="419.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.6" y="430.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.23%)</title><rect x="722.6" y="403.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="725.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.12%)</title><rect x="725.4" y="435.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.4" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.12%)</title><rect x="725.4" y="419.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="728.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.08%)</title><rect x="726.7" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="726.7" y="451.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="726.7" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.08%)</title><rect x="726.7" y="419.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.08%)</title><rect x="726.7" y="403.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.7" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.08%)</title><rect x="726.7" y="387.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="729.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (228 samples, 8.78%)</title><rect x="727.6" y="467.0" width="103.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.6" y="478.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.15%)</title><rect x="727.6" y="451.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.15%)</title><rect x="727.6" y="435.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.15%)</title><rect x="727.6" y="419.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.15%)</title><rect x="727.6" y="403.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.6" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="727.6" y="387.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="730.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.31%)</title><rect x="729.4" y="451.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.31%)</title><rect x="729.4" y="435.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.31%)</title><rect x="729.4" y="419.0" width="3.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="732.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (216 samples, 8.31%)</title><rect x="733.1" y="451.0" width="98.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.1" y="462.0">ru/mail/poli..</text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="733.1" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="736.1" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.08%)</title><rect x="733.5" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.5" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.08%)</title><rect x="733.5" y="419.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="736.5" y="430.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.08%)</title><rect x="734.4" y="435.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="737.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.35%)</title><rect x="735.4" y="435.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.4" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="735.4" y="419.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="738.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.19%)</title><rect x="736.7" y="419.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="739.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="739.0" y="419.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="742.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (202 samples, 7.78%)</title><rect x="739.4" y="435.0" width="91.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.4" y="446.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (20 samples, 0.77%)</title><rect x="739.4" y="419.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (20 samples, 0.77%)</title><rect x="739.4" y="403.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (20 samples, 0.77%)</title><rect x="739.4" y="387.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (20 samples, 0.77%)</title><rect x="739.4" y="371.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (20 samples, 0.77%)</title><rect x="739.4" y="355.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.42%)</title><rect x="739.4" y="339.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.42%)</title><rect x="739.4" y="323.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 0.42%)</title><rect x="739.4" y="307.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 0.42%)</title><rect x="739.4" y="291.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 0.42%)</title><rect x="739.4" y="275.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.42%)</title><rect x="739.4" y="259.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.15%)</title><rect x="739.4" y="243.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="742.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.15%)</title><rect x="739.4" y="227.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.4" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.15%)</title><rect x="739.4" y="211.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.15%)</title><rect x="739.4" y="195.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.15%)</title><rect x="739.4" y="179.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.15%)</title><rect x="739.4" y="163.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (4 samples, 0.15%)</title><rect x="739.4" y="147.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.15%)</title><rect x="739.4" y="131.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.15%)</title><rect x="739.4" y="115.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.4" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.15%)</title><rect x="739.4" y="99.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (4 samples, 0.15%)</title><rect x="739.4" y="83.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.15%)</title><rect x="739.4" y="67.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="739.4" y="51.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="742.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="740.3" y="51.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.3" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="740.3" y="35.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="743.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (7 samples, 0.27%)</title><rect x="741.3" y="243.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (7 samples, 0.27%)</title><rect x="741.3" y="227.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.27%)</title><rect x="741.3" y="211.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.27%)</title><rect x="741.3" y="195.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="744.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$141/1823291526.apply (9 samples, 0.35%)</title><rect x="744.4" y="339.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (9 samples, 0.35%)</title><rect x="744.4" y="323.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.35%)</title><rect x="744.4" y="307.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.35%)</title><rect x="744.4" y="291.0" width="4.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="747.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.15%)</title><rect x="748.5" y="419.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.15%)</title><rect x="748.5" y="403.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$155/1514748197.apply (4 samples, 0.15%)</title><rect x="748.5" y="387.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (4 samples, 0.15%)</title><rect x="748.5" y="371.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4 samples, 0.15%)</title><rect x="748.5" y="355.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.15%)</title><rect x="748.5" y="339.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.5" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.15%)</title><rect x="748.5" y="323.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="751.5" y="334.0"></text>
</g>
<g>
<title>java.util.NoSuchElementException (4 samples, 0.15%)</title><rect x="750.3" y="419.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="753.3" y="430.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (29 samples, 1.12%)</title><rect x="752.2" y="419.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.2" y="430.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (29 samples, 1.12%)</title><rect x="752.2" y="403.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (29 samples, 1.12%)</title><rect x="752.2" y="387.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (29 samples, 1.12%)</title><rect x="752.2" y="371.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.2" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (29 samples, 1.12%)</title><rect x="752.2" y="355.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (29 samples, 1.12%)</title><rect x="752.2" y="339.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.2" y="350.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.08%)</title><rect x="752.2" y="323.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="755.2" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.46%)</title><rect x="753.1" y="323.0" width="5.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="756.1" y="334.0"></text>
</g>
<g>
<title>long[] (10 samples, 0.38%)</title><rect x="758.5" y="323.0" width="4.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="761.5" y="334.0"></text>
</g>
<g>
<title>short[] (5 samples, 0.19%)</title><rect x="763.1" y="323.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="766.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.23%)</title><rect x="765.3" y="419.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.23%)</title><rect x="765.3" y="403.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.23%)</title><rect x="765.3" y="387.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.23%)</title><rect x="765.3" y="371.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="768.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2 samples, 0.08%)</title><rect x="768.1" y="419.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.08%)</title><rect x="768.1" y="403.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.08%)</title><rect x="768.1" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.08%)</title><rect x="768.1" y="371.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="771.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (137 samples, 5.27%)</title><rect x="769.0" y="419.0" width="62.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.0" y="430.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.15%)</title><rect x="769.0" y="403.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (4 samples, 0.15%)</title><rect x="769.0" y="387.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="772.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (25 samples, 0.96%)</title><rect x="770.8" y="403.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.8" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.12%)</title><rect x="770.8" y="387.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="773.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (22 samples, 0.85%)</title><rect x="772.1" y="387.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.1" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.12%)</title><rect x="772.1" y="371.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="775.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (13 samples, 0.50%)</title><rect x="773.5" y="371.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (13 samples, 0.50%)</title><rect x="773.5" y="355.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (13 samples, 0.50%)</title><rect x="773.5" y="339.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.50%)</title><rect x="773.5" y="323.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.12%)</title><rect x="773.5" y="307.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.12%)</title><rect x="773.5" y="291.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.5" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.12%)</title><rect x="773.5" y="275.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.12%)</title><rect x="773.5" y="259.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.12%)</title><rect x="773.5" y="243.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.12%)</title><rect x="773.5" y="227.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (3 samples, 0.12%)</title><rect x="773.5" y="211.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.12%)</title><rect x="773.5" y="195.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.12%)</title><rect x="773.5" y="179.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.12%)</title><rect x="773.5" y="163.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (3 samples, 0.12%)</title><rect x="773.5" y="147.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (3 samples, 0.12%)</title><rect x="773.5" y="131.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.5" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="773.5" y="115.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="776.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.04%)</title><rect x="774.4" y="115.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.4" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.04%)</title><rect x="774.4" y="99.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="777.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (10 samples, 0.38%)</title><rect x="774.9" y="307.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (10 samples, 0.38%)</title><rect x="774.9" y="291.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.38%)</title><rect x="774.9" y="275.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.9" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.38%)</title><rect x="774.9" y="259.0" width="4.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="777.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.08%)</title><rect x="779.4" y="371.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.08%)</title><rect x="779.4" y="355.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="782.4" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.08%)</title><rect x="780.3" y="371.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="783.3" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.08%)</title><rect x="781.2" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.08%)</title><rect x="781.2" y="355.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="784.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (7 samples, 0.27%)</title><rect x="782.1" y="403.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.12%)</title><rect x="782.1" y="387.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="785.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.12%)</title><rect x="782.1" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="785.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.12%)</title><rect x="782.1" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (3 samples, 0.12%)</title><rect x="782.1" y="339.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.1" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (3 samples, 0.12%)</title><rect x="782.1" y="323.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="785.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.15%)</title><rect x="783.5" y="387.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.15%)</title><rect x="783.5" y="371.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.15%)</title><rect x="783.5" y="355.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/805521818.get$Lambda (4 samples, 0.15%)</title><rect x="783.5" y="339.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.5" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$137 (4 samples, 0.15%)</title><rect x="783.5" y="323.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="786.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.58%)</title><rect x="785.3" y="403.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.3" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.04%)</title><rect x="785.3" y="387.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="788.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.54%)</title><rect x="785.8" y="387.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.54%)</title><rect x="785.8" y="371.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (14 samples, 0.54%)</title><rect x="785.8" y="355.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (14 samples, 0.54%)</title><rect x="785.8" y="339.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (14 samples, 0.54%)</title><rect x="785.8" y="323.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (14 samples, 0.54%)</title><rect x="785.8" y="307.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.54%)</title><rect x="785.8" y="291.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.35%)</title><rect x="785.8" y="275.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.35%)</title><rect x="785.8" y="259.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.8" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.35%)</title><rect x="785.8" y="243.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.35%)</title><rect x="785.8" y="227.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.35%)</title><rect x="785.8" y="211.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.35%)</title><rect x="785.8" y="195.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (9 samples, 0.35%)</title><rect x="785.8" y="179.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.35%)</title><rect x="785.8" y="163.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.35%)</title><rect x="785.8" y="147.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.35%)</title><rect x="785.8" y="131.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (9 samples, 0.35%)</title><rect x="785.8" y="115.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (9 samples, 0.35%)</title><rect x="785.8" y="99.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.8" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (5 samples, 0.19%)</title><rect x="785.8" y="83.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="788.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (4 samples, 0.15%)</title><rect x="788.0" y="83.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (4 samples, 0.15%)</title><rect x="788.0" y="67.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="791.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (5 samples, 0.19%)</title><rect x="789.9" y="275.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5 samples, 0.19%)</title><rect x="789.9" y="259.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.9" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.19%)</title><rect x="789.9" y="243.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.9" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.19%)</title><rect x="789.9" y="227.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="792.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (86 samples, 3.31%)</title><rect x="792.1" y="403.0" width="39.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.1" y="414.0">ru/..</text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.23%)</title><rect x="792.1" y="387.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="795.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.19%)</title><rect x="794.8" y="387.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.19%)</title><rect x="794.8" y="371.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="797.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.19%)</title><rect x="794.8" y="355.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="797.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.12%)</title><rect x="797.1" y="387.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.12%)</title><rect x="797.1" y="371.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="800.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (72 samples, 2.77%)</title><rect x="798.5" y="387.0" width="32.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.5" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.23%)</title><rect x="798.5" y="371.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.23%)</title><rect x="798.5" y="355.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="801.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (23 samples, 0.89%)</title><rect x="801.2" y="371.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.04%)</title><rect x="801.2" y="355.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="804.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (22 samples, 0.85%)</title><rect x="801.7" y="355.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.7" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.04%)</title><rect x="801.7" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="804.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.08%)</title><rect x="802.1" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.1" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.08%)</title><rect x="802.1" y="323.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="805.1" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.08%)</title><rect x="803.0" y="339.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="806.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.12%)</title><rect x="803.9" y="339.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.12%)</title><rect x="803.9" y="323.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="806.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (14 samples, 0.54%)</title><rect x="805.3" y="339.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (14 samples, 0.54%)</title><rect x="805.3" y="323.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (14 samples, 0.54%)</title><rect x="805.3" y="307.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.19%)</title><rect x="805.3" y="291.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (5 samples, 0.19%)</title><rect x="805.3" y="275.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.19%)</title><rect x="805.3" y="259.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.19%)</title><rect x="805.3" y="243.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.19%)</title><rect x="805.3" y="227.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (5 samples, 0.19%)</title><rect x="805.3" y="211.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.19%)</title><rect x="805.3" y="195.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="805.3" y="179.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="808.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.12%)</title><rect x="806.2" y="179.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="809.2" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.12%)</title><rect x="806.2" y="163.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="809.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (9 samples, 0.35%)</title><rect x="807.6" y="291.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (1 samples, 0.04%)</title><rect x="807.6" y="275.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="810.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="808.0" y="275.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="811.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="808.0" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.get$Lambda (2 samples, 0.08%)</title><rect x="808.0" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$91 (2 samples, 0.08%)</title><rect x="808.0" y="227.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="811.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="808.9" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1 samples, 0.04%)</title><rect x="808.9" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.9" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (1 samples, 0.04%)</title><rect x="808.9" y="243.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="811.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="809.4" y="275.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.19%)</title><rect x="809.4" y="259.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="812.4" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.08%)</title><rect x="811.7" y="371.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="814.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.04%)</title><rect x="812.6" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="815.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (1 samples, 0.04%)</title><rect x="812.6" y="355.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="815.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.35%)</title><rect x="813.0" y="371.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.0" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.08%)</title><rect x="813.0" y="355.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="816.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.27%)</title><rect x="813.9" y="355.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.27%)</title><rect x="813.9" y="339.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.27%)</title><rect x="813.9" y="323.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.27%)</title><rect x="813.9" y="307.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.27%)</title><rect x="813.9" y="291.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.27%)</title><rect x="813.9" y="275.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.27%)</title><rect x="813.9" y="259.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (7 samples, 0.27%)</title><rect x="813.9" y="243.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="816.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.27%)</title><rect x="813.9" y="227.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.27%)</title><rect x="813.9" y="211.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="813.9" y="195.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="813.9" y="179.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="816.9" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.12%)</title><rect x="813.9" y="163.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="816.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.15%)</title><rect x="815.3" y="195.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (4 samples, 0.15%)</title><rect x="815.3" y="179.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (4 samples, 0.15%)</title><rect x="815.3" y="163.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.3" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="815.3" y="147.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="818.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="816.2" y="147.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="816.2" y="131.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="819.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (31 samples, 1.19%)</title><rect x="817.1" y="371.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.31%)</title><rect x="817.1" y="355.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.23%)</title><rect x="817.1" y="339.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.23%)</title><rect x="817.1" y="323.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="820.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.08%)</title><rect x="819.8" y="339.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.08%)</title><rect x="819.8" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="822.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (3 samples, 0.12%)</title><rect x="820.7" y="355.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (3 samples, 0.12%)</title><rect x="820.7" y="339.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="823.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.27%)</title><rect x="822.1" y="355.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.27%)</title><rect x="822.1" y="339.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.27%)</title><rect x="822.1" y="323.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.27%)</title><rect x="822.1" y="307.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="825.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (7 samples, 0.27%)</title><rect x="825.3" y="355.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.3" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (2 samples, 0.08%)</title><rect x="825.3" y="339.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.3" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (2 samples, 0.08%)</title><rect x="825.3" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="828.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (5 samples, 0.19%)</title><rect x="826.2" y="339.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (5 samples, 0.19%)</title><rect x="826.2" y="323.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (5 samples, 0.19%)</title><rect x="826.2" y="307.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="829.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (6 samples, 0.23%)</title><rect x="828.5" y="355.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (6 samples, 0.23%)</title><rect x="828.5" y="339.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="831.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.23%)</title><rect x="831.2" y="483.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.23%)</title><rect x="831.2" y="467.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.23%)</title><rect x="831.2" y="451.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.15%)</title><rect x="831.2" y="435.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="834.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.08%)</title><rect x="833.0" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.0" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.08%)</title><rect x="833.0" y="419.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="836.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25 samples, 0.96%)</title><rect x="833.9" y="515.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.9" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.04%)</title><rect x="833.9" y="499.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="836.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.23%)</title><rect x="834.4" y="499.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.23%)</title><rect x="834.4" y="483.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="837.4" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.69%)</title><rect x="837.1" y="499.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.69%)</title><rect x="837.1" y="483.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.1" y="494.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.50%)</title><rect x="837.1" y="467.0" width="5.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="840.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.08%)</title><rect x="843.0" y="467.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="846.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="843.9" y="467.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="843.9" y="451.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.12%)</title><rect x="843.9" y="435.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.9" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="843.9" y="419.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="846.9" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.62%)</title><rect x="845.3" y="515.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.3" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.62%)</title><rect x="845.3" y="499.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.3" y="510.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.19%)</title><rect x="845.3" y="483.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="848.3" y="494.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.31%)</title><rect x="847.5" y="483.0" width="3.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="850.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="851.2" y="483.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="851.2" y="467.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.12%)</title><rect x="851.2" y="451.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="854.2" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="851.2" y="435.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="854.2" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=7344] (474 samples, 18.24%)</title><rect x="852.5" y="595.0" width="215.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="855.5" y="606.0">[NIO Selector #6 tid=7344]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (474 samples, 18.24%)</title><rect x="852.5" y="579.0" width="215.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.5" y="590.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.35%)</title><rect x="852.5" y="563.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.5" y="574.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9 samples, 0.35%)</title><rect x="852.5" y="547.0" width="4.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="855.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (465 samples, 17.90%)</title><rect x="856.6" y="563.0" width="211.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.6" y="574.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (465 samples, 17.90%)</title><rect x="856.6" y="547.0" width="211.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.6" y="558.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (465 samples, 17.90%)</title><rect x="856.6" y="531.0" width="211.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.6" y="542.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (402 samples, 15.47%)</title><rect x="856.6" y="515.0" width="182.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.6" y="526.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (402 samples, 15.47%)</title><rect x="856.6" y="499.0" width="182.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.6" y="510.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (394 samples, 15.17%)</title><rect x="856.6" y="483.0" width="179.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.6" y="494.0">RequestHandler1_entity...</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 0.69%)</title><rect x="856.6" y="467.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 0.69%)</title><rect x="856.6" y="451.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 0.62%)</title><rect x="856.6" y="435.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 0.62%)</title><rect x="856.6" y="419.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="859.6" y="430.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.62%)</title><rect x="856.6" y="403.0" width="7.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="859.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.08%)</title><rect x="863.9" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="866.9" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.08%)</title><rect x="863.9" y="419.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="866.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.15%)</title><rect x="864.8" y="467.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.15%)</title><rect x="864.8" y="451.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.15%)</title><rect x="864.8" y="435.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.15%)</title><rect x="864.8" y="419.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="864.8" y="403.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="867.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.12%)</title><rect x="865.3" y="403.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.3" y="414.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="865.3" y="387.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="868.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (372 samples, 14.32%)</title><rect x="866.6" y="467.0" width="169.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.6" y="478.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.31%)</title><rect x="866.6" y="451.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.31%)</title><rect x="866.6" y="435.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.31%)</title><rect x="866.6" y="419.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.31%)</title><rect x="866.6" y="403.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.6" y="414.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.31%)</title><rect x="866.6" y="387.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="869.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.27%)</title><rect x="870.2" y="451.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="873.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.27%)</title><rect x="870.2" y="435.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.27%)</title><rect x="870.2" y="419.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="873.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (357 samples, 13.74%)</title><rect x="873.4" y="451.0" width="162.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.4" y="462.0">ru/mail/polis/service..</text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="873.4" y="435.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="876.4" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.27%)</title><rect x="874.8" y="435.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.27%)</title><rect x="874.8" y="419.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="877.8" y="430.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.15%)</title><rect x="878.0" y="435.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="881.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (20 samples, 0.77%)</title><rect x="879.8" y="435.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.8" y="446.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.38%)</title><rect x="879.8" y="419.0" width="4.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="882.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.23%)</title><rect x="884.3" y="419.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="887.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.15%)</title><rect x="887.1" y="419.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="890.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (323 samples, 12.43%)</title><rect x="888.9" y="435.0" width="146.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.9" y="446.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (41 samples, 1.58%)</title><rect x="888.9" y="419.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (41 samples, 1.58%)</title><rect x="888.9" y="403.0" width="18.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (41 samples, 1.58%)</title><rect x="888.9" y="387.0" width="18.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="891.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (41 samples, 1.58%)</title><rect x="888.9" y="371.0" width="18.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="891.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (41 samples, 1.58%)</title><rect x="888.9" y="355.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (26 samples, 1.00%)</title><rect x="888.9" y="339.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (26 samples, 1.00%)</title><rect x="888.9" y="323.0" width="11.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (26 samples, 1.00%)</title><rect x="888.9" y="307.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (26 samples, 1.00%)</title><rect x="888.9" y="291.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (26 samples, 1.00%)</title><rect x="888.9" y="275.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (26 samples, 1.00%)</title><rect x="888.9" y="259.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.31%)</title><rect x="888.9" y="243.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.31%)</title><rect x="888.9" y="227.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.9" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.31%)</title><rect x="888.9" y="211.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.31%)</title><rect x="888.9" y="195.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.31%)</title><rect x="888.9" y="179.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.31%)</title><rect x="888.9" y="163.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (8 samples, 0.31%)</title><rect x="888.9" y="147.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.31%)</title><rect x="888.9" y="131.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="891.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.31%)</title><rect x="888.9" y="115.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="888.9" y="99.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.12%)</title><rect x="888.9" y="83.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.9" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.12%)</title><rect x="888.9" y="67.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="891.9" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.19%)</title><rect x="890.2" y="99.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="893.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (5 samples, 0.19%)</title><rect x="890.2" y="83.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.19%)</title><rect x="890.2" y="67.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="893.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="890.2" y="51.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="893.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="891.6" y="51.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.6" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="891.6" y="35.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="894.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (18 samples, 0.69%)</title><rect x="892.5" y="243.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (18 samples, 0.69%)</title><rect x="892.5" y="227.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.69%)</title><rect x="892.5" y="211.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="895.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.69%)</title><rect x="892.5" y="195.0" width="8.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="895.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$141/1823291526.apply (15 samples, 0.58%)</title><rect x="900.7" y="339.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (15 samples, 0.58%)</title><rect x="900.7" y="323.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.58%)</title><rect x="900.7" y="307.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.58%)</title><rect x="900.7" y="291.0" width="6.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="903.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.19%)</title><rect x="907.5" y="419.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.19%)</title><rect x="907.5" y="403.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$155/1514748197.apply (5 samples, 0.19%)</title><rect x="907.5" y="387.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (5 samples, 0.19%)</title><rect x="907.5" y="371.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5 samples, 0.19%)</title><rect x="907.5" y="355.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.19%)</title><rect x="907.5" y="339.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.5" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.19%)</title><rect x="907.5" y="323.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="910.5" y="334.0"></text>
</g>
<g>
<title>java.util.NoSuchElementException (3 samples, 0.12%)</title><rect x="909.8" y="419.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="912.8" y="430.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (55 samples, 2.12%)</title><rect x="911.1" y="419.0" width="25.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.1" y="430.0">j..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (55 samples, 2.12%)</title><rect x="911.1" y="403.0" width="25.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.1" y="414.0">j..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (55 samples, 2.12%)</title><rect x="911.1" y="387.0" width="25.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.1" y="398.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (55 samples, 2.12%)</title><rect x="911.1" y="371.0" width="25.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.1" y="382.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (55 samples, 2.12%)</title><rect x="911.1" y="355.0" width="25.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.1" y="366.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (55 samples, 2.12%)</title><rect x="911.1" y="339.0" width="25.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.1" y="350.0">j..</text>
</g>
<g>
<title>int[] (9 samples, 0.35%)</title><rect x="911.1" y="323.0" width="4.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="914.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.50%)</title><rect x="915.2" y="323.0" width="5.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="918.2" y="334.0"></text>
</g>
<g>
<title>long[] (30 samples, 1.15%)</title><rect x="921.1" y="323.0" width="13.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="924.1" y="334.0"></text>
</g>
<g>
<title>short[] (3 samples, 0.12%)</title><rect x="934.7" y="323.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="937.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.19%)</title><rect x="936.1" y="419.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="939.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.19%)</title><rect x="936.1" y="403.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="939.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.19%)</title><rect x="936.1" y="387.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="939.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.19%)</title><rect x="936.1" y="371.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="939.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (5 samples, 0.19%)</title><rect x="938.4" y="419.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.19%)</title><rect x="938.4" y="403.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.19%)</title><rect x="938.4" y="387.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="941.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.19%)</title><rect x="938.4" y="371.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="941.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (209 samples, 8.04%)</title><rect x="940.6" y="419.0" width="95.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="943.6" y="430.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (48 samples, 1.85%)</title><rect x="940.6" y="403.0" width="21.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.6" y="414.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.08%)</title><rect x="940.6" y="387.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="943.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (46 samples, 1.77%)</title><rect x="941.6" y="387.0" width="20.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.6" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (7 samples, 0.27%)</title><rect x="941.6" y="371.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="944.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (20 samples, 0.77%)</title><rect x="944.7" y="371.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (20 samples, 0.77%)</title><rect x="944.7" y="355.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (20 samples, 0.77%)</title><rect x="944.7" y="339.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (20 samples, 0.77%)</title><rect x="944.7" y="323.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.31%)</title><rect x="944.7" y="307.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.31%)</title><rect x="944.7" y="291.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.7" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.31%)</title><rect x="944.7" y="275.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.31%)</title><rect x="944.7" y="259.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.31%)</title><rect x="944.7" y="243.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.31%)</title><rect x="944.7" y="227.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (8 samples, 0.31%)</title><rect x="944.7" y="211.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.31%)</title><rect x="944.7" y="195.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.31%)</title><rect x="944.7" y="179.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.31%)</title><rect x="944.7" y="163.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (8 samples, 0.31%)</title><rect x="944.7" y="147.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (8 samples, 0.31%)</title><rect x="944.7" y="131.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.7" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (6 samples, 0.23%)</title><rect x="944.7" y="115.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="947.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="947.5" y="115.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="947.5" y="99.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="950.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (12 samples, 0.46%)</title><rect x="948.4" y="307.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (12 samples, 0.46%)</title><rect x="948.4" y="291.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.4" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.46%)</title><rect x="948.4" y="275.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.4" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.46%)</title><rect x="948.4" y="259.0" width="5.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="951.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (8 samples, 0.31%)</title><rect x="953.8" y="371.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="956.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (8 samples, 0.31%)</title><rect x="953.8" y="355.0" width="3.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="956.8" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (9 samples, 0.35%)</title><rect x="957.5" y="371.0" width="4.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="960.5" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.08%)</title><rect x="961.5" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.08%)</title><rect x="961.5" y="355.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="964.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="962.4" y="403.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="962.4" y="387.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="965.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="962.4" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (1 samples, 0.04%)</title><rect x="962.4" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.4" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (1 samples, 0.04%)</title><rect x="962.4" y="339.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="965.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.31%)</title><rect x="962.9" y="403.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="965.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.12%)</title><rect x="962.9" y="387.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.12%)</title><rect x="962.9" y="371.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.12%)</title><rect x="962.9" y="355.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (3 samples, 0.12%)</title><rect x="962.9" y="339.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.9" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (3 samples, 0.12%)</title><rect x="962.9" y="323.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="965.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.19%)</title><rect x="964.3" y="387.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="967.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.19%)</title><rect x="964.3" y="371.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.19%)</title><rect x="964.3" y="355.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/805521818.get$Lambda (5 samples, 0.19%)</title><rect x="964.3" y="339.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.3" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$137 (5 samples, 0.19%)</title><rect x="964.3" y="323.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="967.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (30 samples, 1.15%)</title><rect x="966.5" y="403.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.5" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (7 samples, 0.27%)</title><rect x="966.5" y="387.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="969.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (23 samples, 0.89%)</title><rect x="969.7" y="387.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="972.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.89%)</title><rect x="969.7" y="371.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="972.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.89%)</title><rect x="969.7" y="355.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (23 samples, 0.89%)</title><rect x="969.7" y="339.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (23 samples, 0.89%)</title><rect x="969.7" y="323.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (23 samples, 0.89%)</title><rect x="969.7" y="307.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (23 samples, 0.89%)</title><rect x="969.7" y="291.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.23%)</title><rect x="969.7" y="275.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.23%)</title><rect x="969.7" y="259.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.7" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.23%)</title><rect x="969.7" y="243.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="972.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.23%)</title><rect x="969.7" y="227.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.23%)</title><rect x="969.7" y="211.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.23%)</title><rect x="969.7" y="195.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (6 samples, 0.23%)</title><rect x="969.7" y="179.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.23%)</title><rect x="969.7" y="163.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.23%)</title><rect x="969.7" y="147.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.23%)</title><rect x="969.7" y="131.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (6 samples, 0.23%)</title><rect x="969.7" y="115.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (6 samples, 0.23%)</title><rect x="969.7" y="99.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.7" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="969.7" y="83.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="972.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (3 samples, 0.12%)</title><rect x="971.1" y="83.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (3 samples, 0.12%)</title><rect x="971.1" y="67.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="974.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (17 samples, 0.65%)</title><rect x="972.4" y="275.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (17 samples, 0.65%)</title><rect x="972.4" y="259.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.65%)</title><rect x="972.4" y="243.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="975.4" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.65%)</title><rect x="972.4" y="227.0" width="7.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="975.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (122 samples, 4.70%)</title><rect x="980.2" y="403.0" width="55.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.2" y="414.0">ru/ma..</text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.04%)</title><rect x="980.2" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="983.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.12%)</title><rect x="980.6" y="387.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.12%)</title><rect x="980.6" y="371.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.12%)</title><rect x="980.6" y="355.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="983.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.15%)</title><rect x="982.0" y="387.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.15%)</title><rect x="982.0" y="371.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="985.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (114 samples, 4.39%)</title><rect x="983.8" y="387.0" width="51.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.8" y="398.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.15%)</title><rect x="983.8" y="371.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="986.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (4 samples, 0.15%)</title><rect x="983.8" y="355.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="986.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (40 samples, 1.54%)</title><rect x="985.6" y="371.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.08%)</title><rect x="985.6" y="355.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="988.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (38 samples, 1.46%)</title><rect x="986.5" y="355.0" width="17.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.5" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.08%)</title><rect x="986.5" y="339.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="989.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.08%)</title><rect x="987.4" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.4" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.08%)</title><rect x="987.4" y="323.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="990.4" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.12%)</title><rect x="988.3" y="339.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="991.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.12%)</title><rect x="989.7" y="339.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.12%)</title><rect x="989.7" y="323.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="992.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (28 samples, 1.08%)</title><rect x="991.1" y="339.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="994.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (28 samples, 1.08%)</title><rect x="991.1" y="323.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (28 samples, 1.08%)</title><rect x="991.1" y="307.0" width="12.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.31%)</title><rect x="991.1" y="291.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (8 samples, 0.31%)</title><rect x="991.1" y="275.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.31%)</title><rect x="991.1" y="259.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.31%)</title><rect x="991.1" y="243.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.31%)</title><rect x="991.1" y="227.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="994.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (8 samples, 0.31%)</title><rect x="991.1" y="211.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="994.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (8 samples, 0.31%)</title><rect x="991.1" y="195.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.1" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="991.1" y="179.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="994.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (5 samples, 0.19%)</title><rect x="992.4" y="179.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="995.4" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (5 samples, 0.19%)</title><rect x="992.4" y="163.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="995.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (20 samples, 0.77%)</title><rect x="994.7" y="291.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="997.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (5 samples, 0.19%)</title><rect x="994.7" y="275.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="997.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.15%)</title><rect x="997.0" y="275.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.15%)</title><rect x="997.0" y="259.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$82/163585558.get$Lambda (2 samples, 0.08%)</title><rect x="997.0" y="243.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$82 (2 samples, 0.08%)</title><rect x="997.0" y="227.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1000.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.get$Lambda (2 samples, 0.08%)</title><rect x="997.9" y="243.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.9" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$91 (2 samples, 0.08%)</title><rect x="997.9" y="227.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1000.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.08%)</title><rect x="998.8" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1001.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (2 samples, 0.08%)</title><rect x="998.8" y="259.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.8" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (2 samples, 0.08%)</title><rect x="998.8" y="243.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1001.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (9 samples, 0.35%)</title><rect x="999.7" y="275.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.35%)</title><rect x="999.7" y="259.0" width="4.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1002.7" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.04%)</title><rect x="1003.8" y="371.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1006.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (9 samples, 0.35%)</title><rect x="1004.2" y="371.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1007.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.35%)</title><rect x="1004.2" y="355.0" width="4.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1007.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.19%)</title><rect x="1008.3" y="371.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1011.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (5 samples, 0.19%)</title><rect x="1008.3" y="355.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1011.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.50%)</title><rect x="1010.6" y="371.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.6" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.23%)</title><rect x="1010.6" y="355.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1013.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.27%)</title><rect x="1013.3" y="355.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.27%)</title><rect x="1013.3" y="339.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1016.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.27%)</title><rect x="1013.3" y="323.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.3" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.27%)</title><rect x="1013.3" y="307.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.27%)</title><rect x="1013.3" y="291.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1016.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.27%)</title><rect x="1013.3" y="275.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.27%)</title><rect x="1013.3" y="259.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1016.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (7 samples, 0.27%)</title><rect x="1013.3" y="243.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1016.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.27%)</title><rect x="1013.3" y="227.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1016.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.27%)</title><rect x="1013.3" y="211.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1016.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.08%)</title><rect x="1013.3" y="195.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1016.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.08%)</title><rect x="1013.3" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1016.3" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.08%)</title><rect x="1013.3" y="163.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1016.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.19%)</title><rect x="1014.2" y="195.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (5 samples, 0.19%)</title><rect x="1014.2" y="179.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1017.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.19%)</title><rect x="1014.2" y="163.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1017.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="1014.2" y="147.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1017.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1015.6" y="147.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1018.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="1015.6" y="131.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1018.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (42 samples, 1.62%)</title><rect x="1016.5" y="371.0" width="19.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1019.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (12 samples, 0.46%)</title><rect x="1016.5" y="355.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1019.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (4 samples, 0.15%)</title><rect x="1016.5" y="339.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1019.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (4 samples, 0.15%)</title><rect x="1016.5" y="323.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1019.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.31%)</title><rect x="1018.3" y="339.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.3" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.31%)</title><rect x="1018.3" y="323.0" width="3.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1021.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.04%)</title><rect x="1021.9" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1024.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.04%)</title><rect x="1021.9" y="339.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1024.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.04%)</title><rect x="1022.4" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1025.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.04%)</title><rect x="1022.4" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.04%)</title><rect x="1022.4" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1025.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (1 samples, 0.04%)</title><rect x="1022.4" y="307.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1025.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (20 samples, 0.77%)</title><rect x="1022.9" y="355.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1025.9" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (2 samples, 0.08%)</title><rect x="1022.9" y="339.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1025.9" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (2 samples, 0.08%)</title><rect x="1022.9" y="323.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1025.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (18 samples, 0.69%)</title><rect x="1023.8" y="339.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1026.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.12%)</title><rect x="1023.8" y="323.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.12%)</title><rect x="1023.8" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$76/345481905.get$Lambda (3 samples, 0.12%)</title><rect x="1023.8" y="291.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1026.8" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$76 (3 samples, 0.12%)</title><rect x="1023.8" y="275.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1026.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (15 samples, 0.58%)</title><rect x="1025.1" y="323.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1028.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (15 samples, 0.58%)</title><rect x="1025.1" y="307.0" width="6.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1028.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (8 samples, 0.31%)</title><rect x="1031.9" y="355.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1034.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (8 samples, 0.31%)</title><rect x="1031.9" y="339.0" width="3.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1034.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.31%)</title><rect x="1035.6" y="483.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1038.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.31%)</title><rect x="1035.6" y="467.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.31%)</title><rect x="1035.6" y="451.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1038.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="1035.6" y="435.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1038.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.19%)</title><rect x="1036.9" y="435.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.9" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.19%)</title><rect x="1036.9" y="419.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1039.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (38 samples, 1.46%)</title><rect x="1039.2" y="515.0" width="17.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.2" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.08%)</title><rect x="1039.2" y="499.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1042.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.54%)</title><rect x="1040.1" y="499.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.54%)</title><rect x="1040.1" y="483.0" width="6.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1043.1" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.85%)</title><rect x="1046.5" y="499.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.5" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.85%)</title><rect x="1046.5" y="483.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.5" y="494.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.31%)</title><rect x="1046.5" y="467.0" width="3.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1049.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="1050.1" y="467.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1053.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.42%)</title><rect x="1051.5" y="467.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.42%)</title><rect x="1051.5" y="451.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.42%)</title><rect x="1051.5" y="435.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.5" y="446.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.42%)</title><rect x="1051.5" y="419.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1054.5" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.96%)</title><rect x="1056.5" y="515.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.5" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.96%)</title><rect x="1056.5" y="499.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1059.5" y="510.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.50%)</title><rect x="1056.5" y="483.0" width="5.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1059.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="1062.4" y="483.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1065.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.35%)</title><rect x="1063.7" y="483.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.35%)</title><rect x="1063.7" y="467.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.35%)</title><rect x="1063.7" y="451.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.7" y="462.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.35%)</title><rect x="1063.7" y="435.0" width="4.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1066.7" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=7345] (269 samples, 10.35%)</title><rect x="1067.8" y="595.0" width="122.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1070.8" y="606.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (269 samples, 10.35%)</title><rect x="1067.8" y="579.0" width="122.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.8" y="590.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/Session.process (269 samples, 10.35%)</title><rect x="1067.8" y="563.0" width="122.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.8" y="574.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (269 samples, 10.35%)</title><rect x="1067.8" y="547.0" width="122.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.8" y="558.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (269 samples, 10.35%)</title><rect x="1067.8" y="531.0" width="122.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.8" y="542.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (236 samples, 9.08%)</title><rect x="1067.8" y="515.0" width="107.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1070.8" y="526.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (236 samples, 9.08%)</title><rect x="1067.8" y="499.0" width="107.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.8" y="510.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (232 samples, 8.93%)</title><rect x="1067.8" y="483.0" width="105.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.8" y="494.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 0.35%)</title><rect x="1067.8" y="467.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 0.35%)</title><rect x="1067.8" y="451.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.35%)</title><rect x="1067.8" y="435.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.8" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (9 samples, 0.35%)</title><rect x="1067.8" y="419.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.8" y="430.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.35%)</title><rect x="1067.8" y="403.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1070.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.12%)</title><rect x="1071.9" y="467.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.12%)</title><rect x="1071.9" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1074.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.12%)</title><rect x="1071.9" y="435.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.12%)</title><rect x="1071.9" y="419.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="1071.9" y="403.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1074.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (220 samples, 8.47%)</title><rect x="1073.3" y="467.0" width="99.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.3" y="478.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.15%)</title><rect x="1073.3" y="451.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.3" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.15%)</title><rect x="1073.3" y="435.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1076.3" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.15%)</title><rect x="1073.3" y="419.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1076.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (216 samples, 8.31%)</title><rect x="1075.1" y="451.0" width="98.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1078.1" y="462.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="1075.1" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1078.1" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.04%)</title><rect x="1075.1" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1078.1" y="430.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.12%)</title><rect x="1075.5" y="435.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1078.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.19%)</title><rect x="1076.9" y="435.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.9" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.19%)</title><rect x="1076.9" y="419.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1079.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (207 samples, 7.97%)</title><rect x="1079.2" y="435.0" width="94.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.2" y="446.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (27 samples, 1.04%)</title><rect x="1079.2" y="419.0" width="12.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1082.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (27 samples, 1.04%)</title><rect x="1079.2" y="403.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1082.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (27 samples, 1.04%)</title><rect x="1079.2" y="387.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1082.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (27 samples, 1.04%)</title><rect x="1079.2" y="371.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 1.04%)</title><rect x="1079.2" y="355.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1082.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.85%)</title><rect x="1079.2" y="339.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (22 samples, 0.85%)</title><rect x="1079.2" y="323.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (22 samples, 0.85%)</title><rect x="1079.2" y="307.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (22 samples, 0.85%)</title><rect x="1079.2" y="291.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1082.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (22 samples, 0.85%)</title><rect x="1079.2" y="275.0" width="10.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1082.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 0.85%)</title><rect x="1079.2" y="259.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.42%)</title><rect x="1079.2" y="243.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1082.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.42%)</title><rect x="1079.2" y="227.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.2" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.42%)</title><rect x="1079.2" y="211.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1082.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.42%)</title><rect x="1079.2" y="195.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.42%)</title><rect x="1079.2" y="179.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1082.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (11 samples, 0.42%)</title><rect x="1079.2" y="163.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (11 samples, 0.42%)</title><rect x="1079.2" y="147.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (11 samples, 0.42%)</title><rect x="1079.2" y="131.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1082.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (11 samples, 0.42%)</title><rect x="1079.2" y="115.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.15%)</title><rect x="1079.2" y="99.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1082.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.15%)</title><rect x="1079.2" y="83.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.2" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.15%)</title><rect x="1079.2" y="67.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1082.2" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.27%)</title><rect x="1081.0" y="99.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (7 samples, 0.27%)</title><rect x="1081.0" y="83.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1084.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.27%)</title><rect x="1081.0" y="67.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1084.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (5 samples, 0.19%)</title><rect x="1081.0" y="51.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1084.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1083.3" y="51.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.3" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2 samples, 0.08%)</title><rect x="1083.3" y="35.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1086.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (11 samples, 0.42%)</title><rect x="1084.2" y="243.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1087.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (11 samples, 0.42%)</title><rect x="1084.2" y="227.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1087.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.42%)</title><rect x="1084.2" y="211.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1087.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.42%)</title><rect x="1084.2" y="195.0" width="5.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1087.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$141/1823291526.apply (5 samples, 0.19%)</title><rect x="1089.2" y="339.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5 samples, 0.19%)</title><rect x="1089.2" y="323.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.19%)</title><rect x="1089.2" y="307.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.19%)</title><rect x="1089.2" y="291.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1092.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="1091.4" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1094.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.04%)</title><rect x="1091.4" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$155/1514748197.apply (1 samples, 0.04%)</title><rect x="1091.4" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (1 samples, 0.04%)</title><rect x="1091.4" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (1 samples, 0.04%)</title><rect x="1091.4" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1094.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="1091.4" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1094.4" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.04%)</title><rect x="1091.4" y="323.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1094.4" y="334.0"></text>
</g>
<g>
<title>java.util.NoSuchElementException (4 samples, 0.15%)</title><rect x="1091.9" y="419.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1094.9" y="430.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (32 samples, 1.23%)</title><rect x="1093.7" y="419.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.7" y="430.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (32 samples, 1.23%)</title><rect x="1093.7" y="403.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (32 samples, 1.23%)</title><rect x="1093.7" y="387.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (32 samples, 1.23%)</title><rect x="1093.7" y="371.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (32 samples, 1.23%)</title><rect x="1093.7" y="355.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (32 samples, 1.23%)</title><rect x="1093.7" y="339.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.7" y="350.0"></text>
</g>
<g>
<title>int[] (5 samples, 0.19%)</title><rect x="1093.7" y="323.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1096.7" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.42%)</title><rect x="1096.0" y="323.0" width="5.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1099.0" y="334.0"></text>
</g>
<g>
<title>long[] (13 samples, 0.50%)</title><rect x="1101.0" y="323.0" width="5.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1104.0" y="334.0"></text>
</g>
<g>
<title>short[] (3 samples, 0.12%)</title><rect x="1106.9" y="323.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1109.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (4 samples, 0.15%)</title><rect x="1108.2" y="419.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1111.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.15%)</title><rect x="1108.2" y="403.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1111.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.15%)</title><rect x="1108.2" y="387.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.15%)</title><rect x="1108.2" y="371.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1111.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2 samples, 0.08%)</title><rect x="1110.1" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.08%)</title><rect x="1110.1" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1113.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.08%)</title><rect x="1110.1" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.08%)</title><rect x="1110.1" y="371.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1113.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (137 samples, 5.27%)</title><rect x="1111.0" y="419.0" width="62.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.0" y="430.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 0.04%)</title><rect x="1111.0" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (1 samples, 0.04%)</title><rect x="1111.0" y="387.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1114.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (27 samples, 1.04%)</title><rect x="1111.4" y="403.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.4" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.04%)</title><rect x="1111.4" y="387.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1114.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 1.00%)</title><rect x="1111.9" y="387.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.9" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.12%)</title><rect x="1111.9" y="371.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1114.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (14 samples, 0.54%)</title><rect x="1113.2" y="371.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1116.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (14 samples, 0.54%)</title><rect x="1113.2" y="355.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1116.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (14 samples, 0.54%)</title><rect x="1113.2" y="339.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.54%)</title><rect x="1113.2" y="323.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1116.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.27%)</title><rect x="1113.2" y="307.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.27%)</title><rect x="1113.2" y="291.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.2" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.27%)</title><rect x="1113.2" y="275.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1116.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.27%)</title><rect x="1113.2" y="259.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.27%)</title><rect x="1113.2" y="243.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.27%)</title><rect x="1113.2" y="227.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1116.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (7 samples, 0.27%)</title><rect x="1113.2" y="211.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.27%)</title><rect x="1113.2" y="195.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1116.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.27%)</title><rect x="1113.2" y="179.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1116.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.27%)</title><rect x="1113.2" y="163.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (7 samples, 0.27%)</title><rect x="1113.2" y="147.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (7 samples, 0.27%)</title><rect x="1113.2" y="131.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1116.2" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (3 samples, 0.12%)</title><rect x="1113.2" y="115.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1116.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (4 samples, 0.15%)</title><rect x="1114.6" y="115.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.6" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (4 samples, 0.15%)</title><rect x="1114.6" y="99.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1117.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (7 samples, 0.27%)</title><rect x="1116.4" y="307.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1119.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (7 samples, 0.27%)</title><rect x="1116.4" y="291.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1119.4" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.27%)</title><rect x="1116.4" y="275.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.4" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.27%)</title><rect x="1116.4" y="259.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1119.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.04%)</title><rect x="1119.6" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.04%)</title><rect x="1119.6" y="355.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1122.6" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.23%)</title><rect x="1120.1" y="371.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1123.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1122.8" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.08%)</title><rect x="1122.8" y="355.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1125.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="1123.7" y="403.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1123.7" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1123.7" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (1 samples, 0.04%)</title><rect x="1123.7" y="355.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1126.7" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (1 samples, 0.04%)</title><rect x="1123.7" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1126.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.08%)</title><rect x="1124.1" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="1124.1" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1124.1" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1124.1" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1488603081.get$Lambda (1 samples, 0.04%)</title><rect x="1124.1" y="339.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.1" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$128 (1 samples, 0.04%)</title><rect x="1124.1" y="323.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1127.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.04%)</title><rect x="1124.6" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1124.6" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1124.6" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/805521818.get$Lambda (1 samples, 0.04%)</title><rect x="1124.6" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.6" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$137 (1 samples, 0.04%)</title><rect x="1124.6" y="323.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1127.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (16 samples, 0.62%)</title><rect x="1125.1" y="403.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.1" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.04%)</title><rect x="1125.1" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1128.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (15 samples, 0.58%)</title><rect x="1125.5" y="387.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.58%)</title><rect x="1125.5" y="371.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1128.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (15 samples, 0.58%)</title><rect x="1125.5" y="355.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1128.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15 samples, 0.58%)</title><rect x="1125.5" y="339.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15 samples, 0.58%)</title><rect x="1125.5" y="323.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15 samples, 0.58%)</title><rect x="1125.5" y="307.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.58%)</title><rect x="1125.5" y="291.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.23%)</title><rect x="1125.5" y="275.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.23%)</title><rect x="1125.5" y="259.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.5" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.23%)</title><rect x="1125.5" y="243.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.23%)</title><rect x="1125.5" y="227.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.23%)</title><rect x="1125.5" y="211.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.23%)</title><rect x="1125.5" y="195.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (6 samples, 0.23%)</title><rect x="1125.5" y="179.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.23%)</title><rect x="1125.5" y="163.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.23%)</title><rect x="1125.5" y="147.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.23%)</title><rect x="1125.5" y="131.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (6 samples, 0.23%)</title><rect x="1125.5" y="115.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1128.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (6 samples, 0.23%)</title><rect x="1125.5" y="99.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="1125.5" y="83.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1128.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (4 samples, 0.15%)</title><rect x="1126.4" y="83.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (4 samples, 0.15%)</title><rect x="1126.4" y="67.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1129.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$97/1955875830.apply (9 samples, 0.35%)</title><rect x="1128.2" y="275.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (9 samples, 0.35%)</title><rect x="1128.2" y="259.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.35%)</title><rect x="1128.2" y="243.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.2" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.35%)</title><rect x="1128.2" y="227.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1131.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (90 samples, 3.46%)</title><rect x="1132.3" y="403.0" width="40.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.3" y="414.0">ru/..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.12%)</title><rect x="1132.3" y="387.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1135.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.08%)</title><rect x="1133.7" y="387.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.08%)</title><rect x="1133.7" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (2 samples, 0.08%)</title><rect x="1133.7" y="355.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1136.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (85 samples, 3.27%)</title><rect x="1134.6" y="387.0" width="38.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.6" y="398.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.19%)</title><rect x="1134.6" y="371.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.19%)</title><rect x="1134.6" y="355.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1137.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (31 samples, 1.19%)</title><rect x="1136.9" y="371.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.15%)</title><rect x="1136.9" y="355.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1139.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (27 samples, 1.04%)</title><rect x="1138.7" y="355.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.7" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.08%)</title><rect x="1138.7" y="339.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1141.7" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.23%)</title><rect x="1139.6" y="339.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1142.6" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (19 samples, 0.73%)</title><rect x="1142.3" y="339.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (19 samples, 0.73%)</title><rect x="1142.3" y="323.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (19 samples, 0.73%)</title><rect x="1142.3" y="307.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.12%)</title><rect x="1142.3" y="291.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1145.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (3 samples, 0.12%)</title><rect x="1142.3" y="275.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1145.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.12%)</title><rect x="1142.3" y="259.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.12%)</title><rect x="1142.3" y="243.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.12%)</title><rect x="1142.3" y="227.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (3 samples, 0.12%)</title><rect x="1142.3" y="211.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1145.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (3 samples, 0.12%)</title><rect x="1142.3" y="195.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2 samples, 0.08%)</title><rect x="1142.3" y="179.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1145.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1143.2" y="179.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1146.2" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.04%)</title><rect x="1143.2" y="163.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1146.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (16 samples, 0.62%)</title><rect x="1143.7" y="291.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (4 samples, 0.15%)</title><rect x="1143.7" y="275.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1146.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="1145.5" y="275.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="1145.5" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.get$Lambda (2 samples, 0.08%)</title><rect x="1145.5" y="243.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$91 (2 samples, 0.08%)</title><rect x="1145.5" y="227.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1148.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.15%)</title><rect x="1146.4" y="275.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.15%)</title><rect x="1146.4" y="259.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.15%)</title><rect x="1146.4" y="243.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1149.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (6 samples, 0.23%)</title><rect x="1148.2" y="275.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.23%)</title><rect x="1148.2" y="259.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1151.2" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.08%)</title><rect x="1150.9" y="371.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1153.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.23%)</title><rect x="1151.8" y="371.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1154.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (6 samples, 0.23%)</title><rect x="1151.8" y="355.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1154.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (14 samples, 0.54%)</title><rect x="1154.6" y="371.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.6" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.19%)</title><rect x="1154.6" y="355.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1157.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.35%)</title><rect x="1156.8" y="355.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1159.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.35%)</title><rect x="1156.8" y="339.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.35%)</title><rect x="1156.8" y="323.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.35%)</title><rect x="1156.8" y="307.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.35%)</title><rect x="1156.8" y="291.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.35%)</title><rect x="1156.8" y="275.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.35%)</title><rect x="1156.8" y="259.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1159.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$91/247260365.getAsBoolean (9 samples, 0.35%)</title><rect x="1156.8" y="243.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1159.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.35%)</title><rect x="1156.8" y="227.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.35%)</title><rect x="1156.8" y="211.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.15%)</title><rect x="1156.8" y="195.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.15%)</title><rect x="1156.8" y="179.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1159.8" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.15%)</title><rect x="1156.8" y="163.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1159.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.19%)</title><rect x="1158.7" y="195.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$74/388490182.apply (5 samples, 0.19%)</title><rect x="1158.7" y="179.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (5 samples, 0.19%)</title><rect x="1158.7" y="163.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.7" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (4 samples, 0.15%)</title><rect x="1158.7" y="147.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1161.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1160.5" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1 samples, 0.04%)</title><rect x="1160.5" y="131.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1163.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (27 samples, 1.04%)</title><rect x="1160.9" y="371.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.15%)</title><rect x="1160.9" y="355.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.15%)</title><rect x="1160.9" y="339.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1163.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.15%)</title><rect x="1160.9" y="323.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1163.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.04%)</title><rect x="1162.7" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1165.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.04%)</title><rect x="1162.7" y="339.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1165.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.23%)</title><rect x="1163.2" y="355.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1166.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.23%)</title><rect x="1163.2" y="339.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.23%)</title><rect x="1163.2" y="323.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.23%)</title><rect x="1163.2" y="307.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1166.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (8 samples, 0.31%)</title><rect x="1165.9" y="355.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.9" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (4 samples, 0.15%)</title><rect x="1165.9" y="339.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.9" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (4 samples, 0.15%)</title><rect x="1165.9" y="323.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1168.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (4 samples, 0.15%)</title><rect x="1167.7" y="339.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1167.7" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1167.7" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1170.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$76/345481905.get$Lambda (1 samples, 0.04%)</title><rect x="1167.7" y="291.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1170.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$76 (1 samples, 0.04%)</title><rect x="1167.7" y="275.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1170.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (3 samples, 0.12%)</title><rect x="1168.2" y="323.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (3 samples, 0.12%)</title><rect x="1168.2" y="307.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1171.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (8 samples, 0.31%)</title><rect x="1169.6" y="355.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.6" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (8 samples, 0.31%)</title><rect x="1169.6" y="339.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1172.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.15%)</title><rect x="1173.2" y="483.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1176.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.15%)</title><rect x="1173.2" y="467.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.15%)</title><rect x="1173.2" y="451.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.15%)</title><rect x="1173.2" y="435.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1176.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (24 samples, 0.92%)</title><rect x="1175.0" y="515.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1178.0" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.15%)</title><rect x="1175.0" y="499.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1178.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.19%)</title><rect x="1176.8" y="499.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.19%)</title><rect x="1176.8" y="483.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1179.8" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.58%)</title><rect x="1179.1" y="499.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.58%)</title><rect x="1179.1" y="483.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1182.1" y="494.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.46%)</title><rect x="1179.1" y="467.0" width="5.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1182.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.12%)</title><rect x="1184.5" y="467.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1187.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.35%)</title><rect x="1185.9" y="515.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.9" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.35%)</title><rect x="1185.9" y="499.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.9" y="510.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.15%)</title><rect x="1185.9" y="483.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1188.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.08%)</title><rect x="1187.7" y="483.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1190.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="1188.6" y="483.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="1188.6" y="467.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.12%)</title><rect x="1188.6" y="451.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.6" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="1188.6" y="435.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1191.6" y="446.0"></text>
</g>
</g>
</svg>
