<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (247,791 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (123,909 samples, 50.01%)</title><rect x="10.0" y="803.0" width="590.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (123,909 samples, 50.01%)</title><rect x="10.0" y="787.0" width="590.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (123,909 samples, 50.01%)</title><rect x="10.0" y="771.0" width="590.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13,899 samples, 5.61%)</title><rect x="10.0" y="755.0" width="66.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13,899 samples, 5.61%)</title><rect x="10.0" y="739.0" width="66.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13,899 samples, 5.61%)</title><rect x="10.0" y="723.0" width="66.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (84 samples, 0.03%)</title><rect x="10.0" y="707.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/172879885.apply (13,815 samples, 5.58%)</title><rect x="10.4" y="707.0" width="65.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.4" y="718.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (13,815 samples, 5.58%)</title><rect x="10.4" y="691.0" width="65.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.4" y="702.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (13,815 samples, 5.58%)</title><rect x="10.4" y="675.0" width="65.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.4" y="686.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (100 samples, 0.04%)</title><rect x="10.4" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (100 samples, 0.04%)</title><rect x="10.4" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$203/1559042816.get$Lambda (59 samples, 0.02%)</title><rect x="10.4" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$203 (59 samples, 0.02%)</title><rect x="10.4" y="611.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="13.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (182 samples, 0.07%)</title><rect x="10.9" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (182 samples, 0.07%)</title><rect x="10.9" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (115 samples, 0.05%)</title><rect x="10.9" y="627.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (67 samples, 0.03%)</title><rect x="11.4" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (67 samples, 0.03%)</title><rect x="11.4" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (67 samples, 0.03%)</title><rect x="11.4" y="595.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="14.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (376 samples, 0.15%)</title><rect x="11.7" y="659.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (376 samples, 0.15%)</title><rect x="11.7" y="643.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (220 samples, 0.09%)</title><rect x="11.7" y="627.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="14.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (156 samples, 0.06%)</title><rect x="12.8" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (156 samples, 0.06%)</title><rect x="12.8" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (156 samples, 0.06%)</title><rect x="12.8" y="595.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="15.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (12,717 samples, 5.13%)</title><rect x="13.5" y="659.0" width="60.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.5" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (12,717 samples, 5.13%)</title><rect x="13.5" y="643.0" width="60.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.5" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (12,717 samples, 5.13%)</title><rect x="13.5" y="627.0" width="60.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.5" y="638.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (195 samples, 0.08%)</title><rect x="13.5" y="611.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (195 samples, 0.08%)</title><rect x="13.5" y="595.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$130/1695009006.get$Lambda (62 samples, 0.03%)</title><rect x="13.5" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$130 (62 samples, 0.03%)</title><rect x="13.5" y="563.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="16.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/1631076502.get$Lambda (64 samples, 0.03%)</title><rect x="13.8" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$133 (64 samples, 0.03%)</title><rect x="13.8" y="563.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="16.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$178/1146133693.get$Lambda (69 samples, 0.03%)</title><rect x="14.1" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$178 (69 samples, 0.03%)</title><rect x="14.1" y="563.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (8,859 samples, 3.58%)</title><rect x="14.5" y="611.0" width="42.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.5" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (8,859 samples, 3.58%)</title><rect x="14.5" y="595.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.5" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (8,784 samples, 3.54%)</title><rect x="14.5" y="579.0" width="41.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.5" y="590.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$178/1146133693.apply (8,784 samples, 3.54%)</title><rect x="14.5" y="563.0" width="41.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.5" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (8,784 samples, 3.54%)</title><rect x="14.5" y="547.0" width="41.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.5" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (8,784 samples, 3.54%)</title><rect x="14.5" y="531.0" width="41.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.5" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/1631076502.apply (8,784 samples, 3.54%)</title><rect x="14.5" y="515.0" width="41.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.5" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (8,784 samples, 3.54%)</title><rect x="14.5" y="499.0" width="41.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.5" y="510.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (255 samples, 0.10%)</title><rect x="14.7" y="483.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (255 samples, 0.10%)</title><rect x="14.7" y="467.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (113 samples, 0.05%)</title><rect x="14.7" y="451.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="17.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (62 samples, 0.03%)</title><rect x="15.2" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/1165932755.apply (62 samples, 0.03%)</title><rect x="15.2" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (62 samples, 0.03%)</title><rect x="15.2" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (62 samples, 0.03%)</title><rect x="15.2" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$130/1695009006.apply (62 samples, 0.03%)</title><rect x="15.2" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (62 samples, 0.03%)</title><rect x="15.2" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.03%)</title><rect x="15.5" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.03%)</title><rect x="15.5" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (80 samples, 0.03%)</title><rect x="15.5" y="419.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="18.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (192 samples, 0.08%)</title><rect x="15.9" y="483.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (192 samples, 0.08%)</title><rect x="15.9" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (115 samples, 0.05%)</title><rect x="15.9" y="451.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="18.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.03%)</title><rect x="16.5" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.03%)</title><rect x="16.5" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (76 samples, 0.03%)</title><rect x="16.5" y="419.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="19.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (8,285 samples, 3.34%)</title><rect x="16.8" y="483.0" width="39.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.8" y="494.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.03%)</title><rect x="16.8" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.03%)</title><rect x="16.8" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6,828 samples, 2.76%)</title><rect x="17.2" y="467.0" width="32.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.2" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6,828 samples, 2.76%)</title><rect x="17.2" y="451.0" width="32.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.2" y="462.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (76 samples, 0.03%)</title><rect x="17.2" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="20.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$196/1772088528.apply (6,594 samples, 2.66%)</title><rect x="17.6" y="435.0" width="31.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.6" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (6,594 samples, 2.66%)</title><rect x="17.6" y="419.0" width="31.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.6" y="430.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (202 samples, 0.08%)</title><rect x="17.7" y="403.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (202 samples, 0.08%)</title><rect x="17.7" y="387.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (129 samples, 0.05%)</title><rect x="17.7" y="371.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="20.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (73 samples, 0.03%)</title><rect x="18.3" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (73 samples, 0.03%)</title><rect x="18.3" y="355.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (73 samples, 0.03%)</title><rect x="18.3" y="339.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="21.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (94 samples, 0.04%)</title><rect x="18.7" y="403.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="21.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (111 samples, 0.04%)</title><rect x="19.1" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (65 samples, 0.03%)</title><rect x="19.1" y="387.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="22.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (199 samples, 0.08%)</title><rect x="19.7" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (199 samples, 0.08%)</title><rect x="19.7" y="387.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (54 samples, 0.02%)</title><rect x="19.7" y="371.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (54 samples, 0.02%)</title><rect x="19.7" y="355.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (54 samples, 0.02%)</title><rect x="19.7" y="339.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (54 samples, 0.02%)</title><rect x="19.7" y="323.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="22.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (145 samples, 0.06%)</title><rect x="19.9" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (145 samples, 0.06%)</title><rect x="19.9" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (104 samples, 0.04%)</title><rect x="19.9" y="339.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="22.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (5,953 samples, 2.40%)</title><rect x="20.6" y="403.0" width="28.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.6" y="414.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (83 samples, 0.03%)</title><rect x="20.6" y="387.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="23.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (138 samples, 0.06%)</title><rect x="21.0" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.0" y="398.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.03%)</title><rect x="21.0" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="24.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (68 samples, 0.03%)</title><rect x="21.3" y="371.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="24.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (543 samples, 0.22%)</title><rect x="21.7" y="387.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (543 samples, 0.22%)</title><rect x="21.7" y="371.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (543 samples, 0.22%)</title><rect x="21.7" y="355.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.7" y="366.0"></text>
</g>
<g>
<title>byte[] (543 samples, 0.22%)</title><rect x="21.7" y="339.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="24.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (189 samples, 0.08%)</title><rect x="24.2" y="387.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.2" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (189 samples, 0.08%)</title><rect x="24.2" y="371.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.2" y="382.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.08%)</title><rect x="24.2" y="355.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="27.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (395 samples, 0.16%)</title><rect x="25.1" y="387.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="28.1" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (395 samples, 0.16%)</title><rect x="25.1" y="371.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.1" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (395 samples, 0.16%)</title><rect x="25.1" y="355.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (395 samples, 0.16%)</title><rect x="25.1" y="339.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.1" y="350.0"></text>
</g>
<g>
<title>byte[] (395 samples, 0.16%)</title><rect x="25.1" y="323.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="28.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (543 samples, 0.22%)</title><rect x="27.0" y="387.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (543 samples, 0.22%)</title><rect x="27.0" y="371.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.02%)</title><rect x="27.0" y="355.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="30.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (484 samples, 0.20%)</title><rect x="27.3" y="355.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.3" y="366.0"></text>
</g>
<g>
<title>byte[] (484 samples, 0.20%)</title><rect x="27.3" y="339.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="30.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (126 samples, 0.05%)</title><rect x="29.6" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (126 samples, 0.05%)</title><rect x="29.6" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (126 samples, 0.05%)</title><rect x="29.6" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="32.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (61 samples, 0.02%)</title><rect x="30.2" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.2" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (61 samples, 0.02%)</title><rect x="30.2" y="371.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="33.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,912 samples, 1.18%)</title><rect x="30.5" y="387.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,412 samples, 0.57%)</title><rect x="30.8" y="371.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (691 samples, 0.28%)</title><rect x="30.8" y="355.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.8" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (691 samples, 0.28%)</title><rect x="30.8" y="339.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.8" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (691 samples, 0.28%)</title><rect x="30.8" y="323.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (691 samples, 0.28%)</title><rect x="30.8" y="307.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.8" y="318.0"></text>
</g>
<g>
<title>byte[] (691 samples, 0.28%)</title><rect x="30.8" y="291.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="33.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (160 samples, 0.06%)</title><rect x="34.0" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.0" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (160 samples, 0.06%)</title><rect x="34.0" y="339.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (160 samples, 0.06%)</title><rect x="34.0" y="323.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.0" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (160 samples, 0.06%)</title><rect x="34.0" y="307.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="37.0" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (159 samples, 0.06%)</title><rect x="34.8" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.8" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (79 samples, 0.03%)</title><rect x="34.8" y="339.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="37.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (80 samples, 0.03%)</title><rect x="35.2" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (80 samples, 0.03%)</title><rect x="35.2" y="323.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="38.2" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$218/1534029083.test (402 samples, 0.16%)</title><rect x="35.6" y="355.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.6" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (402 samples, 0.16%)</title><rect x="35.6" y="339.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1810899357.test (402 samples, 0.16%)</title><rect x="35.6" y="323.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (402 samples, 0.16%)</title><rect x="35.6" y="307.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.6" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1970982267.test (402 samples, 0.16%)</title><rect x="35.6" y="291.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.6" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (402 samples, 0.16%)</title><rect x="35.6" y="275.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/73181251.test (402 samples, 0.16%)</title><rect x="35.6" y="259.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (402 samples, 0.16%)</title><rect x="35.6" y="243.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (402 samples, 0.16%)</title><rect x="35.6" y="227.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (402 samples, 0.16%)</title><rect x="35.6" y="211.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.6" y="222.0"></text>
</g>
<g>
<title>java.lang.String (200 samples, 0.08%)</title><rect x="35.6" y="195.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="38.6" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (202 samples, 0.08%)</title><rect x="36.5" y="195.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.5" y="206.0"></text>
</g>
<g>
<title>byte[] (202 samples, 0.08%)</title><rect x="36.5" y="179.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="39.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,448 samples, 0.58%)</title><rect x="37.5" y="371.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,448 samples, 0.58%)</title><rect x="37.5" y="355.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.5" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,448 samples, 0.58%)</title><rect x="37.5" y="339.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.5" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (83 samples, 0.03%)</title><rect x="37.7" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="40.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (136 samples, 0.05%)</title><rect x="38.1" y="323.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="41.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.03%)</title><rect x="38.9" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.03%)</title><rect x="38.9" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.get$Lambda (78 samples, 0.03%)</title><rect x="38.9" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.9" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$116 (78 samples, 0.03%)</title><rect x="38.9" y="275.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="41.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (95 samples, 0.04%)</title><rect x="39.3" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.3" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (95 samples, 0.04%)</title><rect x="39.3" y="307.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="42.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (850 samples, 0.34%)</title><rect x="39.8" y="323.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (850 samples, 0.34%)</title><rect x="39.8" y="307.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (850 samples, 0.34%)</title><rect x="39.8" y="291.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (152 samples, 0.06%)</title><rect x="39.8" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (152 samples, 0.06%)</title><rect x="39.8" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (152 samples, 0.06%)</title><rect x="39.8" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (152 samples, 0.06%)</title><rect x="39.8" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (152 samples, 0.06%)</title><rect x="39.8" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (152 samples, 0.06%)</title><rect x="39.8" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (152 samples, 0.06%)</title><rect x="39.8" y="179.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (152 samples, 0.06%)</title><rect x="39.8" y="163.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (152 samples, 0.06%)</title><rect x="39.8" y="147.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="42.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (381 samples, 0.15%)</title><rect x="40.5" y="275.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.5" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (381 samples, 0.15%)</title><rect x="40.5" y="259.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (189 samples, 0.08%)</title><rect x="40.5" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (189 samples, 0.08%)</title><rect x="40.5" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.5" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (189 samples, 0.08%)</title><rect x="40.5" y="211.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="43.5" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (192 samples, 0.08%)</title><rect x="41.4" y="243.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.4" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (192 samples, 0.08%)</title><rect x="41.4" y="227.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="44.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (317 samples, 0.13%)</title><rect x="42.3" y="275.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.3" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (317 samples, 0.13%)</title><rect x="42.3" y="259.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="45.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (116 samples, 0.05%)</title><rect x="43.8" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (116 samples, 0.05%)</title><rect x="43.8" y="307.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="46.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (179 samples, 0.07%)</title><rect x="44.4" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (129 samples, 0.05%)</title><rect x="44.6" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (129 samples, 0.05%)</title><rect x="44.6" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1472682156.invoke (129 samples, 0.05%)</title><rect x="44.6" y="339.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (129 samples, 0.05%)</title><rect x="44.6" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (55 samples, 0.02%)</title><rect x="44.6" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.02%)</title><rect x="44.6" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="47.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (74 samples, 0.03%)</title><rect x="44.9" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (74 samples, 0.03%)</title><rect x="44.9" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.9" y="302.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.03%)</title><rect x="44.9" y="275.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="47.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (334 samples, 0.13%)</title><rect x="45.2" y="387.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (334 samples, 0.13%)</title><rect x="45.2" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (334 samples, 0.13%)</title><rect x="45.2" y="355.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (334 samples, 0.13%)</title><rect x="45.2" y="339.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1472682156.invoke (334 samples, 0.13%)</title><rect x="45.2" y="323.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (334 samples, 0.13%)</title><rect x="45.2" y="307.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (61 samples, 0.02%)</title><rect x="45.2" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (61 samples, 0.02%)</title><rect x="45.2" y="275.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="48.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (273 samples, 0.11%)</title><rect x="45.5" y="291.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (273 samples, 0.11%)</title><rect x="45.5" y="275.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.5" y="286.0"></text>
</g>
<g>
<title>byte[] (273 samples, 0.11%)</title><rect x="45.5" y="259.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="48.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (450 samples, 0.18%)</title><rect x="46.8" y="387.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.8" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (125 samples, 0.05%)</title><rect x="46.8" y="371.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="49.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (124 samples, 0.05%)</title><rect x="47.4" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (124 samples, 0.05%)</title><rect x="47.4" y="355.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="50.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (201 samples, 0.08%)</title><rect x="48.0" y="371.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.0" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (201 samples, 0.08%)</title><rect x="48.0" y="355.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="51.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (158 samples, 0.06%)</title><rect x="49.0" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (158 samples, 0.06%)</title><rect x="49.0" y="419.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (158 samples, 0.06%)</title><rect x="49.0" y="403.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="52.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (222 samples, 0.09%)</title><rect x="49.7" y="467.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="52.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (72 samples, 0.03%)</title><rect x="50.8" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="53.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1,088 samples, 0.44%)</title><rect x="51.1" y="467.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.03%)</title><rect x="51.1" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.03%)</title><rect x="51.1" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (128 samples, 0.05%)</title><rect x="51.5" y="451.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="54.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (80 samples, 0.03%)</title><rect x="52.1" y="451.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="55.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (114 samples, 0.05%)</title><rect x="52.5" y="451.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="55.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (297 samples, 0.12%)</title><rect x="53.0" y="451.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (297 samples, 0.12%)</title><rect x="53.0" y="435.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (297 samples, 0.12%)</title><rect x="53.0" y="419.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (297 samples, 0.12%)</title><rect x="53.0" y="403.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (297 samples, 0.12%)</title><rect x="53.0" y="387.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (297 samples, 0.12%)</title><rect x="53.0" y="371.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (297 samples, 0.12%)</title><rect x="53.0" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (297 samples, 0.12%)</title><rect x="53.0" y="339.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (297 samples, 0.12%)</title><rect x="53.0" y="323.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (100 samples, 0.04%)</title><rect x="53.0" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (100 samples, 0.04%)</title><rect x="53.0" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$188/136959346.get$Lambda (70 samples, 0.03%)</title><rect x="53.1" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$188 (70 samples, 0.03%)</title><rect x="53.1" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="56.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (88 samples, 0.04%)</title><rect x="53.5" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="56.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (109 samples, 0.04%)</title><rect x="53.9" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (109 samples, 0.04%)</title><rect x="53.9" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (63 samples, 0.03%)</title><rect x="54.1" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (63 samples, 0.03%)</title><rect x="54.1" y="259.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="57.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (300 samples, 0.12%)</title><rect x="54.4" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.4" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (69 samples, 0.03%)</title><rect x="54.4" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="57.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (152 samples, 0.06%)</title><rect x="54.7" y="435.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="57.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (79 samples, 0.03%)</title><rect x="55.5" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.5" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (79 samples, 0.03%)</title><rect x="55.5" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.5" y="430.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.03%)</title><rect x="55.5" y="403.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="58.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (93 samples, 0.04%)</title><rect x="55.8" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (93 samples, 0.04%)</title><rect x="55.8" y="435.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="58.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (75 samples, 0.03%)</title><rect x="56.3" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (75 samples, 0.03%)</title><rect x="56.3" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (75 samples, 0.03%)</title><rect x="56.3" y="547.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="59.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (181 samples, 0.07%)</title><rect x="56.6" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (181 samples, 0.07%)</title><rect x="56.6" y="595.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (82 samples, 0.03%)</title><rect x="56.6" y="579.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="59.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (99 samples, 0.04%)</title><rect x="57.0" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (99 samples, 0.04%)</title><rect x="57.0" y="563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (99 samples, 0.04%)</title><rect x="57.0" y="547.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="60.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (3,482 samples, 1.41%)</title><rect x="57.5" y="611.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.03%)</title><rect x="57.5" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.03%)</title><rect x="57.5" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (176 samples, 0.07%)</title><rect x="57.9" y="595.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (176 samples, 0.07%)</title><rect x="57.9" y="579.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$176/2010066271.apply (88 samples, 0.04%)</title><rect x="57.9" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (88 samples, 0.04%)</title><rect x="57.9" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (88 samples, 0.04%)</title><rect x="57.9" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (88 samples, 0.04%)</title><rect x="57.9" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="60.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.04%)</title><rect x="58.3" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.04%)</title><rect x="58.3" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (88 samples, 0.04%)</title><rect x="58.3" y="531.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="61.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (71 samples, 0.03%)</title><rect x="58.8" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (71 samples, 0.03%)</title><rect x="58.8" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (71 samples, 0.03%)</title><rect x="58.8" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (71 samples, 0.03%)</title><rect x="58.8" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (71 samples, 0.03%)</title><rect x="58.8" y="531.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="61.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (3,149 samples, 1.27%)</title><rect x="59.1" y="595.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (3,149 samples, 1.27%)</title><rect x="59.1" y="579.0" width="15.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (245 samples, 0.10%)</title><rect x="59.1" y="563.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="62.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (2,830 samples, 1.14%)</title><rect x="60.3" y="563.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.3" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (90 samples, 0.04%)</title><rect x="60.5" y="547.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="63.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (58 samples, 0.02%)</title><rect x="60.9" y="547.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="63.9" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (124 samples, 0.05%)</title><rect x="61.4" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.4" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (124 samples, 0.05%)</title><rect x="61.4" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.4" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (124 samples, 0.05%)</title><rect x="61.4" y="515.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="64.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (71 samples, 0.03%)</title><rect x="62.0" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (71 samples, 0.03%)</title><rect x="62.0" y="531.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="65.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (207 samples, 0.08%)</title><rect x="62.3" y="547.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="65.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (123 samples, 0.05%)</title><rect x="63.3" y="547.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="66.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (156 samples, 0.06%)</title><rect x="63.9" y="547.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="66.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (169 samples, 0.07%)</title><rect x="64.6" y="547.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="67.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (824 samples, 0.33%)</title><rect x="65.4" y="547.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (63 samples, 0.03%)</title><rect x="65.4" y="531.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="68.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (54 samples, 0.02%)</title><rect x="65.7" y="531.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="68.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (65 samples, 0.03%)</title><rect x="66.0" y="531.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="69.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 0.03%)</title><rect x="66.5" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.03%)</title><rect x="66.5" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (67 samples, 0.03%)</title><rect x="66.8" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (67 samples, 0.03%)</title><rect x="66.8" y="515.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="69.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (65 samples, 0.03%)</title><rect x="67.2" y="531.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="70.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (82 samples, 0.03%)</title><rect x="67.5" y="531.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="70.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (312 samples, 0.13%)</title><rect x="67.9" y="531.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (73 samples, 0.03%)</title><rect x="67.9" y="515.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="70.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (67 samples, 0.03%)</title><rect x="68.2" y="515.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="71.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (124 samples, 0.05%)</title><rect x="68.8" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (539 samples, 0.22%)</title><rect x="69.3" y="547.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (323 samples, 0.13%)</title><rect x="70.4" y="531.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (68 samples, 0.03%)</title><rect x="70.4" y="515.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="73.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (95 samples, 0.04%)</title><rect x="70.7" y="515.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="73.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (115 samples, 0.05%)</title><rect x="71.4" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (112 samples, 0.05%)</title><rect x="72.1" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (112 samples, 0.05%)</title><rect x="72.1" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (62 samples, 0.03%)</title><rect x="72.3" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (62 samples, 0.03%)</title><rect x="72.3" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (62 samples, 0.03%)</title><rect x="72.3" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (62 samples, 0.03%)</title><rect x="72.3" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.03%)</title><rect x="72.3" y="451.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="75.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (236 samples, 0.10%)</title><rect x="72.6" y="547.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1610702581.linkToTargetMethod (58 samples, 0.02%)</title><rect x="72.6" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.02%)</title><rect x="72.6" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/1445633269.get$Lambda (58 samples, 0.02%)</title><rect x="72.6" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$144 (58 samples, 0.02%)</title><rect x="72.6" y="483.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="75.6" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (178 samples, 0.07%)</title><rect x="72.9" y="531.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/1445633269.run (178 samples, 0.07%)</title><rect x="72.9" y="515.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (178 samples, 0.07%)</title><rect x="72.9" y="499.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.9" y="510.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (136 samples, 0.05%)</title><rect x="73.1" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.1" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (69 samples, 0.03%)</title><rect x="73.1" y="467.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="76.1" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (67 samples, 0.03%)</title><rect x="73.4" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.4" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (67 samples, 0.03%)</title><rect x="73.4" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.4" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (67 samples, 0.03%)</title><rect x="73.4" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.4" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (67 samples, 0.03%)</title><rect x="73.4" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.4" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (67 samples, 0.03%)</title><rect x="73.4" y="403.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="76.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (74 samples, 0.03%)</title><rect x="73.7" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (74 samples, 0.03%)</title><rect x="73.7" y="547.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="76.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (84 samples, 0.03%)</title><rect x="74.1" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (84 samples, 0.03%)</title><rect x="74.1" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (84 samples, 0.03%)</title><rect x="74.1" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.1" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (84 samples, 0.03%)</title><rect x="74.1" y="611.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="77.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (356 samples, 0.14%)</title><rect x="74.5" y="659.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.5" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (305 samples, 0.12%)</title><rect x="74.5" y="643.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="77.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6,840 samples, 2.76%)</title><rect x="76.2" y="755.0" width="32.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.2" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6,472 samples, 2.61%)</title><rect x="76.2" y="739.0" width="30.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.2" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6,416 samples, 2.59%)</title><rect x="76.2" y="723.0" width="30.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.2" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6,416 samples, 2.59%)</title><rect x="76.2" y="707.0" width="30.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.2" y="718.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6,416 samples, 2.59%)</title><rect x="76.2" y="691.0" width="30.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="79.2" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (56 samples, 0.02%)</title><rect x="106.7" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (56 samples, 0.02%)</title><rect x="106.7" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (56 samples, 0.02%)</title><rect x="106.7" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (56 samples, 0.02%)</title><rect x="106.7" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.7" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (56 samples, 0.02%)</title><rect x="106.7" y="659.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="109.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (368 samples, 0.15%)</title><rect x="107.0" y="739.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (354 samples, 0.14%)</title><rect x="107.0" y="723.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (354 samples, 0.14%)</title><rect x="107.0" y="707.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.0" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (354 samples, 0.14%)</title><rect x="107.0" y="691.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="110.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$217/397507893.run (3,241 samples, 1.31%)</title><rect x="108.8" y="755.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3,241 samples, 1.31%)</title><rect x="108.8" y="739.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3,241 samples, 1.31%)</title><rect x="108.8" y="723.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (3,241 samples, 1.31%)</title><rect x="108.8" y="707.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,241 samples, 1.31%)</title><rect x="108.8" y="691.0" width="15.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,241 samples, 1.31%)</title><rect x="108.8" y="675.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,241 samples, 1.31%)</title><rect x="108.8" y="659.0" width="15.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,241 samples, 1.31%)</title><rect x="108.8" y="643.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,241 samples, 1.31%)</title><rect x="108.8" y="627.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,241 samples, 1.31%)</title><rect x="108.8" y="611.0" width="15.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3,241 samples, 1.31%)</title><rect x="108.8" y="595.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2,944 samples, 1.19%)</title><rect x="108.8" y="579.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (176 samples, 0.07%)</title><rect x="108.8" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (176 samples, 0.07%)</title><rect x="108.8" y="547.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$220/1307343279.get$Lambda (62 samples, 0.03%)</title><rect x="108.8" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$220 (62 samples, 0.03%)</title><rect x="108.8" y="515.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="111.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$230/139494179.get$Lambda (60 samples, 0.02%)</title><rect x="109.1" y="531.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$230 (60 samples, 0.02%)</title><rect x="109.1" y="515.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="112.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1297665885.get$Lambda (54 samples, 0.02%)</title><rect x="109.3" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$232 (54 samples, 0.02%)</title><rect x="109.3" y="515.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="112.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2,768 samples, 1.12%)</title><rect x="109.6" y="563.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (119 samples, 0.05%)</title><rect x="109.6" y="547.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="112.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,649 samples, 1.07%)</title><rect x="110.2" y="547.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,649 samples, 1.07%)</title><rect x="110.2" y="531.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,649 samples, 1.07%)</title><rect x="110.2" y="515.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (456 samples, 0.18%)</title><rect x="110.2" y="499.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (155 samples, 0.06%)</title><rect x="110.2" y="483.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="113.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/1957589676.apply (285 samples, 0.12%)</title><rect x="110.9" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (285 samples, 0.12%)</title><rect x="110.9" y="467.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (285 samples, 0.12%)</title><rect x="110.9" y="451.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (54 samples, 0.02%)</title><rect x="110.9" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.9" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (54 samples, 0.02%)</title><rect x="110.9" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.9" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (54 samples, 0.02%)</title><rect x="110.9" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="113.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (231 samples, 0.09%)</title><rect x="111.2" y="435.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.02%)</title><rect x="111.2" y="419.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.02%)</title><rect x="111.2" y="403.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="114.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$236/1905302793.get$Lambda (53 samples, 0.02%)</title><rect x="111.2" y="387.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$236 (53 samples, 0.02%)</title><rect x="111.2" y="371.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="114.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (178 samples, 0.07%)</title><rect x="111.4" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (178 samples, 0.07%)</title><rect x="111.4" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (100 samples, 0.04%)</title><rect x="111.4" y="387.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="114.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (78 samples, 0.03%)</title><rect x="111.9" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (78 samples, 0.03%)</title><rect x="111.9" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (78 samples, 0.03%)</title><rect x="111.9" y="355.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="114.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2,193 samples, 0.89%)</title><rect x="112.3" y="499.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,193 samples, 0.89%)</title><rect x="112.3" y="483.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/1165932755.apply (2,193 samples, 0.89%)</title><rect x="112.3" y="467.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2,193 samples, 0.89%)</title><rect x="112.3" y="451.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,193 samples, 0.89%)</title><rect x="112.3" y="435.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$130/1695009006.apply (2,193 samples, 0.89%)</title><rect x="112.3" y="419.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2,193 samples, 0.89%)</title><rect x="112.3" y="403.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (183 samples, 0.07%)</title><rect x="112.5" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (183 samples, 0.07%)</title><rect x="112.5" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (103 samples, 0.04%)</title><rect x="112.5" y="355.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="115.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.03%)</title><rect x="113.0" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.03%)</title><rect x="113.0" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (80 samples, 0.03%)</title><rect x="113.0" y="323.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="116.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1,972 samples, 0.80%)</title><rect x="113.4" y="387.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.03%)</title><rect x="113.4" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.03%)</title><rect x="113.4" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (716 samples, 0.29%)</title><rect x="113.7" y="371.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (716 samples, 0.29%)</title><rect x="113.7" y="355.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (716 samples, 0.29%)</title><rect x="113.7" y="339.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="116.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$224/810459252.accept (232 samples, 0.09%)</title><rect x="113.7" y="323.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="116.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (232 samples, 0.09%)</title><rect x="113.7" y="307.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (232 samples, 0.09%)</title><rect x="113.7" y="291.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.02%)</title><rect x="113.7" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.02%)</title><rect x="113.7" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$226/173437729.get$Lambda (55 samples, 0.02%)</title><rect x="113.7" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$226 (55 samples, 0.02%)</title><rect x="113.7" y="227.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="116.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (177 samples, 0.07%)</title><rect x="114.0" y="275.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (177 samples, 0.07%)</title><rect x="114.0" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (88 samples, 0.04%)</title><rect x="114.0" y="243.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="117.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (89 samples, 0.04%)</title><rect x="114.4" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (89 samples, 0.04%)</title><rect x="114.4" y="227.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (89 samples, 0.04%)</title><rect x="114.4" y="211.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="117.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$228/1172834922.accept (319 samples, 0.13%)</title><rect x="114.9" y="323.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (319 samples, 0.13%)</title><rect x="114.9" y="307.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (319 samples, 0.13%)</title><rect x="114.9" y="291.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (319 samples, 0.13%)</title><rect x="114.9" y="275.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (319 samples, 0.13%)</title><rect x="114.9" y="259.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (319 samples, 0.13%)</title><rect x="114.9" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (319 samples, 0.13%)</title><rect x="114.9" y="227.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (319 samples, 0.13%)</title><rect x="114.9" y="211.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (319 samples, 0.13%)</title><rect x="114.9" y="195.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (319 samples, 0.13%)</title><rect x="114.9" y="179.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (120 samples, 0.05%)</title><rect x="114.9" y="163.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (120 samples, 0.05%)</title><rect x="114.9" y="147.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (70 samples, 0.03%)</title><rect x="115.1" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (70 samples, 0.03%)</title><rect x="115.1" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (70 samples, 0.03%)</title><rect x="115.1" y="99.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (70 samples, 0.03%)</title><rect x="115.1" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (70 samples, 0.03%)</title><rect x="115.1" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.1" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (70 samples, 0.03%)</title><rect x="115.1" y="51.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="118.1" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (199 samples, 0.08%)</title><rect x="115.4" y="163.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (199 samples, 0.08%)</title><rect x="115.4" y="147.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.4" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (61 samples, 0.02%)</title><rect x="115.4" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.4" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (61 samples, 0.02%)</title><rect x="115.4" y="115.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="118.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (138 samples, 0.06%)</title><rect x="115.7" y="131.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.7" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (68 samples, 0.03%)</title><rect x="115.7" y="115.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="118.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (70 samples, 0.03%)</title><rect x="116.0" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (70 samples, 0.03%)</title><rect x="116.0" y="99.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (70 samples, 0.03%)</title><rect x="116.0" y="83.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (70 samples, 0.03%)</title><rect x="116.0" y="67.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (70 samples, 0.03%)</title><rect x="116.0" y="51.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (70 samples, 0.03%)</title><rect x="116.0" y="35.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="119.0" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (165 samples, 0.07%)</title><rect x="116.4" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (165 samples, 0.07%)</title><rect x="116.4" y="307.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (165 samples, 0.07%)</title><rect x="116.4" y="291.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="119.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1,181 samples, 0.48%)</title><rect x="117.2" y="371.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (95 samples, 0.04%)</title><rect x="117.2" y="355.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="120.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (87 samples, 0.04%)</title><rect x="117.6" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (87 samples, 0.04%)</title><rect x="117.6" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (87 samples, 0.04%)</title><rect x="117.6" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="120.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (999 samples, 0.40%)</title><rect x="118.0" y="355.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (68 samples, 0.03%)</title><rect x="118.0" y="339.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="121.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (516 samples, 0.21%)</title><rect x="118.3" y="339.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (70 samples, 0.03%)</title><rect x="118.3" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.3" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (70 samples, 0.03%)</title><rect x="118.3" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="121.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (87 samples, 0.04%)</title><rect x="118.7" y="323.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="121.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (359 samples, 0.14%)</title><rect x="119.1" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (79 samples, 0.03%)</title><rect x="119.6" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="122.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (57 samples, 0.02%)</title><rect x="119.9" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (57 samples, 0.02%)</title><rect x="119.9" y="291.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="122.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (127 samples, 0.05%)</title><rect x="120.2" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (415 samples, 0.17%)</title><rect x="120.8" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.8" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (60 samples, 0.02%)</title><rect x="120.8" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="123.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (194 samples, 0.08%)</title><rect x="121.1" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (118 samples, 0.05%)</title><rect x="121.1" y="307.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="124.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (76 samples, 0.03%)</title><rect x="121.7" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.7" y="318.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.03%)</title><rect x="121.7" y="291.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="124.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (161 samples, 0.06%)</title><rect x="122.0" y="323.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (161 samples, 0.06%)</title><rect x="122.0" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (161 samples, 0.06%)</title><rect x="122.0" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.0" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (161 samples, 0.06%)</title><rect x="122.0" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (161 samples, 0.06%)</title><rect x="122.0" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (161 samples, 0.06%)</title><rect x="122.0" y="243.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="125.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (297 samples, 0.12%)</title><rect x="122.8" y="579.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (297 samples, 0.12%)</title><rect x="122.8" y="563.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (297 samples, 0.12%)</title><rect x="122.8" y="547.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (297 samples, 0.12%)</title><rect x="122.8" y="531.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (297 samples, 0.12%)</title><rect x="122.8" y="515.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.8" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (297 samples, 0.12%)</title><rect x="122.8" y="499.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.8" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (125 samples, 0.05%)</title><rect x="122.8" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.8" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (125 samples, 0.05%)</title><rect x="122.8" y="467.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="125.8" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (172 samples, 0.07%)</title><rect x="123.4" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.4" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (172 samples, 0.07%)</title><rect x="123.4" y="467.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="126.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10,349 samples, 4.18%)</title><rect x="124.2" y="755.0" width="49.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.2" y="766.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10,349 samples, 4.18%)</title><rect x="124.2" y="739.0" width="49.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.2" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8,804 samples, 3.55%)</title><rect x="124.2" y="723.0" width="41.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.2" y="734.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (8,804 samples, 3.55%)</title><rect x="124.2" y="707.0" width="41.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.2" y="718.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8,804 samples, 3.55%)</title><rect x="124.2" y="691.0" width="41.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.2" y="702.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (211 samples, 0.09%)</title><rect x="124.2" y="675.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (211 samples, 0.09%)</title><rect x="124.2" y="659.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (211 samples, 0.09%)</title><rect x="124.2" y="643.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (211 samples, 0.09%)</title><rect x="124.2" y="627.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (108 samples, 0.04%)</title><rect x="124.2" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1311146128.invoke (108 samples, 0.04%)</title><rect x="124.2" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.04%)</title><rect x="124.2" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (108 samples, 0.04%)</title><rect x="124.2" y="563.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (108 samples, 0.04%)</title><rect x="124.2" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.2" y="558.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.04%)</title><rect x="124.2" y="531.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="127.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (103 samples, 0.04%)</title><rect x="124.7" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (103 samples, 0.04%)</title><rect x="124.7" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (103 samples, 0.04%)</title><rect x="124.7" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$216/643139202.get$Lambda (103 samples, 0.04%)</title><rect x="124.7" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$216 (103 samples, 0.04%)</title><rect x="124.7" y="547.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="127.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (8,593 samples, 3.47%)</title><rect x="125.2" y="675.0" width="40.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.2" y="686.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (8,593 samples, 3.47%)</title><rect x="125.2" y="659.0" width="40.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.2" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,593 samples, 3.47%)</title><rect x="125.2" y="643.0" width="40.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="128.2" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,593 samples, 3.47%)</title><rect x="125.2" y="627.0" width="40.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.2" y="638.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4,001 samples, 1.61%)</title><rect x="125.2" y="611.0" width="19.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,001 samples, 1.61%)</title><rect x="125.2" y="595.0" width="19.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,001 samples, 1.61%)</title><rect x="125.2" y="579.0" width="19.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4,001 samples, 1.61%)</title><rect x="125.2" y="563.0" width="19.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,001 samples, 1.61%)</title><rect x="125.2" y="547.0" width="19.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4,001 samples, 1.61%)</title><rect x="125.2" y="531.0" width="19.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,001 samples, 1.61%)</title><rect x="125.2" y="515.0" width="19.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3,892 samples, 1.57%)</title><rect x="125.2" y="499.0" width="18.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="128.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,892 samples, 1.57%)</title><rect x="125.2" y="483.0" width="18.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,816 samples, 1.54%)</title><rect x="125.2" y="467.0" width="18.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (103 samples, 0.04%)</title><rect x="125.2" y="451.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="128.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/887261302.apply (3,550 samples, 1.43%)</title><rect x="125.7" y="451.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (3,550 samples, 1.43%)</title><rect x="125.7" y="435.0" width="16.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.02%)</title><rect x="125.7" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.02%)</title><rect x="125.7" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$264/1900001683.get$Lambda (55 samples, 0.02%)</title><rect x="125.7" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$264 (55 samples, 0.02%)</title><rect x="125.7" y="371.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="128.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (187 samples, 0.08%)</title><rect x="126.0" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (187 samples, 0.08%)</title><rect x="126.0" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (101 samples, 0.04%)</title><rect x="126.0" y="387.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="129.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (86 samples, 0.03%)</title><rect x="126.4" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (86 samples, 0.03%)</title><rect x="126.4" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (86 samples, 0.03%)</title><rect x="126.4" y="355.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="129.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (3,308 samples, 1.33%)</title><rect x="126.8" y="419.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (183 samples, 0.07%)</title><rect x="127.0" y="403.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (183 samples, 0.07%)</title><rect x="127.0" y="387.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (104 samples, 0.04%)</title><rect x="127.0" y="371.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="130.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (79 samples, 0.03%)</title><rect x="127.5" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (79 samples, 0.03%)</title><rect x="127.5" y="355.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (79 samples, 0.03%)</title><rect x="127.5" y="339.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="130.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (3,092 samples, 1.25%)</title><rect x="127.9" y="403.0" width="14.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$118/2092636891.apply (220 samples, 0.09%)</title><rect x="127.9" y="387.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (220 samples, 0.09%)</title><rect x="127.9" y="371.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (220 samples, 0.09%)</title><rect x="127.9" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (85 samples, 0.03%)</title><rect x="127.9" y="339.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="130.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (135 samples, 0.05%)</title><rect x="128.3" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (89 samples, 0.04%)</title><rect x="128.5" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="131.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2,872 samples, 1.16%)</title><rect x="128.9" y="387.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (93 samples, 0.04%)</title><rect x="128.9" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.04%)</title><rect x="128.9" y="355.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/614738386.linkToTargetMethod (82 samples, 0.03%)</title><rect x="129.4" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1913821695.invokeStatic (82 samples, 0.03%)</title><rect x="129.4" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$246/118115321.get$Lambda (82 samples, 0.03%)</title><rect x="129.4" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$246 (82 samples, 0.03%)</title><rect x="129.4" y="323.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="132.4" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (599 samples, 0.24%)</title><rect x="129.8" y="371.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (226 samples, 0.09%)</title><rect x="129.8" y="355.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (78 samples, 0.03%)</title><rect x="129.8" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.8" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (78 samples, 0.03%)</title><rect x="129.8" y="323.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="132.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (148 samples, 0.06%)</title><rect x="130.1" y="339.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (148 samples, 0.06%)</title><rect x="130.1" y="323.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="133.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (184 samples, 0.07%)</title><rect x="130.8" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (184 samples, 0.07%)</title><rect x="130.8" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (184 samples, 0.07%)</title><rect x="130.8" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (62 samples, 0.03%)</title><rect x="130.8" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (62 samples, 0.03%)</title><rect x="130.8" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (62 samples, 0.03%)</title><rect x="130.8" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.8" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (62 samples, 0.03%)</title><rect x="130.8" y="259.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="133.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$243/2113026439.get (69 samples, 0.03%)</title><rect x="131.1" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.1" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (69 samples, 0.03%)</title><rect x="131.1" y="291.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="134.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (53 samples, 0.02%)</title><rect x="131.5" y="307.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (53 samples, 0.02%)</title><rect x="131.5" y="291.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="134.5" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (53 samples, 0.02%)</title><rect x="131.5" y="275.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.5" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (53 samples, 0.02%)</title><rect x="131.5" y="259.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="134.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (189 samples, 0.08%)</title><rect x="131.7" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (189 samples, 0.08%)</title><rect x="131.7" y="339.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="134.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (399 samples, 0.16%)</title><rect x="132.6" y="371.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (195 samples, 0.08%)</title><rect x="132.6" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (118 samples, 0.05%)</title><rect x="132.6" y="339.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="135.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.03%)</title><rect x="133.2" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.03%)</title><rect x="133.2" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (77 samples, 0.03%)</title><rect x="133.2" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="136.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (204 samples, 0.08%)</title><rect x="133.5" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (204 samples, 0.08%)</title><rect x="133.5" y="339.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (119 samples, 0.05%)</title><rect x="133.5" y="323.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="136.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.03%)</title><rect x="134.1" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.03%)</title><rect x="134.1" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (85 samples, 0.03%)</title><rect x="134.1" y="291.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="137.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (57 samples, 0.02%)</title><rect x="134.5" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="137.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (75 samples, 0.03%)</title><rect x="134.8" y="371.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="137.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (84 samples, 0.03%)</title><rect x="135.1" y="371.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="138.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,440 samples, 0.58%)</title><rect x="135.7" y="371.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$246/118115321.run (1,440 samples, 0.58%)</title><rect x="135.7" y="355.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,440 samples, 0.58%)</title><rect x="135.7" y="339.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (156 samples, 0.06%)</title><rect x="135.7" y="323.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (156 samples, 0.06%)</title><rect x="135.7" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1197637075.get$Lambda (54 samples, 0.02%)</title><rect x="135.9" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$250 (54 samples, 0.02%)</title><rect x="135.9" y="275.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="138.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1759647216.get$Lambda (64 samples, 0.03%)</title><rect x="136.2" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$254 (64 samples, 0.03%)</title><rect x="136.2" y="275.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="139.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (176 samples, 0.07%)</title><rect x="136.5" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (176 samples, 0.07%)</title><rect x="136.5" y="307.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (96 samples, 0.04%)</title><rect x="136.5" y="291.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="139.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.03%)</title><rect x="136.9" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.03%)</title><rect x="136.9" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (80 samples, 0.03%)</title><rect x="136.9" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="139.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (93 samples, 0.04%)</title><rect x="137.3" y="323.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="140.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (110 samples, 0.04%)</title><rect x="137.8" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (110 samples, 0.04%)</title><rect x="137.8" y="307.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="140.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (229 samples, 0.09%)</title><rect x="138.3" y="323.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (229 samples, 0.09%)</title><rect x="138.3" y="307.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.03%)</title><rect x="138.3" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.03%)</title><rect x="138.3" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$256/1351230328.get$Lambda (64 samples, 0.03%)</title><rect x="138.3" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$256 (64 samples, 0.03%)</title><rect x="138.3" y="243.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="141.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (165 samples, 0.07%)</title><rect x="138.6" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (165 samples, 0.07%)</title><rect x="138.6" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (165 samples, 0.07%)</title><rect x="138.6" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (86 samples, 0.03%)</title><rect x="138.6" y="243.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="141.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (79 samples, 0.03%)</title><rect x="139.0" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (79 samples, 0.03%)</title><rect x="139.0" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (79 samples, 0.03%)</title><rect x="139.0" y="211.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="142.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (243 samples, 0.10%)</title><rect x="139.4" y="323.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (243 samples, 0.10%)</title><rect x="139.4" y="307.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/288994035.invoke (243 samples, 0.10%)</title><rect x="139.4" y="291.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (243 samples, 0.10%)</title><rect x="139.4" y="275.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (55 samples, 0.02%)</title><rect x="139.4" y="259.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.4" y="270.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.02%)</title><rect x="139.4" y="243.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="142.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (188 samples, 0.08%)</title><rect x="139.6" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (188 samples, 0.08%)</title><rect x="139.6" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.6" y="254.0"></text>
</g>
<g>
<title>byte[] (188 samples, 0.08%)</title><rect x="139.6" y="227.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="142.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (433 samples, 0.17%)</title><rect x="140.5" y="323.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (154 samples, 0.06%)</title><rect x="140.5" y="307.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="143.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (279 samples, 0.11%)</title><rect x="141.3" y="307.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (279 samples, 0.11%)</title><rect x="141.3" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="144.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/288994035.invoke (279 samples, 0.11%)</title><rect x="141.3" y="275.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (279 samples, 0.11%)</title><rect x="141.3" y="259.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (53 samples, 0.02%)</title><rect x="141.3" y="243.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String (53 samples, 0.02%)</title><rect x="141.3" y="227.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="144.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (226 samples, 0.09%)</title><rect x="141.5" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (226 samples, 0.09%)</title><rect x="141.5" y="227.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.5" y="238.0"></text>
</g>
<g>
<title>byte[] (226 samples, 0.09%)</title><rect x="141.5" y="211.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="144.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$203/1559042816.apply (163 samples, 0.07%)</title><rect x="142.6" y="451.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (163 samples, 0.07%)</title><rect x="142.6" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (71 samples, 0.03%)</title><rect x="142.6" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.6" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (71 samples, 0.03%)</title><rect x="142.6" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.6" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (71 samples, 0.03%)</title><rect x="142.6" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.6" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (71 samples, 0.03%)</title><rect x="142.6" y="371.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="145.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (92 samples, 0.04%)</title><rect x="142.9" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (92 samples, 0.04%)</title><rect x="142.9" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="145.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (76 samples, 0.03%)</title><rect x="143.4" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (76 samples, 0.03%)</title><rect x="143.4" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$205/1826986094.apply (76 samples, 0.03%)</title><rect x="143.4" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (76 samples, 0.03%)</title><rect x="143.4" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (76 samples, 0.03%)</title><rect x="143.4" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (76 samples, 0.03%)</title><rect x="143.4" y="387.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="146.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$236/1905302793.apply (109 samples, 0.04%)</title><rect x="143.7" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (109 samples, 0.04%)</title><rect x="143.7" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (109 samples, 0.04%)</title><rect x="143.7" y="467.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="146.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (4,592 samples, 1.85%)</title><rect x="144.3" y="611.0" width="21.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.3" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (295 samples, 0.12%)</title><rect x="144.3" y="595.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (295 samples, 0.12%)</title><rect x="144.3" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (295 samples, 0.12%)</title><rect x="144.3" y="563.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.3" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (295 samples, 0.12%)</title><rect x="144.3" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (295 samples, 0.12%)</title><rect x="144.3" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.3" y="542.0"></text>
</g>
<g>
<title>byte[] (295 samples, 0.12%)</title><rect x="144.3" y="515.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="147.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (211 samples, 0.09%)</title><rect x="145.7" y="595.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (211 samples, 0.09%)</title><rect x="145.7" y="579.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (211 samples, 0.09%)</title><rect x="145.7" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.7" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (211 samples, 0.09%)</title><rect x="145.7" y="547.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (211 samples, 0.09%)</title><rect x="145.7" y="531.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.7" y="542.0"></text>
</g>
<g>
<title>byte[] (211 samples, 0.09%)</title><rect x="145.7" y="515.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="148.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (393 samples, 0.16%)</title><rect x="146.7" y="595.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.7" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (67 samples, 0.03%)</title><rect x="146.7" y="579.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="149.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (77 samples, 0.03%)</title><rect x="147.0" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (77 samples, 0.03%)</title><rect x="147.0" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (77 samples, 0.03%)</title><rect x="147.0" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.0" y="558.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.03%)</title><rect x="147.0" y="531.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="150.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (73 samples, 0.03%)</title><rect x="147.3" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (73 samples, 0.03%)</title><rect x="147.3" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.3" y="574.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.03%)</title><rect x="147.3" y="547.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="150.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (176 samples, 0.07%)</title><rect x="147.7" y="579.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (176 samples, 0.07%)</title><rect x="147.7" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.02%)</title><rect x="147.7" y="547.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="150.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (116 samples, 0.05%)</title><rect x="148.0" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.0" y="558.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.05%)</title><rect x="148.0" y="531.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="151.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,177 samples, 0.47%)</title><rect x="148.5" y="595.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,177 samples, 0.47%)</title><rect x="148.5" y="579.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.5" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,177 samples, 0.47%)</title><rect x="148.5" y="563.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.5" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (66 samples, 0.03%)</title><rect x="148.8" y="547.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="151.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (124 samples, 0.05%)</title><rect x="149.1" y="547.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="152.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.03%)</title><rect x="149.8" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.03%)</title><rect x="149.8" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.get$Lambda (80 samples, 0.03%)</title><rect x="149.8" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.8" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$116 (80 samples, 0.03%)</title><rect x="149.8" y="499.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="152.8" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (94 samples, 0.04%)</title><rect x="150.2" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.2" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (94 samples, 0.04%)</title><rect x="150.2" y="531.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="153.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (607 samples, 0.24%)</title><rect x="150.7" y="547.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.7" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (607 samples, 0.24%)</title><rect x="150.7" y="531.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (607 samples, 0.24%)</title><rect x="150.7" y="515.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (157 samples, 0.06%)</title><rect x="150.7" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (157 samples, 0.06%)</title><rect x="150.7" y="483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (157 samples, 0.06%)</title><rect x="150.7" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (157 samples, 0.06%)</title><rect x="150.7" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (157 samples, 0.06%)</title><rect x="150.7" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (157 samples, 0.06%)</title><rect x="150.7" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (157 samples, 0.06%)</title><rect x="150.7" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (157 samples, 0.06%)</title><rect x="150.7" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (157 samples, 0.06%)</title><rect x="150.7" y="371.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="153.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (240 samples, 0.10%)</title><rect x="151.4" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.4" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (240 samples, 0.10%)</title><rect x="151.4" y="483.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (123 samples, 0.05%)</title><rect x="151.4" y="467.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (123 samples, 0.05%)</title><rect x="151.4" y="451.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (123 samples, 0.05%)</title><rect x="151.4" y="435.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="154.4" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (117 samples, 0.05%)</title><rect x="152.0" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.0" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (117 samples, 0.05%)</title><rect x="152.0" y="451.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="155.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (210 samples, 0.08%)</title><rect x="152.6" y="499.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (210 samples, 0.08%)</title><rect x="152.6" y="483.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="155.6" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (122 samples, 0.05%)</title><rect x="153.6" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (122 samples, 0.05%)</title><rect x="153.6" y="531.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="156.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (2,516 samples, 1.02%)</title><rect x="154.1" y="595.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.1" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (128 samples, 0.05%)</title><rect x="154.1" y="579.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="157.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (164 samples, 0.07%)</title><rect x="154.7" y="579.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (164 samples, 0.07%)</title><rect x="154.7" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.7" y="574.0"></text>
</g>
<g>
<title>byte[] (164 samples, 0.07%)</title><rect x="154.7" y="547.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="157.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (340 samples, 0.14%)</title><rect x="155.5" y="579.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (340 samples, 0.14%)</title><rect x="155.5" y="563.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (148 samples, 0.06%)</title><rect x="155.5" y="547.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="158.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (192 samples, 0.08%)</title><rect x="156.2" y="547.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.2" y="558.0"></text>
</g>
<g>
<title>byte[] (192 samples, 0.08%)</title><rect x="156.2" y="531.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="159.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,884 samples, 0.76%)</title><rect x="157.1" y="579.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (534 samples, 0.22%)</title><rect x="157.1" y="563.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (534 samples, 0.22%)</title><rect x="157.1" y="547.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (236 samples, 0.10%)</title><rect x="157.1" y="531.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="160.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (298 samples, 0.12%)</title><rect x="158.3" y="531.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.3" y="542.0"></text>
</g>
<g>
<title>byte[] (298 samples, 0.12%)</title><rect x="158.3" y="515.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="161.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (285 samples, 0.12%)</title><rect x="159.7" y="563.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (285 samples, 0.12%)</title><rect x="159.7" y="547.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.7" y="558.0"></text>
</g>
<g>
<title>byte[] (167 samples, 0.07%)</title><rect x="159.7" y="531.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="162.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (118 samples, 0.05%)</title><rect x="160.5" y="531.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="163.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (271 samples, 0.11%)</title><rect x="161.0" y="563.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (271 samples, 0.11%)</title><rect x="161.0" y="547.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (271 samples, 0.11%)</title><rect x="161.0" y="531.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (113 samples, 0.05%)</title><rect x="161.0" y="515.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="164.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (158 samples, 0.06%)</title><rect x="161.6" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.6" y="526.0"></text>
</g>
<g>
<title>byte[] (158 samples, 0.06%)</title><rect x="161.6" y="499.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="164.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (291 samples, 0.12%)</title><rect x="162.3" y="563.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (291 samples, 0.12%)</title><rect x="162.3" y="547.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (291 samples, 0.12%)</title><rect x="162.3" y="531.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (291 samples, 0.12%)</title><rect x="162.3" y="515.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (291 samples, 0.12%)</title><rect x="162.3" y="499.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (291 samples, 0.12%)</title><rect x="162.3" y="483.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="165.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (503 samples, 0.20%)</title><rect x="163.7" y="563.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (161 samples, 0.06%)</title><rect x="163.7" y="547.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (161 samples, 0.06%)</title><rect x="163.7" y="531.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="166.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (194 samples, 0.08%)</title><rect x="164.5" y="547.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (194 samples, 0.08%)</title><rect x="164.5" y="531.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="167.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$238/111502284.apply (148 samples, 0.06%)</title><rect x="165.4" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (148 samples, 0.06%)</title><rect x="165.4" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.4" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (148 samples, 0.06%)</title><rect x="165.4" y="515.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="168.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,545 samples, 0.62%)</title><rect x="166.1" y="723.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,545 samples, 0.62%)</title><rect x="166.1" y="707.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,545 samples, 0.62%)</title><rect x="166.1" y="691.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (1,545 samples, 0.62%)</title><rect x="166.1" y="675.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,545 samples, 0.62%)</title><rect x="166.1" y="659.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,528 samples, 0.62%)</title><rect x="166.1" y="643.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (113 samples, 0.05%)</title><rect x="166.1" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 0.05%)</title><rect x="166.1" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$188/136959346.get$Lambda (65 samples, 0.03%)</title><rect x="166.3" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$188 (65 samples, 0.03%)</title><rect x="166.3" y="579.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="169.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (84 samples, 0.03%)</title><rect x="166.7" y="627.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="169.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (114 samples, 0.05%)</title><rect x="167.1" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (114 samples, 0.05%)</title><rect x="167.1" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (72 samples, 0.03%)</title><rect x="167.3" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (72 samples, 0.03%)</title><rect x="167.3" y="579.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="170.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,217 samples, 0.49%)</title><rect x="167.6" y="627.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,217 samples, 0.49%)</title><rect x="167.6" y="611.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/684996081.run (1,017 samples, 0.41%)</title><rect x="167.6" y="595.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,017 samples, 0.41%)</title><rect x="167.6" y="579.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,017 samples, 0.41%)</title><rect x="167.6" y="563.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (329 samples, 0.13%)</title><rect x="167.6" y="547.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (219 samples, 0.09%)</title><rect x="167.6" y="531.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.6" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (72 samples, 0.03%)</title><rect x="167.6" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.6" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (72 samples, 0.03%)</title><rect x="167.6" y="499.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="170.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (147 samples, 0.06%)</title><rect x="167.9" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.9" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (147 samples, 0.06%)</title><rect x="167.9" y="499.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="170.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (110 samples, 0.04%)</title><rect x="168.6" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (110 samples, 0.04%)</title><rect x="168.6" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (110 samples, 0.04%)</title><rect x="168.6" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/1636182655.get (61 samples, 0.02%)</title><rect x="168.6" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.6" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (61 samples, 0.02%)</title><rect x="168.6" y="467.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="171.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (688 samples, 0.28%)</title><rect x="169.2" y="547.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.2" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (66 samples, 0.03%)</title><rect x="169.2" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.2" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (66 samples, 0.03%)</title><rect x="169.2" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (66 samples, 0.03%)</title><rect x="169.2" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (66 samples, 0.03%)</title><rect x="169.2" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.2" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (66 samples, 0.03%)</title><rect x="169.2" y="467.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="172.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (622 samples, 0.25%)</title><rect x="169.5" y="531.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (248 samples, 0.10%)</title><rect x="169.5" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (72 samples, 0.03%)</title><rect x="169.5" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (72 samples, 0.03%)</title><rect x="169.5" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (72 samples, 0.03%)</title><rect x="169.5" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.5" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (72 samples, 0.03%)</title><rect x="169.5" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.5" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (72 samples, 0.03%)</title><rect x="169.5" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.5" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (72 samples, 0.03%)</title><rect x="169.5" y="419.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="172.5" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (53 samples, 0.02%)</title><rect x="169.8" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (53 samples, 0.02%)</title><rect x="169.8" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (53 samples, 0.02%)</title><rect x="169.8" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (53 samples, 0.02%)</title><rect x="169.8" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (53 samples, 0.02%)</title><rect x="169.8" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (53 samples, 0.02%)</title><rect x="169.8" y="419.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="172.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (66 samples, 0.03%)</title><rect x="170.1" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.1" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (66 samples, 0.03%)</title><rect x="170.1" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (66 samples, 0.03%)</title><rect x="170.1" y="467.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="173.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (57 samples, 0.02%)</title><rect x="170.4" y="499.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="173.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (125 samples, 0.05%)</title><rect x="170.7" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (63 samples, 0.03%)</title><rect x="170.7" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (63 samples, 0.03%)</title><rect x="170.7" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (63 samples, 0.03%)</title><rect x="170.7" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (63 samples, 0.03%)</title><rect x="170.7" y="451.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="173.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (62 samples, 0.03%)</title><rect x="171.0" y="499.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.0" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (62 samples, 0.03%)</title><rect x="171.0" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.0" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (62 samples, 0.03%)</title><rect x="171.0" y="467.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="174.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (249 samples, 0.10%)</title><rect x="171.3" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (56 samples, 0.02%)</title><rect x="171.3" y="499.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="174.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (193 samples, 0.08%)</title><rect x="171.5" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (57 samples, 0.02%)</title><rect x="171.5" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (57 samples, 0.02%)</title><rect x="171.5" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (57 samples, 0.02%)</title><rect x="171.5" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (57 samples, 0.02%)</title><rect x="171.5" y="435.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="174.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (136 samples, 0.05%)</title><rect x="171.8" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (136 samples, 0.05%)</title><rect x="171.8" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (95 samples, 0.04%)</title><rect x="171.8" y="451.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="174.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (200 samples, 0.08%)</title><rect x="172.4" y="595.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (200 samples, 0.08%)</title><rect x="172.4" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (200 samples, 0.08%)</title><rect x="172.4" y="563.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (161 samples, 0.06%)</title><rect x="172.4" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (161 samples, 0.06%)</title><rect x="172.4" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="175.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (161 samples, 0.06%)</title><rect x="172.4" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (161 samples, 0.06%)</title><rect x="172.4" y="499.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$258/1828046752.accept (161 samples, 0.06%)</title><rect x="172.4" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (161 samples, 0.06%)</title><rect x="172.4" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (161 samples, 0.06%)</title><rect x="172.4" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (161 samples, 0.06%)</title><rect x="172.4" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (161 samples, 0.06%)</title><rect x="172.4" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$264/1900001683.apply (161 samples, 0.06%)</title><rect x="172.4" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (161 samples, 0.06%)</title><rect x="172.4" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (161 samples, 0.06%)</title><rect x="172.4" y="371.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="175.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/285921815.run (89,580 samples, 36.15%)</title><rect x="173.5" y="755.0" width="426.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.5" y="766.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lamb..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (89,580 samples, 36.15%)</title><rect x="173.5" y="739.0" width="426.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.5" y="750.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambd..</text>
</g>
<g>
<title>java/lang/String.getBytes (2,504 samples, 1.01%)</title><rect x="173.5" y="723.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,504 samples, 1.01%)</title><rect x="173.5" y="707.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2,504 samples, 1.01%)</title><rect x="173.5" y="691.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,504 samples, 1.01%)</title><rect x="173.5" y="675.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.5" y="686.0"></text>
</g>
<g>
<title>byte[] (2,504 samples, 1.01%)</title><rect x="173.5" y="659.0" width="11.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="176.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,467 samples, 1.80%)</title><rect x="185.4" y="723.0" width="21.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.4" y="734.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,467 samples, 1.80%)</title><rect x="185.4" y="707.0" width="21.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.4" y="718.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,467 samples, 1.80%)</title><rect x="185.4" y="691.0" width="21.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="188.4" y="702.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.isProxied (6,861 samples, 2.77%)</title><rect x="206.7" y="723.0" width="32.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.7" y="734.0">ru..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6,861 samples, 2.77%)</title><rect x="206.7" y="707.0" width="32.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.7" y="718.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (6,861 samples, 2.77%)</title><rect x="206.7" y="691.0" width="32.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.7" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,861 samples, 2.77%)</title><rect x="206.7" y="675.0" width="32.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.7" y="686.0">ja..</text>
</g>
<g>
<title>java.lang.String (4,606 samples, 1.86%)</title><rect x="206.7" y="659.0" width="21.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="209.7" y="670.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,255 samples, 0.91%)</title><rect x="228.6" y="659.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.6" y="670.0"></text>
</g>
<g>
<title>byte[] (2,255 samples, 0.91%)</title><rect x="228.6" y="643.0" width="10.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="231.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (75,748 samples, 30.57%)</title><rect x="239.3" y="723.0" width="360.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.3" y="734.0">ru/mail/polis/service/kate/moreva/MySimpleHttpSer..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,611 samples, 1.05%)</title><rect x="239.3" y="707.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="242.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,611 samples, 1.05%)</title><rect x="239.3" y="691.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$113/1614395695.get$Lambda (2,611 samples, 1.05%)</title><rect x="239.3" y="675.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.3" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$113 (2,611 samples, 1.05%)</title><rect x="239.3" y="659.0" width="12.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="242.3" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.Context (2,782 samples, 1.12%)</title><rect x="251.8" y="707.0" width="13.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="254.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMethod (70,355 samples, 28.39%)</title><rect x="265.0" y="707.0" width="335.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.0" y="718.0">ru/mail/polis/service/kate/moreva/MySimpleHtt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.03%)</title><rect x="265.0" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.03%)</title><rect x="265.0" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$138/820274732.get$Lambda (67 samples, 0.03%)</title><rect x="265.0" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.0" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$138 (67 samples, 0.03%)</title><rect x="265.0" y="643.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="268.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (181 samples, 0.07%)</title><rect x="265.3" y="691.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (181 samples, 0.07%)</title><rect x="265.3" y="675.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (110 samples, 0.04%)</title><rect x="265.3" y="659.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="268.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (71 samples, 0.03%)</title><rect x="265.9" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.9" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (71 samples, 0.03%)</title><rect x="265.9" y="643.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="268.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (160 samples, 0.06%)</title><rect x="266.2" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (160 samples, 0.06%)</title><rect x="266.2" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (92 samples, 0.04%)</title><rect x="266.2" y="659.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="269.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (68 samples, 0.03%)</title><rect x="266.6" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (68 samples, 0.03%)</title><rect x="266.6" y="643.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="269.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.collect (1,497 samples, 0.60%)</title><rect x="267.0" y="691.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.0" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList (79 samples, 0.03%)</title><rect x="267.0" y="675.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="270.0" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (84 samples, 0.03%)</title><rect x="267.3" y="675.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="270.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/83955655.linkToTargetMethod (252 samples, 0.10%)</title><rect x="267.9" y="675.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2110639609.invokeStatic (252 samples, 0.10%)</title><rect x="267.9" y="659.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$129/50164514.get$Lambda (252 samples, 0.10%)</title><rect x="267.9" y="643.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.9" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MyRequestHelper$$Lambda$129 (252 samples, 0.10%)</title><rect x="267.9" y="627.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="270.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (439 samples, 0.18%)</title><rect x="269.1" y="675.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (439 samples, 0.18%)</title><rect x="269.1" y="659.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (229 samples, 0.09%)</title><rect x="269.1" y="643.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="272.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (63 samples, 0.03%)</title><rect x="270.2" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (63 samples, 0.03%)</title><rect x="270.2" y="627.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="273.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (147 samples, 0.06%)</title><rect x="270.5" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (147 samples, 0.06%)</title><rect x="270.5" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (147 samples, 0.06%)</title><rect x="270.5" y="611.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="273.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (605 samples, 0.24%)</title><rect x="271.2" y="675.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (605 samples, 0.24%)</title><rect x="271.2" y="659.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.2" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (226 samples, 0.09%)</title><rect x="271.2" y="643.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="274.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (57 samples, 0.02%)</title><rect x="272.3" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (57 samples, 0.02%)</title><rect x="272.3" y="627.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="275.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (138 samples, 0.06%)</title><rect x="272.6" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$129/50164514.accept (138 samples, 0.06%)</title><rect x="272.6" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$collect$2 (138 samples, 0.06%)</title><rect x="272.6" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (138 samples, 0.06%)</title><rect x="272.6" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (138 samples, 0.06%)</title><rect x="272.6" y="579.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (138 samples, 0.06%)</title><rect x="272.6" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (138 samples, 0.06%)</title><rect x="272.6" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (138 samples, 0.06%)</title><rect x="272.6" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.6" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (138 samples, 0.06%)</title><rect x="272.6" y="515.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="275.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (183 samples, 0.07%)</title><rect x="273.2" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (183 samples, 0.07%)</title><rect x="273.2" y="627.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (183 samples, 0.07%)</title><rect x="273.2" y="611.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="276.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.merge (495 samples, 0.20%)</title><rect x="274.1" y="691.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.1" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (80 samples, 0.03%)</title><rect x="274.1" y="675.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="277.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (197 samples, 0.08%)</title><rect x="274.6" y="675.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (197 samples, 0.08%)</title><rect x="274.6" y="659.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (115 samples, 0.05%)</title><rect x="274.6" y="643.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="277.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (82 samples, 0.03%)</title><rect x="275.2" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (82 samples, 0.03%)</title><rect x="275.2" y="627.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="278.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (183 samples, 0.07%)</title><rect x="275.6" y="675.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (183 samples, 0.07%)</title><rect x="275.6" y="659.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (106 samples, 0.04%)</title><rect x="275.6" y="643.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="278.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (77 samples, 0.03%)</title><rect x="276.1" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (77 samples, 0.03%)</title><rect x="276.1" y="627.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="279.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (15,259 samples, 6.16%)</title><rect x="276.5" y="691.0" width="72.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.5" y="702.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15,259 samples, 6.16%)</title><rect x="276.5" y="675.0" width="72.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.5" y="686.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15,259 samples, 6.16%)</title><rect x="276.5" y="659.0" width="72.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.5" y="670.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11,341 samples, 4.58%)</title><rect x="276.5" y="643.0" width="54.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.5" y="654.0">one/n..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11,341 samples, 4.58%)</title><rect x="276.5" y="627.0" width="54.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.5" y="638.0">one/n..</text>
</g>
<g>
<title>byte[] (6,796 samples, 2.74%)</title><rect x="276.5" y="611.0" width="32.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="279.5" y="622.0">by..</text>
</g>
<g>
<title>byte[] (4,545 samples, 1.83%)</title><rect x="308.8" y="611.0" width="21.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="311.8" y="622.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (3,918 samples, 1.58%)</title><rect x="330.5" y="643.0" width="18.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.5" y="654.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3,918 samples, 1.58%)</title><rect x="330.5" y="627.0" width="18.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="333.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$113/1614395695.act (28,739 samples, 11.60%)</title><rect x="349.1" y="691.0" width="136.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.1" y="702.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$3 (28,739 samples, 11.60%)</title><rect x="349.1" y="675.0" width="136.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.1" y="686.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.putEntity (28,739 samples, 11.60%)</title><rect x="349.1" y="659.0" width="136.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.1" y="670.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one.nio.http.Response (1,636 samples, 0.66%)</title><rect x="349.1" y="643.0" width="7.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="352.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11,808 samples, 4.77%)</title><rect x="356.9" y="643.0" width="56.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.9" y="654.0">one/ni..</text>
</g>
<g>
<title>byte[] (5,563 samples, 2.25%)</title><rect x="356.9" y="627.0" width="26.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="359.9" y="638.0">b..</text>
</g>
<g>
<title>java.lang.String[] (2,879 samples, 1.16%)</title><rect x="383.4" y="627.0" width="13.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="386.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String (3,366 samples, 1.36%)</title><rect x="397.1" y="627.0" width="16.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="400.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.upsert (15,295 samples, 6.17%)</title><rect x="413.1" y="643.0" width="72.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.1" y="654.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,337 samples, 1.75%)</title><rect x="413.1" y="627.0" width="20.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.1" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,337 samples, 1.75%)</title><rect x="413.1" y="611.0" width="20.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="416.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.upsert (10,958 samples, 4.42%)</title><rect x="433.8" y="627.0" width="52.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.8" y="638.0">ru/ma..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4,911 samples, 1.98%)</title><rect x="433.8" y="611.0" width="23.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.8" y="622.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,911 samples, 1.98%)</title><rect x="433.8" y="595.0" width="23.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="436.8" y="606.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4,389 samples, 1.77%)</title><rect x="457.2" y="611.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.2" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,389 samples, 1.77%)</title><rect x="457.2" y="595.0" width="20.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="460.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (53 samples, 0.02%)</title><rect x="478.1" y="611.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (53 samples, 0.02%)</title><rect x="478.1" y="595.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (53 samples, 0.02%)</title><rect x="478.1" y="579.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.upsert (1,605 samples, 0.65%)</title><rect x="478.3" y="611.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.3" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (1,605 samples, 0.65%)</title><rect x="478.3" y="595.0" width="7.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="481.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (23,957 samples, 9.67%)</title><rect x="486.0" y="691.0" width="114.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.0" y="702.0">ru/mail/polis/..</text>
</g>
<g>
<title>java.util.ArrayList (65 samples, 0.03%)</title><rect x="486.0" y="675.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="489.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.03%)</title><rect x="486.3" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.03%)</title><rect x="486.3" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/649285409.get$Lambda (73 samples, 0.03%)</title><rect x="486.3" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.3" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$128 (73 samples, 0.03%)</title><rect x="486.3" y="627.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="489.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (98 samples, 0.04%)</title><rect x="486.6" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.6" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (98 samples, 0.04%)</title><rect x="486.6" y="659.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="489.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (170 samples, 0.07%)</title><rect x="487.1" y="675.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (112 samples, 0.05%)</title><rect x="487.1" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.1" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (112 samples, 0.05%)</title><rect x="487.1" y="643.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="490.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (58 samples, 0.02%)</title><rect x="487.6" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.6" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (58 samples, 0.02%)</title><rect x="487.6" y="643.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="490.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (413 samples, 0.17%)</title><rect x="487.9" y="675.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (413 samples, 0.17%)</title><rect x="487.9" y="659.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.9" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (228 samples, 0.09%)</title><rect x="487.9" y="643.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="490.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (185 samples, 0.07%)</title><rect x="489.0" y="643.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (185 samples, 0.07%)</title><rect x="489.0" y="627.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (185 samples, 0.07%)</title><rect x="489.0" y="611.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="492.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (11,710 samples, 4.73%)</title><rect x="489.9" y="675.0" width="55.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.9" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (11,710 samples, 4.73%)</title><rect x="489.9" y="659.0" width="55.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.9" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (11,710 samples, 4.73%)</title><rect x="489.9" y="643.0" width="55.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.9" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (11,710 samples, 4.73%)</title><rect x="489.9" y="627.0" width="55.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.9" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (99 samples, 0.04%)</title><rect x="489.9" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (99 samples, 0.04%)</title><rect x="489.9" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$125/1575956583.get$Lambda (99 samples, 0.04%)</title><rect x="489.9" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$125 (99 samples, 0.04%)</title><rect x="489.9" y="563.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="492.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (402 samples, 0.16%)</title><rect x="490.4" y="611.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (402 samples, 0.16%)</title><rect x="490.4" y="595.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (218 samples, 0.09%)</title><rect x="490.4" y="579.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="493.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (184 samples, 0.07%)</title><rect x="491.4" y="579.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (184 samples, 0.07%)</title><rect x="491.4" y="563.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (184 samples, 0.07%)</title><rect x="491.4" y="547.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="494.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (419 samples, 0.17%)</title><rect x="492.3" y="611.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (419 samples, 0.17%)</title><rect x="492.3" y="595.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (242 samples, 0.10%)</title><rect x="492.3" y="579.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="495.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (177 samples, 0.07%)</title><rect x="493.4" y="579.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (177 samples, 0.07%)</title><rect x="493.4" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (177 samples, 0.07%)</title><rect x="493.4" y="547.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="496.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (311 samples, 0.13%)</title><rect x="494.3" y="611.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="497.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (514 samples, 0.21%)</title><rect x="495.7" y="611.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="498.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (5,758 samples, 2.32%)</title><rect x="498.2" y="611.0" width="27.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.2" y="622.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (629 samples, 0.25%)</title><rect x="498.2" y="595.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.2" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (479 samples, 0.19%)</title><rect x="498.2" y="579.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.2" y="590.0"></text>
</g>
<g>
<title>java/util/List.spliterator (166 samples, 0.07%)</title><rect x="498.2" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.2" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (166 samples, 0.07%)</title><rect x="498.2" y="547.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="501.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (313 samples, 0.13%)</title><rect x="499.0" y="563.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.0" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (313 samples, 0.13%)</title><rect x="499.0" y="547.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="502.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (150 samples, 0.06%)</title><rect x="500.5" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (150 samples, 0.06%)</title><rect x="500.5" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (150 samples, 0.06%)</title><rect x="500.5" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/1636182655.get (150 samples, 0.06%)</title><rect x="500.5" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.5" y="542.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (150 samples, 0.06%)</title><rect x="500.5" y="515.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="503.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,183 samples, 0.88%)</title><rect x="501.2" y="595.0" width="10.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.2" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,183 samples, 0.88%)</title><rect x="501.2" y="579.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.2" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (110 samples, 0.04%)</title><rect x="501.2" y="563.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="504.2" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (155 samples, 0.06%)</title><rect x="501.7" y="563.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="504.7" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (300 samples, 0.12%)</title><rect x="502.4" y="563.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="505.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeSet (104 samples, 0.04%)</title><rect x="503.9" y="563.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="506.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (192 samples, 0.08%)</title><rect x="504.4" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="507.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (192 samples, 0.08%)</title><rect x="504.4" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.get$Lambda (192 samples, 0.08%)</title><rect x="504.4" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.4" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$116 (192 samples, 0.08%)</title><rect x="504.4" y="515.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="507.4" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (827 samples, 0.33%)</title><rect x="505.3" y="563.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (827 samples, 0.33%)</title><rect x="505.3" y="547.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (827 samples, 0.33%)</title><rect x="505.3" y="531.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (827 samples, 0.33%)</title><rect x="505.3" y="515.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (340 samples, 0.14%)</title><rect x="505.3" y="499.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (340 samples, 0.14%)</title><rect x="505.3" y="483.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (340 samples, 0.14%)</title><rect x="505.3" y="467.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (340 samples, 0.14%)</title><rect x="505.3" y="451.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (340 samples, 0.14%)</title><rect x="505.3" y="435.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (340 samples, 0.14%)</title><rect x="505.3" y="419.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (340 samples, 0.14%)</title><rect x="505.3" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (340 samples, 0.14%)</title><rect x="505.3" y="387.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (340 samples, 0.14%)</title><rect x="505.3" y="371.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="508.3" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (277 samples, 0.11%)</title><rect x="506.9" y="499.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.9" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (277 samples, 0.11%)</title><rect x="506.9" y="483.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (136 samples, 0.05%)</title><rect x="506.9" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (136 samples, 0.05%)</title><rect x="506.9" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (136 samples, 0.05%)</title><rect x="506.9" y="435.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="509.9" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (141 samples, 0.06%)</title><rect x="507.6" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.6" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (141 samples, 0.06%)</title><rect x="507.6" y="451.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="510.6" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (210 samples, 0.08%)</title><rect x="508.2" y="499.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (210 samples, 0.08%)</title><rect x="508.2" y="483.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="511.2" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (195 samples, 0.08%)</title><rect x="509.2" y="563.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.2" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (195 samples, 0.08%)</title><rect x="509.2" y="547.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="512.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (300 samples, 0.12%)</title><rect x="510.2" y="563.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (300 samples, 0.12%)</title><rect x="510.2" y="547.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="513.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (89 samples, 0.04%)</title><rect x="511.6" y="595.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="514.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (2,061 samples, 0.83%)</title><rect x="512.0" y="595.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.0" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (2,061 samples, 0.83%)</title><rect x="512.0" y="579.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.0" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,847 samples, 0.75%)</title><rect x="512.0" y="563.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.0" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,847 samples, 0.75%)</title><rect x="512.0" y="547.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.0" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,847 samples, 0.75%)</title><rect x="512.0" y="531.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.0" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (417 samples, 0.17%)</title><rect x="512.0" y="515.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="515.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (519 samples, 0.21%)</title><rect x="514.0" y="515.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.0" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (519 samples, 0.21%)</title><rect x="514.0" y="499.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.0" y="510.0"></text>
</g>
<g>
<title>byte[] (519 samples, 0.21%)</title><rect x="514.0" y="483.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="517.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (911 samples, 0.37%)</title><rect x="516.5" y="515.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (911 samples, 0.37%)</title><rect x="516.5" y="499.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String (383 samples, 0.15%)</title><rect x="516.5" y="483.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="519.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (528 samples, 0.21%)</title><rect x="518.3" y="483.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.3" y="494.0"></text>
</g>
<g>
<title>byte[] (528 samples, 0.21%)</title><rect x="518.3" y="467.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="521.3" y="478.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (214 samples, 0.09%)</title><rect x="520.8" y="563.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="523.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (275 samples, 0.11%)</title><rect x="521.8" y="595.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.8" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (275 samples, 0.11%)</title><rect x="521.8" y="579.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="524.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (521 samples, 0.21%)</title><rect x="523.1" y="595.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.1" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (136 samples, 0.05%)</title><rect x="523.1" y="579.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="526.1" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (134 samples, 0.05%)</title><rect x="523.8" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (134 samples, 0.05%)</title><rect x="523.8" y="563.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="526.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (251 samples, 0.10%)</title><rect x="524.4" y="579.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.4" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (251 samples, 0.10%)</title><rect x="524.4" y="563.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="527.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2,692 samples, 1.09%)</title><rect x="525.6" y="611.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.6" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (104 samples, 0.04%)</title><rect x="525.6" y="595.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="528.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (411 samples, 0.17%)</title><rect x="526.1" y="595.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="529.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (92 samples, 0.04%)</title><rect x="528.1" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (92 samples, 0.04%)</title><rect x="528.1" y="579.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="531.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2,085 samples, 0.84%)</title><rect x="528.5" y="595.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2,085 samples, 0.84%)</title><rect x="528.5" y="579.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Class[] (192 samples, 0.08%)</title><rect x="528.5" y="563.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="531.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (180 samples, 0.07%)</title><rect x="529.4" y="563.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="532.4" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (181 samples, 0.07%)</title><rect x="530.3" y="563.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="533.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (917 samples, 0.37%)</title><rect x="531.1" y="563.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="534.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (917 samples, 0.37%)</title><rect x="531.1" y="547.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.1" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (917 samples, 0.37%)</title><rect x="531.1" y="531.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.1" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (917 samples, 0.37%)</title><rect x="531.1" y="515.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.1" y="526.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (917 samples, 0.37%)</title><rect x="531.1" y="499.0" width="4.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="534.1" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (325 samples, 0.13%)</title><rect x="535.5" y="563.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (325 samples, 0.13%)</title><rect x="535.5" y="547.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (82 samples, 0.03%)</title><rect x="535.5" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (82 samples, 0.03%)</title><rect x="535.5" y="515.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="538.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (243 samples, 0.10%)</title><rect x="535.9" y="531.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (243 samples, 0.10%)</title><rect x="535.9" y="515.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="538.9" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (290 samples, 0.12%)</title><rect x="537.0" y="563.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.0" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (290 samples, 0.12%)</title><rect x="537.0" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.0" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (290 samples, 0.12%)</title><rect x="537.0" y="531.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="540.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,515 samples, 0.61%)</title><rect x="538.4" y="611.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (293 samples, 0.12%)</title><rect x="538.4" y="595.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (139 samples, 0.06%)</title><rect x="538.4" y="579.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="541.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (154 samples, 0.06%)</title><rect x="539.1" y="579.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="542.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (154 samples, 0.06%)</title><rect x="539.1" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (152 samples, 0.06%)</title><rect x="539.1" y="547.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="542.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (168 samples, 0.07%)</title><rect x="539.8" y="595.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="542.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1,054 samples, 0.43%)</title><rect x="540.6" y="595.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (190 samples, 0.08%)</title><rect x="540.6" y="579.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (190 samples, 0.08%)</title><rect x="540.6" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/172879885.get$Lambda (88 samples, 0.04%)</title><rect x="540.6" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$122 (88 samples, 0.04%)</title><rect x="540.6" y="531.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="543.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/887261302.get$Lambda (102 samples, 0.04%)</title><rect x="541.0" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$123 (102 samples, 0.04%)</title><rect x="541.0" y="531.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="544.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (864 samples, 0.35%)</title><rect x="541.5" y="579.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (864 samples, 0.35%)</title><rect x="541.5" y="563.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (502 samples, 0.20%)</title><rect x="541.5" y="547.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="544.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (362 samples, 0.15%)</title><rect x="543.9" y="547.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (362 samples, 0.15%)</title><rect x="543.9" y="531.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (362 samples, 0.15%)</title><rect x="543.9" y="515.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="546.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (720 samples, 0.29%)</title><rect x="545.6" y="675.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (153 samples, 0.06%)</title><rect x="545.9" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.9" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap (153 samples, 0.06%)</title><rect x="545.9" y="643.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="548.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (522 samples, 0.21%)</title><rect x="546.6" y="659.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.put (522 samples, 0.21%)</title><rect x="546.6" y="643.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (522 samples, 0.21%)</title><rect x="546.6" y="627.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (273 samples, 0.11%)</title><rect x="546.6" y="611.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.6" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (273 samples, 0.11%)</title><rect x="546.6" y="595.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="549.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (249 samples, 0.10%)</title><rect x="547.9" y="611.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.9" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (249 samples, 0.10%)</title><rect x="547.9" y="595.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="550.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getLocalResults (187 samples, 0.08%)</title><rect x="549.1" y="675.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.03%)</title><rect x="549.1" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.03%)</title><rect x="549.1" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$114/2034975849.get$Lambda (63 samples, 0.03%)</title><rect x="549.1" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$114 (63 samples, 0.03%)</title><rect x="549.1" y="611.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="552.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (124 samples, 0.05%)</title><rect x="549.4" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (124 samples, 0.05%)</title><rect x="549.4" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (68 samples, 0.03%)</title><rect x="549.4" y="627.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="552.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (56 samples, 0.02%)</title><rect x="549.7" y="627.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="552.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.requestForReplica (10,521 samples, 4.25%)</title><rect x="550.0" y="675.0" width="50.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.0" y="686.0">ru/ma..</text>
</g>
<g>
<title>java.lang.String[] (170 samples, 0.07%)</title><rect x="550.0" y="659.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="553.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.toString (2,094 samples, 0.85%)</title><rect x="550.8" y="659.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.8" y="670.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (130 samples, 0.05%)</title><rect x="550.8" y="643.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="553.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (248 samples, 0.10%)</title><rect x="551.4" y="643.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.4" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (248 samples, 0.10%)</title><rect x="551.4" y="627.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.4" y="638.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.05%)</title><rect x="551.4" y="611.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="554.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String (123 samples, 0.05%)</title><rect x="552.0" y="611.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="555.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (197 samples, 0.08%)</title><rect x="552.6" y="643.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.6" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (197 samples, 0.08%)</title><rect x="552.6" y="627.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.6" y="638.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.08%)</title><rect x="552.6" y="611.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="555.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (949 samples, 0.38%)</title><rect x="553.5" y="643.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.5" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (949 samples, 0.38%)</title><rect x="553.5" y="627.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.5" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (949 samples, 0.38%)</title><rect x="553.5" y="611.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.5" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (949 samples, 0.38%)</title><rect x="553.5" y="595.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.5" y="606.0"></text>
</g>
<g>
<title>byte[] (949 samples, 0.38%)</title><rect x="553.5" y="579.0" width="4.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="556.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (570 samples, 0.23%)</title><rect x="558.0" y="643.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (570 samples, 0.23%)</title><rect x="558.0" y="627.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (148 samples, 0.06%)</title><rect x="558.0" y="611.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="561.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (422 samples, 0.17%)</title><rect x="558.7" y="611.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.7" y="622.0"></text>
</g>
<g>
<title>byte[] (422 samples, 0.17%)</title><rect x="558.7" y="595.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="561.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (905 samples, 0.37%)</title><rect x="560.7" y="659.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2108125633.invoke (905 samples, 0.37%)</title><rect x="560.7" y="643.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1620157411.invoke (905 samples, 0.37%)</title><rect x="560.7" y="627.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (905 samples, 0.37%)</title><rect x="560.7" y="611.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (142 samples, 0.06%)</title><rect x="560.7" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (142 samples, 0.06%)</title><rect x="560.7" y="579.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="563.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (763 samples, 0.31%)</title><rect x="561.4" y="595.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (763 samples, 0.31%)</title><rect x="561.4" y="579.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.4" y="590.0"></text>
</g>
<g>
<title>byte[] (763 samples, 0.31%)</title><rect x="561.4" y="563.0" width="3.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="564.4" y="574.0"></text>
</g>
<g>
<title>java/net/URI.create (2,590 samples, 1.05%)</title><rect x="565.1" y="659.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.1" y="670.0"></text>
</g>
<g>
<title>java.net.URI (465 samples, 0.19%)</title><rect x="565.1" y="643.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="568.1" y="654.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (2,125 samples, 0.86%)</title><rect x="567.3" y="643.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.3" y="654.0"></text>
</g>
<g>
<title>java.net.URI$Parser (196 samples, 0.08%)</title><rect x="567.3" y="627.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="570.3" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,929 samples, 0.78%)</title><rect x="568.2" y="627.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (279 samples, 0.11%)</title><rect x="568.2" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (279 samples, 0.11%)</title><rect x="568.2" y="595.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="571.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (131 samples, 0.05%)</title><rect x="568.2" y="579.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="571.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (148 samples, 0.06%)</title><rect x="568.8" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.8" y="590.0"></text>
</g>
<g>
<title>byte[] (148 samples, 0.06%)</title><rect x="568.8" y="563.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="571.8" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,650 samples, 0.67%)</title><rect x="569.5" y="611.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (993 samples, 0.40%)</title><rect x="569.5" y="595.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (993 samples, 0.40%)</title><rect x="569.5" y="579.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (286 samples, 0.12%)</title><rect x="569.5" y="563.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="572.5" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (707 samples, 0.29%)</title><rect x="570.9" y="563.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.9" y="574.0"></text>
</g>
<g>
<title>byte[] (707 samples, 0.29%)</title><rect x="570.9" y="547.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="573.9" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (657 samples, 0.27%)</title><rect x="574.3" y="595.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (334 samples, 0.13%)</title><rect x="574.3" y="579.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (334 samples, 0.13%)</title><rect x="574.3" y="563.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (144 samples, 0.06%)</title><rect x="574.3" y="547.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="577.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (190 samples, 0.08%)</title><rect x="574.9" y="547.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.9" y="558.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.08%)</title><rect x="574.9" y="531.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="577.9" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (323 samples, 0.13%)</title><rect x="575.8" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.8" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (323 samples, 0.13%)</title><rect x="575.8" y="563.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (323 samples, 0.13%)</title><rect x="575.8" y="547.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (323 samples, 0.13%)</title><rect x="575.8" y="531.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (144 samples, 0.06%)</title><rect x="575.8" y="515.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="578.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (179 samples, 0.07%)</title><rect x="576.5" y="515.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.5" y="526.0"></text>
</g>
<g>
<title>byte[] (179 samples, 0.07%)</title><rect x="576.5" y="499.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="579.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (183 samples, 0.07%)</title><rect x="577.4" y="659.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.4" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (183 samples, 0.07%)</title><rect x="577.4" y="643.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="580.4" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (651 samples, 0.26%)</title><rect x="578.3" y="659.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (259 samples, 0.10%)</title><rect x="578.3" y="643.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="581.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (392 samples, 0.16%)</title><rect x="579.5" y="643.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.5" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (96 samples, 0.04%)</title><rect x="579.5" y="627.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="582.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (296 samples, 0.12%)</title><rect x="579.9" y="627.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.9" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (296 samples, 0.12%)</title><rect x="579.9" y="611.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="582.9" y="622.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (128 samples, 0.05%)</title><rect x="581.4" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="584.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (128 samples, 0.05%)</title><rect x="581.4" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (128 samples, 0.05%)</title><rect x="581.4" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (128 samples, 0.05%)</title><rect x="581.4" y="611.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (128 samples, 0.05%)</title><rect x="581.4" y="595.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.4" y="606.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.05%)</title><rect x="581.4" y="579.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="584.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (278 samples, 0.11%)</title><rect x="582.0" y="659.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.0" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (278 samples, 0.11%)</title><rect x="582.0" y="643.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="585.0" y="654.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (443 samples, 0.18%)</title><rect x="583.3" y="659.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.3" y="670.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (443 samples, 0.18%)</title><rect x="583.3" y="643.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.3" y="654.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (443 samples, 0.18%)</title><rect x="583.3" y="627.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.3" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (282 samples, 0.11%)</title><rect x="583.3" y="611.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="586.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (161 samples, 0.06%)</title><rect x="584.6" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.6" y="622.0"></text>
</g>
<g>
<title>char[] (161 samples, 0.06%)</title><rect x="584.6" y="595.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="587.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2,531 samples, 1.02%)</title><rect x="585.4" y="659.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.4" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (247 samples, 0.10%)</title><rect x="585.4" y="643.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="588.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,284 samples, 0.92%)</title><rect x="586.6" y="643.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.6" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,097 samples, 0.85%)</title><rect x="586.6" y="627.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.6" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,097 samples, 0.85%)</title><rect x="586.6" y="611.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.6" y="622.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (86 samples, 0.03%)</title><rect x="586.6" y="595.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="589.6" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (183 samples, 0.07%)</title><rect x="587.0" y="595.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="590.0" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (276 samples, 0.11%)</title><rect x="587.9" y="595.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="590.9" y="606.0"></text>
</g>
<g>
<title>java.util.TreeSet (79 samples, 0.03%)</title><rect x="589.2" y="595.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="592.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (162 samples, 0.07%)</title><rect x="589.5" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (162 samples, 0.07%)</title><rect x="589.5" y="579.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.5" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.get$Lambda (162 samples, 0.07%)</title><rect x="589.5" y="563.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.5" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$116 (162 samples, 0.07%)</title><rect x="589.5" y="547.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="592.5" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (204 samples, 0.08%)</title><rect x="590.3" y="595.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.3" y="606.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (204 samples, 0.08%)</title><rect x="590.3" y="579.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="593.3" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (827 samples, 0.33%)</title><rect x="591.3" y="595.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (827 samples, 0.33%)</title><rect x="591.3" y="579.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (827 samples, 0.33%)</title><rect x="591.3" y="563.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (319 samples, 0.13%)</title><rect x="591.3" y="547.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (319 samples, 0.13%)</title><rect x="591.3" y="531.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (319 samples, 0.13%)</title><rect x="591.3" y="515.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (319 samples, 0.13%)</title><rect x="591.3" y="499.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (319 samples, 0.13%)</title><rect x="591.3" y="483.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (319 samples, 0.13%)</title><rect x="591.3" y="467.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (319 samples, 0.13%)</title><rect x="591.3" y="451.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (319 samples, 0.13%)</title><rect x="591.3" y="435.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (319 samples, 0.13%)</title><rect x="591.3" y="419.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="594.3" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (260 samples, 0.10%)</title><rect x="592.8" y="547.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.8" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (260 samples, 0.10%)</title><rect x="592.8" y="531.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (127 samples, 0.05%)</title><rect x="592.8" y="515.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (127 samples, 0.05%)</title><rect x="592.8" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (127 samples, 0.05%)</title><rect x="592.8" y="483.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="595.8" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (133 samples, 0.05%)</title><rect x="593.4" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.4" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (133 samples, 0.05%)</title><rect x="593.4" y="499.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="596.4" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (248 samples, 0.10%)</title><rect x="594.0" y="547.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (248 samples, 0.10%)</title><rect x="594.0" y="531.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="597.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (280 samples, 0.11%)</title><rect x="595.2" y="595.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.2" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (280 samples, 0.11%)</title><rect x="595.2" y="579.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="598.2" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (187 samples, 0.08%)</title><rect x="596.6" y="627.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.6" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (187 samples, 0.08%)</title><rect x="596.6" y="611.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.6" y="622.0"></text>
</g>
<g>
<title>java.util.Optional (187 samples, 0.08%)</title><rect x="596.6" y="595.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="599.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (548 samples, 0.22%)</title><rect x="597.5" y="659.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (548 samples, 0.22%)</title><rect x="597.5" y="643.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (548 samples, 0.22%)</title><rect x="597.5" y="627.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (548 samples, 0.22%)</title><rect x="597.5" y="611.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.5" y="622.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (548 samples, 0.22%)</title><rect x="597.5" y="595.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (237 samples, 0.10%)</title><rect x="597.5" y="579.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (237 samples, 0.10%)</title><rect x="597.5" y="563.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="600.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$115/1880858300.apply (311 samples, 0.13%)</title><rect x="598.6" y="579.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (311 samples, 0.13%)</title><rect x="598.6" y="563.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.6" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (153 samples, 0.06%)</title><rect x="598.6" y="547.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="601.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (158 samples, 0.06%)</title><rect x="599.3" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.3" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (158 samples, 0.06%)</title><rect x="599.3" y="531.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="602.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (25,476 samples, 10.28%)</title><rect x="600.1" y="803.0" width="121.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.1" y="814.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (25,476 samples, 10.28%)</title><rect x="600.1" y="787.0" width="121.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.1" y="798.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (25,476 samples, 10.28%)</title><rect x="600.1" y="771.0" width="121.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.1" y="782.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (25,476 samples, 10.28%)</title><rect x="600.1" y="755.0" width="121.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.1" y="766.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (25,476 samples, 10.28%)</title><rect x="600.1" y="739.0" width="121.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.1" y="750.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (7,602 samples, 3.07%)</title><rect x="600.1" y="723.0" width="36.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.1" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7,602 samples, 3.07%)</title><rect x="600.1" y="707.0" width="36.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.1" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (59 samples, 0.02%)</title><rect x="600.1" y="691.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (59 samples, 0.02%)</title><rect x="600.1" y="675.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (59 samples, 0.02%)</title><rect x="600.1" y="659.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$129/50164514.accept (59 samples, 0.02%)</title><rect x="600.1" y="643.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$collect$2 (59 samples, 0.02%)</title><rect x="600.1" y="627.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (59 samples, 0.02%)</title><rect x="600.1" y="611.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (59 samples, 0.02%)</title><rect x="600.1" y="595.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (59 samples, 0.02%)</title><rect x="600.1" y="579.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.1" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (59 samples, 0.02%)</title><rect x="600.1" y="563.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.1" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (59 samples, 0.02%)</title><rect x="600.1" y="547.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.1" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.02%)</title><rect x="600.1" y="531.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="603.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$114/2034975849.get (7,543 samples, 3.04%)</title><rect x="600.3" y="691.0" width="36.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.3" y="702.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getLocalResults$8 (7,543 samples, 3.04%)</title><rect x="600.3" y="675.0" width="36.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.3" y="686.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (661 samples, 0.27%)</title><rect x="600.3" y="659.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="603.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$113/1614395695.act (6,573 samples, 2.65%)</title><rect x="603.5" y="659.0" width="31.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.5" y="670.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$3 (6,573 samples, 2.65%)</title><rect x="603.5" y="643.0" width="31.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.5" y="654.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.putEntity (6,573 samples, 2.65%)</title><rect x="603.5" y="627.0" width="31.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.5" y="638.0">ru..</text>
</g>
<g>
<title>one.nio.http.Response (474 samples, 0.19%)</title><rect x="603.5" y="611.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="606.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,106 samples, 0.85%)</title><rect x="605.8" y="611.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.8" y="622.0"></text>
</g>
<g>
<title>byte[] (881 samples, 0.36%)</title><rect x="605.8" y="595.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="608.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (700 samples, 0.28%)</title><rect x="609.9" y="595.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="612.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String (525 samples, 0.21%)</title><rect x="613.3" y="595.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="616.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.upsert (3,993 samples, 1.61%)</title><rect x="615.8" y="611.0" width="19.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,321 samples, 0.53%)</title><rect x="615.8" y="595.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.8" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,321 samples, 0.53%)</title><rect x="615.8" y="579.0" width="6.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="618.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.upsert (2,672 samples, 1.08%)</title><rect x="622.1" y="595.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,026 samples, 0.41%)</title><rect x="622.1" y="579.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.1" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,026 samples, 0.41%)</title><rect x="622.1" y="563.0" width="4.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="625.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1,083 samples, 0.44%)</title><rect x="627.0" y="579.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.0" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,083 samples, 0.44%)</title><rect x="627.0" y="563.0" width="5.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="630.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.upsert (545 samples, 0.22%)</title><rect x="632.2" y="579.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.2" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (545 samples, 0.22%)</title><rect x="632.2" y="563.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="635.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.&lt;init&gt; (309 samples, 0.12%)</title><rect x="634.8" y="659.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.8" y="670.0"></text>
</g>
<g>
<title>byte[] (309 samples, 0.12%)</title><rect x="634.8" y="643.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="637.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (17,874 samples, 7.21%)</title><rect x="636.3" y="723.0" width="85.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.3" y="734.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (17,874 samples, 7.21%)</title><rect x="636.3" y="707.0" width="85.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.3" y="718.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (11,035 samples, 4.45%)</title><rect x="636.3" y="691.0" width="52.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.3" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11,035 samples, 4.45%)</title><rect x="636.3" y="675.0" width="52.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.3" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (11,035 samples, 4.45%)</title><rect x="636.3" y="659.0" width="52.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.3" y="670.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/649285409.apply (11,035 samples, 4.45%)</title><rect x="636.3" y="643.0" width="52.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.3" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$replication$7 (11,035 samples, 4.45%)</title><rect x="636.3" y="627.0" width="52.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.3" y="638.0">ru/ma..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (8,778 samples, 3.54%)</title><rect x="636.3" y="611.0" width="41.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.3" y="622.0">jav..</text>
</g>
<g>
<title>java/util/Collection.stream (3,877 samples, 1.56%)</title><rect x="636.3" y="595.0" width="18.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.3" y="606.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1,327 samples, 0.54%)</title><rect x="636.3" y="579.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.3" y="590.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,327 samples, 0.54%)</title><rect x="636.3" y="563.0" width="6.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="639.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,550 samples, 1.03%)</title><rect x="642.6" y="579.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.6" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,550 samples, 1.03%)</title><rect x="642.6" y="563.0" width="12.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="645.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2,149 samples, 0.87%)</title><rect x="654.7" y="595.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,149 samples, 0.87%)</title><rect x="654.7" y="579.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2,149 samples, 0.87%)</title><rect x="654.7" y="563.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,051 samples, 0.42%)</title><rect x="654.7" y="547.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,051 samples, 0.42%)</title><rect x="654.7" y="531.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1,051 samples, 0.42%)</title><rect x="654.7" y="515.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (1,051 samples, 0.42%)</title><rect x="654.7" y="499.0" width="5.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="657.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$243/2113026439.get (1,098 samples, 0.44%)</title><rect x="659.7" y="547.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.7" y="558.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (1,098 samples, 0.44%)</title><rect x="659.7" y="531.0" width="5.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="662.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2,752 samples, 1.11%)</title><rect x="665.0" y="595.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.0" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (2,752 samples, 1.11%)</title><rect x="665.0" y="579.0" width="13.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="668.0" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (1,547 samples, 0.62%)</title><rect x="678.1" y="611.0" width="7.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="681.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.&lt;init&gt; (710 samples, 0.29%)</title><rect x="685.4" y="611.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.4" y="622.0"></text>
</g>
<g>
<title>byte[] (710 samples, 0.29%)</title><rect x="685.4" y="595.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="688.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6,839 samples, 2.76%)</title><rect x="688.8" y="691.0" width="32.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.8" y="702.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$135/773375883.accept (6,839 samples, 2.76%)</title><rect x="688.8" y="675.0" width="32.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.8" y="686.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$merge$0 (6,839 samples, 2.76%)</title><rect x="688.8" y="659.0" width="32.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.8" y="670.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5,756 samples, 2.32%)</title><rect x="688.8" y="643.0" width="27.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.8" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,756 samples, 2.32%)</title><rect x="688.8" y="627.0" width="27.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.8" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (5,756 samples, 2.32%)</title><rect x="688.8" y="611.0" width="27.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.8" y="622.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$138/820274732.accept (5,756 samples, 2.32%)</title><rect x="688.8" y="595.0" width="27.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.8" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$executeMethod$5 (5,756 samples, 2.32%)</title><rect x="688.8" y="579.0" width="27.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.8" y="590.0">r..</text>
</g>
<g>
<title>one.nio.http.Response (554 samples, 0.22%)</title><rect x="688.8" y="563.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="691.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,095 samples, 0.85%)</title><rect x="691.5" y="563.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="694.5" y="574.0"></text>
</g>
<g>
<title>byte[] (890 samples, 0.36%)</title><rect x="691.5" y="547.0" width="4.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="694.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (718 samples, 0.29%)</title><rect x="695.7" y="547.0" width="3.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="698.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (487 samples, 0.20%)</title><rect x="699.1" y="547.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="702.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (2,758 samples, 1.11%)</title><rect x="701.4" y="563.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,758 samples, 1.11%)</title><rect x="701.4" y="547.0" width="13.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,758 samples, 1.11%)</title><rect x="701.4" y="531.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,872 samples, 0.76%)</title><rect x="701.4" y="515.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.4" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,872 samples, 0.76%)</title><rect x="701.4" y="499.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.4" y="510.0"></text>
</g>
<g>
<title>byte[] (1,872 samples, 0.76%)</title><rect x="701.4" y="483.0" width="8.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="704.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (886 samples, 0.36%)</title><rect x="710.3" y="515.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="713.3" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (886 samples, 0.36%)</title><rect x="710.3" y="499.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="713.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.getValue (349 samples, 0.14%)</title><rect x="714.6" y="563.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="717.6" y="574.0"></text>
</g>
<g>
<title>byte[] (349 samples, 0.14%)</title><rect x="714.6" y="547.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="717.6" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (746 samples, 0.30%)</title><rect x="716.2" y="643.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="719.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.&lt;init&gt; (337 samples, 0.14%)</title><rect x="719.8" y="643.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="722.8" y="654.0"></text>
</g>
<g>
<title>byte[] (337 samples, 0.14%)</title><rect x="719.8" y="627.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="722.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (3,693 samples, 1.49%)</title><rect x="721.4" y="803.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (85 samples, 0.03%)</title><rect x="721.4" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (85 samples, 0.03%)</title><rect x="721.4" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$208/82615362.get$Lambda (54 samples, 0.02%)</title><rect x="721.4" y="755.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.4" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$208 (54 samples, 0.02%)</title><rect x="721.4" y="739.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="724.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1610702581.linkToTargetMethod (72 samples, 0.03%)</title><rect x="721.8" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.03%)</title><rect x="721.8" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$209/399872247.get$Lambda (72 samples, 0.03%)</title><rect x="721.8" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.8" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$209 (72 samples, 0.03%)</title><rect x="721.8" y="739.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="724.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (827 samples, 0.33%)</title><rect x="722.1" y="787.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$210/1173738397.accept (670 samples, 0.27%)</title><rect x="722.1" y="771.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (670 samples, 0.27%)</title><rect x="722.1" y="755.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (670 samples, 0.27%)</title><rect x="722.1" y="739.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (670 samples, 0.27%)</title><rect x="722.1" y="723.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (670 samples, 0.27%)</title><rect x="722.1" y="707.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (670 samples, 0.27%)</title><rect x="722.1" y="691.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (670 samples, 0.27%)</title><rect x="722.1" y="675.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (670 samples, 0.27%)</title><rect x="722.1" y="659.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (670 samples, 0.27%)</title><rect x="722.1" y="643.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (670 samples, 0.27%)</title><rect x="722.1" y="627.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/2066195330.run (670 samples, 0.27%)</title><rect x="722.1" y="611.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (670 samples, 0.27%)</title><rect x="722.1" y="595.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (160 samples, 0.06%)</title><rect x="722.1" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (160 samples, 0.06%)</title><rect x="722.1" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (160 samples, 0.06%)</title><rect x="722.1" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (78 samples, 0.03%)</title><rect x="722.1" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (78 samples, 0.03%)</title><rect x="722.1" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (78 samples, 0.03%)</title><rect x="722.1" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (78 samples, 0.03%)</title><rect x="722.1" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (78 samples, 0.03%)</title><rect x="722.1" y="467.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="725.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (82 samples, 0.03%)</title><rect x="722.5" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (82 samples, 0.03%)</title><rect x="722.5" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (82 samples, 0.03%)</title><rect x="722.5" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (82 samples, 0.03%)</title><rect x="722.5" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (82 samples, 0.03%)</title><rect x="722.5" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (81 samples, 0.03%)</title><rect x="722.5" y="451.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="725.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (458 samples, 0.18%)</title><rect x="723.1" y="579.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (249 samples, 0.10%)</title><rect x="723.1" y="563.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (169 samples, 0.07%)</title><rect x="723.1" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.1" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (169 samples, 0.07%)</title><rect x="723.1" y="531.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="726.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (80 samples, 0.03%)</title><rect x="723.9" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.9" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (80 samples, 0.03%)</title><rect x="723.9" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="726.9" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (80 samples, 0.03%)</title><rect x="723.9" y="515.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="726.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (209 samples, 0.08%)</title><rect x="724.3" y="563.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$153/1652861992.get (209 samples, 0.08%)</title><rect x="724.3" y="547.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (209 samples, 0.08%)</title><rect x="724.3" y="531.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (209 samples, 0.08%)</title><rect x="724.3" y="515.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (207 samples, 0.08%)</title><rect x="724.3" y="499.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.3" y="510.0"></text>
</g>
<g>
<title>byte[] (186 samples, 0.08%)</title><rect x="724.4" y="483.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="727.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1444997003.accept (157 samples, 0.06%)</title><rect x="725.3" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (157 samples, 0.06%)</title><rect x="725.3" y="755.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$209/399872247.run (157 samples, 0.06%)</title><rect x="725.3" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (157 samples, 0.06%)</title><rect x="725.3" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (157 samples, 0.06%)</title><rect x="725.3" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (157 samples, 0.06%)</title><rect x="725.3" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (157 samples, 0.06%)</title><rect x="725.3" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.3" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (157 samples, 0.06%)</title><rect x="725.3" y="659.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="728.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (352 samples, 0.14%)</title><rect x="726.1" y="787.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.1" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (352 samples, 0.14%)</title><rect x="726.1" y="771.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="729.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (175 samples, 0.07%)</title><rect x="727.7" y="787.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (92 samples, 0.04%)</title><rect x="727.7" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (92 samples, 0.04%)</title><rect x="727.7" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (92 samples, 0.04%)</title><rect x="727.7" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (92 samples, 0.04%)</title><rect x="727.7" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (92 samples, 0.04%)</title><rect x="727.7" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (92 samples, 0.04%)</title><rect x="727.7" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.7" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (92 samples, 0.04%)</title><rect x="727.7" y="675.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="730.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (83 samples, 0.03%)</title><rect x="728.2" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.2" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (83 samples, 0.03%)</title><rect x="728.2" y="755.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="731.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (519 samples, 0.21%)</title><rect x="728.6" y="787.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$162/747915710.run (245 samples, 0.10%)</title><rect x="728.6" y="771.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (245 samples, 0.10%)</title><rect x="728.6" y="755.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (245 samples, 0.10%)</title><rect x="728.6" y="739.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (245 samples, 0.10%)</title><rect x="728.6" y="723.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (245 samples, 0.10%)</title><rect x="728.6" y="707.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (245 samples, 0.10%)</title><rect x="728.6" y="691.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/2066195330.run (245 samples, 0.10%)</title><rect x="728.6" y="675.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (245 samples, 0.10%)</title><rect x="728.6" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (244 samples, 0.10%)</title><rect x="728.6" y="643.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (244 samples, 0.10%)</title><rect x="728.6" y="627.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (165 samples, 0.07%)</title><rect x="728.6" y="611.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (165 samples, 0.07%)</title><rect x="728.6" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (165 samples, 0.07%)</title><rect x="728.6" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (108 samples, 0.04%)</title><rect x="728.6" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1311146128.invoke (108 samples, 0.04%)</title><rect x="728.6" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.04%)</title><rect x="728.6" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (108 samples, 0.04%)</title><rect x="728.6" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (108 samples, 0.04%)</title><rect x="728.6" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.6" y="510.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.04%)</title><rect x="728.6" y="483.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="731.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (57 samples, 0.02%)</title><rect x="729.1" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.02%)</title><rect x="729.1" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.02%)</title><rect x="729.1" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$216/643139202.get$Lambda (57 samples, 0.02%)</title><rect x="729.1" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$216 (57 samples, 0.02%)</title><rect x="729.1" y="499.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="732.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (79 samples, 0.03%)</title><rect x="729.4" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 0.03%)</title><rect x="729.4" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 0.03%)</title><rect x="729.4" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (79 samples, 0.03%)</title><rect x="729.4" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (79 samples, 0.03%)</title><rect x="729.4" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (79 samples, 0.03%)</title><rect x="729.4" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (78 samples, 0.03%)</title><rect x="729.4" y="515.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="732.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$166/52281761.run (274 samples, 0.11%)</title><rect x="729.7" y="771.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (274 samples, 0.11%)</title><rect x="729.7" y="755.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (102 samples, 0.04%)</title><rect x="729.7" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (102 samples, 0.04%)</title><rect x="729.7" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$217/397507893.get$Lambda (102 samples, 0.04%)</title><rect x="729.7" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.7" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$217 (102 samples, 0.04%)</title><rect x="729.7" y="691.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="732.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (172 samples, 0.07%)</title><rect x="730.2" y="739.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (172 samples, 0.07%)</title><rect x="730.2" y="723.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (172 samples, 0.07%)</title><rect x="730.2" y="707.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.2" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (170 samples, 0.07%)</title><rect x="730.2" y="691.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="733.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (831 samples, 0.34%)</title><rect x="731.0" y="787.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.0" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (205 samples, 0.08%)</title><rect x="731.0" y="771.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.0" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (205 samples, 0.08%)</title><rect x="731.0" y="755.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.0" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (205 samples, 0.08%)</title><rect x="731.0" y="739.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.0" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (205 samples, 0.08%)</title><rect x="731.0" y="723.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.0" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (205 samples, 0.08%)</title><rect x="731.0" y="707.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="734.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (626 samples, 0.25%)</title><rect x="732.0" y="771.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (136 samples, 0.05%)</title><rect x="732.0" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (136 samples, 0.05%)</title><rect x="732.0" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$268/155122240.get$Lambda (136 samples, 0.05%)</title><rect x="732.0" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.0" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$268 (136 samples, 0.05%)</title><rect x="732.0" y="707.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="735.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (490 samples, 0.20%)</title><rect x="732.7" y="755.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.7" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (206 samples, 0.08%)</title><rect x="732.7" y="739.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="735.7" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (284 samples, 0.11%)</title><rect x="733.7" y="739.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.7" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (284 samples, 0.11%)</title><rect x="733.7" y="723.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.7" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (284 samples, 0.11%)</title><rect x="733.7" y="707.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="736.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (523 samples, 0.21%)</title><rect x="735.0" y="787.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.0" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (278 samples, 0.11%)</title><rect x="735.2" y="771.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (124 samples, 0.05%)</title><rect x="735.2" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.2" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (124 samples, 0.05%)</title><rect x="735.2" y="739.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="738.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (154 samples, 0.06%)</title><rect x="735.8" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.8" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (154 samples, 0.06%)</title><rect x="735.8" y="739.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="738.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (203 samples, 0.08%)</title><rect x="736.5" y="771.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.5" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (203 samples, 0.08%)</title><rect x="736.5" y="755.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="739.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (163 samples, 0.07%)</title><rect x="737.5" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (163 samples, 0.07%)</title><rect x="737.5" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (163 samples, 0.07%)</title><rect x="737.5" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (163 samples, 0.07%)</title><rect x="737.5" y="739.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (59 samples, 0.02%)</title><rect x="737.5" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.5" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (59 samples, 0.02%)</title><rect x="737.5" y="707.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="740.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (104 samples, 0.04%)</title><rect x="737.8" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (104 samples, 0.04%)</title><rect x="737.8" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (104 samples, 0.04%)</title><rect x="737.8" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (104 samples, 0.04%)</title><rect x="737.8" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.8" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (104 samples, 0.04%)</title><rect x="737.8" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.8" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (104 samples, 0.04%)</title><rect x="737.8" y="643.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="740.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (100 samples, 0.04%)</title><rect x="738.5" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (100 samples, 0.04%)</title><rect x="738.5" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (100 samples, 0.04%)</title><rect x="738.5" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.5" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (100 samples, 0.04%)</title><rect x="738.5" y="739.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="741.5" y="750.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (66 samples, 0.03%)</title><rect x="739.0" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="742.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (66 samples, 0.03%)</title><rect x="739.0" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="742.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (66 samples, 0.03%)</title><rect x="739.0" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (65 samples, 0.03%)</title><rect x="739.0" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.0" y="766.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.02%)</title><rect x="739.0" y="739.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.0" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (94,647 samples, 38.20%)</title><rect x="739.3" y="803.0" width="450.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.3" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4,534 samples, 1.83%)</title><rect x="739.3" y="787.0" width="21.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.3" y="798.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4,534 samples, 1.83%)</title><rect x="739.3" y="771.0" width="21.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="742.3" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (90,113 samples, 36.37%)</title><rect x="760.9" y="787.0" width="429.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.9" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (90,113 samples, 36.37%)</title><rect x="760.9" y="771.0" width="429.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="763.9" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (90,092 samples, 36.36%)</title><rect x="760.9" y="755.0" width="429.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.9" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14,807 samples, 5.98%)</title><rect x="760.9" y="739.0" width="70.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.9" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14,807 samples, 5.98%)</title><rect x="760.9" y="723.0" width="70.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.9" y="734.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (10,768 samples, 4.35%)</title><rect x="760.9" y="707.0" width="51.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.9" y="718.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4,533 samples, 1.83%)</title><rect x="760.9" y="691.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.9" y="702.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (4,533 samples, 1.83%)</title><rect x="760.9" y="675.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.9" y="686.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,533 samples, 1.83%)</title><rect x="760.9" y="659.0" width="21.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.9" y="670.0">j..</text>
</g>
<g>
<title>java.lang.String (1,045 samples, 0.42%)</title><rect x="760.9" y="643.0" width="5.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="763.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,488 samples, 1.41%)</title><rect x="765.9" y="643.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.9" y="654.0"></text>
</g>
<g>
<title>byte[] (3,488 samples, 1.41%)</title><rect x="765.9" y="627.0" width="16.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="768.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3,625 samples, 1.46%)</title><rect x="782.5" y="691.0" width="17.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,625 samples, 1.46%)</title><rect x="782.5" y="675.0" width="17.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="785.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,625 samples, 1.46%)</title><rect x="782.5" y="659.0" width="17.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,625 samples, 1.46%)</title><rect x="782.5" y="643.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (1,645 samples, 0.66%)</title><rect x="782.5" y="627.0" width="7.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="785.5" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,980 samples, 0.80%)</title><rect x="790.3" y="627.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="793.3" y="638.0"></text>
</g>
<g>
<title>byte[] (1,980 samples, 0.80%)</title><rect x="790.3" y="611.0" width="9.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="793.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (2,610 samples, 1.05%)</title><rect x="799.7" y="691.0" width="12.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/210147905.linkToTargetMethod (2,584 samples, 1.04%)</title><rect x="799.7" y="675.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,584 samples, 1.04%)</title><rect x="799.7" y="659.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="802.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/285921815.get$Lambda (2,584 samples, 1.04%)</title><rect x="799.7" y="643.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.7" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$112 (2,584 samples, 1.04%)</title><rect x="799.7" y="627.0" width="12.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="802.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,039 samples, 1.63%)</title><rect x="812.2" y="707.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,039 samples, 1.63%)</title><rect x="812.2" y="691.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,039 samples, 1.63%)</title><rect x="812.2" y="675.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.2" y="686.0"></text>
</g>
<g>
<title>java.lang.String (1,650 samples, 0.67%)</title><rect x="812.2" y="659.0" width="7.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="815.2" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,389 samples, 0.96%)</title><rect x="820.0" y="659.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.0" y="670.0"></text>
</g>
<g>
<title>byte[] (2,389 samples, 0.96%)</title><rect x="820.0" y="643.0" width="11.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="823.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (40,529 samples, 16.36%)</title><rect x="831.4" y="739.0" width="193.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.4" y="750.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one.nio.http.Request (4,918 samples, 1.98%)</title><rect x="831.4" y="723.0" width="23.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="834.4" y="734.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8,611 samples, 3.48%)</title><rect x="854.8" y="723.0" width="41.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.8" y="734.0">one..</text>
</g>
<g>
<title>java.lang.String[] (7,450 samples, 3.01%)</title><rect x="854.8" y="707.0" width="35.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="857.8" y="718.0">jav..</text>
</g>
<g>
<title>java.lang.String[] (1,161 samples, 0.47%)</title><rect x="890.3" y="707.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="893.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27,000 samples, 10.90%)</title><rect x="895.8" y="723.0" width="128.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.8" y="734.0">one/nio/util/Utf..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (27,000 samples, 10.90%)</title><rect x="895.8" y="707.0" width="128.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.8" y="718.0">one/nio/util/Utf..</text>
</g>
<g>
<title>char[] (10,742 samples, 4.34%)</title><rect x="895.8" y="691.0" width="51.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="898.8" y="702.0">char[]</text>
</g>
<g>
<title>char[] (5,560 samples, 2.24%)</title><rect x="947.0" y="691.0" width="26.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="950.0" y="702.0">c..</text>
</g>
<g>
<title>java.lang.String (1,939 samples, 0.78%)</title><rect x="973.4" y="691.0" width="9.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="976.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,759 samples, 3.53%)</title><rect x="982.7" y="691.0" width="41.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="985.7" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,759 samples, 3.53%)</title><rect x="982.7" y="675.0" width="41.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="985.7" y="686.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8,759 samples, 3.53%)</title><rect x="982.7" y="659.0" width="41.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="985.7" y="670.0">jav..</text>
</g>
<g>
<title>byte[] (8,538 samples, 3.45%)</title><rect x="982.7" y="643.0" width="40.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="985.7" y="654.0">byt..</text>
</g>
<g>
<title>byte[] (221 samples, 0.09%)</title><rect x="1023.3" y="643.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1026.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2,234 samples, 0.90%)</title><rect x="1024.4" y="739.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.4" y="750.0"></text>
</g>
<g>
<title>byte[] (2,234 samples, 0.90%)</title><rect x="1024.4" y="723.0" width="10.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1027.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,586 samples, 1.45%)</title><rect x="1035.0" y="739.0" width="17.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1038.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,586 samples, 1.45%)</title><rect x="1035.0" y="723.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1038.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,586 samples, 1.45%)</title><rect x="1035.0" y="707.0" width="17.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1038.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (1,377 samples, 0.56%)</title><rect x="1035.0" y="691.0" width="6.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1038.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,209 samples, 0.89%)</title><rect x="1041.6" y="691.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.6" y="702.0"></text>
</g>
<g>
<title>byte[] (2,209 samples, 0.89%)</title><rect x="1041.6" y="675.0" width="10.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1044.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28,936 samples, 11.68%)</title><rect x="1052.1" y="739.0" width="137.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.1" y="750.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (28,936 samples, 11.68%)</title><rect x="1052.1" y="723.0" width="137.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.1" y="734.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (12,887 samples, 5.20%)</title><rect x="1052.1" y="707.0" width="61.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1055.1" y="718.0">char[]</text>
</g>
<g>
<title>char[] (125 samples, 0.05%)</title><rect x="1113.5" y="707.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1116.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (5,712 samples, 2.31%)</title><rect x="1114.1" y="707.0" width="27.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1117.1" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10,212 samples, 4.12%)</title><rect x="1141.3" y="707.0" width="48.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.3" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10,212 samples, 4.12%)</title><rect x="1141.3" y="691.0" width="48.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1144.3" y="702.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10,212 samples, 4.12%)</title><rect x="1141.3" y="675.0" width="48.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.3" y="686.0">java..</text>
</g>
<g>
<title>byte[] (10,212 samples, 4.12%)</title><rect x="1141.3" y="659.0" width="48.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1144.3" y="670.0">byte[]</text>
</g>
</g>
</svg>
