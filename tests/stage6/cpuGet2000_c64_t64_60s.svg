<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1189"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1189"> </text>
<g id="frames">
<g>
<title>all (16,382 samples, 100.00%)</title><rect x="10.0" y="1155.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="1166.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (271 samples, 1.65%)</title><rect x="10.0" y="1139.0" width="19.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (268 samples, 1.64%)</title><rect x="10.2" y="1123.0" width="19.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.2" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (263 samples, 1.61%)</title><rect x="10.5" y="1107.0" width="18.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.5" y="1118.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.04%)</title><rect x="11.7" y="1091.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.7" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (234 samples, 1.43%)</title><rect x="12.2" y="1091.0" width="16.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.2" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (72 samples, 0.44%)</title><rect x="13.0" y="1075.0" width="5.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.0" y="1086.0"></text>
</g>
<g>
<title>SpinPause (38 samples, 0.23%)</title><rect x="18.2" y="1075.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="21.2" y="1086.0"></text>
</g>
<g>
<title>__lll_unlock_wake (21 samples, 0.13%)</title><rect x="21.1" y="1075.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="24.1" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.09%)</title><rect x="21.6" y="1059.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.6" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.09%)</title><rect x="21.6" y="1043.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="24.6" y="1054.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.03%)</title><rect x="22.2" y="1027.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="25.2" y="1038.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="22.2" y="1011.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="25.2" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (62 samples, 0.38%)</title><rect x="22.6" y="1075.0" width="4.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="25.6" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.25%)</title><rect x="24.1" y="1059.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.1" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.24%)</title><rect x="24.1" y="1043.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.1" y="1054.0"></text>
</g>
<g>
<title>sys_futex (31 samples, 0.19%)</title><rect x="24.8" y="1027.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.8" y="1038.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.18%)</title><rect x="24.8" y="1011.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.8" y="1022.0"></text>
</g>
<g>
<title>futex_wait (28 samples, 0.17%)</title><rect x="25.0" y="995.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.0" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (23 samples, 0.14%)</title><rect x="25.1" y="979.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="28.1" y="990.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (10 samples, 0.06%)</title><rect x="25.1" y="963.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="28.1" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="25.2" y="947.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="28.2" y="958.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.08%)</title><rect x="25.8" y="963.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="28.8" y="974.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.07%)</title><rect x="25.9" y="947.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="28.9" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.07%)</title><rect x="26.0" y="931.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="29.0" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.12%)</title><rect x="27.1" y="1075.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="30.1" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.09%)</title><rect x="27.5" y="1059.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="30.5" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.09%)</title><rect x="27.5" y="1043.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.5" y="1054.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.07%)</title><rect x="27.6" y="1027.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.6" y="1038.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.07%)</title><rect x="27.6" y="1011.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="30.6" y="1022.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.05%)</title><rect x="27.7" y="995.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.02%)</title><rect x="28.1" y="979.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="31.1" y="990.0"></text>
</g>
<g>
<title>[no_Java_frame] (17 samples, 0.10%)</title><rect x="29.5" y="1139.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="32.5" y="1150.0"></text>
</g>
<g>
<title>[not_walkable_Java] (46 samples, 0.28%)</title><rect x="30.7" y="1139.0" width="3.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="33.7" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (6 samples, 0.04%)</title><rect x="31.0" y="1123.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="34.0" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (19 samples, 0.12%)</title><rect x="31.5" y="1123.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.5" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (17 samples, 0.10%)</title><rect x="31.5" y="1107.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="34.5" y="1118.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.02%)</title><rect x="31.5" y="1091.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="34.5" y="1102.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (13 samples, 0.08%)</title><rect x="31.8" y="1091.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="34.8" y="1102.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (5 samples, 0.03%)</title><rect x="31.9" y="1075.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="34.9" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="33.0" y="1123.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="36.0" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.02%)</title><rect x="33.8" y="1123.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="36.8" y="1134.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.02%)</title><rect x="33.8" y="1107.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="36.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="34.1" y="1139.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="37.1" y="1150.0"></text>
</g>
<g>
<title>[unknown_Java] (32 samples, 0.20%)</title><rect x="34.6" y="1139.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="37.6" y="1150.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (9 samples, 0.05%)</title><rect x="34.9" y="1123.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="37.9" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.02%)</title><rect x="35.9" y="1123.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="38.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="36.1" y="1123.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="39.1" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.02%)</title><rect x="36.6" y="1123.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="39.6" y="1134.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.02%)</title><rect x="36.6" y="1107.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="39.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10,454 samples, 63.81%)</title><rect x="37.0" y="1139.0" width="753.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.0" y="1150.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,454 samples, 63.81%)</title><rect x="37.0" y="1123.0" width="753.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.0" y="1134.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,453 samples, 63.81%)</title><rect x="37.1" y="1107.0" width="752.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.1" y="1118.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,488 samples, 9.08%)</title><rect x="37.2" y="1091.0" width="107.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.2" y="1102.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,486 samples, 9.07%)</title><rect x="37.4" y="1075.0" width="107.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.4" y="1086.0">java/util/con..</text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="38.2" y="1059.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="41.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,458 samples, 8.90%)</title><rect x="38.7" y="1059.0" width="105.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.7" y="1070.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (16 samples, 0.10%)</title><rect x="39.0" y="1043.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.02%)</title><rect x="39.7" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/172879885.apply (1,437 samples, 8.77%)</title><rect x="40.1" y="1043.0" width="103.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.1" y="1054.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,437 samples, 8.77%)</title><rect x="40.1" y="1027.0" width="103.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.1" y="1038.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,437 samples, 8.77%)</title><rect x="40.1" y="1011.0" width="103.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.1" y="1022.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.04%)</title><rect x="40.4" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.02%)</title><rect x="40.5" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,108 samples, 6.76%)</title><rect x="40.8" y="995.0" width="79.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.8" y="1006.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,108 samples, 6.76%)</title><rect x="40.8" y="979.0" width="79.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.8" y="990.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,108 samples, 6.76%)</title><rect x="40.8" y="963.0" width="79.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.8" y="974.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (632 samples, 3.86%)</title><rect x="40.9" y="947.0" width="45.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.9" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (632 samples, 3.86%)</title><rect x="40.9" y="931.0" width="45.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.9" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (628 samples, 3.83%)</title><rect x="41.0" y="915.0" width="45.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.0" y="926.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.04%)</title><rect x="41.0" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$178/1146133693.apply (622 samples, 3.80%)</title><rect x="41.5" y="899.0" width="44.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.5" y="910.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (621 samples, 3.79%)</title><rect x="41.5" y="883.0" width="44.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.5" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (621 samples, 3.79%)</title><rect x="41.5" y="867.0" width="44.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.5" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$130/1695009006.apply (7 samples, 0.04%)</title><rect x="41.5" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (7 samples, 0.04%)</title><rect x="41.5" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (7 samples, 0.04%)</title><rect x="41.5" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (7 samples, 0.04%)</title><rect x="41.5" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (7 samples, 0.04%)</title><rect x="41.5" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (7 samples, 0.04%)</title><rect x="41.5" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (7 samples, 0.04%)</title><rect x="41.5" y="755.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (7 samples, 0.04%)</title><rect x="41.5" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 0.04%)</title><rect x="41.5" y="723.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="44.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.04%)</title><rect x="41.5" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/1631076502.apply (614 samples, 3.75%)</title><rect x="42.1" y="851.0" width="44.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.1" y="862.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (614 samples, 3.75%)</title><rect x="42.1" y="835.0" width="44.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.1" y="846.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.02%)</title><rect x="42.1" y="819.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4 samples, 0.02%)</title><rect x="42.1" y="803.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.05%)</title><rect x="42.3" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.04%)</title><rect x="42.5" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="42.6" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="42.6" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (602 samples, 3.67%)</title><rect x="42.9" y="819.0" width="43.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.9" y="830.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (530 samples, 3.24%)</title><rect x="43.0" y="803.0" width="38.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.0" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (524 samples, 3.20%)</title><rect x="43.4" y="787.0" width="37.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.4" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (14 samples, 0.09%)</title><rect x="43.9" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$199/2033936356.apply (4 samples, 0.02%)</title><rect x="44.6" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$196/1772088528.apply (498 samples, 3.04%)</title><rect x="44.9" y="771.0" width="35.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.9" y="782.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (498 samples, 3.04%)</title><rect x="44.9" y="755.0" width="35.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.9" y="766.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (20 samples, 0.12%)</title><rect x="45.5" y="739.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (20 samples, 0.12%)</title><rect x="45.5" y="723.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.12%)</title><rect x="45.5" y="707.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.12%)</title><rect x="45.5" y="691.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (14 samples, 0.09%)</title><rect x="45.9" y="675.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14 samples, 0.09%)</title><rect x="45.9" y="659.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12 samples, 0.07%)</title><rect x="45.9" y="643.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (4 samples, 0.02%)</title><rect x="46.0" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (7 samples, 0.04%)</title><rect x="46.3" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (180 samples, 1.10%)</title><rect x="47.0" y="739.0" width="12.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (178 samples, 1.09%)</title><rect x="47.1" y="723.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="50.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (34 samples, 0.21%)</title><rect x="47.2" y="707.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (34 samples, 0.21%)</title><rect x="47.2" y="691.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (34 samples, 0.21%)</title><rect x="47.2" y="675.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (29 samples, 0.18%)</title><rect x="47.2" y="659.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (29 samples, 0.18%)</title><rect x="47.2" y="643.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.04%)</title><rect x="47.5" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="50.5" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.04%)</title><rect x="47.5" y="611.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="50.5" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.04%)</title><rect x="47.5" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="50.5" y="606.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="47.7" y="579.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="50.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (17 samples, 0.10%)</title><rect x="48.1" y="627.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.02%)</title><rect x="49.0" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.0" y="622.0"></text>
</g>
<g>
<title>__GI___write (4 samples, 0.02%)</title><rect x="49.0" y="595.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="52.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (5 samples, 0.03%)</title><rect x="49.3" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.3" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="49.3" y="643.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="52.3" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (5 samples, 0.03%)</title><rect x="49.3" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="52.3" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="49.3" y="611.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="52.3" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="49.3" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="52.3" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="49.3" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="52.3" y="590.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.02%)</title><rect x="49.4" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="52.4" y="574.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="49.4" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="52.4" y="558.0"></text>
</g>
<g>
<title>futex_wake_op (4 samples, 0.02%)</title><rect x="49.4" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="52.4" y="542.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="49.4" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="52.4" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="49.4" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="52.4" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="49.4" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="52.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (142 samples, 0.87%)</title><rect x="49.7" y="707.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (142 samples, 0.87%)</title><rect x="49.7" y="691.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.7" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (20 samples, 0.12%)</title><rect x="50.3" y="675.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="53.3" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (19 samples, 0.12%)</title><rect x="50.3" y="659.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="53.3" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.09%)</title><rect x="50.6" y="643.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="53.6" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.08%)</title><rect x="50.7" y="627.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="53.7" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.07%)</title><rect x="50.7" y="611.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="53.7" y="622.0"></text>
</g>
<g>
<title>sys_futex (11 samples, 0.07%)</title><rect x="50.8" y="595.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="53.8" y="606.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.07%)</title><rect x="50.8" y="579.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.8" y="590.0"></text>
</g>
<g>
<title>futex_wake_op (11 samples, 0.07%)</title><rect x="50.8" y="563.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="53.8" y="574.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.05%)</title><rect x="51.0" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="54.0" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.05%)</title><rect x="51.0" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.0" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="51.0" y="515.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (106 samples, 0.65%)</title><rect x="51.8" y="675.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (106 samples, 0.65%)</title><rect x="51.8" y="659.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (106 samples, 0.65%)</title><rect x="51.8" y="643.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.8" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (27 samples, 0.16%)</title><rect x="52.1" y="627.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="55.1" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (26 samples, 0.16%)</title><rect x="52.1" y="611.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="55.1" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (24 samples, 0.15%)</title><rect x="52.2" y="595.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="55.2" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (14 samples, 0.09%)</title><rect x="52.4" y="579.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="55.4" y="590.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.05%)</title><rect x="53.4" y="579.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="56.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (76 samples, 0.46%)</title><rect x="54.0" y="627.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.0" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="55.1" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="58.1" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.03%)</title><rect x="55.1" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="58.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (56 samples, 0.34%)</title><rect x="55.5" y="611.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.5" y="622.0"></text>
</g>
<g>
<title>__GI___write (55 samples, 0.34%)</title><rect x="55.5" y="595.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="58.5" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.26%)</title><rect x="56.3" y="579.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="59.3" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.26%)</title><rect x="56.3" y="563.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="59.3" y="574.0"></text>
</g>
<g>
<title>sys_write (38 samples, 0.23%)</title><rect x="56.6" y="547.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="59.6" y="558.0"></text>
</g>
<g>
<title>vfs_write (33 samples, 0.20%)</title><rect x="57.0" y="531.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="60.0" y="542.0"></text>
</g>
<g>
<title>__vfs_write (28 samples, 0.17%)</title><rect x="57.0" y="515.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.0" y="526.0"></text>
</g>
<g>
<title>new_sync_write (28 samples, 0.17%)</title><rect x="57.0" y="499.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="60.0" y="510.0"></text>
</g>
<g>
<title>pipe_write (24 samples, 0.15%)</title><rect x="57.3" y="483.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="60.3" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.12%)</title><rect x="57.3" y="467.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="60.3" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.12%)</title><rect x="57.3" y="451.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="60.3" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.12%)</title><rect x="57.3" y="435.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="60.3" y="446.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.03%)</title><rect x="59.0" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="62.0" y="526.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.03%)</title><rect x="59.0" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="62.0" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.02%)</title><rect x="59.1" y="483.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="62.1" y="494.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.02%)</title><rect x="59.1" y="467.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (5 samples, 0.03%)</title><rect x="59.5" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (288 samples, 1.76%)</title><rect x="59.9" y="739.0" width="20.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (31 samples, 0.19%)</title><rect x="59.9" y="723.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (31 samples, 0.19%)</title><rect x="59.9" y="707.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (31 samples, 0.19%)</title><rect x="59.9" y="691.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (23 samples, 0.14%)</title><rect x="62.1" y="723.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.1" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (21 samples, 0.13%)</title><rect x="62.3" y="707.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.3" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (11 samples, 0.07%)</title><rect x="62.9" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.9" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (11 samples, 0.07%)</title><rect x="62.9" y="675.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (172 samples, 1.05%)</title><rect x="63.9" y="723.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (14 samples, 0.09%)</title><rect x="64.0" y="707.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.0" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (14 samples, 0.09%)</title><rect x="64.0" y="691.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.0" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (12 samples, 0.07%)</title><rect x="64.1" y="675.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.1" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (10 samples, 0.06%)</title><rect x="64.2" y="659.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (10 samples, 0.06%)</title><rect x="64.2" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (10 samples, 0.06%)</title><rect x="64.2" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (73 samples, 0.45%)</title><rect x="65.0" y="707.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (27 samples, 0.16%)</title><rect x="65.2" y="691.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.2" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (20 samples, 0.12%)</title><rect x="65.8" y="675.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.8" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (15 samples, 0.09%)</title><rect x="66.0" y="659.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.0" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (15 samples, 0.09%)</title><rect x="66.0" y="643.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.0" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="66.8" y="627.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="69.8" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (7 samples, 0.04%)</title><rect x="67.3" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.3" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (7 samples, 0.04%)</title><rect x="67.3" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (7 samples, 0.04%)</title><rect x="67.3" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.3" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (7 samples, 0.04%)</title><rect x="67.3" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.3" y="654.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$218/1534029083.test (33 samples, 0.20%)</title><rect x="67.9" y="691.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.9" y="702.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (33 samples, 0.20%)</title><rect x="67.9" y="675.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1810899357.test (16 samples, 0.10%)</title><rect x="69.1" y="659.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (16 samples, 0.10%)</title><rect x="69.1" y="643.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.1" y="654.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1970982267.test (16 samples, 0.10%)</title><rect x="69.1" y="627.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.1" y="638.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (16 samples, 0.10%)</title><rect x="69.1" y="611.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/73181251.test (16 samples, 0.10%)</title><rect x="69.1" y="595.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (16 samples, 0.10%)</title><rect x="69.1" y="579.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (16 samples, 0.10%)</title><rect x="69.1" y="563.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.10%)</title><rect x="69.1" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (16 samples, 0.10%)</title><rect x="69.1" y="531.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (13 samples, 0.08%)</title><rect x="69.4" y="515.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (13 samples, 0.08%)</title><rect x="69.4" y="499.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.4" y="510.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.02%)</title><rect x="69.9" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (4 samples, 0.02%)</title><rect x="70.3" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (4 samples, 0.02%)</title><rect x="70.3" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.02%)</title><rect x="70.3" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.02%)</title><rect x="70.3" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.02%)</title><rect x="70.3" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (79 samples, 0.48%)</title><rect x="70.6" y="707.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.6" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (79 samples, 0.48%)</title><rect x="70.6" y="691.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.6" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (78 samples, 0.48%)</title><rect x="70.6" y="675.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.6" y="686.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="71.3" y="659.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="74.3" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (64 samples, 0.39%)</title><rect x="71.7" y="659.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.7" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (49 samples, 0.30%)</title><rect x="72.3" y="643.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.3" y="654.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.05%)</title><rect x="72.7" y="627.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="75.7" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (32 samples, 0.20%)</title><rect x="73.3" y="627.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (5 samples, 0.03%)</title><rect x="73.6" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (13 samples, 0.08%)</title><rect x="74.0" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.0" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (8 samples, 0.05%)</title><rect x="74.3" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (8 samples, 0.05%)</title><rect x="74.3" y="579.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.3" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.05%)</title><rect x="74.9" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.03%)</title><rect x="75.1" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.1" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (6 samples, 0.04%)</title><rect x="75.8" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.8" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (4 samples, 0.02%)</title><rect x="76.0" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (8 samples, 0.05%)</title><rect x="76.3" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (8 samples, 0.05%)</title><rect x="76.3" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (18 samples, 0.11%)</title><rect x="76.8" y="723.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (11 samples, 0.07%)</title><rect x="77.3" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (11 samples, 0.07%)</title><rect x="77.3" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.3" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="77.9" y="675.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="80.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (35 samples, 0.21%)</title><rect x="78.1" y="723.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.1" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.16%)</title><rect x="78.6" y="707.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.05%)</title><rect x="79.0" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.05%)</title><rect x="79.0" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (9 samples, 0.05%)</title><rect x="79.0" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (10 samples, 0.06%)</title><rect x="79.8" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="80.9" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="80.9" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (68 samples, 0.42%)</title><rect x="81.4" y="803.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (67 samples, 0.41%)</title><rect x="81.4" y="787.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (24 samples, 0.15%)</title><rect x="81.6" y="771.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (24 samples, 0.15%)</title><rect x="81.6" y="755.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.24%)</title><rect x="83.3" y="771.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.24%)</title><rect x="83.3" y="755.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (37 samples, 0.23%)</title><rect x="83.5" y="739.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (35 samples, 0.21%)</title><rect x="83.7" y="723.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (19 samples, 0.12%)</title><rect x="83.8" y="707.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (17 samples, 0.10%)</title><rect x="84.0" y="691.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (17 samples, 0.10%)</title><rect x="84.0" y="675.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.04%)</title><rect x="84.6" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (5 samples, 0.03%)</title><rect x="84.6" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (5 samples, 0.03%)</title><rect x="84.6" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.03%)</title><rect x="84.6" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.03%)</title><rect x="84.6" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (14 samples, 0.09%)</title><rect x="85.2" y="707.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.06%)</title><rect x="85.5" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7 samples, 0.04%)</title><rect x="85.5" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (5 samples, 0.03%)</title><rect x="85.6" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.03%)</title><rect x="85.6" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.05%)</title><rect x="86.4" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.05%)</title><rect x="86.4" y="931.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (7 samples, 0.04%)</title><rect x="86.5" y="915.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.5" y="926.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.04%)</title><rect x="86.6" y="899.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="89.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (467 samples, 2.85%)</title><rect x="87.0" y="947.0" width="33.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.0" y="958.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (14 samples, 0.09%)</title><rect x="87.1" y="931.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (13 samples, 0.08%)</title><rect x="87.1" y="915.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$176/2010066271.apply (5 samples, 0.03%)</title><rect x="87.6" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (5 samples, 0.03%)</title><rect x="87.6" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (5 samples, 0.03%)</title><rect x="87.6" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.03%)</title><rect x="87.6" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.03%)</title><rect x="87.6" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.10%)</title><rect x="88.1" y="931.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (16 samples, 0.10%)</title><rect x="88.1" y="915.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.05%)</title><rect x="88.2" y="899.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.03%)</title><rect x="88.2" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.04%)</title><rect x="88.8" y="899.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.04%)</title><rect x="88.8" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (436 samples, 2.66%)</title><rect x="89.2" y="931.0" width="31.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.2" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (436 samples, 2.66%)</title><rect x="89.2" y="915.0" width="31.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.2" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (424 samples, 2.59%)</title><rect x="89.2" y="899.0" width="30.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.2" y="910.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="89.4" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="89.4" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$140/357868336.get$Lambda (4 samples, 0.02%)</title><rect x="89.4" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$140/357868336.&lt;init&gt; (4 samples, 0.02%)</title><rect x="89.4" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.4" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (6 samples, 0.04%)</title><rect x="89.8" y="883.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.8" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (4 samples, 0.02%)</title><rect x="90.0" y="867.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (11 samples, 0.07%)</title><rect x="90.5" y="883.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (5 samples, 0.03%)</title><rect x="90.9" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (35 samples, 0.21%)</title><rect x="91.3" y="883.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (5 samples, 0.03%)</title><rect x="93.2" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (21 samples, 0.13%)</title><rect x="93.8" y="883.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$143/1895515533.get$Lambda (4 samples, 0.02%)</title><rect x="94.3" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (5 samples, 0.03%)</title><rect x="94.8" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (4 samples, 0.02%)</title><rect x="95.3" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (101 samples, 0.62%)</title><rect x="95.6" y="883.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (84 samples, 0.51%)</title><rect x="95.7" y="867.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.7" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (30 samples, 0.18%)</title><rect x="97.4" y="851.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="100.4" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (29 samples, 0.18%)</title><rect x="97.4" y="835.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="100.4" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (29 samples, 0.18%)</title><rect x="97.4" y="819.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="100.4" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (27 samples, 0.16%)</title><rect x="97.4" y="803.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="100.4" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.04%)</title><rect x="99.5" y="851.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="102.5" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (6 samples, 0.04%)</title><rect x="99.5" y="835.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="102.5" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="99.6" y="819.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="102.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="99.6" y="803.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="102.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="99.6" y="787.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="102.6" y="798.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.03%)</title><rect x="99.6" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="102.6" y="782.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="99.6" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="102.6" y="766.0"></text>
</g>
<g>
<title>futex_wake_op (4 samples, 0.02%)</title><rect x="99.7" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.7" y="750.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="99.7" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="102.7" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="99.7" y="707.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="102.7" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="99.7" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="102.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (25 samples, 0.15%)</title><rect x="100.0" y="851.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.07%)</title><rect x="100.2" y="835.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.05%)</title><rect x="100.2" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (6 samples, 0.04%)</title><rect x="100.4" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.4" y="814.0"></text>
</g>
<g>
<title>java/util/Objects.equals (6 samples, 0.04%)</title><rect x="100.4" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.4" y="798.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (6 samples, 0.04%)</title><rect x="100.4" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.4" y="782.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (6 samples, 0.04%)</title><rect x="100.4" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (10 samples, 0.06%)</title><rect x="101.0" y="835.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (12 samples, 0.07%)</title><rect x="101.8" y="867.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (225 samples, 1.37%)</title><rect x="102.8" y="883.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.8" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (218 samples, 1.33%)</title><rect x="103.2" y="867.0" width="15.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.2" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (154 samples, 0.94%)</title><rect x="104.2" y="851.0" width="11.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="107.2" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (6 samples, 0.04%)</title><rect x="104.9" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="107.9" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (5 samples, 0.03%)</title><rect x="106.2" y="835.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="109.2" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (4 samples, 0.02%)</title><rect x="106.2" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.2" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (29 samples, 0.18%)</title><rect x="107.0" y="835.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="110.0" y="846.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (6 samples, 0.04%)</title><rect x="108.1" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="111.1" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (9 samples, 0.05%)</title><rect x="109.3" y="835.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="112.3" y="846.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (5 samples, 0.03%)</title><rect x="110.0" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="113.0" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (6 samples, 0.04%)</title><rect x="110.6" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="113.6" y="846.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (4 samples, 0.02%)</title><rect x="111.0" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="114.0" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (34 samples, 0.21%)</title><rect x="111.4" y="835.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="114.4" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (21 samples, 0.13%)</title><rect x="111.9" y="819.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="114.9" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (14 samples, 0.09%)</title><rect x="112.0" y="803.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="115.0" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.03%)</title><rect x="112.6" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="115.6" y="798.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (6 samples, 0.04%)</title><rect x="113.4" y="819.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="116.4" y="830.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (20 samples, 0.12%)</title><rect x="113.9" y="835.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="116.9" y="846.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.03%)</title><rect x="114.4" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="117.4" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.05%)</title><rect x="114.7" y="819.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="117.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/1445633269.run (34 samples, 0.21%)</title><rect x="116.1" y="851.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (30 samples, 0.18%)</title><rect x="116.4" y="835.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.4" y="846.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (28 samples, 0.17%)</title><rect x="116.5" y="819.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.5" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (28 samples, 0.17%)</title><rect x="116.5" y="803.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.5" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (28 samples, 0.17%)</title><rect x="116.5" y="787.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.5" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (28 samples, 0.17%)</title><rect x="116.5" y="771.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.5" y="782.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (21 samples, 0.13%)</title><rect x="117.0" y="755.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (20 samples, 0.12%)</title><rect x="117.0" y="739.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (16 samples, 0.10%)</title><rect x="117.3" y="723.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (16 samples, 0.10%)</title><rect x="117.3" y="707.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.3" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.03%)</title><rect x="118.0" y="691.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="121.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (6 samples, 0.04%)</title><rect x="119.1" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.02%)</title><rect x="119.5" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.02%)</title><rect x="119.5" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (4 samples, 0.02%)</title><rect x="119.5" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (4 samples, 0.02%)</title><rect x="119.5" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.5" y="846.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (4 samples, 0.02%)</title><rect x="119.5" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.5" y="830.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (4 samples, 0.02%)</title><rect x="119.5" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (12 samples, 0.07%)</title><rect x="119.8" y="899.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.02%)</title><rect x="119.8" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (8 samples, 0.05%)</title><rect x="120.1" y="883.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (183 samples, 1.12%)</title><rect x="120.6" y="995.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.6" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (21 samples, 0.13%)</title><rect x="121.4" y="979.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="124.4" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (21 samples, 0.13%)</title><rect x="121.4" y="963.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="124.4" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (20 samples, 0.12%)</title><rect x="121.4" y="947.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="124.4" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (17 samples, 0.10%)</title><rect x="121.4" y="931.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="124.4" y="942.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (42 samples, 0.26%)</title><rect x="122.9" y="979.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.9" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (35 samples, 0.21%)</title><rect x="123.3" y="963.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="123.8" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="123.8" y="931.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.03%)</title><rect x="123.8" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (10 samples, 0.06%)</title><rect x="124.4" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (10 samples, 0.06%)</title><rect x="125.1" y="947.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.compareTo (5 samples, 0.03%)</title><rect x="125.5" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (5 samples, 0.03%)</title><rect x="125.5" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (110 samples, 0.67%)</title><rect x="125.9" y="979.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.9" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (110 samples, 0.67%)</title><rect x="125.9" y="963.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.9" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.06%)</title><rect x="126.3" y="947.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="129.3" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.06%)</title><rect x="126.3" y="931.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="129.3" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.04%)</title><rect x="126.5" y="915.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="129.5" y="926.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.04%)</title><rect x="126.5" y="899.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="129.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (93 samples, 0.57%)</title><rect x="127.0" y="947.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.0" y="958.0"></text>
</g>
<g>
<title>__GI___write (88 samples, 0.54%)</title><rect x="127.3" y="931.0" width="6.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="130.3" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (74 samples, 0.45%)</title><rect x="128.3" y="915.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="131.3" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 0.44%)</title><rect x="128.3" y="899.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="131.3" y="910.0"></text>
</g>
<g>
<title>sys_write (68 samples, 0.42%)</title><rect x="128.6" y="883.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="131.6" y="894.0"></text>
</g>
<g>
<title>vfs_write (64 samples, 0.39%)</title><rect x="128.9" y="867.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="131.9" y="878.0"></text>
</g>
<g>
<title>__vfs_write (57 samples, 0.35%)</title><rect x="128.9" y="851.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="131.9" y="862.0"></text>
</g>
<g>
<title>new_sync_write (56 samples, 0.34%)</title><rect x="128.9" y="835.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="131.9" y="846.0"></text>
</g>
<g>
<title>pipe_write (54 samples, 0.33%)</title><rect x="129.1" y="819.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="132.1" y="830.0"></text>
</g>
<g>
<title>__wake_up_sync_key (40 samples, 0.24%)</title><rect x="129.5" y="803.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="132.5" y="814.0"></text>
</g>
<g>
<title>__wake_up_common_lock (40 samples, 0.24%)</title><rect x="129.5" y="787.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="132.5" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (38 samples, 0.23%)</title><rect x="129.6" y="771.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="132.6" y="782.0"></text>
</g>
<g>
<title>copy_page_from_iter (4 samples, 0.02%)</title><rect x="132.4" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="135.4" y="814.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.03%)</title><rect x="133.2" y="851.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="136.2" y="862.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.02%)</title><rect x="133.2" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="136.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (40 samples, 0.24%)</title><rect x="133.8" y="995.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.8" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (31 samples, 0.19%)</title><rect x="134.3" y="979.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="137.3" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (31 samples, 0.19%)</title><rect x="134.3" y="963.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="137.3" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 0.16%)</title><rect x="134.5" y="947.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="137.5" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.15%)</title><rect x="134.8" y="931.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="137.8" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.14%)</title><rect x="134.8" y="915.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="137.8" y="926.0"></text>
</g>
<g>
<title>sys_futex (23 samples, 0.14%)</title><rect x="134.8" y="899.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="137.8" y="910.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.14%)</title><rect x="134.8" y="883.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="137.8" y="894.0"></text>
</g>
<g>
<title>futex_wake_op (22 samples, 0.13%)</title><rect x="134.8" y="867.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="137.8" y="878.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.10%)</title><rect x="135.1" y="851.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="138.1" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.10%)</title><rect x="135.1" y="835.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="138.1" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.10%)</title><rect x="135.1" y="819.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="138.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (52 samples, 0.32%)</title><rect x="136.7" y="995.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (42 samples, 0.26%)</title><rect x="137.2" y="979.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (4 samples, 0.02%)</title><rect x="137.4" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (35 samples, 0.21%)</title><rect x="137.7" y="963.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.7" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="138.4" y="947.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="141.4" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="138.4" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="141.4" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.02%)</title><rect x="138.4" y="915.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="141.4" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (4 samples, 0.02%)</title><rect x="138.4" y="899.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="141.4" y="910.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (21 samples, 0.13%)</title><rect x="138.7" y="947.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.7" y="958.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (5 samples, 0.03%)</title><rect x="138.7" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.7" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (16 samples, 0.10%)</title><rect x="139.1" y="931.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="142.1" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (16 samples, 0.10%)</title><rect x="139.1" y="915.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.1" y="926.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.03%)</title><rect x="139.2" y="899.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="142.2" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (6 samples, 0.04%)</title><rect x="139.5" y="899.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="142.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (43 samples, 0.26%)</title><rect x="140.4" y="995.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (43 samples, 0.26%)</title><rect x="140.4" y="979.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (34 samples, 0.21%)</title><rect x="141.1" y="963.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.1" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.now (25 samples, 0.15%)</title><rect x="141.1" y="947.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.1" y="958.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (25 samples, 0.15%)</title><rect x="141.1" y="931.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (20 samples, 0.12%)</title><rect x="141.5" y="915.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="144.5" y="926.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (16 samples, 0.10%)</title><rect x="141.7" y="899.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="144.7" y="910.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (6 samples, 0.04%)</title><rect x="142.5" y="883.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="145.5" y="894.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="142.5" y="867.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="145.5" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.plus (9 samples, 0.05%)</title><rect x="142.9" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.9" y="958.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (9 samples, 0.05%)</title><rect x="142.9" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.9" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.plus (9 samples, 0.05%)</title><rect x="142.9" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.9" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.plus (9 samples, 0.05%)</title><rect x="142.9" y="899.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.9" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (9 samples, 0.05%)</title><rect x="142.9" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.9" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.plus (9 samples, 0.05%)</title><rect x="142.9" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.9" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (9 samples, 0.05%)</title><rect x="142.9" y="851.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.9" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.create (9 samples, 0.05%)</title><rect x="142.9" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1330718565.get (9 samples, 0.05%)</title><rect x="143.7" y="1059.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (91 samples, 0.56%)</title><rect x="144.4" y="1091.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (91 samples, 0.56%)</title><rect x="144.4" y="1075.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (91 samples, 0.56%)</title><rect x="144.4" y="1059.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="147.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (77 samples, 0.47%)</title><rect x="145.4" y="1043.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.4" y="1054.0"></text>
</g>
<g>
<title>itable stub (20 samples, 0.12%)</title><rect x="146.7" y="1027.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="149.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6 samples, 0.04%)</title><rect x="148.2" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$217/397507893.run (7 samples, 0.04%)</title><rect x="148.6" y="1027.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.05%)</title><rect x="149.1" y="1027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/285921815.run (18 samples, 0.11%)</title><rect x="149.7" y="1027.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,352 samples, 14.36%)</title><rect x="151.0" y="1091.0" width="169.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.0" y="1102.0">java/util/concurrent/T..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (627 samples, 3.83%)</title><rect x="154.6" y="1075.0" width="45.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.6" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (4 samples, 0.02%)</title><rect x="155.4" y="1059.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.02%)</title><rect x="155.4" y="1043.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.02%)</title><rect x="155.4" y="1027.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.02%)</title><rect x="155.4" y="1011.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.02%)</title><rect x="155.4" y="995.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (526 samples, 3.21%)</title><rect x="155.6" y="1059.0" width="37.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.6" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (11 samples, 0.07%)</title><rect x="156.8" y="1043.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (11 samples, 0.07%)</title><rect x="156.8" y="1027.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.05%)</title><rect x="156.9" y="1011.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.07%)</title><rect x="157.6" y="1043.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.07%)</title><rect x="157.6" y="1027.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.07%)</title><rect x="157.6" y="1011.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (57 samples, 0.35%)</title><rect x="158.5" y="1043.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (57 samples, 0.35%)</title><rect x="158.5" y="1027.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (40 samples, 0.24%)</title><rect x="159.6" y="1011.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (40 samples, 0.24%)</title><rect x="159.6" y="995.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 0.22%)</title><rect x="159.9" y="979.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.9" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.04%)</title><rect x="160.0" y="963.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="163.0" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (29 samples, 0.18%)</title><rect x="160.4" y="963.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="163.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.15%)</title><rect x="160.8" y="947.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="163.8" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.15%)</title><rect x="160.8" y="931.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="163.8" y="942.0"></text>
</g>
<g>
<title>sys_futex (20 samples, 0.12%)</title><rect x="161.0" y="915.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="164.0" y="926.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.12%)</title><rect x="161.0" y="899.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="164.0" y="910.0"></text>
</g>
<g>
<title>futex_wake_op (18 samples, 0.11%)</title><rect x="161.1" y="883.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="164.1" y="894.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.09%)</title><rect x="161.3" y="867.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="164.3" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.09%)</title><rect x="161.4" y="851.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="164.4" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.09%)</title><rect x="161.4" y="835.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="164.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (424 samples, 2.59%)</title><rect x="162.6" y="1043.0" width="30.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.6" y="1054.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (422 samples, 2.58%)</title><rect x="162.8" y="1027.0" width="30.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.8" y="1038.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (397 samples, 2.42%)</title><rect x="164.0" y="1011.0" width="28.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="167.0" y="1022.0">Un..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (7 samples, 0.04%)</title><rect x="164.6" y="995.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="167.6" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (24 samples, 0.15%)</title><rect x="165.2" y="995.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="168.2" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (8 samples, 0.05%)</title><rect x="165.9" y="979.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="168.9" y="990.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (4 samples, 0.02%)</title><rect x="167.2" y="995.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="170.2" y="1006.0"></text>
</g>
<g>
<title>__lll_unlock_wake (98 samples, 0.60%)</title><rect x="167.5" y="995.0" width="7.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="170.5" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.27%)</title><rect x="171.3" y="979.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.3" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.25%)</title><rect x="171.3" y="963.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="174.3" y="974.0"></text>
</g>
<g>
<title>sys_futex (20 samples, 0.12%)</title><rect x="172.9" y="947.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="175.9" y="958.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.10%)</title><rect x="173.0" y="931.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="176.0" y="942.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.09%)</title><rect x="173.1" y="915.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="176.1" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_wait (209 samples, 1.28%)</title><rect x="174.5" y="995.0" width="15.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="177.5" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (159 samples, 0.97%)</title><rect x="178.1" y="979.0" width="11.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.1" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (158 samples, 0.96%)</title><rect x="178.1" y="963.0" width="11.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="181.1" y="974.0"></text>
</g>
<g>
<title>sys_futex (134 samples, 0.82%)</title><rect x="179.8" y="947.0" width="9.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="182.8" y="958.0"></text>
</g>
<g>
<title>do_futex (130 samples, 0.79%)</title><rect x="180.0" y="931.0" width="9.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.0" y="942.0"></text>
</g>
<g>
<title>futex_wait (119 samples, 0.73%)</title><rect x="180.5" y="915.0" width="8.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="183.5" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (88 samples, 0.54%)</title><rect x="180.9" y="899.0" width="6.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.9" y="910.0"></text>
</g>
<g>
<title>schedule (81 samples, 0.49%)</title><rect x="181.4" y="883.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="184.4" y="894.0"></text>
</g>
<g>
<title>__schedule (79 samples, 0.48%)</title><rect x="181.6" y="867.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="184.6" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (63 samples, 0.38%)</title><rect x="182.7" y="851.0" width="4.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="185.7" y="862.0"></text>
</g>
<g>
<title>futex_wait_setup (21 samples, 0.13%)</title><rect x="187.3" y="899.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="190.3" y="910.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.02%)</title><rect x="187.8" y="883.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="190.8" y="894.0"></text>
</g>
<g>
<title>get_futex_value_locked (10 samples, 0.06%)</title><rect x="188.1" y="883.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="191.1" y="894.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.02%)</title><rect x="189.1" y="915.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="192.1" y="926.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.03%)</title><rect x="189.6" y="995.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="192.6" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.03%)</title><rect x="190.2" y="995.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="193.2" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.02%)</title><rect x="190.8" y="995.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="193.8" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.03%)</title><rect x="191.3" y="995.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="194.3" y="1006.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (8 samples, 0.05%)</title><rect x="191.7" y="995.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="194.7" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (5 samples, 0.03%)</title><rect x="192.2" y="995.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="195.2" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.02%)</title><rect x="192.6" y="1011.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="195.6" y="1022.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.02%)</title><rect x="192.9" y="1011.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="195.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.03%)</title><rect x="193.2" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (80 samples, 0.49%)</title><rect x="193.7" y="1059.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (80 samples, 0.49%)</title><rect x="193.7" y="1043.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (80 samples, 0.49%)</title><rect x="193.7" y="1027.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (80 samples, 0.49%)</title><rect x="193.7" y="1011.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (65 samples, 0.40%)</title><rect x="194.8" y="995.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="197.8" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.07%)</title><rect x="195.1" y="979.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="198.1" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.02%)</title><rect x="195.3" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="198.3" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (49 samples, 0.30%)</title><rect x="196.0" y="979.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="199.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.24%)</title><rect x="196.6" y="963.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="199.6" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.24%)</title><rect x="196.6" y="947.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="199.6" y="958.0"></text>
</g>
<g>
<title>sys_futex (35 samples, 0.21%)</title><rect x="197.0" y="931.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="200.0" y="942.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.21%)</title><rect x="197.0" y="915.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="200.0" y="926.0"></text>
</g>
<g>
<title>futex_wake_op (31 samples, 0.19%)</title><rect x="197.2" y="899.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.2" y="910.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.02%)</title><rect x="197.5" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="200.5" y="894.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.14%)</title><rect x="197.8" y="883.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="200.8" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.14%)</title><rect x="197.8" y="867.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="200.8" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.14%)</title><rect x="197.8" y="851.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="200.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,674 samples, 10.22%)</title><rect x="199.7" y="1075.0" width="120.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.7" y="1086.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,114 samples, 6.80%)</title><rect x="202.2" y="1059.0" width="80.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.2" y="1070.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (9 samples, 0.05%)</title><rect x="203.8" y="1043.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (9 samples, 0.05%)</title><rect x="203.8" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.04%)</title><rect x="203.9" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (44 samples, 0.27%)</title><rect x="204.4" y="1043.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (44 samples, 0.27%)</title><rect x="204.4" y="1027.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (44 samples, 0.27%)</title><rect x="204.4" y="1011.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.02%)</title><rect x="207.3" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.3" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.02%)</title><rect x="207.3" y="979.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="210.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (263 samples, 1.61%)</title><rect x="207.6" y="1043.0" width="18.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (263 samples, 1.61%)</title><rect x="207.6" y="1027.0" width="18.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (237 samples, 1.45%)</title><rect x="208.9" y="1011.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="211.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (237 samples, 1.45%)</title><rect x="208.9" y="995.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (5 samples, 0.03%)</title><rect x="209.5" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (225 samples, 1.37%)</title><rect x="209.8" y="979.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.8" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (43 samples, 0.26%)</title><rect x="210.3" y="963.0" width="3.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="213.3" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (6 samples, 0.04%)</title><rect x="210.6" y="947.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="213.6" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.03%)</title><rect x="211.0" y="947.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="214.0" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.03%)</title><rect x="211.4" y="947.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="214.4" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (11 samples, 0.07%)</title><rect x="212.0" y="947.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="215.0" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (6 samples, 0.04%)</title><rect x="212.8" y="947.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="215.8" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (175 samples, 1.07%)</title><rect x="213.4" y="963.0" width="12.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="216.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (143 samples, 0.87%)</title><rect x="215.7" y="947.0" width="10.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="218.7" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (143 samples, 0.87%)</title><rect x="215.7" y="931.0" width="10.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="218.7" y="942.0"></text>
</g>
<g>
<title>sys_futex (131 samples, 0.80%)</title><rect x="216.6" y="915.0" width="9.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="219.6" y="926.0"></text>
</g>
<g>
<title>do_futex (124 samples, 0.76%)</title><rect x="217.0" y="899.0" width="8.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="220.0" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock (6 samples, 0.04%)</title><rect x="217.1" y="883.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="220.1" y="894.0"></text>
</g>
<g>
<title>futex_wake_op (113 samples, 0.69%)</title><rect x="217.5" y="883.0" width="8.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="220.5" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (10 samples, 0.06%)</title><rect x="219.0" y="867.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="222.0" y="878.0"></text>
</g>
<g>
<title>wake_up_q (82 samples, 0.50%)</title><rect x="219.8" y="867.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="222.8" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (79 samples, 0.48%)</title><rect x="220.0" y="851.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="223.0" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (79 samples, 0.48%)</title><rect x="220.0" y="835.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="223.0" y="846.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.02%)</title><rect x="225.7" y="883.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="228.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (6 samples, 0.04%)</title><rect x="226.0" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (773 samples, 4.72%)</title><rect x="226.7" y="1043.0" width="55.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="229.7" y="1054.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (769 samples, 4.69%)</title><rect x="227.0" y="1027.0" width="55.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.0" y="1038.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.03%)</title><rect x="228.4" y="1011.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="231.4" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (725 samples, 4.43%)</title><rect x="228.9" y="1011.0" width="52.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="231.9" y="1022.0">Unsaf..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (6 samples, 0.04%)</title><rect x="230.3" y="995.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="233.3" y="1006.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.02%)</title><rect x="230.8" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="233.8" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (53 samples, 0.32%)</title><rect x="231.1" y="995.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="234.1" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (15 samples, 0.09%)</title><rect x="232.9" y="979.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="235.9" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.05%)</title><rect x="234.0" y="979.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="237.0" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (10 samples, 0.06%)</title><rect x="235.2" y="995.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="238.2" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (5 samples, 0.03%)</title><rect x="235.9" y="995.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="238.9" y="1006.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (5 samples, 0.03%)</title><rect x="236.2" y="995.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="239.2" y="1006.0"></text>
</g>
<g>
<title>__lll_unlock_wake (155 samples, 0.95%)</title><rect x="236.6" y="995.0" width="11.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="239.6" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 0.51%)</title><rect x="241.7" y="979.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="244.7" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (78 samples, 0.48%)</title><rect x="241.7" y="963.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="244.7" y="974.0"></text>
</g>
<g>
<title>sys_futex (35 samples, 0.21%)</title><rect x="244.8" y="947.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="247.8" y="958.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.20%)</title><rect x="245.0" y="931.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="248.0" y="942.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.12%)</title><rect x="245.5" y="915.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="248.5" y="926.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.03%)</title><rect x="246.5" y="899.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="249.5" y="910.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.03%)</title><rect x="246.9" y="915.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="249.9" y="926.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.03%)</title><rect x="247.3" y="963.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="250.3" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_wait (413 samples, 2.52%)</title><rect x="247.8" y="995.0" width="29.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="250.8" y="1006.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (273 samples, 1.67%)</title><rect x="257.9" y="979.0" width="19.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="260.9" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (270 samples, 1.65%)</title><rect x="257.9" y="963.0" width="19.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="260.9" y="974.0"></text>
</g>
<g>
<title>sys_futex (245 samples, 1.50%)</title><rect x="259.7" y="947.0" width="17.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="262.7" y="958.0"></text>
</g>
<g>
<title>do_futex (232 samples, 1.42%)</title><rect x="260.4" y="931.0" width="16.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="263.4" y="942.0"></text>
</g>
<g>
<title>futex_wait (222 samples, 1.36%)</title><rect x="261.2" y="915.0" width="16.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.2" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (171 samples, 1.04%)</title><rect x="262.6" y="899.0" width="12.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.6" y="910.0"></text>
</g>
<g>
<title>plist_add (6 samples, 0.04%)</title><rect x="263.8" y="883.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.8" y="894.0"></text>
</g>
<g>
<title>schedule (145 samples, 0.89%)</title><rect x="264.5" y="883.0" width="10.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="267.5" y="894.0"></text>
</g>
<g>
<title>__schedule (141 samples, 0.86%)</title><rect x="264.8" y="867.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="267.8" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (130 samples, 0.79%)</title><rect x="265.6" y="851.0" width="9.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="268.6" y="862.0"></text>
</g>
<g>
<title>futex_wait_setup (27 samples, 0.16%)</title><rect x="274.9" y="899.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="277.9" y="910.0"></text>
</g>
<g>
<title>get_futex_key (8 samples, 0.05%)</title><rect x="275.8" y="883.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="278.8" y="894.0"></text>
</g>
<g>
<title>get_futex_value_locked (7 samples, 0.04%)</title><rect x="276.4" y="883.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="279.4" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (12 samples, 0.07%)</title><rect x="277.5" y="995.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="280.5" y="1006.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.02%)</title><rect x="278.4" y="995.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="281.4" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (7 samples, 0.04%)</title><rect x="278.8" y="995.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="281.8" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.05%)</title><rect x="279.3" y="995.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="282.3" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (7 samples, 0.04%)</title><rect x="280.2" y="995.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="283.2" y="1006.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (4 samples, 0.02%)</title><rect x="280.7" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="283.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (13 samples, 0.08%)</title><rect x="281.1" y="1011.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="284.1" y="1022.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.03%)</title><rect x="282.1" y="1011.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="285.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (59 samples, 0.36%)</title><rect x="282.6" y="1059.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (59 samples, 0.36%)</title><rect x="282.6" y="1043.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 0.04%)</title><rect x="282.6" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.02%)</title><rect x="282.8" y="1011.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (53 samples, 0.32%)</title><rect x="283.1" y="1027.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.02%)</title><rect x="283.4" y="1011.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (40 samples, 0.24%)</title><rect x="283.7" y="1011.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 0.24%)</title><rect x="283.7" y="995.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 0.24%)</title><rect x="283.7" y="979.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.7" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (38 samples, 0.23%)</title><rect x="283.9" y="963.0" width="2.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="286.9" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.02%)</title><rect x="283.9" y="947.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="286.9" y="958.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.05%)</title><rect x="284.3" y="947.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="287.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="284.6" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="287.6" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="284.6" y="915.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="287.6" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_wait (23 samples, 0.14%)</title><rect x="284.9" y="947.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="287.9" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.09%)</title><rect x="285.4" y="931.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="288.4" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.09%)</title><rect x="285.4" y="915.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="288.4" y="926.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.09%)</title><rect x="285.4" y="899.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="288.4" y="910.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.09%)</title><rect x="285.4" y="883.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="288.4" y="894.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.09%)</title><rect x="285.4" y="867.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="288.4" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.07%)</title><rect x="285.5" y="851.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="288.5" y="862.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.06%)</title><rect x="285.6" y="835.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="288.6" y="846.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.05%)</title><rect x="285.7" y="819.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="288.7" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.05%)</title><rect x="285.7" y="803.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="288.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (463 samples, 2.83%)</title><rect x="286.9" y="1059.0" width="33.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.9" y="1070.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (463 samples, 2.83%)</title><rect x="286.9" y="1043.0" width="33.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.9" y="1054.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (463 samples, 2.83%)</title><rect x="286.9" y="1027.0" width="33.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.9" y="1038.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (463 samples, 2.83%)</title><rect x="286.9" y="1011.0" width="33.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.9" y="1022.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (376 samples, 2.30%)</title><rect x="293.2" y="995.0" width="27.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.2" y="1006.0">j..</text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (5 samples, 0.03%)</title><rect x="293.7" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="296.7" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (77 samples, 0.47%)</title><rect x="294.0" y="979.0" width="5.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="297.0" y="990.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.04%)</title><rect x="294.5" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="297.5" y="974.0"></text>
</g>
<g>
<title>Parker::unpark() (4 samples, 0.02%)</title><rect x="295.0" y="963.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="298.0" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.03%)</title><rect x="295.7" y="963.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="298.7" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (18 samples, 0.11%)</title><rect x="296.0" y="963.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="299.0" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (10 samples, 0.06%)</title><rect x="297.7" y="963.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="300.7" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (4 samples, 0.02%)</title><rect x="298.5" y="963.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="301.5" y="974.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (10 samples, 0.06%)</title><rect x="298.8" y="963.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="301.8" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (283 samples, 1.73%)</title><rect x="299.6" y="979.0" width="20.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="302.6" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (243 samples, 1.48%)</title><rect x="302.4" y="963.0" width="17.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="305.4" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (241 samples, 1.47%)</title><rect x="302.4" y="947.0" width="17.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="305.4" y="958.0"></text>
</g>
<g>
<title>sys_futex (215 samples, 1.31%)</title><rect x="304.3" y="931.0" width="15.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="307.3" y="942.0"></text>
</g>
<g>
<title>do_futex (210 samples, 1.28%)</title><rect x="304.5" y="915.0" width="15.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="307.5" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock (8 samples, 0.05%)</title><rect x="304.5" y="899.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="307.5" y="910.0"></text>
</g>
<g>
<title>futex_wake_op (197 samples, 1.20%)</title><rect x="305.1" y="899.0" width="14.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="308.1" y="910.0"></text>
</g>
<g>
<title>get_futex_key (9 samples, 0.05%)</title><rect x="306.7" y="883.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="309.7" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.04%)</title><rect x="307.6" y="883.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="310.6" y="894.0"></text>
</g>
<g>
<title>wake_up_q (155 samples, 0.95%)</title><rect x="308.1" y="883.0" width="11.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="311.1" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (155 samples, 0.95%)</title><rect x="308.1" y="867.0" width="11.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="311.1" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (153 samples, 0.93%)</title><rect x="308.3" y="851.0" width="11.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="311.3" y="862.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.02%)</title><rect x="319.4" y="899.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="322.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$217/397507893.run (1,492 samples, 9.11%)</title><rect x="320.4" y="1091.0" width="107.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.4" y="1102.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,492 samples, 9.11%)</title><rect x="320.4" y="1075.0" width="107.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="323.4" y="1086.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,487 samples, 9.08%)</title><rect x="320.6" y="1059.0" width="107.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.6" y="1070.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,460 samples, 8.91%)</title><rect x="322.4" y="1043.0" width="105.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.4" y="1054.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,460 samples, 8.91%)</title><rect x="322.4" y="1027.0" width="105.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.4" y="1038.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,453 samples, 8.87%)</title><rect x="322.9" y="1011.0" width="104.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.9" y="1022.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,452 samples, 8.86%)</title><rect x="322.9" y="995.0" width="104.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.9" y="1006.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,450 samples, 8.85%)</title><rect x="323.0" y="979.0" width="104.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.0" y="990.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,444 samples, 8.81%)</title><rect x="323.5" y="963.0" width="104.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.5" y="974.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (4 samples, 0.02%)</title><rect x="323.8" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.02%)</title><rect x="323.8" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.02%)</title><rect x="323.8" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.02%)</title><rect x="323.8" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.02%)</title><rect x="323.8" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="323.8" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.02%)</title><rect x="323.8" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,436 samples, 8.77%)</title><rect x="324.1" y="947.0" width="103.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.1" y="958.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (4 samples, 0.02%)</title><rect x="324.2" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,430 samples, 8.73%)</title><rect x="324.5" y="931.0" width="103.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.5" y="942.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (221 samples, 1.35%)</title><rect x="325.1" y="915.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (195 samples, 1.19%)</title><rect x="325.5" y="899.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (180 samples, 1.10%)</title><rect x="326.6" y="883.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.6" y="894.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="326.6" y="867.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="329.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (174 samples, 1.06%)</title><rect x="326.9" y="867.0" width="12.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (169 samples, 1.03%)</title><rect x="327.3" y="851.0" width="12.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.3" y="862.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="328.4" y="835.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="331.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (58 samples, 0.35%)</title><rect x="328.7" y="835.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.07%)</title><rect x="329.1" y="819.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.1" y="830.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.05%)</title><rect x="329.2" y="803.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="332.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/1957589676.apply (19 samples, 0.12%)</title><rect x="330.2" y="819.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (19 samples, 0.12%)</title><rect x="330.2" y="803.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (19 samples, 0.12%)</title><rect x="330.2" y="787.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (8 samples, 0.05%)</title><rect x="330.8" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (8 samples, 0.05%)</title><rect x="330.8" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8 samples, 0.05%)</title><rect x="330.8" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/887261302.apply (17 samples, 0.10%)</title><rect x="331.6" y="819.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (17 samples, 0.10%)</title><rect x="331.6" y="803.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (16 samples, 0.10%)</title><rect x="331.7" y="787.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (16 samples, 0.10%)</title><rect x="331.7" y="771.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="334.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (16 samples, 0.10%)</title><rect x="331.7" y="755.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.09%)</title><rect x="331.8" y="739.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$246/118115321.run (14 samples, 0.09%)</title><rect x="331.8" y="723.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (14 samples, 0.09%)</title><rect x="331.8" y="707.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="334.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.04%)</title><rect x="331.8" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.04%)</title><rect x="331.8" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.04%)</title><rect x="331.8" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="334.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.04%)</title><rect x="331.8" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.04%)</title><rect x="331.8" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.04%)</title><rect x="331.8" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (6 samples, 0.04%)</title><rect x="331.8" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.04%)</title><rect x="331.8" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (6 samples, 0.04%)</title><rect x="331.8" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6 samples, 0.04%)</title><rect x="331.8" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (6 samples, 0.04%)</title><rect x="331.8" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (6 samples, 0.04%)</title><rect x="331.8" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (6 samples, 0.04%)</title><rect x="331.8" y="499.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (6 samples, 0.04%)</title><rect x="331.8" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/684996081.run (6 samples, 0.04%)</title><rect x="331.8" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (6 samples, 0.04%)</title><rect x="331.8" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (6 samples, 0.04%)</title><rect x="331.8" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (6 samples, 0.04%)</title><rect x="331.8" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (6 samples, 0.04%)</title><rect x="331.8" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (8 samples, 0.05%)</title><rect x="332.3" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (8 samples, 0.05%)</title><rect x="332.3" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.05%)</title><rect x="332.3" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.05%)</title><rect x="332.3" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.05%)</title><rect x="332.3" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.05%)</title><rect x="332.3" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (5 samples, 0.03%)</title><rect x="332.5" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (5 samples, 0.03%)</title><rect x="332.5" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (4 samples, 0.02%)</title><rect x="332.6" y="563.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.6" y="574.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (4 samples, 0.02%)</title><rect x="332.6" y="547.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.6" y="558.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4 samples, 0.02%)</title><rect x="332.6" y="531.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="335.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.02%)</title><rect x="332.6" y="515.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.02%)</title><rect x="332.6" y="499.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.02%)</title><rect x="332.6" y="483.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.6" y="494.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (4 samples, 0.02%)</title><rect x="332.6" y="467.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="335.6" y="478.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (4 samples, 0.02%)</title><rect x="332.6" y="451.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="335.6" y="462.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (4 samples, 0.02%)</title><rect x="332.6" y="435.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="335.6" y="446.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (4 samples, 0.02%)</title><rect x="332.6" y="419.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="335.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (75 samples, 0.46%)</title><rect x="332.8" y="835.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (68 samples, 0.42%)</title><rect x="333.3" y="819.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (16 samples, 0.10%)</title><rect x="333.3" y="803.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.3" y="814.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="333.3" y="787.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="336.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.04%)</title><rect x="333.7" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/1165932755.apply (4 samples, 0.02%)</title><rect x="334.1" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/1165932755.apply (50 samples, 0.31%)</title><rect x="334.5" y="803.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.02%)</title><rect x="334.5" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (46 samples, 0.28%)</title><rect x="334.8" y="787.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (46 samples, 0.28%)</title><rect x="334.8" y="771.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$130/1695009006.apply (35 samples, 0.21%)</title><rect x="334.8" y="755.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (35 samples, 0.21%)</title><rect x="334.8" y="739.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.07%)</title><rect x="335.0" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.05%)</title><rect x="335.1" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="335.5" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="335.5" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (18 samples, 0.11%)</title><rect x="336.0" y="723.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="339.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (16 samples, 0.10%)</title><rect x="336.0" y="707.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (16 samples, 0.10%)</title><rect x="336.0" y="691.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="339.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (11 samples, 0.07%)</title><rect x="336.0" y="675.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="339.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (11 samples, 0.07%)</title><rect x="336.0" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (11 samples, 0.07%)</title><rect x="336.0" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="339.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (11 samples, 0.07%)</title><rect x="336.0" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (11 samples, 0.07%)</title><rect x="336.0" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.03%)</title><rect x="336.8" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.03%)</title><rect x="336.8" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/1631076502.apply (11 samples, 0.07%)</title><rect x="337.3" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (11 samples, 0.07%)</title><rect x="337.3" y="739.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (11 samples, 0.07%)</title><rect x="337.3" y="723.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6 samples, 0.04%)</title><rect x="337.7" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.04%)</title><rect x="337.7" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (6 samples, 0.04%)</title><rect x="337.7" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (6 samples, 0.04%)</title><rect x="337.7" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1297665885.get (8 samples, 0.05%)</title><rect x="338.6" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.6" y="846.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.02%)</title><rect x="339.2" y="835.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="342.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (19 samples, 0.12%)</title><rect x="339.5" y="899.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (12 samples, 0.07%)</title><rect x="340.0" y="883.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (11 samples, 0.07%)</title><rect x="340.1" y="867.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (8 samples, 0.05%)</title><rect x="341.1" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (8 samples, 0.05%)</title><rect x="341.1" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (8 samples, 0.05%)</title><rect x="341.1" y="883.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,191 samples, 7.27%)</title><rect x="341.7" y="915.0" width="85.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.7" y="926.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,191 samples, 7.27%)</title><rect x="341.7" y="899.0" width="85.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.7" y="910.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,191 samples, 7.27%)</title><rect x="341.7" y="883.0" width="85.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.7" y="894.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,183 samples, 7.22%)</title><rect x="342.3" y="867.0" width="85.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.3" y="878.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$222/889121453.run (14 samples, 0.09%)</title><rect x="342.3" y="851.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (14 samples, 0.09%)</title><rect x="342.3" y="835.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="345.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (5 samples, 0.03%)</title><rect x="343.0" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,167 samples, 7.12%)</title><rect x="343.4" y="851.0" width="84.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.4" y="862.0">jdk/intern..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1,153 samples, 7.04%)</title><rect x="343.4" y="835.0" width="83.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.4" y="846.0">java/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1,153 samples, 7.04%)</title><rect x="343.4" y="819.0" width="83.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="346.4" y="830.0">sun/nio/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.04%)</title><rect x="343.4" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="346.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.04%)</title><rect x="343.4" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="346.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.04%)</title><rect x="343.4" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.04%)</title><rect x="343.4" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="346.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,147 samples, 7.00%)</title><rect x="343.8" y="803.0" width="82.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="346.8" y="814.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,141 samples, 6.96%)</title><rect x="344.2" y="787.0" width="82.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.2" y="798.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (15 samples, 0.09%)</title><rect x="344.4" y="771.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.4" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (15 samples, 0.09%)</title><rect x="344.4" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (15 samples, 0.09%)</title><rect x="344.4" y="739.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1,093 samples, 6.67%)</title><rect x="345.5" y="771.0" width="78.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.5" y="782.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1,089 samples, 6.65%)</title><rect x="345.8" y="755.0" width="78.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.8" y="766.0">sun/nio/c..</text>
</g>
<g>
<title>__GI_writev (1,073 samples, 6.55%)</title><rect x="346.4" y="739.0" width="77.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="349.4" y="750.0">__GI_writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,042 samples, 6.36%)</title><rect x="348.6" y="723.0" width="75.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="351.6" y="734.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (1,040 samples, 6.35%)</title><rect x="348.6" y="707.0" width="74.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="351.6" y="718.0">do_sysca..</text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.04%)</title><rect x="349.3" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.3" y="702.0"></text>
</g>
<g>
<title>sys_writev (1,024 samples, 6.25%)</title><rect x="349.8" y="691.0" width="73.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="352.8" y="702.0">sys_writev</text>
</g>
<g>
<title>do_writev (1,023 samples, 6.24%)</title><rect x="349.8" y="675.0" width="73.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="352.8" y="686.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (9 samples, 0.05%)</title><rect x="350.1" y="659.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.05%)</title><rect x="350.1" y="643.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.1" y="654.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.05%)</title><rect x="350.1" y="627.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="353.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="350.7" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="353.7" y="670.0"></text>
</g>
<g>
<title>vfs_writev (1,005 samples, 6.13%)</title><rect x="351.1" y="659.0" width="72.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.1" y="670.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (989 samples, 6.04%)</title><rect x="351.6" y="643.0" width="71.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="354.6" y="654.0">do_iter_..</text>
</g>
<g>
<title>do_iter_readv_writev (970 samples, 5.92%)</title><rect x="352.3" y="627.0" width="69.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="355.3" y="638.0">do_iter..</text>
</g>
<g>
<title>sock_write_iter (961 samples, 5.87%)</title><rect x="352.9" y="611.0" width="69.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="355.9" y="622.0">sock_wr..</text>
</g>
<g>
<title>sock_sendmsg (960 samples, 5.86%)</title><rect x="353.0" y="595.0" width="69.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.0" y="606.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (952 samples, 5.81%)</title><rect x="353.1" y="579.0" width="68.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="356.1" y="590.0">inet_se..</text>
</g>
<g>
<title>tcp_sendmsg (949 samples, 5.79%)</title><rect x="353.3" y="563.0" width="68.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="356.3" y="574.0">tcp_sen..</text>
</g>
<g>
<title>tcp_sendmsg_locked (935 samples, 5.71%)</title><rect x="354.0" y="547.0" width="67.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="357.0" y="558.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (8 samples, 0.05%)</title><rect x="355.0" y="531.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="358.0" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.04%)</title><rect x="355.2" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="358.2" y="526.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.02%)</title><rect x="355.7" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="358.7" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (47 samples, 0.29%)</title><rect x="356.0" y="531.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="359.0" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (42 samples, 0.26%)</title><rect x="356.2" y="515.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="359.2" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (21 samples, 0.13%)</title><rect x="356.8" y="499.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="359.8" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (16 samples, 0.10%)</title><rect x="356.8" y="483.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="359.8" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (10 samples, 0.06%)</title><rect x="357.3" y="467.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="360.3" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (11 samples, 0.07%)</title><rect x="358.3" y="499.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="361.3" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.03%)</title><rect x="358.8" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="361.8" y="494.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.03%)</title><rect x="359.3" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="362.3" y="542.0"></text>
</g>
<g>
<title>tcp_push (837 samples, 5.11%)</title><rect x="359.8" y="531.0" width="60.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="362.8" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (837 samples, 5.11%)</title><rect x="359.8" y="515.0" width="60.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="362.8" y="526.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (832 samples, 5.08%)</title><rect x="360.1" y="499.0" width="60.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="363.1" y="510.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (799 samples, 4.88%)</title><rect x="360.9" y="483.0" width="57.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="363.9" y="494.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (773 samples, 4.72%)</title><rect x="362.2" y="467.0" width="55.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="365.2" y="478.0">ip_qu..</text>
</g>
<g>
<title>ip_local_out (760 samples, 4.64%)</title><rect x="362.9" y="451.0" width="54.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="365.9" y="462.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (137 samples, 0.84%)</title><rect x="362.9" y="435.0" width="9.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="365.9" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (5 samples, 0.03%)</title><rect x="363.0" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="366.0" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.02%)</title><rect x="363.5" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="366.5" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (4 samples, 0.02%)</title><rect x="363.8" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="366.8" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (120 samples, 0.73%)</title><rect x="364.1" y="419.0" width="8.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="367.1" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.05%)</title><rect x="364.2" y="403.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="367.2" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.05%)</title><rect x="364.2" y="387.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="367.2" y="398.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (14 samples, 0.09%)</title><rect x="364.9" y="403.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="367.9" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (12 samples, 0.07%)</title><rect x="365.0" y="387.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="368.0" y="398.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (5 samples, 0.03%)</title><rect x="365.9" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="368.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (5 samples, 0.03%)</title><rect x="365.9" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="368.9" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.02%)</title><rect x="366.0" y="371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="369.0" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (87 samples, 0.53%)</title><rect x="366.3" y="403.0" width="6.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="369.3" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (78 samples, 0.48%)</title><rect x="366.5" y="387.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="369.5" y="398.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (18 samples, 0.11%)</title><rect x="367.4" y="371.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="370.4" y="382.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (6 samples, 0.04%)</title><rect x="368.7" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="371.7" y="382.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (4 samples, 0.02%)</title><rect x="369.4" y="371.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="372.4" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (26 samples, 0.16%)</title><rect x="370.3" y="371.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="373.3" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (12 samples, 0.07%)</title><rect x="371.3" y="355.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="374.3" y="366.0"></text>
</g>
<g>
<title>ip_output (618 samples, 3.77%)</title><rect x="372.7" y="435.0" width="44.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="375.7" y="446.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (598 samples, 3.65%)</title><rect x="372.9" y="419.0" width="43.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="375.9" y="430.0">ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (593 samples, 3.62%)</title><rect x="373.2" y="403.0" width="42.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="376.2" y="414.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (529 samples, 3.23%)</title><rect x="374.5" y="387.0" width="38.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="377.5" y="398.0">__l..</text>
</g>
<g>
<title>do_softirq.part.17 (526 samples, 3.21%)</title><rect x="374.8" y="371.0" width="37.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="377.8" y="382.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (526 samples, 3.21%)</title><rect x="374.8" y="355.0" width="37.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="377.8" y="366.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (524 samples, 3.20%)</title><rect x="374.8" y="339.0" width="37.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="377.8" y="350.0">__s..</text>
</g>
<g>
<title>net_rx_action (507 samples, 3.09%)</title><rect x="375.5" y="323.0" width="36.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="378.5" y="334.0">net..</text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.03%)</title><rect x="375.8" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="378.8" y="318.0"></text>
</g>
<g>
<title>process_backlog (496 samples, 3.03%)</title><rect x="376.3" y="307.0" width="35.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="379.3" y="318.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (493 samples, 3.01%)</title><rect x="376.4" y="291.0" width="35.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.4" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (489 samples, 2.98%)</title><rect x="376.6" y="275.0" width="35.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.6" y="286.0">__n..</text>
</g>
<g>
<title>ip_rcv (473 samples, 2.89%)</title><rect x="377.2" y="259.0" width="34.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="380.2" y="270.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (439 samples, 2.68%)</title><rect x="377.9" y="243.0" width="31.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="380.9" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (433 samples, 2.64%)</title><rect x="378.2" y="227.0" width="31.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="381.2" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (413 samples, 2.52%)</title><rect x="378.3" y="211.0" width="29.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="381.3" y="222.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (405 samples, 2.47%)</title><rect x="378.9" y="195.0" width="29.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="381.9" y="206.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (19 samples, 0.12%)</title><rect x="379.7" y="179.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.7" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.05%)</title><rect x="381.2" y="179.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="384.2" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (4 samples, 0.02%)</title><rect x="381.2" y="163.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="384.2" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.02%)</title><rect x="381.5" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="384.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (361 samples, 2.20%)</title><rect x="382.0" y="179.0" width="26.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.0" y="190.0">t..</text>
</g>
<g>
<title>tcp_check_space (7 samples, 0.04%)</title><rect x="382.2" y="163.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="385.2" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.03%)</title><rect x="382.7" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="385.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (346 samples, 2.11%)</title><rect x="383.0" y="163.0" width="25.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="386.0" y="174.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (13 samples, 0.08%)</title><rect x="383.5" y="147.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="386.5" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (12 samples, 0.07%)</title><rect x="383.6" y="131.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="386.6" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.07%)</title><rect x="383.7" y="115.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="386.7" y="126.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.07%)</title><rect x="383.7" y="99.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.7" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="383.8" y="83.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="386.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack (99 samples, 0.60%)</title><rect x="385.1" y="147.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="388.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (60 samples, 0.37%)</title><rect x="387.5" y="131.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="390.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (32 samples, 0.20%)</title><rect x="388.4" y="115.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="391.4" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.05%)</title><rect x="388.4" y="99.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="391.4" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (8 samples, 0.05%)</title><rect x="388.4" y="83.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="391.4" y="94.0"></text>
</g>
<g>
<title>skb_release_all (22 samples, 0.13%)</title><rect x="389.0" y="99.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="392.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (22 samples, 0.13%)</title><rect x="389.0" y="83.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="392.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (11 samples, 0.07%)</title><rect x="389.8" y="67.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="392.8" y="78.0"></text>
</g>
<g>
<title>kfree (11 samples, 0.07%)</title><rect x="389.8" y="51.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="392.8" y="62.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.02%)</title><rect x="390.3" y="35.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="393.3" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (10 samples, 0.06%)</title><rect x="391.0" y="115.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="394.0" y="126.0"></text>
</g>
<g>
<title>minmax_running_min (6 samples, 0.04%)</title><rect x="391.3" y="99.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="394.3" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (212 samples, 1.29%)</title><rect x="392.2" y="147.0" width="15.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="395.2" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (187 samples, 1.14%)</title><rect x="392.9" y="131.0" width="13.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="395.9" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (184 samples, 1.12%)</title><rect x="393.1" y="115.0" width="13.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="396.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (184 samples, 1.12%)</title><rect x="393.1" y="99.0" width="13.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="396.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (182 samples, 1.11%)</title><rect x="393.3" y="83.0" width="13.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="396.3" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (7 samples, 0.04%)</title><rect x="406.4" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.4" y="142.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.24 (4 samples, 0.02%)</title><rect x="406.9" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="409.9" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.02%)</title><rect x="407.2" y="131.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="410.2" y="142.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (4 samples, 0.02%)</title><rect x="408.0" y="211.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="411.0" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.07%)</title><rect x="408.4" y="211.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="411.4" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (11 samples, 0.07%)</title><rect x="408.4" y="195.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="411.4" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (11 samples, 0.07%)</title><rect x="408.4" y="179.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="411.4" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (4 samples, 0.02%)</title><rect x="409.6" y="243.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="412.6" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.02%)</title><rect x="409.9" y="243.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="412.9" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.08%)</title><rect x="410.3" y="243.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="413.3" y="254.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (4 samples, 0.02%)</title><rect x="410.4" y="227.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="413.4" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.02%)</title><rect x="410.4" y="211.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="413.4" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="411.4" y="259.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.4" y="270.0"></text>
</g>
<g>
<title>rcu_bh_qs (4 samples, 0.02%)</title><rect x="412.2" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="415.2" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (46 samples, 0.28%)</title><rect x="412.6" y="387.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="415.6" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (45 samples, 0.27%)</title><rect x="412.6" y="371.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="415.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (27 samples, 0.16%)</title><rect x="413.4" y="355.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="416.4" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (19 samples, 0.12%)</title><rect x="413.7" y="339.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.02%)</title><rect x="414.2" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="417.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.02%)</title><rect x="414.2" y="307.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="417.2" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.02%)</title><rect x="414.2" y="291.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="417.2" y="302.0"></text>
</g>
<g>
<title>sk_free (5 samples, 0.03%)</title><rect x="414.6" y="323.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="417.6" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.02%)</title><rect x="415.6" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="418.6" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="416.5" y="419.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="419.5" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="417.3" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="420.3" y="446.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.03%)</title><rect x="417.9" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="420.9" y="478.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.02%)</title><rect x="418.0" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="421.0" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.07%)</title><rect x="418.6" y="483.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="421.6" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.04%)</title><rect x="418.9" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="421.9" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (7 samples, 0.04%)</title><rect x="418.9" y="451.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="421.9" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.04%)</title><rect x="418.9" y="435.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.9" y="446.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.04%)</title><rect x="418.9" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="421.9" y="430.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="419.0" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="422.0" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (17 samples, 0.10%)</title><rect x="420.1" y="531.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="423.1" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.02%)</title><rect x="420.1" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="423.1" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (12 samples, 0.07%)</title><rect x="420.4" y="515.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="423.4" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (5 samples, 0.03%)</title><rect x="420.9" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="423.9" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.04%)</title><rect x="421.7" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="424.7" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.04%)</title><rect x="421.7" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="424.7" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.03%)</title><rect x="421.7" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="424.7" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.05%)</title><rect x="422.2" y="627.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="425.2" y="638.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.05%)</title><rect x="422.3" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="425.3" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.05%)</title><rect x="422.3" y="595.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="425.3" y="606.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.05%)</title><rect x="422.3" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="425.3" y="590.0"></text>
</g>
<g>
<title>import_iovec (7 samples, 0.04%)</title><rect x="422.9" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.9" y="654.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (4 samples, 0.02%)</title><rect x="423.1" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="426.1" y="638.0"></text>
</g>
<g>
<title>fdval (6 samples, 0.04%)</title><rect x="423.7" y="739.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="426.7" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (30 samples, 0.18%)</title><rect x="424.2" y="771.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.2" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (30 samples, 0.18%)</title><rect x="424.2" y="755.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (30 samples, 0.18%)</title><rect x="424.2" y="739.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.2" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (13 samples, 0.08%)</title><rect x="426.4" y="835.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,313 samples, 14.12%)</title><rect x="427.8" y="1091.0" width="166.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.8" y="1102.0">jdk/internal/net/http..</text>
</g>
<g>
<title>itable stub (10 samples, 0.06%)</title><rect x="427.8" y="1075.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="430.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,303 samples, 14.06%)</title><rect x="428.6" y="1075.0" width="165.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.6" y="1086.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,074 samples, 6.56%)</title><rect x="429.0" y="1059.0" width="77.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.0" y="1070.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (1,070 samples, 6.53%)</title><rect x="429.3" y="1043.0" width="77.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.3" y="1054.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,064 samples, 6.49%)</title><rect x="429.7" y="1027.0" width="76.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.7" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.remove (5 samples, 0.03%)</title><rect x="429.8" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.removeFirst (5 samples, 0.03%)</title><rect x="429.8" y="995.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (185 samples, 1.13%)</title><rect x="430.4" y="1011.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (185 samples, 1.13%)</title><rect x="430.4" y="995.0" width="13.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (180 samples, 1.10%)</title><rect x="430.7" y="979.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (180 samples, 1.10%)</title><rect x="430.7" y="963.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (174 samples, 1.06%)</title><rect x="431.2" y="947.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (174 samples, 1.06%)</title><rect x="431.2" y="931.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="434.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (173 samples, 1.06%)</title><rect x="431.2" y="915.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (169 samples, 1.03%)</title><rect x="431.5" y="899.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.5" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (19 samples, 0.12%)</title><rect x="431.7" y="883.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="434.7" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (18 samples, 0.11%)</title><rect x="431.7" y="867.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="434.7" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.07%)</title><rect x="432.1" y="851.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="435.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.06%)</title><rect x="432.2" y="835.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="435.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="432.2" y="819.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="435.2" y="830.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.05%)</title><rect x="432.3" y="803.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="435.3" y="814.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.05%)</title><rect x="432.3" y="787.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="435.3" y="798.0"></text>
</g>
<g>
<title>futex_wake_op (8 samples, 0.05%)</title><rect x="432.3" y="771.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="435.3" y="782.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.04%)</title><rect x="432.5" y="755.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="435.5" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.04%)</title><rect x="432.5" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="435.5" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="432.5" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="435.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (148 samples, 0.90%)</title><rect x="433.0" y="883.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.0" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.07%)</title><rect x="433.5" y="867.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="436.5" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.06%)</title><rect x="433.6" y="851.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="436.6" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (9 samples, 0.05%)</title><rect x="433.6" y="835.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="436.6" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (7 samples, 0.04%)</title><rect x="433.7" y="819.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="436.7" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="434.3" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="437.3" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="434.3" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="437.3" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="434.3" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.3" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="434.3" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.3" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (4 samples, 0.02%)</title><rect x="434.3" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (126 samples, 0.77%)</title><rect x="434.6" y="867.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="437.6" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="435.3" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="438.3" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.03%)</title><rect x="435.3" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="438.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (110 samples, 0.67%)</title><rect x="435.6" y="851.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="438.6" y="862.0"></text>
</g>
<g>
<title>__GI___write (107 samples, 0.65%)</title><rect x="435.8" y="835.0" width="7.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="438.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 0.53%)</title><rect x="437.2" y="819.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="440.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (84 samples, 0.51%)</title><rect x="437.2" y="803.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="440.2" y="814.0"></text>
</g>
<g>
<title>sys_write (72 samples, 0.44%)</title><rect x="438.1" y="787.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="441.1" y="798.0"></text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.04%)</title><rect x="438.1" y="771.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.1" y="782.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.04%)</title><rect x="438.1" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="441.1" y="766.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.03%)</title><rect x="438.1" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="441.1" y="750.0"></text>
</g>
<g>
<title>vfs_write (63 samples, 0.38%)</title><rect x="438.7" y="771.0" width="4.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="441.7" y="782.0"></text>
</g>
<g>
<title>__vfs_write (53 samples, 0.32%)</title><rect x="439.1" y="755.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="442.1" y="766.0"></text>
</g>
<g>
<title>new_sync_write (51 samples, 0.31%)</title><rect x="439.1" y="739.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.1" y="750.0"></text>
</g>
<g>
<title>pipe_write (48 samples, 0.29%)</title><rect x="439.3" y="723.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="442.3" y="734.0"></text>
</g>
<g>
<title>__wake_up_sync_key (36 samples, 0.22%)</title><rect x="439.5" y="707.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="442.5" y="718.0"></text>
</g>
<g>
<title>__wake_up_common_lock (36 samples, 0.22%)</title><rect x="439.5" y="691.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="442.5" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (36 samples, 0.22%)</title><rect x="439.5" y="675.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="442.5" y="686.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.02%)</title><rect x="443.0" y="755.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="446.0" y="766.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.02%)</title><rect x="443.0" y="739.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="446.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.03%)</title><rect x="443.7" y="1011.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (4 samples, 0.02%)</title><rect x="443.8" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (4 samples, 0.02%)</title><rect x="443.8" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="443.8" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="443.8" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (863 samples, 5.27%)</title><rect x="444.2" y="1011.0" width="62.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.2" y="1022.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (861 samples, 5.26%)</title><rect x="444.3" y="995.0" width="62.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="447.3" y="1006.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (861 samples, 5.26%)</title><rect x="444.3" y="979.0" width="62.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.3" y="990.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (861 samples, 5.26%)</title><rect x="444.3" y="963.0" width="62.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.3" y="974.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (463 samples, 2.83%)</title><rect x="445.6" y="947.0" width="33.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.6" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (463 samples, 2.83%)</title><rect x="445.6" y="931.0" width="33.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.6" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (463 samples, 2.83%)</title><rect x="445.6" y="915.0" width="33.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.6" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (457 samples, 2.79%)</title><rect x="446.1" y="899.0" width="32.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="449.1" y="910.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (452 samples, 2.76%)</title><rect x="446.4" y="883.0" width="32.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.4" y="894.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (451 samples, 2.75%)</title><rect x="446.5" y="867.0" width="32.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.5" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (448 samples, 2.73%)</title><rect x="446.7" y="851.0" width="32.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.7" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 0.07%)</title><rect x="446.7" y="835.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (412 samples, 2.51%)</title><rect x="447.5" y="835.0" width="29.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.5" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (412 samples, 2.51%)</title><rect x="447.5" y="819.0" width="29.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.5" y="830.0">ja..</text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="447.8" y="803.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="450.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (314 samples, 1.92%)</title><rect x="448.1" y="803.0" width="22.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.1" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (36 samples, 0.22%)</title><rect x="448.5" y="787.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.5" y="798.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="449.2" y="771.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="452.2" y="782.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$32/64133603.apply (10 samples, 0.06%)</title><rect x="449.7" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/887261302.apply (5 samples, 0.03%)</title><rect x="450.5" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$203/1559042816.apply (4 samples, 0.02%)</title><rect x="450.8" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/887261302.apply (214 samples, 1.31%)</title><rect x="451.3" y="787.0" width="15.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (214 samples, 1.31%)</title><rect x="451.3" y="771.0" width="15.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (212 samples, 1.29%)</title><rect x="451.3" y="755.0" width="15.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (208 samples, 1.27%)</title><rect x="451.5" y="739.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (208 samples, 1.27%)</title><rect x="451.5" y="723.0" width="15.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.5" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (80 samples, 0.49%)</title><rect x="452.1" y="707.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.1" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (12 samples, 0.07%)</title><rect x="452.1" y="691.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.1" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.02%)</title><rect x="452.7" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="455.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.02%)</title><rect x="452.7" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.02%)</title><rect x="452.7" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.02%)</title><rect x="452.7" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.7" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.04%)</title><rect x="453.0" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.04%)</title><rect x="453.0" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (6 samples, 0.04%)</title><rect x="453.0" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (6 samples, 0.04%)</title><rect x="453.0" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (6 samples, 0.04%)</title><rect x="453.0" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (54 samples, 0.33%)</title><rect x="453.4" y="691.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (49 samples, 0.30%)</title><rect x="453.5" y="675.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (46 samples, 0.28%)</title><rect x="453.5" y="659.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (38 samples, 0.23%)</title><rect x="454.1" y="643.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (24 samples, 0.15%)</title><rect x="454.7" y="627.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (5 samples, 0.03%)</title><rect x="454.7" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (19 samples, 0.12%)</title><rect x="455.1" y="611.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (4 samples, 0.02%)</title><rect x="455.1" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (13 samples, 0.08%)</title><rect x="455.4" y="595.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="458.4" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (9 samples, 0.05%)</title><rect x="455.7" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (9 samples, 0.05%)</title><rect x="455.7" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$241/1632645541.applyAsLong (9 samples, 0.05%)</title><rect x="455.7" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.7" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (9 samples, 0.05%)</title><rect x="455.7" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="458.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (6 samples, 0.04%)</title><rect x="455.9" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="458.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Long.&lt;init&gt; (6 samples, 0.04%)</title><rect x="455.9" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (6 samples, 0.04%)</title><rect x="455.9" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.9" y="494.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (6 samples, 0.04%)</title><rect x="455.9" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.03%)</title><rect x="456.4" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.opIsStateful (4 samples, 0.02%)</title><rect x="457.0" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (8 samples, 0.05%)</title><rect x="457.3" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (8 samples, 0.05%)</title><rect x="457.3" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="460.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (8 samples, 0.05%)</title><rect x="457.3" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (8 samples, 0.05%)</title><rect x="457.3" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (8 samples, 0.05%)</title><rect x="457.3" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.05%)</title><rect x="457.9" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.02%)</title><rect x="458.0" y="691.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (108 samples, 0.66%)</title><rect x="458.7" y="707.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$246/118115321.run (107 samples, 0.65%)</title><rect x="458.8" y="691.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (106 samples, 0.65%)</title><rect x="458.9" y="675.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.05%)</title><rect x="459.5" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (9 samples, 0.05%)</title><rect x="459.5" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (18 samples, 0.11%)</title><rect x="460.2" y="659.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.08%)</title><rect x="460.5" y="643.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.08%)</title><rect x="460.5" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (51 samples, 0.31%)</title><rect x="461.5" y="659.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (49 samples, 0.30%)</title><rect x="461.6" y="643.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.6" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (42 samples, 0.26%)</title><rect x="461.8" y="627.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.8" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (38 samples, 0.23%)</title><rect x="462.1" y="611.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.1" y="622.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (26 samples, 0.16%)</title><rect x="462.9" y="595.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.9" y="606.0"></text>
</g>
<g>
<title>JVM_IHashCode (21 samples, 0.13%)</title><rect x="463.1" y="579.0" width="1.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="466.1" y="590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (10 samples, 0.06%)</title><rect x="463.7" y="563.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="466.7" y="574.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (4 samples, 0.02%)</title><rect x="464.2" y="547.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="467.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.02%)</title><rect x="464.9" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.02%)</title><rect x="464.9" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.02%)</title><rect x="464.9" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (10 samples, 0.06%)</title><rect x="465.2" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.05%)</title><rect x="465.2" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/288994035.invoke (9 samples, 0.05%)</title><rect x="465.2" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.05%)</title><rect x="465.2" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.05%)</title><rect x="465.2" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.05%)</title><rect x="465.2" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (9 samples, 0.05%)</title><rect x="465.9" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$203/1559042816.apply (56 samples, 0.34%)</title><rect x="466.7" y="787.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (56 samples, 0.34%)</title><rect x="466.7" y="771.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (54 samples, 0.33%)</title><rect x="466.7" y="755.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (42 samples, 0.26%)</title><rect x="467.5" y="739.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (40 samples, 0.24%)</title><rect x="467.7" y="723.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.7" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="468.2" y="707.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="471.2" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="468.3" y="691.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="471.3" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.02%)</title><rect x="468.3" y="675.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="471.3" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (4 samples, 0.02%)</title><rect x="468.3" y="659.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="471.3" y="670.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (26 samples, 0.16%)</title><rect x="468.7" y="707.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.7" y="718.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (5 samples, 0.03%)</title><rect x="469.0" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.0" y="702.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (5 samples, 0.03%)</title><rect x="469.0" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.0" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (5 samples, 0.03%)</title><rect x="469.0" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.0" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (5 samples, 0.03%)</title><rect x="469.0" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.0" y="654.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (17 samples, 0.10%)</title><rect x="469.3" y="691.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (17 samples, 0.10%)</title><rect x="469.3" y="675.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.3" y="686.0"></text>
</g>
<g>
<title>JVM_IHashCode (10 samples, 0.06%)</title><rect x="469.7" y="659.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="472.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (69 samples, 0.42%)</title><rect x="470.7" y="803.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="473.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (64 samples, 0.39%)</title><rect x="471.1" y="787.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.04%)</title><rect x="471.1" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$205/1826986094.apply (57 samples, 0.35%)</title><rect x="471.6" y="771.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (54 samples, 0.33%)</title><rect x="471.8" y="755.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (49 samples, 0.30%)</title><rect x="471.8" y="739.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (49 samples, 0.30%)</title><rect x="471.8" y="723.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.8" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.07%)</title><rect x="472.1" y="707.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="475.1" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.07%)</title><rect x="472.1" y="691.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="475.1" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.06%)</title><rect x="472.2" y="675.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="475.2" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (8 samples, 0.05%)</title><rect x="472.2" y="659.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="475.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (33 samples, 0.20%)</title><rect x="472.9" y="707.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.9" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (25 samples, 0.15%)</title><rect x="473.5" y="691.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.5" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (16 samples, 0.10%)</title><rect x="473.5" y="675.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (6 samples, 0.04%)</title><rect x="474.0" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (9 samples, 0.05%)</title><rect x="474.7" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (5 samples, 0.03%)</title><rect x="475.3" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (14 samples, 0.09%)</title><rect x="475.7" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10 samples, 0.06%)</title><rect x="476.0" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.06%)</title><rect x="476.0" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$236/1905302793.apply (6 samples, 0.04%)</title><rect x="476.7" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$236/1905302793.apply (25 samples, 0.15%)</title><rect x="477.2" y="835.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (25 samples, 0.15%)</title><rect x="477.2" y="819.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (21 samples, 0.13%)</title><rect x="477.5" y="803.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (16 samples, 0.10%)</title><rect x="477.5" y="787.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.10%)</title><rect x="477.5" y="771.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (16 samples, 0.10%)</title><rect x="477.5" y="755.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (5 samples, 0.03%)</title><rect x="478.6" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (4 samples, 0.02%)</title><rect x="478.7" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.02%)</title><rect x="479.0" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (363 samples, 2.22%)</title><rect x="479.3" y="947.0" width="26.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.3" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (9 samples, 0.05%)</title><rect x="480.9" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (69 samples, 0.42%)</title><rect x="481.7" y="931.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.7" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (56 samples, 0.34%)</title><rect x="482.6" y="915.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.6" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (56 samples, 0.34%)</title><rect x="482.6" y="899.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.6" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (13 samples, 0.08%)</title><rect x="485.7" y="883.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.7" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.08%)</title><rect x="485.7" y="867.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.7" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="486.3" y="851.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="489.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (24 samples, 0.15%)</title><rect x="486.6" y="931.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.6" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (18 samples, 0.11%)</title><rect x="487.1" y="915.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.1" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (18 samples, 0.11%)</title><rect x="487.1" y="899.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (18 samples, 0.11%)</title><rect x="488.4" y="931.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (18 samples, 0.11%)</title><rect x="488.4" y="915.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (18 samples, 0.11%)</title><rect x="488.4" y="899.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (90 samples, 0.55%)</title><rect x="489.6" y="931.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (90 samples, 0.55%)</title><rect x="489.6" y="915.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.6" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (89 samples, 0.54%)</title><rect x="489.7" y="899.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.7" y="910.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="490.3" y="883.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="493.3" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (74 samples, 0.45%)</title><rect x="490.8" y="883.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (65 samples, 0.40%)</title><rect x="491.5" y="867.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.5" y="878.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.05%)</title><rect x="492.0" y="851.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="495.0" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (45 samples, 0.27%)</title><rect x="492.7" y="851.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.7" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (15 samples, 0.09%)</title><rect x="493.3" y="835.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.3" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (6 samples, 0.04%)</title><rect x="494.0" y="819.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.0" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.04%)</title><rect x="494.0" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.0" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.10%)</title><rect x="494.4" y="835.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (12 samples, 0.07%)</title><rect x="494.5" y="819.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (12 samples, 0.07%)</title><rect x="494.5" y="803.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (12 samples, 0.07%)</title><rect x="494.5" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.5" y="798.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="495.6" y="835.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="498.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (128 samples, 0.78%)</title><rect x="496.2" y="931.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.2" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.04%)</title><rect x="497.1" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (6 samples, 0.04%)</title><rect x="497.1" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (99 samples, 0.60%)</title><rect x="497.6" y="915.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (44 samples, 0.27%)</title><rect x="498.1" y="899.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.1" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (23 samples, 0.14%)</title><rect x="498.7" y="883.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.7" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.05%)</title><rect x="500.4" y="883.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="503.4" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="501.0" y="883.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="504.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.trim (22 samples, 0.13%)</title><rect x="501.2" y="899.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.2" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (22 samples, 0.13%)</title><rect x="501.2" y="883.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.2" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (24 samples, 0.15%)</title><rect x="503.0" y="899.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.0" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.03%)</title><rect x="503.6" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.6" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (5 samples, 0.03%)</title><rect x="503.9" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$238/111502284.apply (6 samples, 0.04%)</title><rect x="504.3" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (6 samples, 0.04%)</title><rect x="504.3" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.04%)</title><rect x="504.3" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.3" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (10 samples, 0.06%)</title><rect x="504.7" y="915.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="507.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$182/256275998.accept (12 samples, 0.07%)</title><rect x="505.4" y="947.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (9 samples, 0.05%)</title><rect x="505.6" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,223 samples, 7.47%)</title><rect x="506.4" y="1059.0" width="88.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.4" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,217 samples, 7.43%)</title><rect x="506.8" y="1043.0" width="87.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.8" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,212 samples, 7.40%)</title><rect x="506.9" y="1027.0" width="87.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.9" y="1038.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (1,206 samples, 7.36%)</title><rect x="507.4" y="1011.0" width="86.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.4" y="1022.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,205 samples, 7.36%)</title><rect x="507.4" y="995.0" width="86.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.4" y="1006.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (4 samples, 0.02%)</title><rect x="507.4" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (4 samples, 0.02%)</title><rect x="507.4" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (21 samples, 0.13%)</title><rect x="507.8" y="979.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (8 samples, 0.05%)</title><rect x="508.2" y="963.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (8 samples, 0.05%)</title><rect x="508.2" y="947.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (7 samples, 0.04%)</title><rect x="508.2" y="931.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (7 samples, 0.04%)</title><rect x="508.2" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (7 samples, 0.04%)</title><rect x="508.2" y="899.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.04%)</title><rect x="508.2" y="883.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.04%)</title><rect x="508.2" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (8 samples, 0.05%)</title><rect x="508.7" y="963.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (8 samples, 0.05%)</title><rect x="508.7" y="947.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.05%)</title><rect x="508.7" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.05%)</title><rect x="508.7" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="511.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1,165 samples, 7.11%)</title><rect x="509.3" y="979.0" width="83.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.3" y="990.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,165 samples, 7.11%)</title><rect x="509.3" y="963.0" width="83.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.3" y="974.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,163 samples, 7.10%)</title><rect x="509.5" y="947.0" width="83.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.5" y="958.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,163 samples, 7.10%)</title><rect x="509.5" y="931.0" width="83.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.5" y="942.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,163 samples, 7.10%)</title><rect x="509.5" y="915.0" width="83.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.5" y="926.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,162 samples, 7.09%)</title><rect x="509.5" y="899.0" width="83.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.5" y="910.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/684996081.run (701 samples, 4.28%)</title><rect x="509.6" y="883.0" width="50.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.6" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (701 samples, 4.28%)</title><rect x="509.6" y="867.0" width="50.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.6" y="878.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (698 samples, 4.26%)</title><rect x="509.8" y="851.0" width="50.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.8" y="862.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (45 samples, 0.27%)</title><rect x="509.8" y="835.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.8" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (17 samples, 0.10%)</title><rect x="509.8" y="819.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.8" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (10 samples, 0.06%)</title><rect x="510.3" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (10 samples, 0.06%)</title><rect x="510.3" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.3" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (10 samples, 0.06%)</title><rect x="510.3" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.3" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (10 samples, 0.06%)</title><rect x="510.3" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="513.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="510.7" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="510.7" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.03%)</title><rect x="510.7" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (25 samples, 0.15%)</title><rect x="511.3" y="819.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (25 samples, 0.15%)</title><rect x="511.3" y="803.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (25 samples, 0.15%)</title><rect x="511.3" y="787.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (17 samples, 0.10%)</title><rect x="511.6" y="771.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (11 samples, 0.07%)</title><rect x="512.0" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.0" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (4 samples, 0.02%)</title><rect x="512.0" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (7 samples, 0.04%)</title><rect x="512.3" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="515.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.02%)</title><rect x="512.3" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (650 samples, 3.97%)</title><rect x="513.1" y="835.0" width="46.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.1" y="846.0">jdk/..</text>
</g>
<g>
<title>java/time/Instant.now (17 samples, 0.10%)</title><rect x="513.1" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.1" y="830.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (17 samples, 0.10%)</title><rect x="513.1" y="803.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (13 samples, 0.08%)</title><rect x="513.3" y="787.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.3" y="798.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (13 samples, 0.08%)</title><rect x="513.3" y="771.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="516.3" y="782.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (7 samples, 0.04%)</title><rect x="513.8" y="755.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="516.8" y="766.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="513.9" y="739.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="516.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (633 samples, 3.86%)</title><rect x="514.3" y="819.0" width="45.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.3" y="830.0">jdk/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (70 samples, 0.43%)</title><rect x="516.3" y="803.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="519.3" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (70 samples, 0.43%)</title><rect x="516.3" y="787.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="519.3" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (68 samples, 0.42%)</title><rect x="516.4" y="771.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="519.4" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (60 samples, 0.37%)</title><rect x="516.4" y="755.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="519.4" y="766.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.04%)</title><rect x="520.8" y="755.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="523.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (235 samples, 1.43%)</title><rect x="521.3" y="803.0" width="17.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.3" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (7 samples, 0.04%)</title><rect x="537.6" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.6" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (7 samples, 0.04%)</title><rect x="537.6" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.6" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.plus (7 samples, 0.04%)</title><rect x="537.6" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.6" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (7 samples, 0.04%)</title><rect x="537.6" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.6" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (7 samples, 0.04%)</title><rect x="537.6" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (23 samples, 0.14%)</title><rect x="538.3" y="803.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (21 samples, 0.13%)</title><rect x="538.4" y="787.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (16 samples, 0.10%)</title><rect x="538.4" y="771.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (11 samples, 0.07%)</title><rect x="538.8" y="755.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.8" y="766.0"></text>
</g>
<g>
<title>java/util/Objects.equals (11 samples, 0.07%)</title><rect x="538.8" y="739.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.8" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (11 samples, 0.07%)</title><rect x="538.8" y="723.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.8" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (11 samples, 0.07%)</title><rect x="538.8" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.03%)</title><rect x="539.6" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (5 samples, 0.03%)</title><rect x="539.6" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (276 samples, 1.68%)</title><rect x="539.9" y="803.0" width="19.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (270 samples, 1.65%)</title><rect x="540.4" y="787.0" width="19.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (43 samples, 0.26%)</title><rect x="540.4" y="771.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (43 samples, 0.26%)</title><rect x="540.4" y="755.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (39 samples, 0.24%)</title><rect x="540.6" y="739.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (30 samples, 0.18%)</title><rect x="540.6" y="723.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (30 samples, 0.18%)</title><rect x="540.6" y="707.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.6" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="540.7" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="543.7" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="540.7" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="543.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (24 samples, 0.15%)</title><rect x="541.1" y="691.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.1" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="542.1" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="545.1" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="542.2" y="659.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="545.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.03%)</title><rect x="542.4" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.4" y="686.0"></text>
</g>
<g>
<title>__GI___write (5 samples, 0.03%)</title><rect x="542.4" y="659.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="545.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (8 samples, 0.05%)</title><rect x="542.8" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (227 samples, 1.39%)</title><rect x="543.5" y="771.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (227 samples, 1.39%)</title><rect x="543.5" y="755.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.5" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (22 samples, 0.13%)</title><rect x="544.0" y="739.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="547.0" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (20 samples, 0.12%)</title><rect x="544.0" y="723.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="547.0" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.11%)</title><rect x="544.1" y="707.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="547.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.09%)</title><rect x="544.3" y="691.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="547.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.09%)</title><rect x="544.3" y="675.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="547.3" y="686.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.09%)</title><rect x="544.4" y="659.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="547.4" y="670.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.08%)</title><rect x="544.5" y="643.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="547.5" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (12 samples, 0.07%)</title><rect x="544.5" y="627.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="547.5" y="638.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.05%)</title><rect x="544.8" y="611.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="547.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.05%)</title><rect x="544.8" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="547.8" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="544.8" y="579.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="547.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (191 samples, 1.17%)</title><rect x="545.6" y="739.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (191 samples, 1.17%)</title><rect x="545.6" y="723.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (191 samples, 1.17%)</title><rect x="545.6" y="707.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.6" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (21 samples, 0.13%)</title><rect x="546.3" y="691.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="549.3" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (19 samples, 0.12%)</title><rect x="546.4" y="675.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="549.4" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (16 samples, 0.10%)</title><rect x="546.5" y="659.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="549.5" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (11 samples, 0.07%)</title><rect x="546.6" y="643.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="549.6" y="654.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.02%)</title><rect x="547.3" y="643.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="550.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (161 samples, 0.98%)</title><rect x="547.8" y="691.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.8" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.07%)</title><rect x="548.9" y="675.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="551.9" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (12 samples, 0.07%)</title><rect x="548.9" y="659.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="551.9" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.06%)</title><rect x="549.1" y="643.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="552.1" y="654.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.04%)</title><rect x="549.4" y="627.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="552.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (133 samples, 0.81%)</title><rect x="549.8" y="675.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.8" y="686.0"></text>
</g>
<g>
<title>__GI___write (129 samples, 0.79%)</title><rect x="550.0" y="659.0" width="9.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="553.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 0.65%)</title><rect x="551.7" y="643.0" width="7.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="554.7" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (105 samples, 0.64%)</title><rect x="551.7" y="627.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="554.7" y="638.0"></text>
</g>
<g>
<title>sys_write (93 samples, 0.57%)</title><rect x="552.6" y="611.0" width="6.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="555.6" y="622.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.02%)</title><rect x="552.7" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="555.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="552.7" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="555.7" y="590.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.02%)</title><rect x="552.7" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="555.7" y="574.0"></text>
</g>
<g>
<title>vfs_write (86 samples, 0.52%)</title><rect x="553.1" y="595.0" width="6.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.1" y="606.0"></text>
</g>
<g>
<title>__vfs_write (72 samples, 0.44%)</title><rect x="553.4" y="579.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="556.4" y="590.0"></text>
</g>
<g>
<title>new_sync_write (71 samples, 0.43%)</title><rect x="553.5" y="563.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="556.5" y="574.0"></text>
</g>
<g>
<title>pipe_write (64 samples, 0.39%)</title><rect x="554.0" y="547.0" width="4.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="557.0" y="558.0"></text>
</g>
<g>
<title>__wake_up_sync_key (44 samples, 0.27%)</title><rect x="554.5" y="531.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="557.5" y="542.0"></text>
</g>
<g>
<title>__wake_up_common_lock (43 samples, 0.26%)</title><rect x="554.5" y="515.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="557.5" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (43 samples, 0.26%)</title><rect x="554.5" y="499.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="557.5" y="510.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.03%)</title><rect x="558.2" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="561.2" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.05%)</title><rect x="558.7" y="579.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="561.7" y="590.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.04%)</title><rect x="558.9" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="561.9" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.02%)</title><rect x="558.9" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.9" y="558.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.02%)</title><rect x="558.9" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (5 samples, 0.03%)</title><rect x="559.4" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1197637075.accept (59 samples, 0.36%)</title><rect x="560.1" y="883.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (59 samples, 0.36%)</title><rect x="560.1" y="867.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (59 samples, 0.36%)</title><rect x="560.1" y="851.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (50 samples, 0.31%)</title><rect x="560.1" y="835.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (50 samples, 0.31%)</title><rect x="560.1" y="819.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (47 samples, 0.29%)</title><rect x="560.2" y="803.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (42 samples, 0.26%)</title><rect x="560.6" y="787.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (19 samples, 0.12%)</title><rect x="560.6" y="771.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.6" y="782.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.04%)</title><rect x="560.7" y="755.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="563.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1759647216.accept (7 samples, 0.04%)</title><rect x="561.2" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$256/1351230328.accept (4 samples, 0.02%)</title><rect x="561.7" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1759647216.accept (6 samples, 0.04%)</title><rect x="562.0" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (6 samples, 0.04%)</title><rect x="562.0" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (6 samples, 0.04%)</title><rect x="562.0" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (6 samples, 0.04%)</title><rect x="562.0" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (5 samples, 0.03%)</title><rect x="562.0" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$256/1351230328.accept (17 samples, 0.10%)</title><rect x="562.4" y="771.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (15 samples, 0.09%)</title><rect x="562.5" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (15 samples, 0.09%)</title><rect x="562.5" y="739.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.5" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (13 samples, 0.08%)</title><rect x="562.7" y="723.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.7" y="734.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (9 samples, 0.05%)</title><rect x="563.0" y="707.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$184/1263958087.accept (9 samples, 0.05%)</title><rect x="563.7" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (7 samples, 0.04%)</title><rect x="563.8" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (4 samples, 0.02%)</title><rect x="564.1" y="803.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (381 samples, 2.33%)</title><rect x="564.3" y="883.0" width="27.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.3" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (380 samples, 2.32%)</title><rect x="564.4" y="867.0" width="27.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.4" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (380 samples, 2.32%)</title><rect x="564.4" y="851.0" width="27.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.4" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (370 samples, 2.26%)</title><rect x="564.6" y="835.0" width="26.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.6" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (370 samples, 2.26%)</title><rect x="564.6" y="819.0" width="26.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.6" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (359 samples, 2.19%)</title><rect x="565.4" y="803.0" width="25.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.4" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.03%)</title><rect x="565.6" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.03%)</title><rect x="565.6" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.03%)</title><rect x="565.6" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (350 samples, 2.14%)</title><rect x="566.0" y="787.0" width="25.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.0" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (13 samples, 0.08%)</title><rect x="566.0" y="771.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$258/1828046752.accept (7 samples, 0.04%)</title><rect x="566.4" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$258/1828046752.accept (337 samples, 2.06%)</title><rect x="566.9" y="771.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.9" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (331 samples, 2.02%)</title><rect x="567.4" y="755.0" width="23.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.4" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (331 samples, 2.02%)</title><rect x="567.4" y="739.0" width="23.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.4" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (331 samples, 2.02%)</title><rect x="567.4" y="723.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.4" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (19 samples, 0.12%)</title><rect x="567.4" y="707.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="570.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.02%)</title><rect x="568.1" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.02%)</title><rect x="568.1" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$264/1900001683.apply (6 samples, 0.04%)</title><rect x="568.4" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (6 samples, 0.04%)</title><rect x="568.4" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="571.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.02%)</title><rect x="568.8" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (304 samples, 1.86%)</title><rect x="569.1" y="707.0" width="21.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.1" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (298 samples, 1.82%)</title><rect x="569.5" y="691.0" width="21.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.5" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (290 samples, 1.77%)</title><rect x="569.5" y="675.0" width="20.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (270 samples, 1.65%)</title><rect x="570.0" y="659.0" width="19.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (270 samples, 1.65%)</title><rect x="570.0" y="643.0" width="19.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (268 samples, 1.64%)</title><rect x="570.2" y="627.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (268 samples, 1.64%)</title><rect x="570.2" y="611.0" width="19.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (268 samples, 1.64%)</title><rect x="570.2" y="595.0" width="19.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (256 samples, 1.56%)</title><rect x="571.0" y="579.0" width="18.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.0" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (41 samples, 0.25%)</title><rect x="571.6" y="563.0" width="3.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="574.6" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.03%)</title><rect x="572.1" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="575.1" y="558.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.03%)</title><rect x="572.5" y="547.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="575.5" y="558.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (4 samples, 0.02%)</title><rect x="572.9" y="547.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="575.9" y="558.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (11 samples, 0.07%)</title><rect x="573.2" y="547.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="576.2" y="558.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (5 samples, 0.03%)</title><rect x="574.0" y="547.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="577.0" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (204 samples, 1.25%)</title><rect x="574.6" y="563.0" width="14.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="577.6" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (175 samples, 1.07%)</title><rect x="576.7" y="547.0" width="12.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="579.7" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (175 samples, 1.07%)</title><rect x="576.7" y="531.0" width="12.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="579.7" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (13 samples, 0.08%)</title><rect x="577.6" y="515.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="580.6" y="526.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.05%)</title><rect x="578.0" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="581.0" y="510.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.04%)</title><rect x="578.0" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="581.0" y="494.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.02%)</title><rect x="578.2" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="581.2" y="478.0"></text>
</g>
<g>
<title>sys_futex (148 samples, 0.90%)</title><rect x="578.6" y="515.0" width="10.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="581.6" y="526.0"></text>
</g>
<g>
<title>do_futex (146 samples, 0.89%)</title><rect x="578.8" y="499.0" width="10.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="581.8" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock (8 samples, 0.05%)</title><rect x="579.0" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="582.0" y="494.0"></text>
</g>
<g>
<title>futex_wake_op (133 samples, 0.81%)</title><rect x="579.6" y="483.0" width="9.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.6" y="494.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.04%)</title><rect x="580.4" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="583.4" y="478.0"></text>
</g>
<g>
<title>mark_wake_futex (17 samples, 0.10%)</title><rect x="580.8" y="467.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="583.8" y="478.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.02%)</title><rect x="581.6" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="584.6" y="462.0"></text>
</g>
<g>
<title>wake_up_q (98 samples, 0.60%)</title><rect x="582.1" y="467.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.1" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (95 samples, 0.58%)</title><rect x="582.4" y="451.0" width="6.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="585.4" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (95 samples, 0.58%)</title><rect x="582.4" y="435.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="585.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$125/1575956583.accept (4 samples, 0.02%)</title><rect x="590.1" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/357593672.accept (5 samples, 0.03%)</title><rect x="590.4" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (5 samples, 0.03%)</title><rect x="590.4" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (8 samples, 0.05%)</title><rect x="591.2" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (6 samples, 0.04%)</title><rect x="591.4" y="819.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (20 samples, 0.12%)</title><rect x="591.8" y="883.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (20 samples, 0.12%)</title><rect x="591.8" y="867.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (20 samples, 0.12%)</title><rect x="591.8" y="851.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (20 samples, 0.12%)</title><rect x="591.8" y="835.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.8" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (16 samples, 0.10%)</title><rect x="592.1" y="819.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (14 samples, 0.09%)</title><rect x="593.2" y="979.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (11 samples, 0.07%)</title><rect x="593.2" y="963.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (11 samples, 0.07%)</title><rect x="593.2" y="947.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (11 samples, 0.07%)</title><rect x="593.2" y="931.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/285921815.run (2,715 samples, 16.57%)</title><rect x="594.5" y="1091.0" width="195.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.5" y="1102.0">ru/mail/polis/service/kat..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (2,714 samples, 16.57%)</title><rect x="594.5" y="1075.0" width="195.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.5" y="1086.0">ru/mail/polis/service/kat..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.03%)</title><rect x="595.0" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.isProxied (58 samples, 0.35%)</title><rect x="595.4" y="1059.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (53 samples, 0.32%)</title><rect x="595.8" y="1043.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (25 samples, 0.15%)</title><rect x="597.6" y="1027.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (25 samples, 0.15%)</title><rect x="597.6" y="1011.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (2,644 samples, 16.14%)</title><rect x="599.6" y="1059.0" width="190.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.6" y="1070.0">ru/mail/polis/service/kat..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.04%)</title><rect x="601.4" y="1043.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="604.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMethod (2,612 samples, 15.94%)</title><rect x="601.9" y="1043.0" width="188.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.9" y="1054.0">ru/mail/polis/service/ka..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (5 samples, 0.03%)</title><rect x="602.7" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (5 samples, 0.03%)</title><rect x="603.0" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (5 samples, 0.03%)</title><rect x="603.0" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.03%)</title><rect x="603.0" y="995.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.collect (23 samples, 0.14%)</title><rect x="603.5" y="1027.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (4 samples, 0.02%)</title><rect x="603.6" y="1011.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (4 samples, 0.02%)</title><rect x="603.6" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (18 samples, 0.11%)</title><rect x="603.9" y="1011.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (13 samples, 0.08%)</title><rect x="604.2" y="995.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.04%)</title><rect x="604.5" y="979.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.merge (10 samples, 0.06%)</title><rect x="605.2" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (9 samples, 0.05%)</title><rect x="605.3" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.02%)</title><rect x="605.6" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (1,023 samples, 6.24%)</title><rect x="605.9" y="1027.0" width="73.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.9" y="1038.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,019 samples, 6.22%)</title><rect x="606.0" y="1011.0" width="73.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.0" y="1022.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (20 samples, 0.12%)</title><rect x="606.9" y="995.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (20 samples, 0.12%)</title><rect x="606.9" y="979.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (20 samples, 0.12%)</title><rect x="606.9" y="963.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.9" y="974.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.05%)</title><rect x="607.6" y="947.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="610.6" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (978 samples, 5.97%)</title><rect x="608.4" y="995.0" width="70.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.4" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (28 samples, 0.17%)</title><rect x="608.4" y="979.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.4" y="990.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (22 samples, 0.13%)</title><rect x="608.9" y="963.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.9" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (11 samples, 0.07%)</title><rect x="608.9" y="947.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.9" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.07%)</title><rect x="609.7" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.07%)</title><rect x="609.7" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.7" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.07%)</title><rect x="609.7" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (949 samples, 5.79%)</title><rect x="610.4" y="979.0" width="68.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.4" y="990.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (949 samples, 5.79%)</title><rect x="610.4" y="963.0" width="68.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.4" y="974.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.02%)</title><rect x="610.8" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (940 samples, 5.74%)</title><rect x="611.1" y="947.0" width="67.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.1" y="958.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (940 samples, 5.74%)</title><rect x="611.1" y="931.0" width="67.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.1" y="942.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (22 samples, 0.13%)</title><rect x="611.3" y="915.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="614.3" y="926.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.04%)</title><rect x="612.2" y="899.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="615.2" y="910.0"></text>
</g>
<g>
<title>send (908 samples, 5.54%)</title><rect x="613.4" y="915.0" width="65.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="616.4" y="926.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (872 samples, 5.32%)</title><rect x="616.0" y="899.0" width="62.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="619.0" y="910.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (872 samples, 5.32%)</title><rect x="616.0" y="883.0" width="62.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="619.0" y="894.0">do_sys..</text>
</g>
<g>
<title>sys_sendto (858 samples, 5.24%)</title><rect x="617.0" y="867.0" width="61.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="620.0" y="878.0">sys_se..</text>
</g>
<g>
<title>SYSC_sendto (849 samples, 5.18%)</title><rect x="617.1" y="851.0" width="61.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="620.1" y="862.0">SYSC_s..</text>
</g>
<g>
<title>sock_sendmsg (827 samples, 5.05%)</title><rect x="617.8" y="835.0" width="59.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="620.8" y="846.0">sock_s..</text>
</g>
<g>
<title>inet_sendmsg (820 samples, 5.01%)</title><rect x="617.9" y="819.0" width="59.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="620.9" y="830.0">inet_s..</text>
</g>
<g>
<title>tcp_sendmsg (816 samples, 4.98%)</title><rect x="618.2" y="803.0" width="58.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="621.2" y="814.0">tcp_se..</text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.02%)</title><rect x="618.4" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="621.4" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (795 samples, 4.85%)</title><rect x="619.5" y="787.0" width="57.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="622.5" y="798.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.04%)</title><rect x="620.5" y="771.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="623.5" y="782.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.03%)</title><rect x="620.7" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="623.7" y="766.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.02%)</title><rect x="621.2" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="624.2" y="782.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (28 samples, 0.17%)</title><rect x="621.8" y="771.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="624.8" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (26 samples, 0.16%)</title><rect x="621.8" y="755.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="624.8" y="766.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (6 samples, 0.04%)</title><rect x="622.0" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="625.0" y="750.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.03%)</title><rect x="622.0" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="625.0" y="734.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (10 samples, 0.06%)</title><rect x="622.5" y="739.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="625.5" y="750.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.04%)</title><rect x="623.2" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="626.2" y="750.0"></text>
</g>
<g>
<title>tcp_push (710 samples, 4.33%)</title><rect x="624.1" y="771.0" width="51.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="627.1" y="782.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (707 samples, 4.32%)</title><rect x="624.3" y="755.0" width="50.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="627.3" y="766.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (703 samples, 4.29%)</title><rect x="624.6" y="739.0" width="50.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="627.6" y="750.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (648 samples, 3.96%)</title><rect x="625.4" y="723.0" width="46.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="628.4" y="734.0">__tc..</text>
</g>
<g>
<title>__tcp_v4_send_check (4 samples, 0.02%)</title><rect x="627.4" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="630.4" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (603 samples, 3.68%)</title><rect x="627.9" y="707.0" width="43.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="630.9" y="718.0">ip_q..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.02%)</title><rect x="628.2" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="631.2" y="702.0"></text>
</g>
<g>
<title>ip_local_out (593 samples, 3.62%)</title><rect x="628.5" y="691.0" width="42.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="631.5" y="702.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (141 samples, 0.86%)</title><rect x="628.6" y="675.0" width="10.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="631.6" y="686.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.02%)</title><rect x="629.0" y="659.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="632.0" y="670.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.02%)</title><rect x="629.6" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="632.6" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (122 samples, 0.74%)</title><rect x="630.0" y="659.0" width="8.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="633.0" y="670.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (14 samples, 0.09%)</title><rect x="630.3" y="643.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="633.3" y="654.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (14 samples, 0.09%)</title><rect x="630.3" y="627.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="633.3" y="638.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (17 samples, 0.10%)</title><rect x="631.3" y="643.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="634.3" y="654.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (13 samples, 0.08%)</title><rect x="631.5" y="627.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="634.5" y="638.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (4 samples, 0.02%)</title><rect x="632.5" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="635.5" y="654.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (80 samples, 0.49%)</title><rect x="632.8" y="643.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="635.8" y="654.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (4 samples, 0.02%)</title><rect x="633.2" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="636.2" y="638.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (64 samples, 0.39%)</title><rect x="633.5" y="627.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="636.5" y="638.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (13 samples, 0.08%)</title><rect x="634.6" y="611.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="637.6" y="622.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (4 samples, 0.02%)</title><rect x="636.1" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="639.1" y="622.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (23 samples, 0.14%)</title><rect x="636.4" y="611.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="639.4" y="622.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (4 samples, 0.02%)</title><rect x="636.7" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="639.7" y="606.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (11 samples, 0.07%)</title><rect x="637.2" y="595.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="640.2" y="606.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (4 samples, 0.02%)</title><rect x="638.2" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="641.2" y="638.0"></text>
</g>
<g>
<title>ip_output (447 samples, 2.73%)</title><rect x="638.8" y="675.0" width="32.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="641.8" y="686.0">ip..</text>
</g>
<g>
<title>ip_finish_output (437 samples, 2.67%)</title><rect x="638.9" y="659.0" width="31.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="641.9" y="670.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (433 samples, 2.64%)</title><rect x="639.1" y="643.0" width="31.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="642.1" y="654.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (374 samples, 2.28%)</title><rect x="640.0" y="627.0" width="27.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="643.0" y="638.0">_..</text>
</g>
<g>
<title>do_softirq.part.17 (373 samples, 2.28%)</title><rect x="640.1" y="611.0" width="26.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="643.1" y="622.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (370 samples, 2.26%)</title><rect x="640.3" y="595.0" width="26.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="643.3" y="606.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (364 samples, 2.22%)</title><rect x="640.3" y="579.0" width="26.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="643.3" y="590.0">_..</text>
</g>
<g>
<title>net_rx_action (352 samples, 2.15%)</title><rect x="641.1" y="563.0" width="25.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="644.1" y="574.0">n..</text>
</g>
<g>
<title>process_backlog (344 samples, 2.10%)</title><rect x="641.6" y="547.0" width="24.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="644.6" y="558.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (340 samples, 2.08%)</title><rect x="641.8" y="531.0" width="24.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="644.8" y="542.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (338 samples, 2.06%)</title><rect x="642.0" y="515.0" width="24.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="645.0" y="526.0">_..</text>
</g>
<g>
<title>ip_rcv (324 samples, 1.98%)</title><rect x="642.8" y="499.0" width="23.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="645.8" y="510.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (280 samples, 1.71%)</title><rect x="643.6" y="483.0" width="20.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="646.6" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver (274 samples, 1.67%)</title><rect x="643.9" y="467.0" width="19.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="646.9" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (248 samples, 1.51%)</title><rect x="644.1" y="451.0" width="17.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="647.1" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (240 samples, 1.47%)</title><rect x="644.7" y="435.0" width="17.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="647.7" y="446.0"></text>
</g>
<g>
<title>__inet_lookup_established (14 samples, 0.09%)</title><rect x="645.2" y="419.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="648.2" y="430.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.04%)</title><rect x="646.4" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="649.4" y="430.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (4 samples, 0.02%)</title><rect x="646.5" y="403.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="649.5" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (207 samples, 1.26%)</title><rect x="646.8" y="419.0" width="14.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="649.8" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (197 samples, 1.20%)</title><rect x="647.5" y="403.0" width="14.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="650.5" y="414.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (23 samples, 0.14%)</title><rect x="647.6" y="387.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="650.6" y="398.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (22 samples, 0.13%)</title><rect x="647.7" y="371.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="650.7" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (20 samples, 0.12%)</title><rect x="647.8" y="355.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="650.8" y="366.0"></text>
</g>
<g>
<title>mod_timer (18 samples, 0.11%)</title><rect x="648.0" y="339.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="651.0" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (18 samples, 0.11%)</title><rect x="648.0" y="323.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="651.0" y="334.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.02%)</title><rect x="649.3" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.3" y="398.0"></text>
</g>
<g>
<title>tcp_ack (83 samples, 0.51%)</title><rect x="650.0" y="387.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="653.0" y="398.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.02%)</title><rect x="651.1" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="654.1" y="382.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (51 samples, 0.31%)</title><rect x="652.1" y="371.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.1" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (26 samples, 0.16%)</title><rect x="652.7" y="355.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="655.7" y="366.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.05%)</title><rect x="652.7" y="339.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="655.7" y="350.0"></text>
</g>
<g>
<title>kmem_cache_free (9 samples, 0.05%)</title><rect x="652.7" y="323.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="655.7" y="334.0"></text>
</g>
<g>
<title>skb_release_all (16 samples, 0.10%)</title><rect x="653.4" y="339.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="656.4" y="350.0"></text>
</g>
<g>
<title>skb_release_data (13 samples, 0.08%)</title><rect x="653.4" y="323.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="656.4" y="334.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.05%)</title><rect x="653.7" y="307.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="656.7" y="318.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.05%)</title><rect x="653.7" y="291.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="656.7" y="302.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (7 samples, 0.04%)</title><rect x="655.1" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="658.1" y="366.0"></text>
</g>
<g>
<title>tcp_data_queue (76 samples, 0.46%)</title><rect x="656.0" y="387.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="659.0" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (69 samples, 0.42%)</title><rect x="656.2" y="371.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="659.2" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (60 samples, 0.37%)</title><rect x="656.8" y="355.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="659.8" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (59 samples, 0.36%)</title><rect x="656.9" y="339.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="659.9" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (57 samples, 0.35%)</title><rect x="657.0" y="323.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="660.0" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (21 samples, 0.13%)</title><rect x="662.1" y="451.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="665.1" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.05%)</title><rect x="662.3" y="435.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="665.3" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.05%)</title><rect x="662.3" y="419.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="665.3" y="430.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (4 samples, 0.02%)</title><rect x="663.2" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="666.2" y="446.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (8 samples, 0.05%)</title><rect x="663.7" y="483.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="666.7" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.12%)</title><rect x="664.8" y="483.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="667.8" y="494.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (4 samples, 0.02%)</title><rect x="664.9" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="667.9" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.02%)</title><rect x="664.9" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="667.9" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (8 samples, 0.05%)</title><rect x="665.3" y="467.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="668.3" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (7 samples, 0.04%)</title><rect x="665.4" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="668.4" y="462.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.02%)</title><rect x="666.6" y="579.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="669.6" y="590.0"></text>
</g>
<g>
<title>dev_queue_xmit (45 samples, 0.27%)</title><rect x="667.0" y="627.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="670.0" y="638.0"></text>
</g>
<g>
<title>__dev_queue_xmit (44 samples, 0.27%)</title><rect x="667.0" y="611.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.0" y="622.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (20 samples, 0.12%)</title><rect x="667.6" y="595.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="670.6" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (12 samples, 0.07%)</title><rect x="667.9" y="579.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="670.9" y="590.0"></text>
</g>
<g>
<title>netif_rx (8 samples, 0.05%)</title><rect x="668.1" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="671.1" y="574.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.05%)</title><rect x="668.1" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="671.1" y="558.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.05%)</title><rect x="668.1" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.1" y="542.0"></text>
</g>
<g>
<title>validate_xmit_skb (13 samples, 0.08%)</title><rect x="669.2" y="595.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="672.2" y="606.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.03%)</title><rect x="669.7" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="672.7" y="590.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="670.4" y="659.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="673.4" y="670.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.03%)</title><rect x="671.3" y="707.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="674.3" y="718.0"></text>
</g>
<g>
<title>sched_clock_cpu (5 samples, 0.03%)</title><rect x="672.4" y="723.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="675.4" y="734.0"></text>
</g>
<g>
<title>sched_clock (4 samples, 0.02%)</title><rect x="672.5" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="675.5" y="718.0"></text>
</g>
<g>
<title>native_sched_clock (4 samples, 0.02%)</title><rect x="672.5" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="675.5" y="702.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (16 samples, 0.10%)</title><rect x="673.0" y="723.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="676.0" y="734.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.05%)</title><rect x="673.5" y="707.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="676.5" y="718.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (9 samples, 0.05%)</title><rect x="673.5" y="691.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="676.5" y="702.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.04%)</title><rect x="673.7" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="676.7" y="686.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.04%)</title><rect x="673.7" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.7" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="673.7" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="676.7" y="654.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (4 samples, 0.02%)</title><rect x="674.3" y="723.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="677.3" y="734.0"></text>
</g>
<g>
<title>tcp_send_mss (20 samples, 0.12%)</title><rect x="675.3" y="771.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="678.3" y="782.0"></text>
</g>
<g>
<title>tcp_current_mss (15 samples, 0.09%)</title><rect x="675.6" y="755.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="678.6" y="766.0"></text>
</g>
<g>
<title>tcp_established_options (8 samples, 0.05%)</title><rect x="676.1" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="679.1" y="750.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (5 samples, 0.03%)</title><rect x="676.3" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.3" y="734.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.02%)</title><rect x="677.0" y="819.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.0" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.02%)</title><rect x="677.0" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="680.0" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.02%)</title><rect x="677.0" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.0" y="798.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.02%)</title><rect x="677.0" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="680.0" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.07%)</title><rect x="677.4" y="835.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="680.4" y="846.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.05%)</title><rect x="677.4" y="819.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="680.4" y="830.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.05%)</title><rect x="677.4" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="680.4" y="814.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.05%)</title><rect x="677.4" y="787.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="680.4" y="798.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="677.9" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="680.9" y="830.0"></text>
</g>
<g>
<title>fput (5 samples, 0.03%)</title><rect x="678.2" y="851.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="681.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.05%)</title><rect x="678.8" y="995.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.02%)</title><rect x="679.1" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.02%)</title><rect x="679.1" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$113/1614395695.act (10 samples, 0.06%)</title><rect x="679.6" y="1027.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$3 (10 samples, 0.06%)</title><rect x="679.6" y="1011.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$269/1852062420.act (591 samples, 3.61%)</title><rect x="680.3" y="1027.0" width="42.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.3" y="1038.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$2 (591 samples, 3.61%)</title><rect x="680.3" y="1011.0" width="42.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.3" y="1022.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (589 samples, 3.60%)</title><rect x="680.5" y="995.0" width="42.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.5" y="1006.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (210 samples, 1.28%)</title><rect x="680.8" y="979.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.8" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (37 samples, 0.23%)</title><rect x="680.8" y="963.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.8" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (33 samples, 0.20%)</title><rect x="681.1" y="947.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.1" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (33 samples, 0.20%)</title><rect x="681.1" y="931.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="684.1" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (33 samples, 0.20%)</title><rect x="681.1" y="915.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (33 samples, 0.20%)</title><rect x="681.1" y="899.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.1" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.11%)</title><rect x="681.6" y="883.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.6" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (16 samples, 0.10%)</title><rect x="681.7" y="867.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.7" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (16 samples, 0.10%)</title><rect x="681.7" y="851.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="684.7" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.05%)</title><rect x="681.8" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.8" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.04%)</title><rect x="681.8" y="819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.8" y="830.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.04%)</title><rect x="681.8" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.8" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.04%)</title><rect x="681.8" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.8" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.04%)</title><rect x="681.8" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.04%)</title><rect x="681.8" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.8" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (4 samples, 0.02%)</title><rect x="682.0" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.02%)</title><rect x="682.0" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.02%)</title><rect x="682.0" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.02%)</title><rect x="682.0" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$351/911484605.apply (7 samples, 0.04%)</title><rect x="683.0" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.0" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (12 samples, 0.07%)</title><rect x="683.5" y="963.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.5" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (9 samples, 0.05%)</title><rect x="683.7" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$363/504005016.apply (9 samples, 0.05%)</title><rect x="683.7" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (9 samples, 0.05%)</title><rect x="683.7" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (9 samples, 0.05%)</title><rect x="683.7" y="899.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.7" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="683.7" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.7" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (8 samples, 0.05%)</title><rect x="683.8" y="867.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.8" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="683.8" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="683.8" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.8" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="683.8" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.02%)</title><rect x="684.0" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.02%)</title><rect x="684.3" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (157 samples, 0.96%)</title><rect x="684.6" y="963.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.6" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.04%)</title><rect x="685.2" y="947.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.11%)</title><rect x="685.8" y="947.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (18 samples, 0.11%)</title><rect x="685.8" y="931.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.8" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.10%)</title><rect x="685.9" y="915.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.9" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (15 samples, 0.09%)</title><rect x="685.9" y="899.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.09%)</title><rect x="685.9" y="883.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.9" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.05%)</title><rect x="685.9" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.9" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.04%)</title><rect x="685.9" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.9" y="862.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.04%)</title><rect x="685.9" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.04%)</title><rect x="685.9" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.9" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.04%)</title><rect x="685.9" y="803.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (5 samples, 0.03%)</title><rect x="686.5" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.5" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="686.5" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.5" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.02%)</title><rect x="686.5" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.5" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.02%)</title><rect x="686.5" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (123 samples, 0.75%)</title><rect x="687.1" y="947.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.1" y="958.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (11 samples, 0.07%)</title><rect x="687.3" y="931.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (9 samples, 0.05%)</title><rect x="687.4" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="687.5" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (8 samples, 0.05%)</title><rect x="687.5" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (7 samples, 0.04%)</title><rect x="687.5" y="867.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.5" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="688.3" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.3" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="688.3" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.3" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="688.3" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.3" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="688.3" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.3" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (4 samples, 0.02%)</title><rect x="688.3" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.02%)</title><rect x="688.3" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (102 samples, 0.62%)</title><rect x="688.6" y="931.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.6" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (13 samples, 0.08%)</title><rect x="688.7" y="915.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.7" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (10 samples, 0.06%)</title><rect x="689.0" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.0" y="910.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.05%)</title><rect x="689.1" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.1" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.04%)</title><rect x="689.2" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.2" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.04%)</title><rect x="689.2" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.02%)</title><rect x="689.2" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.06%)</title><rect x="690.0" y="915.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.06%)</title><rect x="690.0" y="899.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="693.0" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.05%)</title><rect x="690.2" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.2" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.04%)</title><rect x="690.2" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.2" y="878.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.04%)</title><rect x="690.2" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.04%)</title><rect x="690.2" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.04%)</title><rect x="690.3" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.03%)</title><rect x="690.3" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (72 samples, 0.44%)</title><rect x="690.8" y="915.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.8" y="926.0"></text>
</g>
<g>
<title>java/util/Collection.stream (72 samples, 0.44%)</title><rect x="690.8" y="899.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (72 samples, 0.44%)</title><rect x="690.8" y="883.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (72 samples, 0.44%)</title><rect x="690.8" y="867.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (68 samples, 0.42%)</title><rect x="691.0" y="851.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (5 samples, 0.03%)</title><rect x="691.1" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (5 samples, 0.03%)</title><rect x="691.1" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="691.1" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="691.1" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="691.1" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (62 samples, 0.38%)</title><rect x="691.5" y="835.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (62 samples, 0.38%)</title><rect x="691.5" y="819.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (16 samples, 0.10%)</title><rect x="691.5" y="803.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.10%)</title><rect x="691.5" y="787.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.10%)</title><rect x="691.5" y="771.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.5" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.05%)</title><rect x="692.1" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (46 samples, 0.28%)</title><rect x="692.6" y="803.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (46 samples, 0.28%)</title><rect x="692.6" y="787.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (46 samples, 0.28%)</title><rect x="692.6" y="771.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (46 samples, 0.28%)</title><rect x="692.6" y="755.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.6" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (28 samples, 0.17%)</title><rect x="693.9" y="739.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (374 samples, 2.28%)</title><rect x="695.9" y="979.0" width="27.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.9" y="990.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (10 samples, 0.06%)</title><rect x="696.3" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.3" y="974.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="696.5" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (30 samples, 0.18%)</title><rect x="697.0" y="963.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.0" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (19 samples, 0.12%)</title><rect x="697.0" y="947.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.0" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (17 samples, 0.10%)</title><rect x="697.1" y="931.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (17 samples, 0.10%)</title><rect x="697.1" y="915.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.1" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.05%)</title><rect x="697.2" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.2" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.05%)</title><rect x="697.2" y="883.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.2" y="894.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.05%)</title><rect x="697.2" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.2" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.05%)</title><rect x="697.2" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.04%)</title><rect x="697.2" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.04%)</title><rect x="697.2" y="819.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (5 samples, 0.03%)</title><rect x="697.3" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.03%)</title><rect x="697.3" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.03%)</title><rect x="697.3" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.03%)</title><rect x="697.3" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$332/1010896139.apply (4 samples, 0.02%)</title><rect x="698.0" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4 samples, 0.02%)</title><rect x="698.0" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.0" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="698.0" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.0" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (5 samples, 0.03%)</title><rect x="698.4" y="947.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.4" y="958.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="698.5" y="931.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.5" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$340/1089963118.apply (5 samples, 0.03%)</title><rect x="698.8" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (33 samples, 0.20%)</title><rect x="699.2" y="963.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.2" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 0.20%)</title><rect x="699.2" y="947.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.2" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.04%)</title><rect x="700.8" y="931.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="703.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5 samples, 0.03%)</title><rect x="701.2" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (296 samples, 1.81%)</title><rect x="701.6" y="963.0" width="21.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.6" y="974.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (23 samples, 0.14%)</title><rect x="702.6" y="947.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.6" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6 samples, 0.04%)</title><rect x="703.7" y="931.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (30 samples, 0.18%)</title><rect x="704.5" y="947.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (30 samples, 0.18%)</title><rect x="704.5" y="931.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.5" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (28 samples, 0.17%)</title><rect x="704.6" y="915.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.6" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (25 samples, 0.15%)</title><rect x="704.7" y="899.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.15%)</title><rect x="704.7" y="883.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.7" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.05%)</title><rect x="704.9" y="867.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.9" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.05%)</title><rect x="704.9" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.9" y="862.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.05%)</title><rect x="704.9" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.05%)</title><rect x="704.9" y="819.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.9" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.04%)</title><rect x="704.9" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.9" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.04%)</title><rect x="704.9" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.9" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (5 samples, 0.03%)</title><rect x="705.1" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.03%)</title><rect x="705.1" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.03%)</title><rect x="705.1" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.03%)</title><rect x="705.1" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$314/1939218927.accept (5 samples, 0.03%)</title><rect x="705.1" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (8 samples, 0.05%)</title><rect x="705.5" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.5" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.04%)</title><rect x="705.7" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$332/1010896139.apply (4 samples, 0.02%)</title><rect x="706.2" y="867.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (225 samples, 1.37%)</title><rect x="706.7" y="947.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.7" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (49 samples, 0.30%)</title><rect x="707.5" y="931.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.5" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (45 samples, 0.27%)</title><rect x="707.8" y="915.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.8" y="926.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (40 samples, 0.24%)</title><rect x="708.0" y="899.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.0" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (39 samples, 0.24%)</title><rect x="708.0" y="883.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.0" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (36 samples, 0.22%)</title><rect x="708.3" y="867.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.3" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14 samples, 0.09%)</title><rect x="708.5" y="851.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (4 samples, 0.02%)</title><rect x="708.5" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (7 samples, 0.04%)</title><rect x="709.0" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.04%)</title><rect x="709.0" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.04%)</title><rect x="709.0" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.03%)</title><rect x="709.1" y="787.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (19 samples, 0.12%)</title><rect x="709.5" y="851.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (11 samples, 0.07%)</title><rect x="709.9" y="835.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.9" y="846.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (10 samples, 0.06%)</title><rect x="709.9" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.9" y="830.0"></text>
</g>
<g>
<title>vtable stub (8 samples, 0.05%)</title><rect x="710.1" y="803.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="713.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.size (8 samples, 0.05%)</title><rect x="711.2" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (14 samples, 0.09%)</title><rect x="712.0" y="931.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.0" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.09%)</title><rect x="712.0" y="915.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.0" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.07%)</title><rect x="712.2" y="899.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.2" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (10 samples, 0.06%)</title><rect x="712.2" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.2" y="894.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10 samples, 0.06%)</title><rect x="712.2" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.2" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (10 samples, 0.06%)</title><rect x="712.2" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.04%)</title><rect x="712.5" y="835.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.02%)</title><rect x="712.7" y="819.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (137 samples, 0.84%)</title><rect x="713.0" y="931.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.0" y="942.0"></text>
</g>
<g>
<title>java/util/Collection.stream (134 samples, 0.82%)</title><rect x="713.0" y="915.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (133 samples, 0.81%)</title><rect x="713.0" y="899.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (133 samples, 0.81%)</title><rect x="713.0" y="883.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (130 samples, 0.79%)</title><rect x="713.2" y="867.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (7 samples, 0.04%)</title><rect x="713.3" y="851.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (7 samples, 0.04%)</title><rect x="713.3" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.04%)</title><rect x="713.3" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="713.3" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="716.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="713.3" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.3" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="713.4" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (122 samples, 0.74%)</title><rect x="713.8" y="851.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (122 samples, 0.74%)</title><rect x="713.8" y="835.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (32 samples, 0.20%)</title><rect x="713.9" y="819.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.9" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (32 samples, 0.20%)</title><rect x="713.9" y="803.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (32 samples, 0.20%)</title><rect x="713.9" y="787.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.9" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (22 samples, 0.13%)</title><rect x="714.6" y="771.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (89 samples, 0.54%)</title><rect x="716.2" y="819.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="719.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (82 samples, 0.50%)</title><rect x="716.7" y="803.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (81 samples, 0.49%)</title><rect x="716.8" y="787.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (81 samples, 0.49%)</title><rect x="716.8" y="771.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.8" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (35 samples, 0.21%)</title><rect x="720.1" y="755.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (932 samples, 5.69%)</title><rect x="722.9" y="1027.0" width="67.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.9" y="1038.0">ru/mail..</text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (4 samples, 0.02%)</title><rect x="723.5" y="1011.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.5" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (4 samples, 0.02%)</title><rect x="723.5" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (4 samples, 0.02%)</title><rect x="723.8" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.02%)</title><rect x="723.8" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (407 samples, 2.48%)</title><rect x="724.1" y="1011.0" width="29.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="727.1" y="1022.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (406 samples, 2.48%)</title><rect x="724.2" y="995.0" width="29.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.2" y="1006.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (406 samples, 2.48%)</title><rect x="724.2" y="979.0" width="29.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.2" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (406 samples, 2.48%)</title><rect x="724.2" y="963.0" width="29.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.2" y="974.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.02%)</title><rect x="724.8" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.02%)</title><rect x="724.8" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (261 samples, 1.59%)</title><rect x="725.1" y="947.0" width="18.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.1" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (27 samples, 0.16%)</title><rect x="725.6" y="931.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (9 samples, 0.05%)</title><rect x="725.6" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.6" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (7 samples, 0.04%)</title><rect x="725.8" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.8" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.04%)</title><rect x="725.8" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.8" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.04%)</title><rect x="725.8" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.8" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.04%)</title><rect x="725.8" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.8" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (16 samples, 0.10%)</title><rect x="726.4" y="915.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.4" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.10%)</title><rect x="726.4" y="899.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (16 samples, 0.10%)</title><rect x="726.4" y="883.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.10%)</title><rect x="726.4" y="867.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (11 samples, 0.07%)</title><rect x="726.4" y="851.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (6 samples, 0.04%)</title><rect x="726.4" y="835.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.4" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.03%)</title><rect x="726.8" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.8" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.03%)</title><rect x="727.2" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.2" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (27 samples, 0.16%)</title><rect x="727.6" y="931.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (26 samples, 0.16%)</title><rect x="727.6" y="915.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.6" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (23 samples, 0.14%)</title><rect x="727.8" y="899.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.8" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (19 samples, 0.12%)</title><rect x="728.1" y="883.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.1" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (19 samples, 0.12%)</title><rect x="728.1" y="867.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.1" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (19 samples, 0.12%)</title><rect x="728.1" y="851.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (10 samples, 0.06%)</title><rect x="728.2" y="835.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.2" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (10 samples, 0.06%)</title><rect x="728.2" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.2" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (10 samples, 0.06%)</title><rect x="728.2" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/409962262.test (8 samples, 0.05%)</title><rect x="728.4" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (8 samples, 0.05%)</title><rect x="728.4" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1522132780.test (4 samples, 0.02%)</title><rect x="728.4" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.02%)</title><rect x="728.4" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.4" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.02%)</title><rect x="728.4" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (4 samples, 0.02%)</title><rect x="728.4" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (4 samples, 0.02%)</title><rect x="728.4" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.4" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.02%)</title><rect x="728.4" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (187 samples, 1.14%)</title><rect x="729.8" y="931.0" width="13.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.8" y="942.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (187 samples, 1.14%)</title><rect x="729.8" y="915.0" width="13.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.04%)</title><rect x="730.6" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.04%)</title><rect x="730.6" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.6" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (169 samples, 1.03%)</title><rect x="731.1" y="899.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.1" y="910.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (105 samples, 0.64%)</title><rect x="731.5" y="883.0" width="7.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="734.5" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (7 samples, 0.04%)</title><rect x="732.5" y="867.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="735.5" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (7 samples, 0.04%)</title><rect x="732.5" y="851.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="735.5" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (19 samples, 0.12%)</title><rect x="733.2" y="867.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="736.2" y="878.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.03%)</title><rect x="733.8" y="851.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="736.8" y="862.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.02%)</title><rect x="734.8" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="737.8" y="878.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (32 samples, 0.20%)</title><rect x="735.6" y="867.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="738.6" y="878.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (22 samples, 0.13%)</title><rect x="736.2" y="851.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="739.2" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (13 samples, 0.08%)</title><rect x="736.4" y="835.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="739.4" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.02%)</title><rect x="737.3" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="740.3" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (16 samples, 0.10%)</title><rect x="737.9" y="867.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="740.9" y="878.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.03%)</title><rect x="738.2" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="741.2" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.04%)</title><rect x="738.5" y="851.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="741.5" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (6 samples, 0.04%)</title><rect x="738.6" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="741.6" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.03%)</title><rect x="738.6" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="741.6" y="830.0"></text>
</g>
<g>
<title>call_stub (6 samples, 0.04%)</title><rect x="739.2" y="883.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="742.2" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (41 samples, 0.25%)</title><rect x="740.0" y="883.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.0" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (41 samples, 0.25%)</title><rect x="740.0" y="867.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (16 samples, 0.10%)</title><rect x="740.5" y="851.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.5" y="862.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (14 samples, 0.09%)</title><rect x="740.7" y="835.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="743.7" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (12 samples, 0.07%)</title><rect x="740.8" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.8" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (12 samples, 0.07%)</title><rect x="740.8" y="803.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.8" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="741.4" y="787.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="744.4" y="798.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (18 samples, 0.11%)</title><rect x="741.7" y="851.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.7" y="862.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (4 samples, 0.02%)</title><rect x="742.0" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.0" y="846.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.02%)</title><rect x="742.0" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.0" y="830.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (10 samples, 0.06%)</title><rect x="742.3" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (10 samples, 0.06%)</title><rect x="742.3" y="819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.05%)</title><rect x="742.4" y="803.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (8 samples, 0.05%)</title><rect x="742.4" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.03%)</title><rect x="743.3" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (4 samples, 0.02%)</title><rect x="743.6" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (57 samples, 0.35%)</title><rect x="743.9" y="947.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (57 samples, 0.35%)</title><rect x="743.9" y="931.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (57 samples, 0.35%)</title><rect x="743.9" y="915.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.9" y="926.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (10 samples, 0.06%)</title><rect x="744.9" y="899.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.9" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (6 samples, 0.04%)</title><rect x="745.2" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.2" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.arrayContentsEq (6 samples, 0.04%)</title><rect x="745.2" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.2" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (21 samples, 0.13%)</title><rect x="745.6" y="899.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.6" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (15 samples, 0.09%)</title><rect x="746.0" y="883.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.0" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (10 samples, 0.06%)</title><rect x="746.4" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.4" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (10 samples, 0.06%)</title><rect x="746.4" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (7 samples, 0.04%)</title><rect x="746.6" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (7 samples, 0.04%)</title><rect x="746.6" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.6" y="830.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (5 samples, 0.03%)</title><rect x="746.7" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (5 samples, 0.03%)</title><rect x="747.2" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.2" y="910.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.03%)</title><rect x="747.7" y="899.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="750.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (75 samples, 0.46%)</title><rect x="748.0" y="947.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (66 samples, 0.40%)</title><rect x="748.0" y="931.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (66 samples, 0.40%)</title><rect x="748.0" y="915.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (64 samples, 0.39%)</title><rect x="748.2" y="899.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (49 samples, 0.30%)</title><rect x="748.2" y="883.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (49 samples, 0.30%)</title><rect x="748.2" y="867.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (49 samples, 0.30%)</title><rect x="748.2" y="851.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (49 samples, 0.30%)</title><rect x="748.2" y="835.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 0.30%)</title><rect x="748.2" y="819.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (46 samples, 0.28%)</title><rect x="748.4" y="803.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.4" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.04%)</title><rect x="748.4" y="787.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="751.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (36 samples, 0.22%)</title><rect x="748.9" y="787.0" width="2.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="751.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.18%)</title><rect x="749.4" y="771.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="752.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.18%)</title><rect x="749.4" y="755.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="752.4" y="766.0"></text>
</g>
<g>
<title>sys_futex (26 samples, 0.16%)</title><rect x="749.6" y="739.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="752.6" y="750.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.16%)</title><rect x="749.6" y="723.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="752.6" y="734.0"></text>
</g>
<g>
<title>futex_wake_op (25 samples, 0.15%)</title><rect x="749.7" y="707.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="752.7" y="718.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.12%)</title><rect x="750.0" y="691.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="753.0" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.12%)</title><rect x="750.0" y="675.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="753.0" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.12%)</title><rect x="750.0" y="659.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="753.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.09%)</title><rect x="751.8" y="883.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.09%)</title><rect x="751.8" y="867.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.09%)</title><rect x="751.8" y="851.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.09%)</title><rect x="751.8" y="835.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (9 samples, 0.05%)</title><rect x="752.8" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.05%)</title><rect x="752.8" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (33 samples, 0.20%)</title><rect x="753.5" y="1011.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.5" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (23 samples, 0.14%)</title><rect x="754.1" y="995.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.1" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (22 samples, 0.13%)</title><rect x="754.2" y="979.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (21 samples, 0.13%)</title><rect x="754.3" y="963.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.02%)</title><rect x="755.2" y="947.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.2" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (5 samples, 0.03%)</title><rect x="755.4" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getLocalResults (148 samples, 0.90%)</title><rect x="755.9" y="1011.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (148 samples, 0.90%)</title><rect x="755.9" y="995.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (148 samples, 0.90%)</title><rect x="755.9" y="979.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="758.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (148 samples, 0.90%)</title><rect x="755.9" y="963.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (148 samples, 0.90%)</title><rect x="755.9" y="947.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.02%)</title><rect x="755.9" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.02%)</title><rect x="755.9" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.02%)</title><rect x="755.9" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (144 samples, 0.88%)</title><rect x="756.2" y="931.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (144 samples, 0.88%)</title><rect x="756.2" y="915.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (135 samples, 0.82%)</title><rect x="756.4" y="899.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (123 samples, 0.75%)</title><rect x="757.3" y="883.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.3" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.09%)</title><rect x="757.6" y="867.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="760.6" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (104 samples, 0.63%)</title><rect x="758.6" y="867.0" width="7.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="761.6" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 0.50%)</title><rect x="760.2" y="851.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="763.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (81 samples, 0.49%)</title><rect x="760.2" y="835.0" width="5.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="763.2" y="846.0"></text>
</g>
<g>
<title>sys_futex (77 samples, 0.47%)</title><rect x="760.5" y="819.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="763.5" y="830.0"></text>
</g>
<g>
<title>do_futex (74 samples, 0.45%)</title><rect x="760.6" y="803.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="763.6" y="814.0"></text>
</g>
<g>
<title>futex_wake_op (70 samples, 0.43%)</title><rect x="760.8" y="787.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="763.8" y="798.0"></text>
</g>
<g>
<title>wake_up_q (57 samples, 0.35%)</title><rect x="761.8" y="771.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="764.8" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (56 samples, 0.34%)</title><rect x="761.9" y="755.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="764.9" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (55 samples, 0.34%)</title><rect x="761.9" y="739.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="764.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$269/1852062420.act (5 samples, 0.03%)</title><rect x="766.2" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.requestForReplica (326 samples, 1.99%)</title><rect x="766.5" y="1011.0" width="23.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.5" y="1022.0">r..</text>
</g>
<g>
<title>java/lang/Object.toString (28 samples, 0.17%)</title><rect x="767.0" y="995.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/Class.getName (6 samples, 0.04%)</title><rect x="767.0" y="979.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.0" y="990.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="767.2" y="963.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="770.2" y="974.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (4 samples, 0.02%)</title><rect x="767.5" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.5" y="990.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (4 samples, 0.02%)</title><rect x="767.5" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.5" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (18 samples, 0.11%)</title><rect x="767.8" y="979.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.8" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.07%)</title><rect x="768.2" y="963.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.2" y="974.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (7 samples, 0.04%)</title><rect x="768.3" y="947.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.3" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (7 samples, 0.04%)</title><rect x="768.3" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.3" y="942.0"></text>
</g>
<g>
<title>java/net/URI.create (145 samples, 0.89%)</title><rect x="769.1" y="995.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.1" y="1006.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (145 samples, 0.89%)</title><rect x="769.1" y="979.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.1" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (132 samples, 0.81%)</title><rect x="769.6" y="963.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.6" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (8 samples, 0.05%)</title><rect x="771.8" y="947.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.8" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.05%)</title><rect x="771.8" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="774.8" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (93 samples, 0.57%)</title><rect x="772.4" y="947.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.4" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (27 samples, 0.16%)</title><rect x="772.4" y="931.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.4" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (27 samples, 0.16%)</title><rect x="772.4" y="915.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.4" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (65 samples, 0.40%)</title><rect x="774.4" y="931.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.4" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (26 samples, 0.16%)</title><rect x="775.5" y="915.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.5" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (8 samples, 0.05%)</title><rect x="775.8" y="899.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.8" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.05%)</title><rect x="775.8" y="883.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.8" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (9 samples, 0.05%)</title><rect x="776.3" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.3" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (9 samples, 0.05%)</title><rect x="776.3" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.3" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (6 samples, 0.04%)</title><rect x="777.0" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.0" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (6 samples, 0.04%)</title><rect x="777.0" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.0" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.04%)</title><rect x="777.0" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.0" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (23 samples, 0.14%)</title><rect x="777.4" y="915.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.4" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="779.2" y="963.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="782.2" y="974.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (33 samples, 0.20%)</title><rect x="779.6" y="995.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (33 samples, 0.20%)</title><rect x="779.6" y="979.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.6" y="990.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (30 samples, 0.18%)</title><rect x="779.6" y="963.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.6" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (30 samples, 0.18%)</title><rect x="779.6" y="947.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.6" y="958.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.&lt;init&gt; (30 samples, 0.18%)</title><rect x="779.6" y="931.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.6" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (30 samples, 0.18%)</title><rect x="779.6" y="915.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.6" y="926.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.limit (27 samples, 0.16%)</title><rect x="779.6" y="899.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.6" y="910.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.limit (27 samples, 0.16%)</title><rect x="779.6" y="883.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (55 samples, 0.34%)</title><rect x="781.9" y="995.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (53 samples, 0.32%)</title><rect x="782.1" y="979.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.1" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (47 samples, 0.29%)</title><rect x="782.1" y="963.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="785.1" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (47 samples, 0.29%)</title><rect x="782.1" y="947.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.1" y="958.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="782.8" y="931.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="785.8" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (32 samples, 0.20%)</title><rect x="783.1" y="931.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.1" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (27 samples, 0.16%)</title><rect x="783.4" y="915.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.4" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (18 samples, 0.11%)</title><rect x="783.8" y="899.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.8" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (13 samples, 0.08%)</title><rect x="784.0" y="883.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (9 samples, 0.05%)</title><rect x="784.3" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.3" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (9 samples, 0.05%)</title><rect x="784.3" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1522132780.test (5 samples, 0.03%)</title><rect x="784.5" y="835.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.03%)</title><rect x="784.5" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.5" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (5 samples, 0.03%)</title><rect x="784.5" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (5 samples, 0.03%)</title><rect x="784.5" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.5" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (5 samples, 0.03%)</title><rect x="784.5" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.03%)</title><rect x="784.5" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.5" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.03%)</title><rect x="784.5" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="784.5" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="784.5" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="787.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.03%)</title><rect x="784.5" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.5" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (6 samples, 0.04%)</title><rect x="785.5" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (39 samples, 0.24%)</title><rect x="785.9" y="995.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (34 samples, 0.21%)</title><rect x="786.3" y="979.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (34 samples, 0.21%)</title><rect x="786.3" y="963.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (23 samples, 0.14%)</title><rect x="786.3" y="947.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1522132780.test (17 samples, 0.10%)</title><rect x="786.3" y="931.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (17 samples, 0.10%)</title><rect x="786.3" y="915.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.3" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (17 samples, 0.10%)</title><rect x="786.3" y="899.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.3" y="910.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (17 samples, 0.10%)</title><rect x="786.3" y="883.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.3" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (17 samples, 0.10%)</title><rect x="786.3" y="867.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.3" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (17 samples, 0.10%)</title><rect x="786.3" y="851.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.3" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (11 samples, 0.07%)</title><rect x="786.7" y="835.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (11 samples, 0.07%)</title><rect x="786.7" y="819.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (11 samples, 0.07%)</title><rect x="786.7" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (11 samples, 0.07%)</title><rect x="786.7" y="787.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.03%)</title><rect x="786.7" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.02%)</title><rect x="786.7" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.7" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (6 samples, 0.04%)</title><rect x="787.1" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (5 samples, 0.03%)</title><rect x="787.6" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (11 samples, 0.07%)</title><rect x="787.9" y="947.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.9" y="958.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (11 samples, 0.07%)</title><rect x="787.9" y="931.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.9" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.04%)</title><rect x="788.1" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.1" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.04%)</title><rect x="788.1" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.1" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.03%)</title><rect x="788.2" y="883.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (14 samples, 0.09%)</title><rect x="788.7" y="995.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (14 samples, 0.09%)</title><rect x="788.7" y="979.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (14 samples, 0.09%)</title><rect x="788.7" y="963.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (14 samples, 0.09%)</title><rect x="788.7" y="947.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.03%)</title><rect x="789.4" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Decoder.decodeArrayLoop (4 samples, 0.02%)</title><rect x="789.7" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,060 samples, 12.57%)</title><rect x="790.0" y="1139.0" width="148.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.0" y="1150.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,060 samples, 12.57%)</title><rect x="790.0" y="1123.0" width="148.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.0" y="1134.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,381 samples, 8.43%)</title><rect x="791.2" y="1107.0" width="99.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.2" y="1118.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,350 samples, 8.24%)</title><rect x="792.5" y="1091.0" width="97.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.5" y="1102.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (9 samples, 0.05%)</title><rect x="796.3" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (4 samples, 0.02%)</title><rect x="796.9" y="1075.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,284 samples, 7.84%)</title><rect x="797.2" y="1075.0" width="92.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.2" y="1086.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (338 samples, 2.06%)</title><rect x="797.4" y="1059.0" width="24.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.4" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (338 samples, 2.06%)</title><rect x="797.4" y="1043.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.4" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.04%)</title><rect x="798.0" y="1027.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.04%)</title><rect x="798.0" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.02%)</title><rect x="798.2" y="995.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$114/2034975849.get (320 samples, 1.95%)</title><rect x="798.7" y="1027.0" width="23.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.7" y="1038.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getLocalResults$8 (317 samples, 1.94%)</title><rect x="798.9" y="1011.0" width="22.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.9" y="1022.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getTimestamp (17 samples, 0.10%)</title><rect x="798.9" y="995.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (6 samples, 0.04%)</title><rect x="798.9" y="979.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.9" y="990.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (6 samples, 0.04%)</title><rect x="798.9" y="963.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (11 samples, 0.07%)</title><rect x="799.3" y="979.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$269/1852062420.act (300 samples, 1.83%)</title><rect x="800.1" y="995.0" width="21.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.1" y="1006.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$2 (300 samples, 1.83%)</title><rect x="800.1" y="979.0" width="21.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.1" y="990.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (297 samples, 1.81%)</title><rect x="800.3" y="963.0" width="21.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.3" y="974.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (112 samples, 0.68%)</title><rect x="800.4" y="947.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.4" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (12 samples, 0.07%)</title><rect x="800.4" y="931.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.4" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (9 samples, 0.05%)</title><rect x="800.6" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.6" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.05%)</title><rect x="800.7" y="899.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.7" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.05%)</title><rect x="800.7" y="883.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.7" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.05%)</title><rect x="800.7" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.7" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (8 samples, 0.05%)</title><rect x="801.3" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.3" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (8 samples, 0.05%)</title><rect x="801.3" y="915.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.3" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$363/504005016.apply (8 samples, 0.05%)</title><rect x="801.3" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (8 samples, 0.05%)</title><rect x="801.3" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.3" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (8 samples, 0.05%)</title><rect x="801.3" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.3" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="801.3" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.3" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (8 samples, 0.05%)</title><rect x="801.3" y="835.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.3" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="801.3" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="801.3" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.3" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="801.3" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (90 samples, 0.55%)</title><rect x="802.0" y="931.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.0" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.04%)</title><rect x="802.5" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.04%)</title><rect x="802.5" y="899.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.04%)</title><rect x="802.5" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.5" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (6 samples, 0.04%)</title><rect x="802.5" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.04%)</title><rect x="802.5" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.5" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.02%)</title><rect x="802.5" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (77 samples, 0.47%)</title><rect x="802.9" y="915.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.9" y="926.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.03%)</title><rect x="802.9" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.03%)</title><rect x="802.9" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="803.0" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.02%)</title><rect x="803.0" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="806.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (69 samples, 0.42%)</title><rect x="803.5" y="899.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (9 samples, 0.05%)</title><rect x="803.7" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="806.7" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="803.8" y="867.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.8" y="878.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.03%)</title><rect x="804.0" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.03%)</title><rect x="804.0" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.03%)</title><rect x="804.0" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (4 samples, 0.02%)</title><rect x="804.1" y="803.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (53 samples, 0.32%)</title><rect x="804.6" y="883.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.6" y="894.0"></text>
</g>
<g>
<title>java/util/Collection.stream (53 samples, 0.32%)</title><rect x="804.6" y="867.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (52 samples, 0.32%)</title><rect x="804.6" y="851.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (52 samples, 0.32%)</title><rect x="804.6" y="835.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (52 samples, 0.32%)</title><rect x="804.6" y="819.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (50 samples, 0.31%)</title><rect x="804.8" y="803.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (50 samples, 0.31%)</title><rect x="804.8" y="787.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (17 samples, 0.10%)</title><rect x="804.9" y="771.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (17 samples, 0.10%)</title><rect x="804.9" y="755.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (17 samples, 0.10%)</title><rect x="804.9" y="739.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.9" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.07%)</title><rect x="805.3" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (32 samples, 0.20%)</title><rect x="806.1" y="771.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="809.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (30 samples, 0.18%)</title><rect x="806.2" y="755.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (30 samples, 0.18%)</title><rect x="806.2" y="739.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (30 samples, 0.18%)</title><rect x="806.2" y="723.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.2" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (22 samples, 0.13%)</title><rect x="806.8" y="707.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (184 samples, 1.12%)</title><rect x="808.5" y="947.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.08%)</title><rect x="808.8" y="931.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="811.8" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.04%)</title><rect x="808.9" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.9" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (6 samples, 0.04%)</title><rect x="808.9" y="899.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.04%)</title><rect x="808.9" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="811.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (15 samples, 0.09%)</title><rect x="809.8" y="931.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.8" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.09%)</title><rect x="809.8" y="915.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (151 samples, 0.92%)</title><rect x="810.8" y="931.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.8" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (11 samples, 0.07%)</title><rect x="810.8" y="915.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.07%)</title><rect x="811.9" y="915.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.9" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 0.07%)</title><rect x="811.9" y="899.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.9" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.06%)</title><rect x="812.1" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.1" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (10 samples, 0.06%)</title><rect x="812.1" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.06%)</title><rect x="812.1" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.1" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.02%)</title><rect x="812.3" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (124 samples, 0.76%)</title><rect x="812.8" y="915.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.8" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (29 samples, 0.18%)</title><rect x="813.3" y="899.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.3" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 0.16%)</title><rect x="813.5" y="883.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.5" y="894.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (22 samples, 0.13%)</title><rect x="813.8" y="867.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="816.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (21 samples, 0.13%)</title><rect x="813.9" y="851.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (20 samples, 0.12%)</title><rect x="813.9" y="835.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.04%)</title><rect x="814.1" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="817.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (6 samples, 0.04%)</title><rect x="814.1" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.04%)</title><rect x="814.1" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.04%)</title><rect x="814.1" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.02%)</title><rect x="814.3" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$314/1939218927.accept (4 samples, 0.02%)</title><rect x="814.3" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (10 samples, 0.06%)</title><rect x="814.7" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.7" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.04%)</title><rect x="814.9" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="817.9" y="814.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (6 samples, 0.04%)</title><rect x="814.9" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.9" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.02%)</title><rect x="814.9" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.size (7 samples, 0.04%)</title><rect x="815.5" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (77 samples, 0.47%)</title><rect x="816.2" y="899.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.2" y="910.0"></text>
</g>
<g>
<title>java/util/Collection.stream (77 samples, 0.47%)</title><rect x="816.2" y="883.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (77 samples, 0.47%)</title><rect x="816.2" y="867.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (76 samples, 0.46%)</title><rect x="816.2" y="851.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (75 samples, 0.46%)</title><rect x="816.3" y="835.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (72 samples, 0.44%)</title><rect x="816.5" y="819.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (72 samples, 0.44%)</title><rect x="816.5" y="803.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (12 samples, 0.07%)</title><rect x="816.5" y="787.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.07%)</title><rect x="816.6" y="771.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.07%)</title><rect x="816.6" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (60 samples, 0.37%)</title><rect x="817.4" y="787.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (56 samples, 0.34%)</title><rect x="817.7" y="771.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (55 samples, 0.34%)</title><rect x="817.7" y="755.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (55 samples, 0.34%)</title><rect x="817.7" y="739.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.7" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (27 samples, 0.16%)</title><rect x="819.8" y="723.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (944 samples, 5.76%)</title><rect x="821.7" y="1059.0" width="68.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.7" y="1070.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (944 samples, 5.76%)</title><rect x="821.7" y="1043.0" width="68.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.7" y="1054.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (298 samples, 1.82%)</title><rect x="822.2" y="1027.0" width="21.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.2" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (297 samples, 1.81%)</title><rect x="822.3" y="1011.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.3" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (144 samples, 0.88%)</title><rect x="822.4" y="995.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (12 samples, 0.07%)</title><rect x="823.9" y="979.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.07%)</title><rect x="823.9" y="963.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.9" y="974.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="823.9" y="947.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="826.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/649285409.apply (7 samples, 0.04%)</title><rect x="824.3" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/649285409.apply (111 samples, 0.68%)</title><rect x="824.8" y="979.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$replication$7 (111 samples, 0.68%)</title><rect x="824.8" y="963.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.8" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (97 samples, 0.59%)</title><rect x="825.3" y="947.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.3" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (31 samples, 0.19%)</title><rect x="825.5" y="931.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.5" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (27 samples, 0.16%)</title><rect x="825.8" y="915.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (27 samples, 0.16%)</title><rect x="825.8" y="899.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.8" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (27 samples, 0.16%)</title><rect x="825.8" y="883.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.8" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (27 samples, 0.16%)</title><rect x="825.8" y="867.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (10 samples, 0.06%)</title><rect x="827.0" y="851.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (10 samples, 0.06%)</title><rect x="827.0" y="835.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (10 samples, 0.06%)</title><rect x="827.0" y="819.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.0" y="830.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.06%)</title><rect x="827.8" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.8" y="942.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.06%)</title><rect x="827.8" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.8" y="926.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (9 samples, 0.05%)</title><rect x="827.8" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (52 samples, 0.32%)</title><rect x="828.5" y="931.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (52 samples, 0.32%)</title><rect x="828.5" y="915.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.5" y="926.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (52 samples, 0.32%)</title><rect x="828.5" y="899.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (47 samples, 0.29%)</title><rect x="828.8" y="883.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.8" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (25 samples, 0.15%)</title><rect x="828.8" y="867.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (23 samples, 0.14%)</title><rect x="829.0" y="851.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (19 samples, 0.12%)</title><rect x="829.1" y="835.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.1" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (15 samples, 0.09%)</title><rect x="829.2" y="819.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (15 samples, 0.09%)</title><rect x="829.2" y="803.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.2" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$241/1632645541.applyAsLong (9 samples, 0.05%)</title><rect x="829.2" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (4 samples, 0.02%)</title><rect x="829.6" y="771.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (4 samples, 0.02%)</title><rect x="829.6" y="755.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (6 samples, 0.04%)</title><rect x="829.8" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (4 samples, 0.02%)</title><rect x="829.8" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (22 samples, 0.13%)</title><rect x="830.6" y="867.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.6" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (9 samples, 0.05%)</title><rect x="831.6" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (9 samples, 0.05%)</title><rect x="831.6" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.6" y="846.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (9 samples, 0.05%)</title><rect x="831.6" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.6" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.04%)</title><rect x="832.3" y="947.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="835.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (10 samples, 0.06%)</title><rect x="832.8" y="995.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (136 samples, 0.83%)</title><rect x="833.5" y="995.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="836.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (132 samples, 0.81%)</title><rect x="833.8" y="979.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.04%)</title><rect x="833.8" y="963.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$129/50164514.accept (125 samples, 0.76%)</title><rect x="834.3" y="963.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$collect$2 (125 samples, 0.76%)</title><rect x="834.3" y="947.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (125 samples, 0.76%)</title><rect x="834.3" y="931.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (125 samples, 0.76%)</title><rect x="834.3" y="915.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (118 samples, 0.72%)</title><rect x="834.8" y="899.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (117 samples, 0.71%)</title><rect x="834.9" y="883.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (117 samples, 0.71%)</title><rect x="834.9" y="867.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (117 samples, 0.71%)</title><rect x="834.9" y="851.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (117 samples, 0.71%)</title><rect x="834.9" y="835.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="837.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (117 samples, 0.71%)</title><rect x="834.9" y="819.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (117 samples, 0.71%)</title><rect x="834.9" y="803.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (117 samples, 0.71%)</title><rect x="834.9" y="787.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (112 samples, 0.68%)</title><rect x="835.3" y="771.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.3" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.13%)</title><rect x="835.4" y="755.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="838.4" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.02%)</title><rect x="836.1" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="839.1" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.02%)</title><rect x="836.4" y="739.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="839.4" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (89 samples, 0.54%)</title><rect x="836.9" y="755.0" width="6.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="839.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 0.42%)</title><rect x="838.3" y="739.0" width="5.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="841.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (69 samples, 0.42%)</title><rect x="838.3" y="723.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="841.3" y="734.0"></text>
</g>
<g>
<title>sys_futex (64 samples, 0.39%)</title><rect x="838.7" y="707.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="841.7" y="718.0"></text>
</g>
<g>
<title>do_futex (63 samples, 0.38%)</title><rect x="838.8" y="691.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="841.8" y="702.0"></text>
</g>
<g>
<title>futex_wake_op (59 samples, 0.36%)</title><rect x="839.0" y="675.0" width="4.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="842.0" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.02%)</title><rect x="839.3" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="842.3" y="670.0"></text>
</g>
<g>
<title>wake_up_q (51 samples, 0.31%)</title><rect x="839.6" y="659.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="842.6" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (51 samples, 0.31%)</title><rect x="839.6" y="643.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="842.6" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (51 samples, 0.31%)</title><rect x="839.6" y="627.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="842.6" y="638.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.03%)</title><rect x="843.3" y="995.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="846.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (639 samples, 3.90%)</title><rect x="843.7" y="1027.0" width="46.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.7" y="1038.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (21 samples, 0.13%)</title><rect x="844.2" y="1011.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.2" y="1022.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.07%)</title><rect x="844.5" y="995.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="847.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$135/773375883.accept (609 samples, 3.72%)</title><rect x="845.8" y="1011.0" width="43.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.8" y="1022.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$merge$0 (605 samples, 3.69%)</title><rect x="846.1" y="995.0" width="43.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.1" y="1006.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (600 samples, 3.66%)</title><rect x="846.4" y="979.0" width="43.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.4" y="990.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (600 samples, 3.66%)</title><rect x="846.4" y="963.0" width="43.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.4" y="974.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (592 samples, 3.61%)</title><rect x="846.5" y="947.0" width="42.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.5" y="958.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$138/820274732.accept (587 samples, 3.58%)</title><rect x="846.8" y="931.0" width="42.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.8" y="942.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$executeMethod$5 (587 samples, 3.58%)</title><rect x="846.8" y="915.0" width="42.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.8" y="926.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (587 samples, 3.58%)</title><rect x="846.8" y="899.0" width="42.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.8" y="910.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (581 samples, 3.55%)</title><rect x="847.3" y="883.0" width="41.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.3" y="894.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.03%)</title><rect x="847.6" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="847.6" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="847.6" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (569 samples, 3.47%)</title><rect x="847.9" y="867.0" width="41.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.9" y="878.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.09%)</title><rect x="848.1" y="851.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.07%)</title><rect x="848.4" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (11 samples, 0.07%)</title><rect x="848.4" y="819.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (552 samples, 3.37%)</title><rect x="849.2" y="851.0" width="39.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.2" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (552 samples, 3.37%)</title><rect x="849.2" y="835.0" width="39.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.2" y="846.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (546 samples, 3.33%)</title><rect x="849.6" y="819.0" width="39.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.6" y="830.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (546 samples, 3.33%)</title><rect x="849.6" y="803.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.6" y="814.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 0.07%)</title><rect x="849.6" y="787.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="852.6" y="798.0"></text>
</g>
<g>
<title>send (527 samples, 3.22%)</title><rect x="850.8" y="787.0" width="38.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="853.8" y="798.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (515 samples, 3.14%)</title><rect x="851.7" y="771.0" width="37.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="854.7" y="782.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (513 samples, 3.13%)</title><rect x="851.7" y="755.0" width="37.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="854.7" y="766.0">do_..</text>
</g>
<g>
<title>sys_sendto (506 samples, 3.09%)</title><rect x="852.3" y="739.0" width="36.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="855.3" y="750.0">sys..</text>
</g>
<g>
<title>SYSC_sendto (505 samples, 3.08%)</title><rect x="852.3" y="723.0" width="36.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="855.3" y="734.0">SYS..</text>
</g>
<g>
<title>sock_sendmsg (495 samples, 3.02%)</title><rect x="852.7" y="707.0" width="35.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="855.7" y="718.0">soc..</text>
</g>
<g>
<title>inet_sendmsg (490 samples, 2.99%)</title><rect x="852.7" y="691.0" width="35.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="855.7" y="702.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (486 samples, 2.97%)</title><rect x="853.0" y="675.0" width="35.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="856.0" y="686.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (473 samples, 2.89%)</title><rect x="853.8" y="659.0" width="34.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="856.8" y="670.0">tc..</text>
</g>
<g>
<title>sk_stream_alloc_skb (17 samples, 0.10%)</title><rect x="855.0" y="643.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="858.0" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (16 samples, 0.10%)</title><rect x="855.1" y="627.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="858.1" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (9 samples, 0.05%)</title><rect x="855.2" y="611.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="858.2" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.05%)</title><rect x="855.2" y="595.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="858.2" y="606.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.03%)</title><rect x="855.4" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="858.4" y="590.0"></text>
</g>
<g>
<title>tcp_push (423 samples, 2.58%)</title><rect x="856.5" y="643.0" width="30.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="859.5" y="654.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (421 samples, 2.57%)</title><rect x="856.6" y="627.0" width="30.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="859.6" y="638.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (420 samples, 2.56%)</title><rect x="856.7" y="611.0" width="30.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="859.7" y="622.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (398 samples, 2.43%)</title><rect x="857.3" y="595.0" width="28.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="860.3" y="606.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (383 samples, 2.34%)</title><rect x="858.0" y="579.0" width="27.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="861.0" y="590.0">i..</text>
</g>
<g>
<title>ip_local_out (378 samples, 2.31%)</title><rect x="858.3" y="563.0" width="27.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="861.3" y="574.0">i..</text>
</g>
<g>
<title>__ip_local_out (67 samples, 0.41%)</title><rect x="858.4" y="547.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="861.4" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (58 samples, 0.35%)</title><rect x="859.0" y="531.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="862.0" y="542.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (6 samples, 0.04%)</title><rect x="859.3" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="862.3" y="526.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.04%)</title><rect x="859.3" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="862.3" y="510.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (43 samples, 0.26%)</title><rect x="860.0" y="515.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="863.0" y="526.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (35 samples, 0.21%)</title><rect x="860.2" y="499.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="863.2" y="510.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (9 samples, 0.05%)</title><rect x="860.4" y="483.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="863.4" y="494.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (12 samples, 0.07%)</title><rect x="861.8" y="483.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="864.8" y="494.0"></text>
</g>
<g>
<title>ip_output (308 samples, 1.88%)</title><rect x="863.2" y="547.0" width="22.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="866.2" y="558.0">i..</text>
</g>
<g>
<title>ip_finish_output (292 samples, 1.78%)</title><rect x="863.3" y="531.0" width="21.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="866.3" y="542.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (290 samples, 1.77%)</title><rect x="863.4" y="515.0" width="20.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="866.4" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (259 samples, 1.58%)</title><rect x="864.1" y="499.0" width="18.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="867.1" y="510.0"></text>
</g>
<g>
<title>do_softirq.part.17 (259 samples, 1.58%)</title><rect x="864.1" y="483.0" width="18.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="867.1" y="494.0"></text>
</g>
<g>
<title>do_softirq_own_stack (255 samples, 1.56%)</title><rect x="864.4" y="467.0" width="18.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="867.4" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (254 samples, 1.55%)</title><rect x="864.4" y="451.0" width="18.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="867.4" y="462.0"></text>
</g>
<g>
<title>net_rx_action (246 samples, 1.50%)</title><rect x="864.9" y="435.0" width="17.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="867.9" y="446.0"></text>
</g>
<g>
<title>process_backlog (238 samples, 1.45%)</title><rect x="865.4" y="419.0" width="17.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="868.4" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb (234 samples, 1.43%)</title><rect x="865.6" y="403.0" width="16.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="868.6" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (232 samples, 1.42%)</title><rect x="865.7" y="387.0" width="16.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="868.7" y="398.0"></text>
</g>
<g>
<title>ip_rcv (224 samples, 1.37%)</title><rect x="866.1" y="371.0" width="16.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="869.1" y="382.0"></text>
</g>
<g>
<title>ip_rcv_finish (211 samples, 1.29%)</title><rect x="866.6" y="355.0" width="15.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="869.6" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (208 samples, 1.27%)</title><rect x="866.7" y="339.0" width="15.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="869.7" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (197 samples, 1.20%)</title><rect x="866.7" y="323.0" width="14.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="869.7" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (196 samples, 1.20%)</title><rect x="866.8" y="307.0" width="14.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="869.8" y="318.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.05%)</title><rect x="867.3" y="291.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.3" y="302.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.03%)</title><rect x="867.5" y="275.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="870.5" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (181 samples, 1.10%)</title><rect x="867.9" y="291.0" width="13.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.9" y="302.0"></text>
</g>
<g>
<title>tcp_rcv_established (175 samples, 1.07%)</title><rect x="868.1" y="275.0" width="12.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="871.1" y="286.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (13 samples, 0.08%)</title><rect x="868.2" y="259.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="871.2" y="270.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (13 samples, 0.08%)</title><rect x="868.2" y="243.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="871.2" y="254.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.07%)</title><rect x="868.2" y="227.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.2" y="238.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.07%)</title><rect x="868.3" y="211.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="871.3" y="222.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.05%)</title><rect x="868.5" y="195.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="871.5" y="206.0"></text>
</g>
<g>
<title>tcp_ack (56 samples, 0.34%)</title><rect x="869.2" y="259.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="872.2" y="270.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (33 samples, 0.20%)</title><rect x="870.4" y="243.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.4" y="254.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.10%)</title><rect x="870.8" y="227.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="873.8" y="238.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.04%)</title><rect x="870.8" y="211.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="873.8" y="222.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.02%)</title><rect x="871.0" y="195.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="874.0" y="206.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.06%)</title><rect x="871.3" y="211.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="874.3" y="222.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.04%)</title><rect x="871.3" y="195.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="874.3" y="206.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.02%)</title><rect x="871.5" y="179.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="874.5" y="190.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (7 samples, 0.04%)</title><rect x="872.2" y="227.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="875.2" y="238.0"></text>
</g>
<g>
<title>tcp_data_queue (101 samples, 0.62%)</title><rect x="873.4" y="259.0" width="7.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="876.4" y="270.0"></text>
</g>
<g>
<title>sock_def_readable (92 samples, 0.56%)</title><rect x="873.5" y="243.0" width="6.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="876.5" y="254.0"></text>
</g>
<g>
<title>__wake_up_sync_key (89 samples, 0.54%)</title><rect x="873.7" y="227.0" width="6.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="876.7" y="238.0"></text>
</g>
<g>
<title>__wake_up_common_lock (89 samples, 0.54%)</title><rect x="873.7" y="211.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="876.7" y="222.0"></text>
</g>
<g>
<title>__lock_text_start (88 samples, 0.54%)</title><rect x="873.8" y="195.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="876.8" y="206.0"></text>
</g>
<g>
<title>tcp_event_data_recv (6 samples, 0.04%)</title><rect x="880.1" y="243.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="883.1" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="881.1" y="323.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="884.1" y="334.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.04%)</title><rect x="881.1" y="307.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="884.1" y="318.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.04%)</title><rect x="881.1" y="291.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="884.1" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.04%)</title><rect x="881.8" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="884.8" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (22 samples, 0.13%)</title><rect x="882.7" y="499.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="885.7" y="510.0"></text>
</g>
<g>
<title>__dev_queue_xmit (21 samples, 0.13%)</title><rect x="882.7" y="483.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="885.7" y="494.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (13 samples, 0.08%)</title><rect x="883.0" y="467.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="886.0" y="478.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.04%)</title><rect x="883.4" y="451.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="886.4" y="462.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.03%)</title><rect x="883.5" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="886.5" y="446.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.03%)</title><rect x="883.5" y="419.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="886.5" y="430.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.03%)</title><rect x="883.5" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="886.5" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="884.9" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="887.9" y="542.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.02%)</title><rect x="885.6" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="888.6" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.04%)</title><rect x="886.0" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="889.0" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.03%)</title><rect x="886.0" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="889.0" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (5 samples, 0.03%)</title><rect x="886.0" y="563.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.0" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.02%)</title><rect x="886.1" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="889.1" y="558.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.02%)</title><rect x="886.1" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.1" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="886.1" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="889.1" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.06%)</title><rect x="887.1" y="643.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="890.1" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.05%)</title><rect x="887.2" y="627.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="890.2" y="638.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.02%)</title><rect x="887.5" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="890.5" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.03%)</title><rect x="888.0" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.0" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.03%)</title><rect x="888.0" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="891.0" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.03%)</title><rect x="888.0" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="891.0" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="888.3" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="891.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (7 samples, 0.04%)</title><rect x="889.1" y="947.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionally (4 samples, 0.02%)</title><rect x="889.3" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.02%)</title><rect x="889.3" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="892.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.02%)</title><rect x="889.3" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (11 samples, 0.07%)</title><rect x="889.7" y="1091.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="892.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.07%)</title><rect x="889.7" y="1075.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="892.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.07%)</title><rect x="889.7" y="1059.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.7" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.04%)</title><rect x="890.0" y="1043.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="893.0" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="890.1" y="1027.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="893.1" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="890.1" y="1011.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="893.1" y="1022.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.02%)</title><rect x="890.2" y="995.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="893.2" y="1006.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="890.2" y="979.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="893.2" y="990.0"></text>
</g>
<g>
<title>futex_wake_op (4 samples, 0.02%)</title><rect x="890.2" y="963.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="893.2" y="974.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="890.2" y="947.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="893.2" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="890.2" y="931.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="893.2" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="890.2" y="915.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="893.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (128 samples, 0.78%)</title><rect x="890.6" y="1107.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="893.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (116 samples, 0.71%)</title><rect x="891.5" y="1091.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.5" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (112 samples, 0.68%)</title><rect x="891.7" y="1075.0" width="8.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="894.7" y="1086.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.02%)</title><rect x="891.8" y="1059.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="894.8" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.07%)</title><rect x="892.1" y="1059.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="895.1" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (18 samples, 0.11%)</title><rect x="893.5" y="1059.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="896.5" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.07%)</title><rect x="894.0" y="1043.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="897.0" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.06%)</title><rect x="894.0" y="1027.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="897.0" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (62 samples, 0.38%)</title><rect x="894.7" y="1059.0" width="4.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="897.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.26%)</title><rect x="896.2" y="1043.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="899.2" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.26%)</title><rect x="896.2" y="1027.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="899.2" y="1038.0"></text>
</g>
<g>
<title>sys_futex (38 samples, 0.23%)</title><rect x="896.5" y="1011.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="899.5" y="1022.0"></text>
</g>
<g>
<title>do_futex (35 samples, 0.21%)</title><rect x="896.7" y="995.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="899.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait (34 samples, 0.21%)</title><rect x="896.8" y="979.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="899.8" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (24 samples, 0.15%)</title><rect x="897.1" y="963.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="900.1" y="974.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.12%)</title><rect x="897.4" y="947.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.4" y="958.0"></text>
</g>
<g>
<title>__schedule (17 samples, 0.10%)</title><rect x="897.6" y="931.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="900.6" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (17 samples, 0.10%)</title><rect x="897.6" y="915.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="900.6" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.02%)</title><rect x="898.8" y="963.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="901.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (533 samples, 3.25%)</title><rect x="899.9" y="1107.0" width="38.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.9" y="1118.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (4 samples, 0.02%)</title><rect x="901.2" y="1091.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (499 samples, 3.05%)</title><rect x="901.5" y="1091.0" width="36.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="904.5" y="1102.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park (481 samples, 2.94%)</title><rect x="902.4" y="1075.0" width="34.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="905.4" y="1086.0">Un..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (8 samples, 0.05%)</title><rect x="903.2" y="1059.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="906.2" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (40 samples, 0.24%)</title><rect x="903.9" y="1059.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="906.9" y="1070.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (8 samples, 0.05%)</title><rect x="905.0" y="1043.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="908.0" y="1054.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.02%)</title><rect x="905.8" y="1043.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="908.8" y="1054.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (9 samples, 0.05%)</title><rect x="906.1" y="1043.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="909.1" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="906.4" y="1027.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="909.4" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.02%)</title><rect x="906.8" y="1059.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="909.8" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (4 samples, 0.02%)</title><rect x="907.1" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="910.1" y="1070.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (6 samples, 0.04%)</title><rect x="907.4" y="1059.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="910.4" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (86 samples, 0.52%)</title><rect x="907.8" y="1059.0" width="6.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="910.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.26%)</title><rect x="911.0" y="1043.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="914.0" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.26%)</title><rect x="911.0" y="1027.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="914.0" y="1038.0"></text>
</g>
<g>
<title>sys_futex (21 samples, 0.13%)</title><rect x="912.5" y="1011.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="915.5" y="1022.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.09%)</title><rect x="912.6" y="995.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.6" y="1006.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.04%)</title><rect x="912.8" y="979.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="915.8" y="990.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.02%)</title><rect x="913.0" y="963.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="916.0" y="974.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.02%)</title><rect x="913.4" y="979.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.4" y="990.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="913.7" y="995.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="916.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (290 samples, 1.77%)</title><rect x="914.0" y="1059.0" width="20.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="917.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (208 samples, 1.27%)</title><rect x="919.9" y="1043.0" width="15.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="922.9" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (205 samples, 1.25%)</title><rect x="920.0" y="1027.0" width="14.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="923.0" y="1038.0"></text>
</g>
<g>
<title>sys_futex (184 samples, 1.12%)</title><rect x="921.5" y="1011.0" width="13.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="924.5" y="1022.0"></text>
</g>
<g>
<title>_copy_from_user (4 samples, 0.02%)</title><rect x="921.9" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="924.9" y="1006.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.03%)</title><rect x="922.4" y="995.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="925.4" y="1006.0"></text>
</g>
<g>
<title>do_futex (166 samples, 1.01%)</title><rect x="922.8" y="995.0" width="11.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="925.8" y="1006.0"></text>
</g>
<g>
<title>futex_wait (154 samples, 0.94%)</title><rect x="923.3" y="979.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.3" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (108 samples, 0.66%)</title><rect x="924.3" y="963.0" width="7.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="927.3" y="974.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (23 samples, 0.14%)</title><rect x="924.8" y="947.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.8" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.12%)</title><rect x="924.8" y="931.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="927.8" y="942.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.19 (4 samples, 0.02%)</title><rect x="926.2" y="931.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="929.2" y="942.0"></text>
</g>
<g>
<title>plist_add (4 samples, 0.02%)</title><rect x="926.4" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="929.4" y="958.0"></text>
</g>
<g>
<title>schedule (73 samples, 0.45%)</title><rect x="926.8" y="947.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="929.8" y="958.0"></text>
</g>
<g>
<title>__schedule (70 samples, 0.43%)</title><rect x="927.0" y="931.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="930.0" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (66 samples, 0.40%)</title><rect x="927.3" y="915.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="930.3" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (14 samples, 0.09%)</title><rect x="932.1" y="963.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="935.1" y="974.0"></text>
</g>
<g>
<title>hrtimer_cancel (10 samples, 0.06%)</title><rect x="933.1" y="963.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="936.1" y="974.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (8 samples, 0.05%)</title><rect x="933.3" y="947.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="936.3" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="933.5" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="936.5" y="942.0"></text>
</g>
<g>
<title>hrtimer_init (4 samples, 0.02%)</title><rect x="933.9" y="963.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="936.9" y="974.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.03%)</title><rect x="934.9" y="1059.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="937.9" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.03%)</title><rect x="935.5" y="1059.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="938.5" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.03%)</title><rect x="936.1" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="939.1" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.03%)</title><rect x="937.0" y="1075.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="940.0" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (11 samples, 0.07%)</title><rect x="937.5" y="1091.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="940.5" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.05%)</title><rect x="937.7" y="1075.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="940.7" y="1086.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.02%)</title><rect x="938.0" y="1059.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="941.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,810 samples, 11.05%)</title><rect x="938.5" y="1139.0" width="130.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.5" y="1150.0">jdk/internal/net..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (35 samples, 0.21%)</title><rect x="942.9" y="1123.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="945.9" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (33 samples, 0.20%)</title><rect x="943.1" y="1107.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="946.1" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (28 samples, 0.17%)</title><rect x="943.2" y="1091.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="946.2" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (13 samples, 0.08%)</title><rect x="943.2" y="1075.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="946.2" y="1086.0"></text>
</g>
<g>
<title>SpinPause (15 samples, 0.09%)</title><rect x="944.2" y="1075.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="947.2" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.04%)</title><rect x="945.5" y="1123.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="948.5" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (7 samples, 0.04%)</title><rect x="945.5" y="1107.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="948.5" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.04%)</title><rect x="945.5" y="1091.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="948.5" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="945.6" y="1075.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="948.6" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="945.6" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="948.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (45 samples, 0.27%)</title><rect x="946.1" y="1123.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (42 samples, 0.26%)</title><rect x="946.3" y="1107.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="949.3" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (19 samples, 0.12%)</title><rect x="949.3" y="1123.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="952.3" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (382 samples, 2.33%)</title><rect x="950.7" y="1123.0" width="27.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="953.7" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$210/1173738397.accept (365 samples, 2.23%)</title><rect x="950.8" y="1107.0" width="26.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.8" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (365 samples, 2.23%)</title><rect x="950.8" y="1091.0" width="26.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.8" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (365 samples, 2.23%)</title><rect x="950.8" y="1075.0" width="26.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.8" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (365 samples, 2.23%)</title><rect x="950.8" y="1059.0" width="26.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.8" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (365 samples, 2.23%)</title><rect x="950.8" y="1043.0" width="26.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.8" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (12 samples, 0.07%)</title><rect x="950.8" y="1027.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.04%)</title><rect x="951.1" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (353 samples, 2.15%)</title><rect x="951.7" y="1027.0" width="25.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.7" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (353 samples, 2.15%)</title><rect x="951.7" y="1011.0" width="25.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.7" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (352 samples, 2.15%)</title><rect x="951.7" y="995.0" width="25.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.7" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (349 samples, 2.13%)</title><rect x="951.9" y="979.0" width="25.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="954.9" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (348 samples, 2.12%)</title><rect x="952.0" y="963.0" width="25.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.0" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/2066195330.run (346 samples, 2.11%)</title><rect x="952.1" y="947.0" width="24.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="955.1" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (346 samples, 2.11%)</title><rect x="952.1" y="931.0" width="24.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="955.1" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (84 samples, 0.51%)</title><rect x="952.1" y="915.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (84 samples, 0.51%)</title><rect x="952.1" y="899.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (84 samples, 0.51%)</title><rect x="952.1" y="883.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (84 samples, 0.51%)</title><rect x="952.1" y="867.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="955.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (84 samples, 0.51%)</title><rect x="952.1" y="851.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (66 samples, 0.40%)</title><rect x="953.4" y="835.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (65 samples, 0.40%)</title><rect x="953.5" y="819.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (64 samples, 0.39%)</title><rect x="953.5" y="803.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (54 samples, 0.33%)</title><rect x="953.5" y="787.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="956.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (54 samples, 0.33%)</title><rect x="953.5" y="771.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (54 samples, 0.33%)</title><rect x="953.5" y="755.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (54 samples, 0.33%)</title><rect x="953.5" y="739.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (54 samples, 0.33%)</title><rect x="953.5" y="723.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (46 samples, 0.28%)</title><rect x="954.1" y="707.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.1" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.04%)</title><rect x="954.5" y="691.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="957.5" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (32 samples, 0.20%)</title><rect x="955.0" y="691.0" width="2.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="958.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.17%)</title><rect x="955.3" y="675.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="958.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.17%)</title><rect x="955.3" y="659.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="958.3" y="670.0"></text>
</g>
<g>
<title>sys_futex (27 samples, 0.16%)</title><rect x="955.3" y="643.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="958.3" y="654.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.16%)</title><rect x="955.3" y="627.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="958.3" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (26 samples, 0.16%)</title><rect x="955.4" y="611.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="958.4" y="622.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.12%)</title><rect x="955.8" y="595.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="958.8" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.12%)</title><rect x="955.8" y="579.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="958.8" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.12%)</title><rect x="955.8" y="563.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="958.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.06%)</title><rect x="957.4" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.06%)</title><rect x="957.4" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.06%)</title><rect x="957.4" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.06%)</title><rect x="957.4" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.04%)</title><rect x="958.2" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.03%)</title><rect x="958.3" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.03%)</title><rect x="958.3" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (255 samples, 1.56%)</title><rect x="958.6" y="915.0" width="18.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.6" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (241 samples, 1.47%)</title><rect x="959.6" y="899.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.6" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (240 samples, 1.47%)</title><rect x="959.7" y="883.0" width="17.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.7" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (235 samples, 1.43%)</title><rect x="960.1" y="867.0" width="16.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.1" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.07%)</title><rect x="960.1" y="851.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.1" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (11 samples, 0.07%)</title><rect x="960.1" y="835.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="963.1" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (11 samples, 0.07%)</title><rect x="960.1" y="819.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (221 samples, 1.35%)</title><rect x="960.9" y="851.0" width="15.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="963.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (220 samples, 1.34%)</title><rect x="960.9" y="835.0" width="15.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="963.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (208 samples, 1.27%)</title><rect x="961.8" y="819.0" width="15.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.8" y="830.0"></text>
</g>
<g>
<title>read (197 samples, 1.20%)</title><rect x="962.6" y="803.0" width="14.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="965.6" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (139 samples, 0.85%)</title><rect x="966.8" y="787.0" width="10.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="969.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (138 samples, 0.84%)</title><rect x="966.8" y="771.0" width="9.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="969.8" y="782.0"></text>
</g>
<g>
<title>fput (6 samples, 0.04%)</title><rect x="968.5" y="755.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="971.5" y="766.0"></text>
</g>
<g>
<title>sys_read (108 samples, 0.66%)</title><rect x="968.9" y="755.0" width="7.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="971.9" y="766.0"></text>
</g>
<g>
<title>__fdget_pos (9 samples, 0.05%)</title><rect x="968.9" y="739.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="971.9" y="750.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.05%)</title><rect x="968.9" y="723.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="971.9" y="734.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.05%)</title><rect x="968.9" y="707.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="971.9" y="718.0"></text>
</g>
<g>
<title>vfs_read (97 samples, 0.59%)</title><rect x="969.7" y="739.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="972.7" y="750.0"></text>
</g>
<g>
<title>__vfs_read (81 samples, 0.49%)</title><rect x="969.9" y="723.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="972.9" y="734.0"></text>
</g>
<g>
<title>new_sync_read (77 samples, 0.47%)</title><rect x="969.9" y="707.0" width="5.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="972.9" y="718.0"></text>
</g>
<g>
<title>sock_read_iter (68 samples, 0.42%)</title><rect x="970.5" y="691.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="973.5" y="702.0"></text>
</g>
<g>
<title>inet_recvmsg (4 samples, 0.02%)</title><rect x="970.5" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="973.5" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (62 samples, 0.38%)</title><rect x="970.9" y="675.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="973.9" y="686.0"></text>
</g>
<g>
<title>inet_recvmsg (56 samples, 0.34%)</title><rect x="971.1" y="659.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="974.1" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (53 samples, 0.32%)</title><rect x="971.3" y="643.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="974.3" y="654.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.09%)</title><rect x="971.9" y="627.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="974.9" y="638.0"></text>
</g>
<g>
<title>skb_release_all (14 samples, 0.09%)</title><rect x="971.9" y="611.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="974.9" y="622.0"></text>
</g>
<g>
<title>sock_rfree (10 samples, 0.06%)</title><rect x="972.2" y="595.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="975.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.02%)</title><rect x="973.0" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="976.0" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.06%)</title><rect x="973.7" y="627.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="976.7" y="638.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.02%)</title><rect x="973.8" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="976.8" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.02%)</title><rect x="974.1" y="611.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="977.1" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="974.1" y="595.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="977.1" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.02%)</title><rect x="974.4" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="977.4" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.02%)</title><rect x="974.7" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="977.7" y="638.0"></text>
</g>
<g>
<title>sock_read_iter (4 samples, 0.02%)</title><rect x="975.4" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="978.4" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (14 samples, 0.09%)</title><rect x="975.7" y="723.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="978.7" y="734.0"></text>
</g>
<g>
<title>security_file_permission (13 samples, 0.08%)</title><rect x="975.8" y="707.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="978.8" y="718.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.03%)</title><rect x="976.2" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="979.2" y="702.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.03%)</title><rect x="976.2" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="979.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1444997003.accept (16 samples, 0.10%)</title><rect x="977.1" y="1107.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="980.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (15 samples, 0.09%)</title><rect x="977.2" y="1091.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="980.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$209/399872247.run (15 samples, 0.09%)</title><rect x="977.2" y="1075.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (15 samples, 0.09%)</title><rect x="977.2" y="1059.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (15 samples, 0.09%)</title><rect x="977.2" y="1043.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="980.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (6 samples, 0.04%)</title><rect x="977.8" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.setEventOps (6 samples, 0.04%)</title><rect x="977.8" y="1011.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.8" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (27 samples, 0.16%)</title><rect x="978.3" y="1123.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.3" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.10%)</title><rect x="979.1" y="1107.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.1" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (14 samples, 0.09%)</title><rect x="979.2" y="1091.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (14 samples, 0.09%)</title><rect x="979.2" y="1075.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (14 samples, 0.09%)</title><rect x="979.2" y="1059.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (13 samples, 0.08%)</title><rect x="979.2" y="1043.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="982.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (7 samples, 0.04%)</title><rect x="979.2" y="1027.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.2" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (6 samples, 0.04%)</title><rect x="979.7" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="982.7" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (4 samples, 0.02%)</title><rect x="979.7" y="1011.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (214 samples, 1.31%)</title><rect x="980.2" y="1123.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$162/747915710.run (135 samples, 0.82%)</title><rect x="980.2" y="1107.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="983.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (135 samples, 0.82%)</title><rect x="980.2" y="1091.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (135 samples, 0.82%)</title><rect x="980.2" y="1075.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (128 samples, 0.78%)</title><rect x="980.8" y="1059.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (121 samples, 0.74%)</title><rect x="981.3" y="1043.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (121 samples, 0.74%)</title><rect x="981.3" y="1027.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/2066195330.run (116 samples, 0.71%)</title><rect x="981.4" y="1011.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (116 samples, 0.71%)</title><rect x="981.4" y="995.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (112 samples, 0.68%)</title><rect x="981.6" y="979.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="984.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (91 samples, 0.56%)</title><rect x="983.1" y="963.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (25 samples, 0.15%)</title><rect x="983.3" y="947.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (25 samples, 0.15%)</title><rect x="983.3" y="931.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (25 samples, 0.15%)</title><rect x="983.3" y="915.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.3" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (6 samples, 0.04%)</title><rect x="983.3" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.3" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1311146128.invoke (6 samples, 0.04%)</title><rect x="983.3" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.3" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.04%)</title><rect x="983.3" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="986.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.04%)</title><rect x="983.3" y="851.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.04%)</title><rect x="983.3" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.3" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="983.4" y="819.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="986.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (18 samples, 0.11%)</title><rect x="983.8" y="899.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (14 samples, 0.09%)</title><rect x="984.1" y="883.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="987.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (13 samples, 0.08%)</title><rect x="984.1" y="867.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (10 samples, 0.06%)</title><rect x="984.4" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.4" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (4 samples, 0.02%)</title><rect x="984.4" y="835.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.04%)</title><rect x="984.6" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.04%)</title><rect x="984.6" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.04%)</title><rect x="984.6" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="987.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.04%)</title><rect x="984.6" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="987.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (64 samples, 0.39%)</title><rect x="985.1" y="947.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 0.26%)</title><rect x="986.6" y="931.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="989.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.24%)</title><rect x="986.8" y="915.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="989.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (38 samples, 0.23%)</title><rect x="986.9" y="899.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (37 samples, 0.23%)</title><rect x="986.9" y="883.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (37 samples, 0.23%)</title><rect x="986.9" y="867.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="989.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (25 samples, 0.15%)</title><rect x="986.9" y="851.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="989.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (23 samples, 0.14%)</title><rect x="987.1" y="835.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="990.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (23 samples, 0.14%)</title><rect x="987.1" y="819.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (23 samples, 0.14%)</title><rect x="987.1" y="803.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="990.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.14%)</title><rect x="987.1" y="787.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="990.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.12%)</title><rect x="987.4" y="771.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.4" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.02%)</title><rect x="987.4" y="755.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="990.4" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.09%)</title><rect x="987.7" y="755.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="990.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.08%)</title><rect x="987.8" y="739.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="990.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.08%)</title><rect x="987.8" y="723.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="990.8" y="734.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.08%)</title><rect x="987.8" y="707.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="990.8" y="718.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.08%)</title><rect x="987.8" y="691.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="990.8" y="702.0"></text>
</g>
<g>
<title>futex_wake_op (11 samples, 0.07%)</title><rect x="988.0" y="675.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="991.0" y="686.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.04%)</title><rect x="988.2" y="659.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="991.2" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.04%)</title><rect x="988.2" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="991.2" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="988.2" y="627.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.07%)</title><rect x="988.7" y="851.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.07%)</title><rect x="988.7" y="835.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="991.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.07%)</title><rect x="988.7" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.07%)</title><rect x="988.7" y="803.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$166/52281761.run (79 samples, 0.48%)</title><rect x="990.0" y="1107.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="993.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (79 samples, 0.48%)</title><rect x="990.0" y="1091.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (67 samples, 0.41%)</title><rect x="990.8" y="1075.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (66 samples, 0.40%)</title><rect x="990.8" y="1059.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="993.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (65 samples, 0.40%)</title><rect x="990.9" y="1043.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (40 samples, 0.24%)</title><rect x="990.9" y="1027.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="993.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (40 samples, 0.24%)</title><rect x="990.9" y="1011.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (40 samples, 0.24%)</title><rect x="990.9" y="995.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="993.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (40 samples, 0.24%)</title><rect x="990.9" y="979.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="993.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (40 samples, 0.24%)</title><rect x="990.9" y="963.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="993.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (33 samples, 0.20%)</title><rect x="991.4" y="947.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="994.4" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (31 samples, 0.19%)</title><rect x="991.6" y="931.0" width="2.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="994.6" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.17%)</title><rect x="991.8" y="915.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="994.8" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.17%)</title><rect x="991.8" y="899.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="994.8" y="910.0"></text>
</g>
<g>
<title>sys_futex (24 samples, 0.15%)</title><rect x="992.1" y="883.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="995.1" y="894.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.14%)</title><rect x="992.1" y="867.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="995.1" y="878.0"></text>
</g>
<g>
<title>futex_wake_op (22 samples, 0.13%)</title><rect x="992.1" y="851.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="995.1" y="862.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.10%)</title><rect x="992.5" y="835.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="995.5" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.10%)</title><rect x="992.5" y="819.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="995.5" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.10%)</title><rect x="992.5" y="803.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="995.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.15%)</title><rect x="993.9" y="1027.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.15%)</title><rect x="993.9" y="1011.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.15%)</title><rect x="993.9" y="995.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="996.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.15%)</title><rect x="993.9" y="979.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="996.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (108 samples, 0.66%)</title><rect x="995.7" y="1123.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.7" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.06%)</title><rect x="995.7" y="1107.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="998.7" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.06%)</title><rect x="995.7" y="1091.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.03%)</title><rect x="996.0" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.0" y="1086.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.02%)</title><rect x="996.1" y="1059.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="999.1" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.02%)</title><rect x="996.1" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="999.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (95 samples, 0.58%)</title><rect x="996.5" y="1107.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="999.5" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (53 samples, 0.32%)</title><rect x="997.8" y="1091.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1000.8" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (52 samples, 0.32%)</title><rect x="997.9" y="1075.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1000.9" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (50 samples, 0.31%)</title><rect x="998.0" y="1059.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1001.0" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (38 samples, 0.23%)</title><rect x="998.0" y="1043.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1001.0" y="1054.0"></text>
</g>
<g>
<title>SpinPause (11 samples, 0.07%)</title><rect x="1000.8" y="1043.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1003.8" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (16 samples, 0.10%)</title><rect x="1001.6" y="1091.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (8 samples, 0.05%)</title><rect x="1002.8" y="1091.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (13 samples, 0.08%)</title><rect x="1003.5" y="1123.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.add (11 samples, 0.07%)</title><rect x="1003.7" y="1107.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1006.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.put (11 samples, 0.07%)</title><rect x="1003.7" y="1091.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (10 samples, 0.06%)</title><rect x="1003.7" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (84 samples, 0.51%)</title><rect x="1004.5" y="1123.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.5" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (16 samples, 0.10%)</title><rect x="1005.2" y="1107.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1008.2" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (15 samples, 0.09%)</title><rect x="1005.2" y="1091.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1008.2" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.07%)</title><rect x="1005.4" y="1075.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1008.4" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (8 samples, 0.05%)</title><rect x="1005.4" y="1059.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1008.4" y="1070.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.02%)</title><rect x="1006.0" y="1059.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1009.0" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.now (31 samples, 0.19%)</title><rect x="1006.3" y="1107.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.3" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (31 samples, 0.19%)</title><rect x="1006.3" y="1091.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1009.3" y="1102.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (8 samples, 0.05%)</title><rect x="1006.5" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.5" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.create (8 samples, 0.05%)</title><rect x="1006.5" y="1059.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.5" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.04%)</title><rect x="1006.6" y="1043.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1009.6" y="1054.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (6 samples, 0.04%)</title><rect x="1006.7" y="1027.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1009.7" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.04%)</title><rect x="1006.7" y="1011.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1009.7" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="1006.7" y="995.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1009.7" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="1006.7" y="979.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1009.7" y="990.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.04%)</title><rect x="1006.7" y="963.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1009.7" y="974.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="1006.8" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1009.8" y="958.0"></text>
</g>
<g>
<title>futex_wake_op (5 samples, 0.03%)</title><rect x="1006.8" y="931.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1009.8" y="942.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="1006.8" y="915.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1009.8" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="1006.8" y="899.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1009.8" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="1006.8" y="883.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1009.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (20 samples, 0.12%)</title><rect x="1007.1" y="1075.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.1" y="1086.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (14 samples, 0.09%)</title><rect x="1007.5" y="1059.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1010.5" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.02%)</title><rect x="1007.8" y="1043.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1010.8" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (7 samples, 0.04%)</title><rect x="1008.1" y="1043.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1011.1" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="1008.2" y="1027.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1011.2" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (12 samples, 0.07%)</title><rect x="1008.6" y="1107.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.6" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (12 samples, 0.07%)</title><rect x="1008.6" y="1091.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1011.6" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (12 samples, 0.07%)</title><rect x="1008.6" y="1075.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.6" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (14 samples, 0.09%)</title><rect x="1009.5" y="1107.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.5" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (14 samples, 0.09%)</title><rect x="1009.5" y="1091.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1012.5" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (12 samples, 0.07%)</title><rect x="1009.6" y="1075.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.6" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (12 samples, 0.07%)</title><rect x="1009.6" y="1059.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1012.6" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (708 samples, 4.32%)</title><rect x="1010.5" y="1123.0" width="51.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1013.5" y="1134.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (707 samples, 4.32%)</title><rect x="1010.6" y="1107.0" width="50.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.6" y="1118.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (698 samples, 4.26%)</title><rect x="1011.0" y="1091.0" width="50.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.0" y="1102.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (358 samples, 2.19%)</title><rect x="1011.9" y="1075.0" width="25.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.9" y="1086.0">s..</text>
</g>
<g>
<title>epoll_wait (344 samples, 2.10%)</title><rect x="1012.9" y="1059.0" width="24.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1015.9" y="1070.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (275 samples, 1.68%)</title><rect x="1017.8" y="1043.0" width="19.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1020.8" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (271 samples, 1.65%)</title><rect x="1017.8" y="1027.0" width="19.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1020.8" y="1038.0"></text>
</g>
<g>
<title>fput (4 samples, 0.02%)</title><rect x="1020.1" y="1011.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1023.1" y="1022.0"></text>
</g>
<g>
<title>sys_epoll_wait (236 samples, 1.44%)</title><rect x="1020.4" y="1011.0" width="17.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1023.4" y="1022.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.04%)</title><rect x="1020.4" y="995.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1023.4" y="1006.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.04%)</title><rect x="1020.4" y="979.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1023.4" y="990.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.04%)</title><rect x="1020.4" y="963.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1023.4" y="974.0"></text>
</g>
<g>
<title>ep_poll (224 samples, 1.37%)</title><rect x="1020.9" y="995.0" width="16.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1023.9" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.10%)</title><rect x="1021.4" y="979.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1024.4" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list (84 samples, 0.51%)</title><rect x="1022.7" y="979.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1025.7" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="1023.0" y="963.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1026.0" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (58 samples, 0.35%)</title><rect x="1024.0" y="963.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1027.0" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (41 samples, 0.25%)</title><rect x="1024.9" y="947.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1027.9" y="958.0"></text>
</g>
<g>
<title>pipe_poll (8 samples, 0.05%)</title><rect x="1025.6" y="931.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1028.6" y="942.0"></text>
</g>
<g>
<title>sock_poll (23 samples, 0.14%)</title><rect x="1026.1" y="931.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1029.1" y="942.0"></text>
</g>
<g>
<title>tcp_poll (10 samples, 0.06%)</title><rect x="1026.8" y="915.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1029.8" y="926.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.02%)</title><rect x="1027.5" y="915.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1030.5" y="926.0"></text>
</g>
<g>
<title>pipe_poll (4 samples, 0.02%)</title><rect x="1027.9" y="947.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1030.9" y="958.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.05%)</title><rect x="1028.1" y="963.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1031.1" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.02%)</title><rect x="1028.7" y="979.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1031.7" y="990.0"></text>
</g>
<g>
<title>ktime_get_ts64 (6 samples, 0.04%)</title><rect x="1029.0" y="979.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1032.0" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (81 samples, 0.49%)</title><rect x="1029.7" y="979.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1032.7" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (79 samples, 0.48%)</title><rect x="1029.8" y="963.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1032.8" y="974.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (22 samples, 0.13%)</title><rect x="1030.5" y="947.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1033.5" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.12%)</title><rect x="1030.5" y="931.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1033.5" y="942.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (11 samples, 0.07%)</title><rect x="1032.0" y="947.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1035.0" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.06%)</title><rect x="1032.1" y="931.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1035.1" y="942.0"></text>
</g>
<g>
<title>schedule (37 samples, 0.23%)</title><rect x="1032.8" y="947.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1035.8" y="958.0"></text>
</g>
<g>
<title>__schedule (36 samples, 0.22%)</title><rect x="1032.9" y="931.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1035.9" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (34 samples, 0.21%)</title><rect x="1033.0" y="915.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1036.0" y="926.0"></text>
</g>
<g>
<title>select_estimate_accuracy (18 samples, 0.11%)</title><rect x="1035.6" y="979.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1038.6" y="990.0"></text>
</g>
<g>
<title>select_estimate_accuracy.part.8 (16 samples, 0.10%)</title><rect x="1035.6" y="963.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1038.6" y="974.0"></text>
</g>
<g>
<title>ktime_get_ts64 (5 samples, 0.03%)</title><rect x="1035.9" y="947.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1038.9" y="958.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.02%)</title><rect x="1035.9" y="931.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1038.9" y="942.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.03%)</title><rect x="1036.2" y="947.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1039.2" y="958.0"></text>
</g>
<g>
<title>sys_epoll_wait (4 samples, 0.02%)</title><rect x="1037.4" y="1027.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1040.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (277 samples, 1.69%)</title><rect x="1037.7" y="1075.0" width="19.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1040.7" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.08%)</title><rect x="1037.7" y="1059.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1040.7" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (13 samples, 0.08%)</title><rect x="1037.7" y="1043.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.7" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (230 samples, 1.40%)</title><rect x="1038.6" y="1059.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1041.6" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (225 samples, 1.37%)</title><rect x="1039.0" y="1043.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.0" y="1054.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.02%)</title><rect x="1039.5" y="1027.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1042.5" y="1038.0"></text>
</g>
<g>
<title>read (212 samples, 1.29%)</title><rect x="1039.9" y="1027.0" width="15.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1042.9" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (151 samples, 0.92%)</title><rect x="1044.3" y="1011.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1047.3" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (148 samples, 0.90%)</title><rect x="1044.3" y="995.0" width="10.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1047.3" y="1006.0"></text>
</g>
<g>
<title>sys_read (120 samples, 0.73%)</title><rect x="1046.3" y="979.0" width="8.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1049.3" y="990.0"></text>
</g>
<g>
<title>__fdget_pos (10 samples, 0.06%)</title><rect x="1046.5" y="963.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1049.5" y="974.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.05%)</title><rect x="1046.6" y="947.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1049.6" y="958.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.05%)</title><rect x="1046.6" y="931.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1049.6" y="942.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="1047.2" y="963.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1050.2" y="974.0"></text>
</g>
<g>
<title>vfs_read (103 samples, 0.63%)</title><rect x="1047.5" y="963.0" width="7.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1050.5" y="974.0"></text>
</g>
<g>
<title>__vfs_read (77 samples, 0.47%)</title><rect x="1047.9" y="947.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1050.9" y="958.0"></text>
</g>
<g>
<title>new_sync_read (77 samples, 0.47%)</title><rect x="1047.9" y="931.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1050.9" y="942.0"></text>
</g>
<g>
<title>pipe_read (69 samples, 0.42%)</title><rect x="1048.5" y="915.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1051.5" y="926.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.08%)</title><rect x="1049.9" y="899.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1052.9" y="910.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.08%)</title><rect x="1049.9" y="883.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1052.9" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.08%)</title><rect x="1049.9" y="867.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1052.9" y="878.0"></text>
</g>
<g>
<title>copy_page_to_iter (14 samples, 0.09%)</title><rect x="1051.1" y="899.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1054.1" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (8 samples, 0.05%)</title><rect x="1051.6" y="883.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1054.6" y="894.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.05%)</title><rect x="1052.2" y="899.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1055.2" y="910.0"></text>
</g>
<g>
<title>touch_atime (9 samples, 0.05%)</title><rect x="1052.8" y="899.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1055.8" y="910.0"></text>
</g>
<g>
<title>__atime_needs_update (4 samples, 0.02%)</title><rect x="1052.9" y="883.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1055.9" y="894.0"></text>
</g>
<g>
<title>rw_verify_area (20 samples, 0.12%)</title><rect x="1053.5" y="947.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1056.5" y="958.0"></text>
</g>
<g>
<title>security_file_permission (18 samples, 0.11%)</title><rect x="1053.6" y="931.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1056.6" y="942.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.04%)</title><rect x="1054.0" y="915.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1057.0" y="926.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.04%)</title><rect x="1054.0" y="899.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1057.0" y="910.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.02%)</title><rect x="1054.7" y="915.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1057.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (34 samples, 0.21%)</title><rect x="1055.2" y="1059.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1058.2" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.04%)</title><rect x="1056.3" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1059.3" y="1054.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (5 samples, 0.03%)</title><rect x="1056.4" y="1027.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1059.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="1056.5" y="1011.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1059.5" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.04%)</title><rect x="1056.7" y="1043.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.04%)</title><rect x="1056.7" y="1027.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.7" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.04%)</title><rect x="1056.7" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1059.7" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (4 samples, 0.02%)</title><rect x="1057.2" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (4 samples, 0.02%)</title><rect x="1057.2" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1060.2" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (4 samples, 0.02%)</title><rect x="1057.2" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1060.2" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (6 samples, 0.04%)</title><rect x="1057.6" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.6" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (31 samples, 0.19%)</title><rect x="1058.0" y="1075.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1061.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (31 samples, 0.19%)</title><rect x="1058.0" y="1059.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.0" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (30 samples, 0.18%)</title><rect x="1058.1" y="1043.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (30 samples, 0.18%)</title><rect x="1058.1" y="1027.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (30 samples, 0.18%)</title><rect x="1058.1" y="1011.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1061.1" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (7 samples, 0.04%)</title><rect x="1060.3" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.3" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (7 samples, 0.04%)</title><rect x="1060.3" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.3" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.04%)</title><rect x="1060.3" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.04%)</title><rect x="1060.3" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.04%)</title><rect x="1060.3" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.3" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (7 samples, 0.04%)</title><rect x="1060.8" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (87 samples, 0.53%)</title><rect x="1061.5" y="1123.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (87 samples, 0.53%)</title><rect x="1061.5" y="1107.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.5" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (85 samples, 0.52%)</title><rect x="1061.6" y="1091.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (61 samples, 0.37%)</title><rect x="1061.6" y="1075.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.6" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (60 samples, 0.37%)</title><rect x="1061.7" y="1059.0" width="4.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1064.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.21%)</title><rect x="1063.5" y="1043.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1066.5" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.21%)</title><rect x="1063.5" y="1027.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1066.5" y="1038.0"></text>
</g>
<g>
<title>sys_epoll_wait (25 samples, 0.15%)</title><rect x="1064.2" y="1011.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1067.2" y="1022.0"></text>
</g>
<g>
<title>ep_poll (22 samples, 0.13%)</title><rect x="1064.4" y="995.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1067.4" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list (20 samples, 0.12%)</title><rect x="1064.5" y="979.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1067.5" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="1064.7" y="963.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1067.7" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.07%)</title><rect x="1065.1" y="963.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1068.1" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (7 samples, 0.04%)</title><rect x="1065.4" y="947.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1068.4" y="958.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.03%)</title><rect x="1065.5" y="931.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1068.5" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (22 samples, 0.13%)</title><rect x="1066.0" y="1075.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.0" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.02%)</title><rect x="1066.0" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.02%)</title><rect x="1066.0" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1069.0" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (10 samples, 0.06%)</title><rect x="1066.3" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (10 samples, 0.06%)</title><rect x="1066.3" y="1043.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1069.3" y="1054.0"></text>
</g>
<g>
<title>read (10 samples, 0.06%)</title><rect x="1066.3" y="1027.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1069.3" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="1066.5" y="1011.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1069.5" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="1066.5" y="995.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1069.5" y="1006.0"></text>
</g>
<g>
<title>sys_read (6 samples, 0.04%)</title><rect x="1066.6" y="979.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1069.6" y="990.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.04%)</title><rect x="1066.6" y="963.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.6" y="974.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.04%)</title><rect x="1066.6" y="947.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1069.6" y="958.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.04%)</title><rect x="1066.6" y="931.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1069.6" y="942.0"></text>
</g>
<g>
<title>pipe_read (5 samples, 0.03%)</title><rect x="1066.7" y="915.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1069.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.05%)</title><rect x="1067.0" y="1059.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (5 samples, 0.03%)</title><rect x="1067.3" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1070.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (5 samples, 0.03%)</title><rect x="1067.3" y="1027.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.3" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (5 samples, 0.03%)</title><rect x="1067.3" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1070.3" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (15 samples, 0.09%)</title><rect x="1067.8" y="1123.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.8" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (15 samples, 0.09%)</title><rect x="1067.8" y="1107.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1070.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (15 samples, 0.09%)</title><rect x="1067.8" y="1091.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,504 samples, 9.18%)</title><rect x="1069.1" y="1139.0" width="108.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.1" y="1150.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (388 samples, 2.37%)</title><rect x="1070.1" y="1123.0" width="28.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.1" y="1134.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="1070.4" y="1107.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1073.4" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="1070.5" y="1091.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1073.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.04%)</title><rect x="1070.8" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (373 samples, 2.28%)</title><rect x="1071.2" y="1107.0" width="26.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.2" y="1118.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (7 samples, 0.04%)</title><rect x="1072.8" y="1091.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1075.8" y="1102.0"></text>
</g>
<g>
<title>__clock_gettime (13 samples, 0.08%)</title><rect x="1073.3" y="1091.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1076.3" y="1102.0"></text>
</g>
<g>
<title>epoll_wait (318 samples, 1.94%)</title><rect x="1074.6" y="1091.0" width="22.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1077.6" y="1102.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (253 samples, 1.54%)</title><rect x="1079.3" y="1075.0" width="18.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1082.3" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (251 samples, 1.53%)</title><rect x="1079.3" y="1059.0" width="18.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1082.3" y="1070.0"></text>
</g>
<g>
<title>fput (6 samples, 0.04%)</title><rect x="1080.2" y="1043.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1083.2" y="1054.0"></text>
</g>
<g>
<title>sys_epoll_wait (233 samples, 1.42%)</title><rect x="1080.6" y="1043.0" width="16.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1083.6" y="1054.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.07%)</title><rect x="1080.9" y="1027.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1083.9" y="1038.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.07%)</title><rect x="1080.9" y="1011.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1083.9" y="1022.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.07%)</title><rect x="1080.9" y="995.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1083.9" y="1006.0"></text>
</g>
<g>
<title>ep_poll (215 samples, 1.31%)</title><rect x="1081.8" y="1027.0" width="15.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1084.8" y="1038.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.07%)</title><rect x="1082.6" y="1011.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1085.6" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list (90 samples, 0.55%)</title><rect x="1083.6" y="1011.0" width="6.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1086.6" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.06%)</title><rect x="1084.0" y="995.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1087.0" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (67 samples, 0.41%)</title><rect x="1084.8" y="995.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1087.8" y="1006.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (39 samples, 0.24%)</title><rect x="1086.3" y="979.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1089.3" y="990.0"></text>
</g>
<g>
<title>sock_poll (26 samples, 0.16%)</title><rect x="1087.2" y="963.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1090.2" y="974.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.04%)</title><rect x="1088.4" y="947.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1091.4" y="958.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.04%)</title><rect x="1089.2" y="979.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1092.2" y="990.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.04%)</title><rect x="1089.7" y="995.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1092.7" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.03%)</title><rect x="1090.1" y="1011.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1093.1" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (91 samples, 0.56%)</title><rect x="1090.7" y="1011.0" width="6.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1093.7" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (91 samples, 0.56%)</title><rect x="1090.7" y="995.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1093.7" y="1006.0"></text>
</g>
<g>
<title>schedule (83 samples, 0.51%)</title><rect x="1091.2" y="979.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1094.2" y="990.0"></text>
</g>
<g>
<title>__schedule (78 samples, 0.48%)</title><rect x="1091.6" y="963.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1094.6" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (73 samples, 0.45%)</title><rect x="1092.0" y="947.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1095.0" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.03%)</title><rect x="1097.7" y="1091.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1100.7" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="1097.7" y="1075.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1100.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,095 samples, 6.68%)</title><rect x="1098.1" y="1123.0" width="78.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.1" y="1134.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,089 samples, 6.65%)</title><rect x="1098.4" y="1107.0" width="78.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1101.4" y="1118.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (656 samples, 4.00%)</title><rect x="1098.7" y="1091.0" width="47.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.7" y="1102.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (458 samples, 2.80%)</title><rect x="1102.4" y="1075.0" width="33.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.4" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (455 samples, 2.78%)</title><rect x="1102.6" y="1059.0" width="32.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1105.6" y="1070.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (419 samples, 2.56%)</title><rect x="1102.6" y="1043.0" width="30.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.6" y="1054.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (29 samples, 0.18%)</title><rect x="1102.6" y="1027.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="1103.3" y="1011.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.03%)</title><rect x="1103.3" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1106.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (10 samples, 0.06%)</title><rect x="1104.0" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1107.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.06%)</title><rect x="1104.0" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.06%)</title><rect x="1104.0" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1107.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.05%)</title><rect x="1104.1" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1107.1" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (39 samples, 0.24%)</title><rect x="1104.7" y="1027.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (38 samples, 0.23%)</title><rect x="1104.8" y="1011.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1105.5" y="995.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1108.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.03%)</title><rect x="1105.6" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1108.6" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="1106.0" y="995.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1109.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (16 samples, 0.10%)</title><rect x="1106.4" y="995.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="1106.9" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1109.9" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="1106.9" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1109.9" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.03%)</title><rect x="1107.2" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (351 samples, 2.14%)</title><rect x="1107.5" y="1027.0" width="25.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1110.5" y="1038.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/210147905.linkToTargetMethod (6 samples, 0.04%)</title><rect x="1107.7" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.04%)</title><rect x="1107.7" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/285921815.get$Lambda (6 samples, 0.04%)</title><rect x="1107.7" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.7" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="1107.7" y="963.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1110.7" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="1107.8" y="947.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1110.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (342 samples, 2.09%)</title><rect x="1108.1" y="1011.0" width="24.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.1" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (341 samples, 2.08%)</title><rect x="1108.1" y="995.0" width="24.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1111.1" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (15 samples, 0.09%)</title><rect x="1108.9" y="979.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (15 samples, 0.09%)</title><rect x="1108.9" y="963.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (15 samples, 0.09%)</title><rect x="1108.9" y="947.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (15 samples, 0.09%)</title><rect x="1108.9" y="931.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.09%)</title><rect x="1108.9" y="915.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1111.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (312 samples, 1.90%)</title><rect x="1110.2" y="979.0" width="22.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.2" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (312 samples, 1.90%)</title><rect x="1110.2" y="963.0" width="22.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.2" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (312 samples, 1.90%)</title><rect x="1110.2" y="947.0" width="22.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1113.2" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (312 samples, 1.90%)</title><rect x="1110.2" y="931.0" width="22.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1113.2" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (311 samples, 1.90%)</title><rect x="1110.3" y="915.0" width="22.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1113.3" y="926.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (43 samples, 0.26%)</title><rect x="1110.9" y="899.0" width="3.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1113.9" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (8 samples, 0.05%)</title><rect x="1111.5" y="883.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1114.5" y="894.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (10 samples, 0.06%)</title><rect x="1112.1" y="883.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.1" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (8 samples, 0.05%)</title><rect x="1113.1" y="883.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1116.1" y="894.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (4 samples, 0.02%)</title><rect x="1113.6" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1116.6" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (255 samples, 1.56%)</title><rect x="1114.0" y="899.0" width="18.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1117.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (208 samples, 1.27%)</title><rect x="1117.4" y="883.0" width="15.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1120.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (205 samples, 1.25%)</title><rect x="1117.4" y="867.0" width="14.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1120.4" y="878.0"></text>
</g>
<g>
<title>sys_futex (186 samples, 1.14%)</title><rect x="1118.8" y="851.0" width="13.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1121.8" y="862.0"></text>
</g>
<g>
<title>do_futex (178 samples, 1.09%)</title><rect x="1119.1" y="835.0" width="12.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1122.1" y="846.0"></text>
</g>
<g>
<title>_raw_spin_lock (6 samples, 0.04%)</title><rect x="1119.1" y="819.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1122.1" y="830.0"></text>
</g>
<g>
<title>futex_wake_op (171 samples, 1.04%)</title><rect x="1119.6" y="819.0" width="12.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1122.6" y="830.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.03%)</title><rect x="1120.3" y="803.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1123.3" y="814.0"></text>
</g>
<g>
<title>mark_wake_futex (13 samples, 0.08%)</title><rect x="1120.8" y="803.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1123.8" y="814.0"></text>
</g>
<g>
<title>wake_up_q (141 samples, 0.86%)</title><rect x="1121.7" y="803.0" width="10.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1124.7" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (137 samples, 0.84%)</title><rect x="1122.0" y="787.0" width="9.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1125.0" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (137 samples, 0.84%)</title><rect x="1122.0" y="771.0" width="9.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1125.0" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.02%)</title><rect x="1132.4" y="899.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1135.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (31 samples, 0.19%)</title><rect x="1132.8" y="1043.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1135.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (31 samples, 0.19%)</title><rect x="1132.8" y="1027.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.8" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.05%)</title><rect x="1132.8" y="1011.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (22 samples, 0.13%)</title><rect x="1133.5" y="1011.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1136.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (22 samples, 0.13%)</title><rect x="1133.5" y="995.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.5" y="1006.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (11 samples, 0.07%)</title><rect x="1133.5" y="979.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.5" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.04%)</title><rect x="1134.5" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.5" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.03%)</title><rect x="1135.0" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="1135.0" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="1135.0" y="1011.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1138.0" y="1022.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.02%)</title><rect x="1135.1" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.1" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="1135.1" y="979.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1138.1" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1135.1" y="963.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.1" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1135.1" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1138.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (105 samples, 0.64%)</title><rect x="1135.4" y="1075.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (50 samples, 0.31%)</title><rect x="1137.2" y="1059.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.2" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.04%)</title><rect x="1137.3" y="1043.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1140.3" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (4 samples, 0.02%)</title><rect x="1137.4" y="1027.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (41 samples, 0.25%)</title><rect x="1137.9" y="1043.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (41 samples, 0.25%)</title><rect x="1137.9" y="1027.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (41 samples, 0.25%)</title><rect x="1137.9" y="1011.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6 samples, 0.04%)</title><rect x="1140.4" y="995.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.03%)</title><rect x="1140.8" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.10%)</title><rect x="1141.2" y="1059.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.10%)</title><rect x="1141.2" y="1043.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.2" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.04%)</title><rect x="1141.2" y="1027.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1144.2" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.04%)</title><rect x="1141.2" y="1011.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.2" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.04%)</title><rect x="1141.2" y="995.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.2" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.04%)</title><rect x="1141.2" y="979.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1144.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1141.8" y="1027.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1141.8" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.03%)</title><rect x="1141.8" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1144.8" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="1141.8" y="979.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.8" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1141.8" y="963.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.8" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1141.9" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1144.9" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (9 samples, 0.05%)</title><rect x="1142.3" y="1059.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1145.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (9 samples, 0.05%)</title><rect x="1143.0" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (8 samples, 0.05%)</title><rect x="1143.0" y="1059.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (8 samples, 0.05%)</title><rect x="1143.0" y="1043.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (18 samples, 0.11%)</title><rect x="1143.6" y="1075.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.09%)</title><rect x="1143.8" y="1059.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.09%)</title><rect x="1143.8" y="1043.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.09%)</title><rect x="1144.9" y="1075.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.09%)</title><rect x="1144.9" y="1059.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.9" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.05%)</title><rect x="1144.9" y="1043.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.9" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.04%)</title><rect x="1145.0" y="1027.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.0" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.04%)</title><rect x="1145.0" y="1011.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.0" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="1145.0" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1145.6" y="1043.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1145.6" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1148.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.03%)</title><rect x="1145.6" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.6" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="1145.6" y="995.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.6" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1145.6" y="979.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.6" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1145.6" y="963.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.6" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="1145.6" y="947.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.02%)</title><rect x="1146.0" y="1091.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (425 samples, 2.59%)</title><rect x="1146.3" y="1091.0" width="30.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1149.3" y="1102.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (402 samples, 2.45%)</title><rect x="1146.6" y="1075.0" width="29.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.6" y="1086.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (53 samples, 0.32%)</title><rect x="1147.6" y="1059.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1150.6" y="1070.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.03%)</title><rect x="1148.5" y="1043.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.5" y="1054.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.03%)</title><rect x="1148.9" y="1043.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.9" y="1054.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (8 samples, 0.05%)</title><rect x="1149.4" y="1043.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1152.4" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (13 samples, 0.08%)</title><rect x="1150.0" y="1043.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1153.0" y="1054.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.03%)</title><rect x="1150.2" y="1027.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.2" y="1038.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.02%)</title><rect x="1151.2" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.2" y="1054.0"></text>
</g>
<g>
<title>recv (329 samples, 2.01%)</title><rect x="1151.8" y="1059.0" width="23.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1154.8" y="1070.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (268 samples, 1.64%)</title><rect x="1156.1" y="1043.0" width="19.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1159.1" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (259 samples, 1.58%)</title><rect x="1156.1" y="1027.0" width="18.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1159.1" y="1038.0"></text>
</g>
<g>
<title>SYSC_recvfrom (5 samples, 0.03%)</title><rect x="1159.1" y="1011.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1162.1" y="1022.0"></text>
</g>
<g>
<title>sys_recvfrom (213 samples, 1.30%)</title><rect x="1159.5" y="1011.0" width="15.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1162.5" y="1022.0"></text>
</g>
<g>
<title>SYSC_recvfrom (207 samples, 1.26%)</title><rect x="1159.5" y="995.0" width="14.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.5" y="1006.0"></text>
</g>
<g>
<title>sock_recvmsg (170 samples, 1.04%)</title><rect x="1160.2" y="979.0" width="12.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.2" y="990.0"></text>
</g>
<g>
<title>inet_recvmsg (148 samples, 0.90%)</title><rect x="1160.4" y="963.0" width="10.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1163.4" y="974.0"></text>
</g>
<g>
<title>tcp_recvmsg (141 samples, 0.86%)</title><rect x="1160.9" y="947.0" width="10.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.9" y="958.0"></text>
</g>
<g>
<title>__kfree_skb (25 samples, 0.15%)</title><rect x="1163.6" y="931.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1166.6" y="942.0"></text>
</g>
<g>
<title>skb_release_all (20 samples, 0.12%)</title><rect x="1163.9" y="915.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1166.9" y="926.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.05%)</title><rect x="1163.9" y="899.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1166.9" y="910.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.04%)</title><rect x="1164.5" y="899.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1167.5" y="910.0"></text>
</g>
<g>
<title>sock_rfree (5 samples, 0.03%)</title><rect x="1164.9" y="899.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1167.9" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.05%)</title><rect x="1165.5" y="931.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.5" y="942.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (45 samples, 0.27%)</title><rect x="1166.7" y="931.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1169.7" y="942.0"></text>
</g>
<g>
<title>__check_object_size (21 samples, 0.13%)</title><rect x="1167.0" y="915.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1170.0" y="926.0"></text>
</g>
<g>
<title>__check_heap_object (5 samples, 0.03%)</title><rect x="1167.4" y="899.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1170.4" y="910.0"></text>
</g>
<g>
<title>__virt_addr_valid (10 samples, 0.06%)</title><rect x="1167.7" y="899.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1170.7" y="910.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.03%)</title><rect x="1168.5" y="915.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1171.5" y="926.0"></text>
</g>
<g>
<title>_copy_to_iter (15 samples, 0.09%)</title><rect x="1168.8" y="915.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1171.8" y="926.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.05%)</title><rect x="1168.9" y="899.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1171.9" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.02%)</title><rect x="1169.5" y="899.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1172.5" y="910.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 0.04%)</title><rect x="1170.0" y="931.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1173.0" y="942.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.02%)</title><rect x="1170.6" y="931.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1173.6" y="942.0"></text>
</g>
<g>
<title>security_socket_recvmsg (16 samples, 0.10%)</title><rect x="1171.1" y="963.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1174.1" y="974.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (13 samples, 0.08%)</title><rect x="1171.3" y="947.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1174.3" y="958.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (12 samples, 0.07%)</title><rect x="1171.3" y="931.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1174.3" y="942.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.07%)</title><rect x="1171.4" y="915.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1174.4" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (27 samples, 0.16%)</title><rect x="1172.4" y="979.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1175.4" y="990.0"></text>
</g>
<g>
<title>__fdget (18 samples, 0.11%)</title><rect x="1172.4" y="963.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1175.4" y="974.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.11%)</title><rect x="1172.4" y="947.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1175.4" y="958.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.11%)</title><rect x="1172.4" y="931.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1175.4" y="942.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.05%)</title><rect x="1173.7" y="963.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1176.7" y="974.0"></text>
</g>
<g>
<title>sys_recvfrom (9 samples, 0.05%)</title><rect x="1174.8" y="1027.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1177.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (18 samples, 0.11%)</title><rect x="1175.6" y="1075.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1178.6" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.04%)</title><rect x="1177.0" y="1123.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.0" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.02%)</title><rect x="1177.1" y="1107.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1180.1" y="1118.0"></text>
</g>
<g>
<title>start_thread (174 samples, 1.06%)</title><rect x="1177.5" y="1139.0" width="12.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1180.5" y="1150.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (174 samples, 1.06%)</title><rect x="1177.5" y="1123.0" width="12.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1180.5" y="1134.0"></text>
</g>
<g>
<title>GangWorker::loop() (163 samples, 0.99%)</title><rect x="1177.5" y="1107.0" width="11.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.5" y="1118.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (157 samples, 0.96%)</title><rect x="1177.7" y="1091.0" width="11.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.7" y="1102.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (99 samples, 0.60%)</title><rect x="1177.7" y="1075.0" width="7.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.7" y="1086.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (12 samples, 0.07%)</title><rect x="1177.8" y="1059.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.8" y="1070.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.03%)</title><rect x="1178.1" y="1043.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.1" y="1054.0"></text>
</g>
<g>
<title>SpinPause (85 samples, 0.52%)</title><rect x="1178.7" y="1059.0" width="6.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1181.7" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (39 samples, 0.24%)</title><rect x="1184.8" y="1075.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.8" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (39 samples, 0.24%)</title><rect x="1184.8" y="1059.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.8" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (35 samples, 0.21%)</title><rect x="1184.8" y="1043.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.8" y="1054.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (35 samples, 0.21%)</title><rect x="1184.8" y="1027.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.8" y="1038.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (35 samples, 0.21%)</title><rect x="1184.8" y="1011.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.8" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (7 samples, 0.04%)</title><rect x="1184.9" y="995.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.9" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.03%)</title><rect x="1185.0" y="979.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.0" y="990.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (27 samples, 0.16%)</title><rect x="1185.4" y="995.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.4" y="1006.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (25 samples, 0.15%)</title><rect x="1185.5" y="979.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="990.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (6 samples, 0.04%)</title><rect x="1185.5" y="963.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="974.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (7 samples, 0.04%)</title><rect x="1186.1" y="963.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.1" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (5 samples, 0.03%)</title><rect x="1186.6" y="963.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.6" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (4 samples, 0.02%)</title><rect x="1187.0" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="974.0"></text>
</g>
<g>
<title>G1HotCardCache::drain(CardTableEntryClosure*, unsigned int) (4 samples, 0.02%)</title><rect x="1187.3" y="1043.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.3" y="1054.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (17 samples, 0.10%)</title><rect x="1187.8" y="1075.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.8" y="1086.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (13 samples, 0.08%)</title><rect x="1187.8" y="1059.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="1070.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (13 samples, 0.08%)</title><rect x="1187.8" y="1043.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.8" y="1054.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (12 samples, 0.07%)</title><rect x="1187.9" y="1027.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.9" y="1038.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (5 samples, 0.03%)</title><rect x="1188.1" y="1011.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="1022.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (4 samples, 0.02%)</title><rect x="1188.2" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.2" y="1006.0"></text>
</g>
<g>
<title>VMThread::run() (7 samples, 0.04%)</title><rect x="1189.3" y="1107.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.3" y="1118.0"></text>
</g>
<g>
<title>VMThread::loop() (7 samples, 0.04%)</title><rect x="1189.3" y="1091.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.3" y="1102.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (4 samples, 0.02%)</title><rect x="1189.5" y="1075.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="1086.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (4 samples, 0.02%)</title><rect x="1189.5" y="1059.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.5" y="1070.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (4 samples, 0.02%)</title><rect x="1189.5" y="1043.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (4 samples, 0.02%)</title><rect x="1189.5" y="1027.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.5" y="1038.0"></text>
</g>
</g>
</svg>
