<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="821"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="821"> </text>
<g id="frames">
<g>
<title>all (543,829 samples, 100.00%)</title><rect x="10.0" y="787.0" width="1180.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="798.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (415,046 samples, 76.32%)</title><rect x="10.0" y="771.0" width="900.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (415,046 samples, 76.32%)</title><rect x="10.0" y="755.0" width="900.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (415,046 samples, 76.32%)</title><rect x="10.0" y="739.0" width="900.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (152,858 samples, 28.11%)</title><rect x="10.0" y="723.0" width="331.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/concurrent/CompletableFuture$AsyncS..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (152,858 samples, 28.11%)</title><rect x="10.0" y="707.0" width="331.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurrent/CompletableFuture.postCo..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (152,858 samples, 28.11%)</title><rect x="10.0" y="691.0" width="331.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/util/concurrent/CompletableFuture$UniCom..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$172/330952395.apply (152,857 samples, 28.11%)</title><rect x="10.0" y="675.0" width="331.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="686.0">jdk/internal/net/http/MultiExchange$$Lambda$1..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (152,857 samples, 28.11%)</title><rect x="10.0" y="659.0" width="331.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="670.0">jdk/internal/net/http/MultiExchange.lambda$re..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (152,857 samples, 28.11%)</title><rect x="10.0" y="643.0" width="331.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="654.0">jdk/internal/net/http/MultiExchange.responseA..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (123,434 samples, 22.70%)</title><rect x="10.0" y="627.0" width="267.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="638.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (123,434 samples, 22.70%)</title><rect x="10.0" y="611.0" width="267.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (123,434 samples, 22.70%)</title><rect x="10.0" y="595.0" width="267.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (118,659 samples, 21.82%)</title><rect x="10.0" y="579.0" width="257.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="590.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (118,659 samples, 21.82%)</title><rect x="10.0" y="563.0" width="257.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (118,659 samples, 21.82%)</title><rect x="10.0" y="547.0" width="257.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$325/555075840.apply (118,659 samples, 21.82%)</title><rect x="10.0" y="531.0" width="257.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net/http/Exchange$$La..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (118,659 samples, 21.82%)</title><rect x="10.0" y="515.0" width="257.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="526.0">jdk/internal/net/http/Exchange.lam..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (118,659 samples, 21.82%)</title><rect x="10.0" y="499.0" width="257.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="510.0">jdk/internal/net/http/Exchange.che..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1734934037.apply (118,659 samples, 21.82%)</title><rect x="10.0" y="483.0" width="257.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/http/Exchange$$La..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (118,659 samples, 21.82%)</title><rect x="10.0" y="467.0" width="257.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/Exchange.lam..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (118,659 samples, 21.82%)</title><rect x="10.0" y="451.0" width="257.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/Http1Exchang..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (118,659 samples, 21.82%)</title><rect x="10.0" y="435.0" width="257.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="446.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (118,659 samples, 21.82%)</title><rect x="10.0" y="419.0" width="257.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="430.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/1292913949.apply (118,659 samples, 21.82%)</title><rect x="10.0" y="403.0" width="257.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net/http/Http1Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (118,659 samples, 21.82%)</title><rect x="10.0" y="387.0" width="257.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net/http/Http1Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (118,659 samples, 21.82%)</title><rect x="10.0" y="371.0" width="257.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="382.0">jdk/internal/net/http/Http1Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (118,659 samples, 21.82%)</title><rect x="10.0" y="355.0" width="257.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="366.0">jdk/internal/net/http/SocketTube.c..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (15,587 samples, 2.87%)</title><rect x="10.0" y="339.0" width="33.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="350.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (15,587 samples, 2.87%)</title><rect x="10.0" y="323.0" width="33.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (15,587 samples, 2.87%)</title><rect x="10.0" y="307.0" width="33.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="318.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (15,587 samples, 2.87%)</title><rect x="10.0" y="291.0" width="33.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="302.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (15,587 samples, 2.87%)</title><rect x="10.0" y="275.0" width="33.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="286.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12,282 samples, 2.26%)</title><rect x="10.0" y="259.0" width="26.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="13.0" y="270.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3,305 samples, 0.61%)</title><rect x="36.6" y="259.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.6" y="270.0"></text>
</g>
<g>
<title>java.lang.Object (3,305 samples, 0.61%)</title><rect x="36.6" y="243.0" width="7.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="39.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (103,072 samples, 18.95%)</title><rect x="43.8" y="339.0" width="223.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.8" y="350.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (103,072 samples, 18.95%)</title><rect x="43.8" y="323.0" width="223.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.8" y="334.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (103,072 samples, 18.95%)</title><rect x="43.8" y="307.0" width="223.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.8" y="318.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (103,072 samples, 18.95%)</title><rect x="43.8" y="291.0" width="223.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.8" y="302.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (103,072 samples, 18.95%)</title><rect x="43.8" y="275.0" width="223.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.8" y="286.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (93,958 samples, 17.28%)</title><rect x="43.8" y="259.0" width="203.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="46.8" y="270.0">jdk.internal.net.http.HttpC..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (9,114 samples, 1.68%)</title><rect x="247.7" y="259.0" width="19.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object (9,114 samples, 1.68%)</title><rect x="247.7" y="243.0" width="19.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="250.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (4,775 samples, 0.88%)</title><rect x="267.5" y="579.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="270.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (4,775 samples, 0.88%)</title><rect x="267.5" y="563.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (4,775 samples, 0.88%)</title><rect x="267.5" y="547.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (4,775 samples, 0.88%)</title><rect x="267.5" y="531.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (4,775 samples, 0.88%)</title><rect x="267.5" y="515.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="270.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (4,775 samples, 0.88%)</title><rect x="267.5" y="499.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (4,775 samples, 0.88%)</title><rect x="267.5" y="483.0" width="10.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="270.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (28,604 samples, 5.26%)</title><rect x="277.8" y="627.0" width="62.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.8" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (17,280 samples, 3.18%)</title><rect x="277.8" y="611.0" width="37.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="280.8" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (11,324 samples, 2.08%)</title><rect x="315.3" y="611.0" width="24.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.3" y="622.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11,324 samples, 2.08%)</title><rect x="315.3" y="595.0" width="24.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.3" y="606.0">s..</text>
</g>
<g>
<title>java.lang.Object (11,324 samples, 2.08%)</title><rect x="315.3" y="579.0" width="24.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="318.3" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (819 samples, 0.15%)</title><rect x="339.9" y="627.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (819 samples, 0.15%)</title><rect x="339.9" y="611.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (790 samples, 0.15%)</title><rect x="340.0" y="595.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.0" y="606.0"></text>
</g>
<g>
<title>java.lang.Class (790 samples, 0.15%)</title><rect x="340.0" y="579.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="343.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (965 samples, 0.18%)</title><rect x="341.7" y="723.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (965 samples, 0.18%)</title><rect x="341.7" y="707.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (965 samples, 0.18%)</title><rect x="341.7" y="691.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$204/1048669819.accept (965 samples, 0.18%)</title><rect x="341.7" y="675.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$collect$2 (965 samples, 0.18%)</title><rect x="341.7" y="659.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (965 samples, 0.18%)</title><rect x="341.7" y="643.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (965 samples, 0.18%)</title><rect x="341.7" y="627.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (965 samples, 0.18%)</title><rect x="341.7" y="611.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (965 samples, 0.18%)</title><rect x="341.7" y="595.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$221/654824253.accept (965 samples, 0.18%)</title><rect x="341.7" y="579.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$merge$0 (965 samples, 0.18%)</title><rect x="341.7" y="563.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (965 samples, 0.18%)</title><rect x="341.7" y="547.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (965 samples, 0.18%)</title><rect x="341.7" y="531.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (965 samples, 0.18%)</title><rect x="341.7" y="515.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (965 samples, 0.18%)</title><rect x="341.7" y="499.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (965 samples, 0.18%)</title><rect x="341.7" y="483.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (965 samples, 0.18%)</title><rect x="341.7" y="467.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (399 samples, 0.07%)</title><rect x="341.7" y="451.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (399 samples, 0.07%)</title><rect x="341.7" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (399 samples, 0.07%)</title><rect x="341.7" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (399 samples, 0.07%)</title><rect x="341.7" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (399 samples, 0.07%)</title><rect x="341.7" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (399 samples, 0.07%)</title><rect x="341.7" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (399 samples, 0.07%)</title><rect x="341.7" y="355.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (399 samples, 0.07%)</title><rect x="341.7" y="339.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="344.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (566 samples, 0.10%)</title><rect x="342.5" y="451.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (566 samples, 0.10%)</title><rect x="342.5" y="435.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (566 samples, 0.10%)</title><rect x="342.5" y="419.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (566 samples, 0.10%)</title><rect x="342.5" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (566 samples, 0.10%)</title><rect x="342.5" y="387.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (566 samples, 0.10%)</title><rect x="342.5" y="371.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="345.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (566 samples, 0.10%)</title><rect x="342.5" y="355.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="345.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (41,340 samples, 7.60%)</title><rect x="343.8" y="723.0" width="89.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.8" y="734.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,844 samples, 0.34%)</title><rect x="343.8" y="707.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (589 samples, 0.11%)</title><rect x="343.8" y="691.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (589 samples, 0.11%)</title><rect x="343.8" y="675.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (589 samples, 0.11%)</title><rect x="343.8" y="659.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (589 samples, 0.11%)</title><rect x="343.8" y="643.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (589 samples, 0.11%)</title><rect x="343.8" y="627.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (589 samples, 0.11%)</title><rect x="343.8" y="611.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="346.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,255 samples, 0.23%)</title><rect x="345.0" y="691.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,255 samples, 0.23%)</title><rect x="345.0" y="675.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,255 samples, 0.23%)</title><rect x="345.0" y="659.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,255 samples, 0.23%)</title><rect x="345.0" y="643.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,255 samples, 0.23%)</title><rect x="345.0" y="627.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,255 samples, 0.23%)</title><rect x="345.0" y="611.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,255 samples, 0.23%)</title><rect x="345.0" y="595.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="348.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (39,496 samples, 7.26%)</title><rect x="347.8" y="707.0" width="85.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.8" y="718.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7,517 samples, 1.38%)</title><rect x="347.8" y="691.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7,517 samples, 1.38%)</title><rect x="347.8" y="675.0" width="16.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7,517 samples, 1.38%)</title><rect x="347.8" y="659.0" width="16.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7,517 samples, 1.38%)</title><rect x="347.8" y="643.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7,517 samples, 1.38%)</title><rect x="347.8" y="627.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (7,517 samples, 1.38%)</title><rect x="347.8" y="611.0" width="16.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="350.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (31,979 samples, 5.88%)</title><rect x="364.1" y="691.0" width="69.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.1" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (31,979 samples, 5.88%)</title><rect x="364.1" y="675.0" width="69.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.1" y="686.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (31,979 samples, 5.88%)</title><rect x="364.1" y="659.0" width="69.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.1" y="670.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (31,979 samples, 5.88%)</title><rect x="364.1" y="643.0" width="69.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.1" y="654.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (31,979 samples, 5.88%)</title><rect x="364.1" y="627.0" width="69.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.1" y="638.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31,979 samples, 5.88%)</title><rect x="364.1" y="611.0" width="69.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.1" y="622.0">jdk/int..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (31,979 samples, 5.88%)</title><rect x="364.1" y="595.0" width="69.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="367.1" y="606.0">java.ut..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$389/2097994766.run (156 samples, 0.03%)</title><rect x="433.5" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (156 samples, 0.03%)</title><rect x="433.5" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (156 samples, 0.03%)</title><rect x="433.5" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (156 samples, 0.03%)</title><rect x="433.5" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (156 samples, 0.03%)</title><rect x="433.5" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (156 samples, 0.03%)</title><rect x="433.5" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (156 samples, 0.03%)</title><rect x="433.5" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (156 samples, 0.03%)</title><rect x="433.5" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (156 samples, 0.03%)</title><rect x="433.5" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (156 samples, 0.03%)</title><rect x="433.5" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (156 samples, 0.03%)</title><rect x="433.5" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (156 samples, 0.03%)</title><rect x="433.5" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (156 samples, 0.03%)</title><rect x="433.5" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (156 samples, 0.03%)</title><rect x="433.5" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (156 samples, 0.03%)</title><rect x="433.5" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (156 samples, 0.03%)</title><rect x="433.5" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (130 samples, 0.02%)</title><rect x="433.5" y="467.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/283532103.apply (128 samples, 0.02%)</title><rect x="433.5" y="451.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (128 samples, 0.02%)</title><rect x="433.5" y="435.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (128 samples, 0.02%)</title><rect x="433.5" y="419.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (128 samples, 0.02%)</title><rect x="433.5" y="403.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (128 samples, 0.02%)</title><rect x="433.5" y="387.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (128 samples, 0.02%)</title><rect x="433.5" y="371.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1212401691.run (128 samples, 0.02%)</title><rect x="433.5" y="355.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (128 samples, 0.02%)</title><rect x="433.5" y="339.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (128 samples, 0.02%)</title><rect x="433.5" y="323.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (128 samples, 0.02%)</title><rect x="433.5" y="307.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="436.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (128 samples, 0.02%)</title><rect x="433.5" y="291.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (128 samples, 0.02%)</title><rect x="433.5" y="275.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (128 samples, 0.02%)</title><rect x="433.5" y="259.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (128 samples, 0.02%)</title><rect x="433.5" y="243.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (128 samples, 0.02%)</title><rect x="433.5" y="227.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (128 samples, 0.02%)</title><rect x="433.5" y="211.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (128 samples, 0.02%)</title><rect x="433.5" y="195.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (128 samples, 0.02%)</title><rect x="433.5" y="179.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (128 samples, 0.02%)</title><rect x="433.5" y="163.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (128 samples, 0.02%)</title><rect x="433.5" y="147.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (128 samples, 0.02%)</title><rect x="433.5" y="131.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (128 samples, 0.02%)</title><rect x="433.5" y="115.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1243324746.run (128 samples, 0.02%)</title><rect x="433.5" y="99.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (128 samples, 0.02%)</title><rect x="433.5" y="83.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (128 samples, 0.02%)</title><rect x="433.5" y="67.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (128 samples, 0.02%)</title><rect x="433.5" y="51.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.5" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (128 samples, 0.02%)</title><rect x="433.5" y="35.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (217,473 samples, 39.99%)</title><rect x="433.8" y="723.0" width="471.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.8" y="734.0">jdk/internal/net/http/common/SequentialScheduler$SchedulableTask...</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (217,473 samples, 39.99%)</title><rect x="433.8" y="707.0" width="471.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.8" y="718.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRestarta..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (103,802 samples, 19.09%)</title><rect x="433.8" y="691.0" width="225.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.8" y="702.0">jdk/internal/net/http/common/S..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (103,802 samples, 19.09%)</title><rect x="433.8" y="675.0" width="225.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.8" y="686.0">jdk/internal/net/http/Http1Asy..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (103,802 samples, 19.09%)</title><rect x="433.8" y="659.0" width="225.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.8" y="670.0">jdk/internal/net/http/Http1Asy..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (95,335 samples, 17.53%)</title><rect x="433.8" y="643.0" width="206.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.8" y="654.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (95,335 samples, 17.53%)</title><rect x="433.8" y="627.0" width="206.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.8" y="638.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (95,335 samples, 17.53%)</title><rect x="433.8" y="611.0" width="206.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.8" y="622.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (95,335 samples, 17.53%)</title><rect x="433.8" y="595.0" width="206.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.8" y="606.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (95,335 samples, 17.53%)</title><rect x="433.8" y="579.0" width="206.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.8" y="590.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (95,335 samples, 17.53%)</title><rect x="433.8" y="563.0" width="206.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.8" y="574.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (95,335 samples, 17.53%)</title><rect x="433.8" y="547.0" width="206.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.8" y="558.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (95,335 samples, 17.53%)</title><rect x="433.8" y="531.0" width="206.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.8" y="542.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (95,335 samples, 17.53%)</title><rect x="433.8" y="515.0" width="206.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.8" y="526.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (90,798 samples, 16.70%)</title><rect x="433.8" y="499.0" width="197.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="436.8" y="510.0">jdk.internal.net.http.Http..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4,537 samples, 0.83%)</title><rect x="630.8" y="499.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object (4,537 samples, 0.83%)</title><rect x="630.8" y="483.0" width="9.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="633.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (8,467 samples, 1.56%)</title><rect x="640.7" y="643.0" width="18.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (8,467 samples, 1.56%)</title><rect x="640.7" y="627.0" width="18.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,467 samples, 1.56%)</title><rect x="640.7" y="611.0" width="18.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,467 samples, 1.56%)</title><rect x="640.7" y="595.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8,467 samples, 1.56%)</title><rect x="640.7" y="579.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,467 samples, 1.56%)</title><rect x="640.7" y="563.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8,467 samples, 1.56%)</title><rect x="640.7" y="547.0" width="18.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8,467 samples, 1.56%)</title><rect x="640.7" y="531.0" width="18.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8,467 samples, 1.56%)</title><rect x="640.7" y="515.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (8,467 samples, 1.56%)</title><rect x="640.7" y="499.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8,467 samples, 1.56%)</title><rect x="640.7" y="483.0" width="18.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8,467 samples, 1.56%)</title><rect x="640.7" y="467.0" width="18.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,467 samples, 1.56%)</title><rect x="640.7" y="451.0" width="18.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (938 samples, 0.17%)</title><rect x="640.7" y="435.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$374/2048942177.apply (938 samples, 0.17%)</title><rect x="640.7" y="419.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (938 samples, 0.17%)</title><rect x="640.7" y="403.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (938 samples, 0.17%)</title><rect x="640.7" y="387.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (938 samples, 0.17%)</title><rect x="640.7" y="371.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (938 samples, 0.17%)</title><rect x="640.7" y="355.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Class (938 samples, 0.17%)</title><rect x="640.7" y="339.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="643.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (7,529 samples, 1.38%)</title><rect x="642.7" y="435.0" width="16.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7,529 samples, 1.38%)</title><rect x="642.7" y="419.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/1325079472.apply (7,529 samples, 1.38%)</title><rect x="642.7" y="403.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7,529 samples, 1.38%)</title><rect x="642.7" y="387.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (7,529 samples, 1.38%)</title><rect x="642.7" y="371.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (7,529 samples, 1.38%)</title><rect x="642.7" y="355.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (7,529 samples, 1.38%)</title><rect x="642.7" y="339.0" width="16.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="645.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (113,671 samples, 20.90%)</title><rect x="659.0" y="691.0" width="246.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.0" y="702.0">jdk/internal/net/http/common/Sequ..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (113,671 samples, 20.90%)</title><rect x="659.0" y="675.0" width="246.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.0" y="686.0">jdk/internal/net/http/common/Sequ..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (113,671 samples, 20.90%)</title><rect x="659.0" y="659.0" width="246.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.0" y="670.0">jdk/internal/net/http/common/Sequ..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (113,671 samples, 20.90%)</title><rect x="659.0" y="643.0" width="246.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.0" y="654.0">jdk/internal/net/http/Http1AsyncR..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (113,671 samples, 20.90%)</title><rect x="659.0" y="627.0" width="246.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.0" y="638.0">jdk/internal/net/http/Http1AsyncR..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (113,126 samples, 20.80%)</title><rect x="659.0" y="611.0" width="245.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.0" y="622.0">jdk/internal/net/http/Http1Respon..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (113,126 samples, 20.80%)</title><rect x="659.0" y="595.0" width="245.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.0" y="606.0">jdk/internal/net/http/Http1Respon..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (113,126 samples, 20.80%)</title><rect x="659.0" y="579.0" width="245.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.0" y="590.0">jdk/internal/net/http/Http1Respon..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (113,126 samples, 20.80%)</title><rect x="659.0" y="563.0" width="245.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.0" y="574.0">jdk/internal/net/http/Http1Respon..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (113,126 samples, 20.80%)</title><rect x="659.0" y="547.0" width="245.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.0" y="558.0">jdk/internal/net/http/ResponseCon..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (113,126 samples, 20.80%)</title><rect x="659.0" y="531.0" width="245.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.0" y="542.0">jdk/internal/net/http/ResponseCon..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1243324746.run (113,126 samples, 20.80%)</title><rect x="659.0" y="515.0" width="245.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.0" y="526.0">jdk/internal/net/http/Http1Respon..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (113,126 samples, 20.80%)</title><rect x="659.0" y="499.0" width="245.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.0" y="510.0">jdk/internal/net/http/Http1Respon..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (113,126 samples, 20.80%)</title><rect x="659.0" y="483.0" width="245.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.0" y="494.0">jdk/internal/net/http/HttpConnect..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (113,126 samples, 20.80%)</title><rect x="659.0" y="467.0" width="245.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.0" y="478.0">jdk/internal/net/http/ConnectionP..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (113,126 samples, 20.80%)</title><rect x="659.0" y="451.0" width="245.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.0" y="462.0">jdk/internal/net/http/ConnectionP..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (5,650 samples, 1.04%)</title><rect x="659.0" y="435.0" width="12.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="662.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (107,476 samples, 19.76%)</title><rect x="671.3" y="435.0" width="233.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.3" y="446.0">jdk/internal/net/http/Connectio..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (107,476 samples, 19.76%)</title><rect x="671.3" y="419.0" width="233.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.3" y="430.0">jdk/internal/net/http/SocketTub..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (15,821 samples, 2.91%)</title><rect x="671.3" y="403.0" width="34.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.3" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (15,821 samples, 2.91%)</title><rect x="671.3" y="387.0" width="34.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="674.3" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (15,821 samples, 2.91%)</title><rect x="671.3" y="371.0" width="34.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.3" y="382.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (15,821 samples, 2.91%)</title><rect x="671.3" y="355.0" width="34.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.3" y="366.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (15,821 samples, 2.91%)</title><rect x="671.3" y="339.0" width="34.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.3" y="350.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (13,240 samples, 2.43%)</title><rect x="671.3" y="323.0" width="28.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="674.3" y="334.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,581 samples, 0.47%)</title><rect x="700.0" y="323.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.0" y="334.0"></text>
</g>
<g>
<title>java.lang.Object (2,581 samples, 0.47%)</title><rect x="700.0" y="307.0" width="5.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="703.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (91,655 samples, 16.85%)</title><rect x="705.6" y="403.0" width="198.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.6" y="414.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (91,655 samples, 16.85%)</title><rect x="705.6" y="387.0" width="198.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.6" y="398.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (91,655 samples, 16.85%)</title><rect x="705.6" y="371.0" width="198.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.6" y="382.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (91,655 samples, 16.85%)</title><rect x="705.6" y="355.0" width="198.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.6" y="366.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (91,655 samples, 16.85%)</title><rect x="705.6" y="339.0" width="198.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.6" y="350.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (88,467 samples, 16.27%)</title><rect x="705.6" y="323.0" width="192.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="708.6" y="334.0">jdk.internal.net.http.Htt..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3,188 samples, 0.59%)</title><rect x="897.6" y="323.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.6" y="334.0"></text>
</g>
<g>
<title>java.lang.Object (3,188 samples, 0.59%)</title><rect x="897.6" y="307.0" width="6.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="900.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (544 samples, 0.10%)</title><rect x="904.5" y="611.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (544 samples, 0.10%)</title><rect x="904.5" y="595.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (544 samples, 0.10%)</title><rect x="904.5" y="579.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (544 samples, 0.10%)</title><rect x="904.5" y="563.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (544 samples, 0.10%)</title><rect x="904.5" y="547.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (544 samples, 0.10%)</title><rect x="904.5" y="531.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (544 samples, 0.10%)</title><rect x="904.5" y="515.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (544 samples, 0.10%)</title><rect x="904.5" y="499.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (544 samples, 0.10%)</title><rect x="904.5" y="483.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (544 samples, 0.10%)</title><rect x="904.5" y="467.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (544 samples, 0.10%)</title><rect x="904.5" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (544 samples, 0.10%)</title><rect x="904.5" y="435.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (544 samples, 0.10%)</title><rect x="904.5" y="419.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (476 samples, 0.09%)</title><rect x="904.6" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (476 samples, 0.09%)</title><rect x="904.6" y="387.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/1325079472.apply (476 samples, 0.09%)</title><rect x="904.6" y="371.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (476 samples, 0.09%)</title><rect x="904.6" y="355.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (476 samples, 0.09%)</title><rect x="904.6" y="339.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (476 samples, 0.09%)</title><rect x="904.6" y="323.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (476 samples, 0.09%)</title><rect x="904.6" y="307.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="907.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.run (2,254 samples, 0.41%)</title><rect x="905.7" y="723.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (2,254 samples, 0.41%)</title><rect x="905.7" y="707.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (2,254 samples, 0.41%)</title><rect x="905.7" y="691.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMethod (2,254 samples, 0.41%)</title><rect x="905.7" y="675.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.collect (372 samples, 0.07%)</title><rect x="905.7" y="659.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (372 samples, 0.07%)</title><rect x="905.7" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (372 samples, 0.07%)</title><rect x="905.7" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (372 samples, 0.07%)</title><rect x="905.7" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="908.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (372 samples, 0.07%)</title><rect x="905.7" y="595.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (359 samples, 0.07%)</title><rect x="905.7" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (359 samples, 0.07%)</title><rect x="905.7" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (359 samples, 0.07%)</title><rect x="905.7" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (359 samples, 0.07%)</title><rect x="905.7" y="531.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (359 samples, 0.07%)</title><rect x="905.7" y="515.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (359 samples, 0.07%)</title><rect x="905.7" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (359 samples, 0.07%)</title><rect x="905.7" y="483.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="908.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (1,841 samples, 0.34%)</title><rect x="906.6" y="659.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,841 samples, 0.34%)</title><rect x="906.6" y="643.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,841 samples, 0.34%)</title><rect x="906.6" y="627.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,841 samples, 0.34%)</title><rect x="906.6" y="611.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="909.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,841 samples, 0.34%)</title><rect x="906.6" y="595.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,841 samples, 0.34%)</title><rect x="906.6" y="579.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,841 samples, 0.34%)</title><rect x="906.6" y="563.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,841 samples, 0.34%)</title><rect x="906.6" y="547.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,841 samples, 0.34%)</title><rect x="906.6" y="531.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (731 samples, 0.13%)</title><rect x="906.6" y="515.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (731 samples, 0.13%)</title><rect x="906.6" y="499.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="909.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (731 samples, 0.13%)</title><rect x="906.6" y="483.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (731 samples, 0.13%)</title><rect x="906.6" y="467.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (731 samples, 0.13%)</title><rect x="906.6" y="451.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (731 samples, 0.13%)</title><rect x="906.6" y="435.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (731 samples, 0.13%)</title><rect x="906.6" y="419.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (731 samples, 0.13%)</title><rect x="906.6" y="403.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="909.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,110 samples, 0.20%)</title><rect x="908.2" y="515.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,110 samples, 0.20%)</title><rect x="908.2" y="499.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,110 samples, 0.20%)</title><rect x="908.2" y="483.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,110 samples, 0.20%)</title><rect x="908.2" y="467.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,110 samples, 0.20%)</title><rect x="908.2" y="451.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,110 samples, 0.20%)</title><rect x="908.2" y="435.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,110 samples, 0.20%)</title><rect x="908.2" y="419.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="911.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,549 samples, 0.47%)</title><rect x="910.6" y="771.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,549 samples, 0.47%)</title><rect x="910.6" y="755.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="913.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2,549 samples, 0.47%)</title><rect x="910.6" y="739.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,549 samples, 0.47%)</title><rect x="910.6" y="723.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,549 samples, 0.47%)</title><rect x="910.6" y="707.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (2,436 samples, 0.45%)</title><rect x="910.8" y="691.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,436 samples, 0.45%)</title><rect x="910.8" y="675.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,436 samples, 0.45%)</title><rect x="910.8" y="659.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,436 samples, 0.45%)</title><rect x="910.8" y="643.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,436 samples, 0.45%)</title><rect x="910.8" y="627.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,436 samples, 0.45%)</title><rect x="910.8" y="611.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,436 samples, 0.45%)</title><rect x="910.8" y="595.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,436 samples, 0.45%)</title><rect x="910.8" y="579.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,436 samples, 0.45%)</title><rect x="910.8" y="563.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1,462 samples, 0.27%)</title><rect x="910.8" y="547.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,462 samples, 0.27%)</title><rect x="910.8" y="531.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,462 samples, 0.27%)</title><rect x="910.8" y="515.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,462 samples, 0.27%)</title><rect x="910.8" y="499.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,462 samples, 0.27%)</title><rect x="910.8" y="483.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,462 samples, 0.27%)</title><rect x="910.8" y="467.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,462 samples, 0.27%)</title><rect x="910.8" y="451.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,462 samples, 0.27%)</title><rect x="910.8" y="435.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="913.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (974 samples, 0.18%)</title><rect x="914.0" y="547.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (974 samples, 0.18%)</title><rect x="914.0" y="531.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (974 samples, 0.18%)</title><rect x="914.0" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (974 samples, 0.18%)</title><rect x="914.0" y="499.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (974 samples, 0.18%)</title><rect x="914.0" y="483.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (974 samples, 0.18%)</title><rect x="914.0" y="467.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (974 samples, 0.18%)</title><rect x="914.0" y="451.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="917.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (124,779 samples, 22.94%)</title><rect x="916.1" y="771.0" width="270.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.1" y="782.0">jdk/internal/net/http/HttpClientImpl..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,086 samples, 0.20%)</title><rect x="916.1" y="755.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$381/44958327.accept (1,086 samples, 0.20%)</title><rect x="916.1" y="739.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,086 samples, 0.20%)</title><rect x="916.1" y="723.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,086 samples, 0.20%)</title><rect x="916.1" y="707.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,086 samples, 0.20%)</title><rect x="916.1" y="691.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,086 samples, 0.20%)</title><rect x="916.1" y="675.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,086 samples, 0.20%)</title><rect x="916.1" y="659.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,086 samples, 0.20%)</title><rect x="916.1" y="643.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,086 samples, 0.20%)</title><rect x="916.1" y="627.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,086 samples, 0.20%)</title><rect x="916.1" y="611.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,086 samples, 0.20%)</title><rect x="916.1" y="595.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="919.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/493344851.run (1,086 samples, 0.20%)</title><rect x="916.1" y="579.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,086 samples, 0.20%)</title><rect x="916.1" y="563.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,085 samples, 0.20%)</title><rect x="916.1" y="547.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="919.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,085 samples, 0.20%)</title><rect x="916.1" y="531.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1,085 samples, 0.20%)</title><rect x="916.1" y="515.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,085 samples, 0.20%)</title><rect x="916.1" y="499.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,085 samples, 0.20%)</title><rect x="916.1" y="483.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="919.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,085 samples, 0.20%)</title><rect x="916.1" y="467.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,085 samples, 0.20%)</title><rect x="916.1" y="451.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="919.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,085 samples, 0.20%)</title><rect x="916.1" y="435.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (897 samples, 0.16%)</title><rect x="916.1" y="419.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (897 samples, 0.16%)</title><rect x="916.1" y="403.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (897 samples, 0.16%)</title><rect x="916.1" y="387.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="919.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (897 samples, 0.16%)</title><rect x="916.1" y="371.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="919.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (897 samples, 0.16%)</title><rect x="916.1" y="355.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (897 samples, 0.16%)</title><rect x="916.1" y="339.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (897 samples, 0.16%)</title><rect x="916.1" y="323.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (897 samples, 0.16%)</title><rect x="916.1" y="307.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="919.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (188 samples, 0.03%)</title><rect x="918.0" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="921.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (188 samples, 0.03%)</title><rect x="918.0" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="921.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (188 samples, 0.03%)</title><rect x="918.0" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (188 samples, 0.03%)</title><rect x="918.0" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="921.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (188 samples, 0.03%)</title><rect x="918.0" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (188 samples, 0.03%)</title><rect x="918.0" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="921.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (188 samples, 0.03%)</title><rect x="918.0" y="323.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="921.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (90,222 samples, 16.59%)</title><rect x="918.5" y="755.0" width="195.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="921.5" y="766.0">jdk.internal.net.http.Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (2,947 samples, 0.54%)</title><rect x="1114.2" y="755.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1068922401.run (1,076 samples, 0.20%)</title><rect x="1114.2" y="739.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1,076 samples, 0.20%)</title><rect x="1114.2" y="723.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,076 samples, 0.20%)</title><rect x="1114.2" y="707.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,076 samples, 0.20%)</title><rect x="1114.2" y="691.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,076 samples, 0.20%)</title><rect x="1114.2" y="675.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,076 samples, 0.20%)</title><rect x="1114.2" y="659.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1117.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/493344851.run (1,076 samples, 0.20%)</title><rect x="1114.2" y="643.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,076 samples, 0.20%)</title><rect x="1114.2" y="627.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1,076 samples, 0.20%)</title><rect x="1114.2" y="611.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,076 samples, 0.20%)</title><rect x="1114.2" y="595.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1,076 samples, 0.20%)</title><rect x="1114.2" y="579.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,076 samples, 0.20%)</title><rect x="1114.2" y="563.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,076 samples, 0.20%)</title><rect x="1114.2" y="547.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,076 samples, 0.20%)</title><rect x="1114.2" y="531.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,076 samples, 0.20%)</title><rect x="1114.2" y="515.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,076 samples, 0.20%)</title><rect x="1114.2" y="499.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (820 samples, 0.15%)</title><rect x="1114.2" y="483.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (820 samples, 0.15%)</title><rect x="1114.2" y="467.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (820 samples, 0.15%)</title><rect x="1114.2" y="451.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (820 samples, 0.15%)</title><rect x="1114.2" y="435.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (820 samples, 0.15%)</title><rect x="1114.2" y="419.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (820 samples, 0.15%)</title><rect x="1114.2" y="403.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (820 samples, 0.15%)</title><rect x="1114.2" y="387.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (820 samples, 0.15%)</title><rect x="1114.2" y="371.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1117.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (256 samples, 0.05%)</title><rect x="1116.0" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (256 samples, 0.05%)</title><rect x="1116.0" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (256 samples, 0.05%)</title><rect x="1116.0" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (256 samples, 0.05%)</title><rect x="1116.0" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1119.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (256 samples, 0.05%)</title><rect x="1116.0" y="419.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (256 samples, 0.05%)</title><rect x="1116.0" y="403.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1119.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (256 samples, 0.05%)</title><rect x="1116.0" y="387.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1119.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$293/850614757.run (1,871 samples, 0.34%)</title><rect x="1116.6" y="739.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,871 samples, 0.34%)</title><rect x="1116.6" y="723.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,871 samples, 0.34%)</title><rect x="1116.6" y="707.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,871 samples, 0.34%)</title><rect x="1116.6" y="691.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,871 samples, 0.34%)</title><rect x="1116.6" y="675.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1,115 samples, 0.21%)</title><rect x="1116.6" y="659.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,115 samples, 0.21%)</title><rect x="1116.6" y="643.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1119.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,115 samples, 0.21%)</title><rect x="1116.6" y="627.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,115 samples, 0.21%)</title><rect x="1116.6" y="611.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,115 samples, 0.21%)</title><rect x="1116.6" y="595.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,115 samples, 0.21%)</title><rect x="1116.6" y="579.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,115 samples, 0.21%)</title><rect x="1116.6" y="563.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,115 samples, 0.21%)</title><rect x="1116.6" y="547.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1119.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (756 samples, 0.14%)</title><rect x="1119.0" y="659.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (756 samples, 0.14%)</title><rect x="1119.0" y="643.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (756 samples, 0.14%)</title><rect x="1119.0" y="627.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1122.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (756 samples, 0.14%)</title><rect x="1119.0" y="611.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (756 samples, 0.14%)</title><rect x="1119.0" y="595.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (756 samples, 0.14%)</title><rect x="1119.0" y="579.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (756 samples, 0.14%)</title><rect x="1119.0" y="563.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1122.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,699 samples, 0.50%)</title><rect x="1120.6" y="755.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,699 samples, 0.50%)</title><rect x="1120.6" y="739.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.6" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,699 samples, 0.50%)</title><rect x="1120.6" y="723.0" width="5.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1123.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (21,826 samples, 4.01%)</title><rect x="1126.5" y="755.0" width="47.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.5" y="766.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (21,826 samples, 4.01%)</title><rect x="1126.5" y="739.0" width="47.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1129.5" y="750.0">jdk...</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (5,679 samples, 1.04%)</title><rect x="1173.8" y="755.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1176.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5,679 samples, 1.04%)</title><rect x="1173.8" y="739.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (5,679 samples, 1.04%)</title><rect x="1173.8" y="723.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (5,679 samples, 1.04%)</title><rect x="1173.8" y="707.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (5,679 samples, 1.04%)</title><rect x="1173.8" y="691.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.8" y="702.0"></text>
</g>
<g>
<title>java.lang.Object (5,679 samples, 1.04%)</title><rect x="1173.8" y="675.0" width="12.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1176.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (320 samples, 0.06%)</title><rect x="1186.1" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (320 samples, 0.06%)</title><rect x="1186.1" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (320 samples, 0.06%)</title><rect x="1186.1" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (320 samples, 0.06%)</title><rect x="1186.1" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (320 samples, 0.06%)</title><rect x="1186.1" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.1" y="702.0"></text>
</g>
<g>
<title>java.lang.Object (320 samples, 0.06%)</title><rect x="1186.1" y="675.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1189.1" y="686.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,455 samples, 0.27%)</title><rect x="1186.8" y="771.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,455 samples, 0.27%)</title><rect x="1186.8" y="755.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,455 samples, 0.27%)</title><rect x="1186.8" y="739.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,455 samples, 0.27%)</title><rect x="1186.8" y="723.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,455 samples, 0.27%)</title><rect x="1186.8" y="707.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,455 samples, 0.27%)</title><rect x="1186.8" y="691.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.8" y="702.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,455 samples, 0.27%)</title><rect x="1186.8" y="675.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (1,455 samples, 0.27%)</title><rect x="1186.8" y="659.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1189.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,455 samples, 0.27%)</title><rect x="1186.8" y="643.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,455 samples, 0.27%)</title><rect x="1186.8" y="627.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,455 samples, 0.27%)</title><rect x="1186.8" y="611.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1189.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,455 samples, 0.27%)</title><rect x="1186.8" y="595.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,455 samples, 0.27%)</title><rect x="1186.8" y="579.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,455 samples, 0.27%)</title><rect x="1186.8" y="563.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,455 samples, 0.27%)</title><rect x="1186.8" y="547.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,455 samples, 0.27%)</title><rect x="1186.8" y="531.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,455 samples, 0.27%)</title><rect x="1186.8" y="515.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1189.8" y="526.0"></text>
</g>
</g>
</svg>
