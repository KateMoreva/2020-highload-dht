<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (229,621 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (115,266 samples, 50.20%)</title><rect x="10.0" y="723.0" width="592.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (115,266 samples, 50.20%)</title><rect x="10.0" y="707.0" width="592.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (115,266 samples, 50.20%)</title><rect x="10.0" y="691.0" width="592.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12,469 samples, 5.43%)</title><rect x="10.0" y="675.0" width="64.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12,469 samples, 5.43%)</title><rect x="10.0" y="659.0" width="64.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (12,469 samples, 5.43%)</title><rect x="10.0" y="643.0" width="64.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (84 samples, 0.04%)</title><rect x="10.0" y="627.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$172/330952395.apply (12,385 samples, 5.39%)</title><rect x="10.4" y="627.0" width="63.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.4" y="638.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (12,385 samples, 5.39%)</title><rect x="10.4" y="611.0" width="63.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.4" y="622.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (12,385 samples, 5.39%)</title><rect x="10.4" y="595.0" width="63.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.4" y="606.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (99 samples, 0.04%)</title><rect x="10.4" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (99 samples, 0.04%)</title><rect x="10.4" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$374/2048942177.get$Lambda (56 samples, 0.02%)</title><rect x="10.4" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$374 (56 samples, 0.02%)</title><rect x="10.4" y="531.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (163 samples, 0.07%)</title><rect x="10.9" y="579.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (163 samples, 0.07%)</title><rect x="10.9" y="563.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (99 samples, 0.04%)</title><rect x="10.9" y="547.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="13.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.03%)</title><rect x="11.5" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.03%)</title><rect x="11.5" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.03%)</title><rect x="11.5" y="515.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="14.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (364 samples, 0.16%)</title><rect x="11.8" y="579.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (364 samples, 0.16%)</title><rect x="11.8" y="563.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (194 samples, 0.08%)</title><rect x="11.8" y="547.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="14.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (170 samples, 0.07%)</title><rect x="12.8" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (170 samples, 0.07%)</title><rect x="12.8" y="531.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (170 samples, 0.07%)</title><rect x="12.8" y="515.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="15.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (11,465 samples, 4.99%)</title><rect x="13.7" y="579.0" width="58.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.7" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (11,465 samples, 4.99%)</title><rect x="13.7" y="563.0" width="58.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.7" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (11,465 samples, 4.99%)</title><rect x="13.7" y="547.0" width="58.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.7" y="558.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (157 samples, 0.07%)</title><rect x="13.7" y="531.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (157 samples, 0.07%)</title><rect x="13.7" y="515.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1734934037.get$Lambda (59 samples, 0.03%)</title><rect x="13.9" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$217 (59 samples, 0.03%)</title><rect x="13.9" y="483.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="16.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$325/555075840.get$Lambda (51 samples, 0.02%)</title><rect x="14.2" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$325 (51 samples, 0.02%)</title><rect x="14.2" y="483.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (7,899 samples, 3.44%)</title><rect x="14.5" y="531.0" width="40.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.5" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (7,899 samples, 3.44%)</title><rect x="14.5" y="515.0" width="40.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.5" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7,829 samples, 3.41%)</title><rect x="14.5" y="499.0" width="40.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.5" y="510.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$325/555075840.apply (7,829 samples, 3.41%)</title><rect x="14.5" y="483.0" width="40.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.5" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (7,829 samples, 3.41%)</title><rect x="14.5" y="467.0" width="40.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.5" y="478.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7,829 samples, 3.41%)</title><rect x="14.5" y="451.0" width="40.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.5" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1734934037.apply (7,829 samples, 3.41%)</title><rect x="14.5" y="435.0" width="40.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.5" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (7,829 samples, 3.41%)</title><rect x="14.5" y="419.0" width="40.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.5" y="430.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.03%)</title><rect x="14.5" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.03%)</title><rect x="14.5" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/733215646.get$Lambda (67 samples, 0.03%)</title><rect x="14.5" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$372 (67 samples, 0.03%)</title><rect x="14.5" y="355.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="17.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (190 samples, 0.08%)</title><rect x="14.8" y="403.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (190 samples, 0.08%)</title><rect x="14.8" y="387.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (97 samples, 0.04%)</title><rect x="14.8" y="371.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (83 samples, 0.04%)</title><rect x="15.4" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (83 samples, 0.04%)</title><rect x="15.4" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (83 samples, 0.04%)</title><rect x="15.4" y="339.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="18.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (178 samples, 0.08%)</title><rect x="15.8" y="403.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (178 samples, 0.08%)</title><rect x="15.8" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (94 samples, 0.04%)</title><rect x="15.8" y="371.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="18.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (84 samples, 0.04%)</title><rect x="16.3" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (84 samples, 0.04%)</title><rect x="16.3" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (84 samples, 0.04%)</title><rect x="16.3" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="19.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (7,394 samples, 3.22%)</title><rect x="16.7" y="403.0" width="38.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.7" y="414.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 0.03%)</title><rect x="16.7" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.03%)</title><rect x="16.7" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6,069 samples, 2.64%)</title><rect x="17.0" y="387.0" width="31.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.0" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6,069 samples, 2.64%)</title><rect x="17.0" y="371.0" width="31.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.0" y="382.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (78 samples, 0.03%)</title><rect x="17.0" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="20.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/1292913949.apply (5,833 samples, 2.54%)</title><rect x="17.4" y="355.0" width="30.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.4" y="366.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (5,833 samples, 2.54%)</title><rect x="17.4" y="339.0" width="30.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.4" y="350.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (179 samples, 0.08%)</title><rect x="17.6" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (179 samples, 0.08%)</title><rect x="17.6" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (100 samples, 0.04%)</title><rect x="17.6" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="20.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (79 samples, 0.03%)</title><rect x="18.1" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (79 samples, 0.03%)</title><rect x="18.1" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (79 samples, 0.03%)</title><rect x="18.1" y="259.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="21.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (73 samples, 0.03%)</title><rect x="18.5" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="21.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (134 samples, 0.06%)</title><rect x="18.9" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (60 samples, 0.03%)</title><rect x="18.9" y="307.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="21.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (74 samples, 0.03%)</title><rect x="19.2" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (73 samples, 0.03%)</title><rect x="19.2" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (73 samples, 0.03%)</title><rect x="19.2" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (73 samples, 0.03%)</title><rect x="19.2" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (73 samples, 0.03%)</title><rect x="19.2" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (73 samples, 0.03%)</title><rect x="19.2" y="227.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="22.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (193 samples, 0.08%)</title><rect x="19.6" y="323.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (193 samples, 0.08%)</title><rect x="19.6" y="307.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (59 samples, 0.03%)</title><rect x="19.6" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (59 samples, 0.03%)</title><rect x="19.6" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (59 samples, 0.03%)</title><rect x="19.6" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (59 samples, 0.03%)</title><rect x="19.6" y="243.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="22.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (134 samples, 0.06%)</title><rect x="19.9" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (134 samples, 0.06%)</title><rect x="19.9" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (92 samples, 0.04%)</title><rect x="19.9" y="259.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="22.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (5,217 samples, 2.27%)</title><rect x="20.6" y="323.0" width="26.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.6" y="334.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (60 samples, 0.03%)</title><rect x="20.6" y="307.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="23.6" y="318.0"></text>
</g>
<g>
<title>java/lang/Long.toString (129 samples, 0.06%)</title><rect x="20.9" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.9" y="318.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.03%)</title><rect x="20.9" y="291.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="23.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.03%)</title><rect x="21.3" y="291.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="24.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (363 samples, 0.16%)</title><rect x="21.6" y="307.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (363 samples, 0.16%)</title><rect x="21.6" y="291.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (363 samples, 0.16%)</title><rect x="21.6" y="275.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.6" y="286.0"></text>
</g>
<g>
<title>byte[] (363 samples, 0.16%)</title><rect x="21.6" y="259.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="24.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (195 samples, 0.08%)</title><rect x="23.4" y="307.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.4" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (195 samples, 0.08%)</title><rect x="23.4" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.4" y="302.0"></text>
</g>
<g>
<title>byte[] (195 samples, 0.08%)</title><rect x="23.4" y="275.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="26.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (454 samples, 0.20%)</title><rect x="24.4" y="307.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (454 samples, 0.20%)</title><rect x="24.4" y="291.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.02%)</title><rect x="24.4" y="275.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="27.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (400 samples, 0.17%)</title><rect x="24.7" y="275.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.7" y="286.0"></text>
</g>
<g>
<title>byte[] (400 samples, 0.17%)</title><rect x="24.7" y="259.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="27.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (117 samples, 0.05%)</title><rect x="26.8" y="307.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (117 samples, 0.05%)</title><rect x="26.8" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (117 samples, 0.05%)</title><rect x="26.8" y="275.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="29.8" y="286.0"></text>
</g>
<g>
<title>java/util/List.of (74 samples, 0.03%)</title><rect x="27.4" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.4" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (74 samples, 0.03%)</title><rect x="27.4" y="291.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="30.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (3,020 samples, 1.32%)</title><rect x="27.8" y="307.0" width="15.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (341 samples, 0.15%)</title><rect x="27.8" y="291.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.8" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (341 samples, 0.15%)</title><rect x="27.8" y="275.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (341 samples, 0.15%)</title><rect x="27.8" y="259.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.8" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (341 samples, 0.15%)</title><rect x="27.8" y="243.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.8" y="254.0"></text>
</g>
<g>
<title>byte[] (341 samples, 0.15%)</title><rect x="27.8" y="227.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="30.8" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (66 samples, 0.03%)</title><rect x="29.5" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 0.03%)</title><rect x="29.5" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.03%)</title><rect x="29.5" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.5" y="270.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/225288726.get$Lambda (66 samples, 0.03%)</title><rect x="29.5" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.5" y="254.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$390 (66 samples, 0.03%)</title><rect x="29.5" y="227.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="32.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,083 samples, 0.47%)</title><rect x="29.8" y="291.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (391 samples, 0.17%)</title><rect x="29.8" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (391 samples, 0.17%)</title><rect x="29.8" y="259.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.8" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (391 samples, 0.17%)</title><rect x="29.8" y="243.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (391 samples, 0.17%)</title><rect x="29.8" y="227.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.8" y="238.0"></text>
</g>
<g>
<title>byte[] (391 samples, 0.17%)</title><rect x="29.8" y="211.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="32.8" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (176 samples, 0.08%)</title><rect x="31.9" y="275.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (176 samples, 0.08%)</title><rect x="31.9" y="259.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.9" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (176 samples, 0.08%)</title><rect x="31.9" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.9" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (176 samples, 0.08%)</title><rect x="31.9" y="227.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="34.9" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (151 samples, 0.07%)</title><rect x="32.8" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.8" y="286.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (74 samples, 0.03%)</title><rect x="32.8" y="259.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="35.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (77 samples, 0.03%)</title><rect x="33.1" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (77 samples, 0.03%)</title><rect x="33.1" y="243.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="36.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/225288726.test (365 samples, 0.16%)</title><rect x="33.5" y="275.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.5" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (365 samples, 0.16%)</title><rect x="33.5" y="259.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1810899357.test (365 samples, 0.16%)</title><rect x="33.5" y="243.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (365 samples, 0.16%)</title><rect x="33.5" y="227.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.5" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1970982267.test (365 samples, 0.16%)</title><rect x="33.5" y="211.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.5" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (365 samples, 0.16%)</title><rect x="33.5" y="195.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/73181251.test (365 samples, 0.16%)</title><rect x="33.5" y="179.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (365 samples, 0.16%)</title><rect x="33.5" y="163.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (365 samples, 0.16%)</title><rect x="33.5" y="147.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (365 samples, 0.16%)</title><rect x="33.5" y="131.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String (195 samples, 0.08%)</title><rect x="33.5" y="115.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="36.5" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (170 samples, 0.07%)</title><rect x="34.5" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.5" y="126.0"></text>
</g>
<g>
<title>byte[] (170 samples, 0.07%)</title><rect x="34.5" y="99.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="37.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,530 samples, 0.67%)</title><rect x="35.4" y="291.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.4" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,530 samples, 0.67%)</title><rect x="35.4" y="275.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.4" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,530 samples, 0.67%)</title><rect x="35.4" y="259.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.4" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (55 samples, 0.02%)</title><rect x="35.6" y="243.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="38.6" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (123 samples, 0.05%)</title><rect x="35.9" y="243.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="38.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.04%)</title><rect x="36.7" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.04%)</title><rect x="36.7" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.7" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.get$Lambda (92 samples, 0.04%)</title><rect x="36.7" y="211.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.7" y="222.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$140 (92 samples, 0.04%)</title><rect x="36.7" y="195.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="39.7" y="206.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (83 samples, 0.04%)</title><rect x="37.2" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.2" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (83 samples, 0.04%)</title><rect x="37.2" y="227.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="40.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (978 samples, 0.43%)</title><rect x="37.6" y="243.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.6" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (978 samples, 0.43%)</title><rect x="37.6" y="227.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.6" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (978 samples, 0.43%)</title><rect x="37.6" y="211.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (190 samples, 0.08%)</title><rect x="37.6" y="195.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (190 samples, 0.08%)</title><rect x="37.6" y="179.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.6" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.get$Lambda (190 samples, 0.08%)</title><rect x="37.6" y="163.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.6" y="174.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (190 samples, 0.08%)</title><rect x="37.6" y="147.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="40.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (146 samples, 0.06%)</title><rect x="38.6" y="195.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.6" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (146 samples, 0.06%)</title><rect x="38.6" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.6" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (146 samples, 0.06%)</title><rect x="38.6" y="163.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (146 samples, 0.06%)</title><rect x="38.6" y="147.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (146 samples, 0.06%)</title><rect x="38.6" y="131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (146 samples, 0.06%)</title><rect x="38.6" y="115.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (146 samples, 0.06%)</title><rect x="38.6" y="99.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (146 samples, 0.06%)</title><rect x="38.6" y="83.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.6" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (146 samples, 0.06%)</title><rect x="38.6" y="67.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="41.6" y="78.0"></text>
</g>
<g>
<title>java/util/List.copyOf (358 samples, 0.16%)</title><rect x="39.4" y="195.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.4" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (358 samples, 0.16%)</title><rect x="39.4" y="179.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (202 samples, 0.09%)</title><rect x="39.4" y="163.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.4" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (202 samples, 0.09%)</title><rect x="39.4" y="147.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (202 samples, 0.09%)</title><rect x="39.4" y="131.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="42.4" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (156 samples, 0.07%)</title><rect x="40.4" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.4" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (156 samples, 0.07%)</title><rect x="40.4" y="147.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="43.4" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (284 samples, 0.12%)</title><rect x="41.2" y="195.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.2" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (284 samples, 0.12%)</title><rect x="41.2" y="179.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="44.2" y="190.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (118 samples, 0.05%)</title><rect x="42.7" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.7" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (118 samples, 0.05%)</title><rect x="42.7" y="227.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="45.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (195 samples, 0.08%)</title><rect x="43.3" y="307.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.3" y="318.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (52 samples, 0.02%)</title><rect x="43.3" y="291.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.3" y="302.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.02%)</title><rect x="43.3" y="275.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="46.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (143 samples, 0.06%)</title><rect x="43.5" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (143 samples, 0.06%)</title><rect x="43.5" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/644345897.invoke (143 samples, 0.06%)</title><rect x="43.5" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (143 samples, 0.06%)</title><rect x="43.5" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (71 samples, 0.03%)</title><rect x="43.5" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.5" y="238.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.03%)</title><rect x="43.5" y="211.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="46.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (72 samples, 0.03%)</title><rect x="43.9" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (72 samples, 0.03%)</title><rect x="43.9" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.9" y="222.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.03%)</title><rect x="43.9" y="195.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="46.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (160 samples, 0.07%)</title><rect x="44.3" y="307.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (160 samples, 0.07%)</title><rect x="44.3" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (160 samples, 0.07%)</title><rect x="44.3" y="275.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (160 samples, 0.07%)</title><rect x="44.3" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/644345897.invoke (160 samples, 0.07%)</title><rect x="44.3" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (160 samples, 0.07%)</title><rect x="44.3" y="227.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (53 samples, 0.02%)</title><rect x="44.3" y="211.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.3" y="222.0"></text>
</g>
<g>
<title>java.lang.String (53 samples, 0.02%)</title><rect x="44.3" y="195.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="47.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (107 samples, 0.05%)</title><rect x="44.5" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (107 samples, 0.05%)</title><rect x="44.5" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.5" y="206.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.05%)</title><rect x="44.5" y="179.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="47.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (450 samples, 0.20%)</title><rect x="45.1" y="307.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.1" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (120 samples, 0.05%)</title><rect x="45.1" y="291.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="48.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (127 samples, 0.06%)</title><rect x="45.7" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.7" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (127 samples, 0.06%)</title><rect x="45.7" y="275.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="48.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (203 samples, 0.09%)</title><rect x="46.4" y="291.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.4" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (203 samples, 0.09%)</title><rect x="46.4" y="275.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="49.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (158 samples, 0.07%)</title><rect x="47.4" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="50.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (158 samples, 0.07%)</title><rect x="47.4" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (158 samples, 0.07%)</title><rect x="47.4" y="323.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="50.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (212 samples, 0.09%)</title><rect x="48.2" y="387.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="51.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (85 samples, 0.04%)</title><rect x="49.3" y="387.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="52.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (962 samples, 0.42%)</title><rect x="49.7" y="387.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.03%)</title><rect x="49.7" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.03%)</title><rect x="49.7" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (108 samples, 0.05%)</title><rect x="50.1" y="371.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="53.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (70 samples, 0.03%)</title><rect x="50.6" y="371.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="53.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (100 samples, 0.04%)</title><rect x="51.0" y="371.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="54.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (268 samples, 0.12%)</title><rect x="51.5" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (268 samples, 0.12%)</title><rect x="51.5" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (268 samples, 0.12%)</title><rect x="51.5" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (268 samples, 0.12%)</title><rect x="51.5" y="323.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (268 samples, 0.12%)</title><rect x="51.5" y="307.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (268 samples, 0.12%)</title><rect x="51.5" y="291.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (268 samples, 0.12%)</title><rect x="51.5" y="275.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (268 samples, 0.12%)</title><rect x="51.5" y="259.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (268 samples, 0.12%)</title><rect x="51.5" y="243.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (91 samples, 0.04%)</title><rect x="51.5" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.04%)</title><rect x="51.5" y="211.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$352/392108125.get$Lambda (55 samples, 0.02%)</title><rect x="51.7" y="195.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.7" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$352 (55 samples, 0.02%)</title><rect x="51.7" y="179.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="54.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (81 samples, 0.04%)</title><rect x="52.0" y="227.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="55.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (96 samples, 0.04%)</title><rect x="52.4" y="227.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (96 samples, 0.04%)</title><rect x="52.4" y="211.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (58 samples, 0.03%)</title><rect x="52.6" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (58 samples, 0.03%)</title><rect x="52.6" y="179.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="55.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (265 samples, 0.12%)</title><rect x="52.9" y="371.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.9" y="382.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (49 samples, 0.02%)</title><rect x="52.9" y="355.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="55.9" y="366.0"></text>
</g>
<g>
<title>java.util.HashMap (113 samples, 0.05%)</title><rect x="53.2" y="355.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="56.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (103 samples, 0.04%)</title><rect x="53.7" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.7" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (103 samples, 0.04%)</title><rect x="53.7" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.7" y="350.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.04%)</title><rect x="53.7" y="323.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="56.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (84 samples, 0.04%)</title><rect x="54.3" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (84 samples, 0.04%)</title><rect x="54.3" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="57.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (70 samples, 0.03%)</title><rect x="54.7" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (70 samples, 0.03%)</title><rect x="54.7" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (70 samples, 0.03%)</title><rect x="54.7" y="467.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="57.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (153 samples, 0.07%)</title><rect x="55.1" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (153 samples, 0.07%)</title><rect x="55.1" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (76 samples, 0.03%)</title><rect x="55.1" y="499.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="58.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.03%)</title><rect x="55.4" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.03%)</title><rect x="55.4" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (77 samples, 0.03%)</title><rect x="55.4" y="467.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="58.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (3,256 samples, 1.42%)</title><rect x="55.8" y="531.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (112 samples, 0.05%)</title><rect x="55.8" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (112 samples, 0.05%)</title><rect x="55.8" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$319/1129528338.get$Lambda (59 samples, 0.03%)</title><rect x="55.8" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$319 (59 samples, 0.03%)</title><rect x="55.8" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="58.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$321/68142037.get$Lambda (53 samples, 0.02%)</title><rect x="56.1" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$321 (53 samples, 0.02%)</title><rect x="56.1" y="467.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="59.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (154 samples, 0.07%)</title><rect x="56.4" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (154 samples, 0.07%)</title><rect x="56.4" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$321/68142037.apply (73 samples, 0.03%)</title><rect x="56.4" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (73 samples, 0.03%)</title><rect x="56.4" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (73 samples, 0.03%)</title><rect x="56.4" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (73 samples, 0.03%)</title><rect x="56.4" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="59.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (81 samples, 0.04%)</title><rect x="56.8" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (81 samples, 0.04%)</title><rect x="56.8" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (81 samples, 0.04%)</title><rect x="56.8" y="451.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="59.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (81 samples, 0.04%)</title><rect x="57.2" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (81 samples, 0.04%)</title><rect x="57.2" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (81 samples, 0.04%)</title><rect x="57.2" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (81 samples, 0.04%)</title><rect x="57.2" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (81 samples, 0.04%)</title><rect x="57.2" y="451.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="60.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (2,909 samples, 1.27%)</title><rect x="57.6" y="515.0" width="15.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (2,909 samples, 1.27%)</title><rect x="57.6" y="499.0" width="15.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (206 samples, 0.09%)</title><rect x="57.6" y="483.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="60.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (2,614 samples, 1.14%)</title><rect x="58.7" y="483.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList (73 samples, 0.03%)</title><rect x="58.9" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="61.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (64 samples, 0.03%)</title><rect x="59.3" y="467.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="62.3" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (131 samples, 0.06%)</title><rect x="59.8" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.8" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (131 samples, 0.06%)</title><rect x="59.8" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.8" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (131 samples, 0.06%)</title><rect x="59.8" y="435.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="62.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (65 samples, 0.03%)</title><rect x="60.5" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (65 samples, 0.03%)</title><rect x="60.5" y="451.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="63.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (156 samples, 0.07%)</title><rect x="60.8" y="467.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="63.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (111 samples, 0.05%)</title><rect x="61.6" y="467.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="64.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (144 samples, 0.06%)</title><rect x="62.2" y="467.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="65.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (138 samples, 0.06%)</title><rect x="62.9" y="467.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="65.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (781 samples, 0.34%)</title><rect x="63.6" y="467.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (52 samples, 0.02%)</title><rect x="63.6" y="451.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="66.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (61 samples, 0.03%)</title><rect x="64.1" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="67.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (93 samples, 0.04%)</title><rect x="64.6" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.04%)</title><rect x="64.6" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$307/1765127213.get$Lambda (50 samples, 0.02%)</title><rect x="64.6" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$307 (50 samples, 0.02%)</title><rect x="64.6" y="403.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="67.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (53 samples, 0.02%)</title><rect x="65.1" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (53 samples, 0.02%)</title><rect x="65.1" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="68.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (50 samples, 0.02%)</title><rect x="65.4" y="451.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="68.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (79 samples, 0.03%)</title><rect x="65.6" y="451.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="68.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (313 samples, 0.14%)</title><rect x="66.0" y="451.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (62 samples, 0.03%)</title><rect x="66.0" y="435.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="69.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (81 samples, 0.04%)</title><rect x="66.3" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="69.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (135 samples, 0.06%)</title><rect x="66.9" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (53 samples, 0.02%)</title><rect x="66.9" y="419.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="69.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (507 samples, 0.22%)</title><rect x="67.6" y="467.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (52 samples, 0.02%)</title><rect x="67.8" y="451.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="70.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (55 samples, 0.02%)</title><rect x="68.4" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (55 samples, 0.02%)</title><rect x="68.4" y="435.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="71.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (294 samples, 0.13%)</title><rect x="68.7" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (63 samples, 0.03%)</title><rect x="68.7" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="71.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (77 samples, 0.03%)</title><rect x="69.0" y="435.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="72.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (119 samples, 0.05%)</title><rect x="69.6" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (130 samples, 0.06%)</title><rect x="70.4" y="467.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (130 samples, 0.06%)</title><rect x="70.4" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (77 samples, 0.03%)</title><rect x="70.4" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="73.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (53 samples, 0.02%)</title><rect x="70.8" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.8" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (53 samples, 0.02%)</title><rect x="70.8" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (53 samples, 0.02%)</title><rect x="70.8" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (53 samples, 0.02%)</title><rect x="70.8" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.02%)</title><rect x="70.8" y="371.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="73.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (204 samples, 0.09%)</title><rect x="71.1" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.1" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (160 samples, 0.07%)</title><rect x="71.3" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$246/1776079527.run (160 samples, 0.07%)</title><rect x="71.3" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (160 samples, 0.07%)</title><rect x="71.3" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.3" y="430.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (116 samples, 0.05%)</title><rect x="71.5" y="403.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.5" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (65 samples, 0.03%)</title><rect x="71.5" y="387.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="74.5" y="398.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (51 samples, 0.02%)</title><rect x="71.9" y="387.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.9" y="398.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (51 samples, 0.02%)</title><rect x="71.9" y="371.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.9" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (51 samples, 0.02%)</title><rect x="71.9" y="355.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.9" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (51 samples, 0.02%)</title><rect x="71.9" y="339.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.9" y="350.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (51 samples, 0.02%)</title><rect x="71.9" y="323.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="74.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (89 samples, 0.04%)</title><rect x="72.1" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (89 samples, 0.04%)</title><rect x="72.1" y="467.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="75.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (88 samples, 0.04%)</title><rect x="72.6" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (88 samples, 0.04%)</title><rect x="72.6" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (88 samples, 0.04%)</title><rect x="72.6" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (88 samples, 0.04%)</title><rect x="72.6" y="531.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="75.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (206 samples, 0.09%)</title><rect x="73.0" y="579.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (140 samples, 0.06%)</title><rect x="73.0" y="563.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="76.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (66 samples, 0.03%)</title><rect x="73.7" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (66 samples, 0.03%)</title><rect x="73.7" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.7" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (66 samples, 0.03%)</title><rect x="73.7" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.7" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (66 samples, 0.03%)</title><rect x="73.7" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (66 samples, 0.03%)</title><rect x="73.7" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (66 samples, 0.03%)</title><rect x="73.7" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (66 samples, 0.03%)</title><rect x="73.7" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (66 samples, 0.03%)</title><rect x="73.7" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (66 samples, 0.03%)</title><rect x="73.7" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.7" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.create (66 samples, 0.03%)</title><rect x="73.7" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.7" y="430.0"></text>
</g>
<g>
<title>java.time.Instant (66 samples, 0.03%)</title><rect x="73.7" y="403.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="76.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (609 samples, 0.27%)</title><rect x="74.1" y="675.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (346 samples, 0.15%)</title><rect x="74.1" y="659.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$228/1550578698.accept (346 samples, 0.15%)</title><rect x="74.1" y="643.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$executeMethod$5 (346 samples, 0.15%)</title><rect x="74.1" y="627.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (126 samples, 0.05%)</title><rect x="74.3" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (152 samples, 0.07%)</title><rect x="74.9" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (152 samples, 0.07%)</title><rect x="74.9" y="595.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (152 samples, 0.07%)</title><rect x="74.9" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (108 samples, 0.05%)</title><rect x="74.9" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (108 samples, 0.05%)</title><rect x="74.9" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.9" y="558.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.05%)</title><rect x="74.9" y="531.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="77.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (263 samples, 0.11%)</title><rect x="75.9" y="659.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (263 samples, 0.11%)</title><rect x="75.9" y="643.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$204/1048669819.accept (263 samples, 0.11%)</title><rect x="75.9" y="627.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$collect$2 (263 samples, 0.11%)</title><rect x="75.9" y="611.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.9" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.04%)</title><rect x="75.9" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.9" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.04%)</title><rect x="75.9" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.9" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.04%)</title><rect x="75.9" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.9" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.04%)</title><rect x="75.9" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (103 samples, 0.04%)</title><rect x="75.9" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.9" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (103 samples, 0.04%)</title><rect x="75.9" y="515.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="78.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (160 samples, 0.07%)</title><rect x="76.4" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (160 samples, 0.07%)</title><rect x="76.4" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (160 samples, 0.07%)</title><rect x="76.4" y="563.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (160 samples, 0.07%)</title><rect x="76.4" y="547.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$221/654824253.accept (160 samples, 0.07%)</title><rect x="76.4" y="531.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$merge$0 (160 samples, 0.07%)</title><rect x="76.4" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5,531 samples, 2.41%)</title><rect x="77.2" y="675.0" width="28.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.2" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5,446 samples, 2.37%)</title><rect x="77.2" y="659.0" width="28.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.2" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5,364 samples, 2.34%)</title><rect x="77.2" y="643.0" width="27.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.2" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5,364 samples, 2.34%)</title><rect x="77.2" y="627.0" width="27.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.2" y="638.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5,364 samples, 2.34%)</title><rect x="77.2" y="611.0" width="27.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="80.2" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (81 samples, 0.04%)</title><rect x="104.8" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (81 samples, 0.04%)</title><rect x="104.8" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (81 samples, 0.04%)</title><rect x="104.8" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (81 samples, 0.04%)</title><rect x="104.8" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (81 samples, 0.04%)</title><rect x="104.8" y="579.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="107.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (85 samples, 0.04%)</title><rect x="105.2" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (52 samples, 0.02%)</title><rect x="105.2" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (52 samples, 0.02%)</title><rect x="105.2" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (52 samples, 0.02%)</title><rect x="105.2" y="611.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="108.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$389/2097994766.run (3,054 samples, 1.33%)</title><rect x="105.6" y="675.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3,054 samples, 1.33%)</title><rect x="105.6" y="659.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3,054 samples, 1.33%)</title><rect x="105.6" y="643.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (3,054 samples, 1.33%)</title><rect x="105.6" y="627.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,054 samples, 1.33%)</title><rect x="105.6" y="611.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,054 samples, 1.33%)</title><rect x="105.6" y="595.0" width="15.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,054 samples, 1.33%)</title><rect x="105.6" y="579.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,054 samples, 1.33%)</title><rect x="105.6" y="563.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,054 samples, 1.33%)</title><rect x="105.6" y="547.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,054 samples, 1.33%)</title><rect x="105.6" y="531.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3,054 samples, 1.33%)</title><rect x="105.6" y="515.0" width="15.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2,798 samples, 1.22%)</title><rect x="105.6" y="499.0" width="14.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (220 samples, 0.10%)</title><rect x="105.6" y="483.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (220 samples, 0.10%)</title><rect x="105.6" y="467.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$396/1178930500.get$Lambda (64 samples, 0.03%)</title><rect x="105.6" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$396 (64 samples, 0.03%)</title><rect x="105.6" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="108.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$411/517901774.get$Lambda (87 samples, 0.04%)</title><rect x="106.0" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$411 (87 samples, 0.04%)</title><rect x="106.0" y="435.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="109.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$415/222178550.get$Lambda (69 samples, 0.03%)</title><rect x="106.4" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$415 (69 samples, 0.03%)</title><rect x="106.4" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="109.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2,578 samples, 1.12%)</title><rect x="106.8" y="483.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (138 samples, 0.06%)</title><rect x="106.8" y="467.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="109.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,440 samples, 1.06%)</title><rect x="107.5" y="467.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,440 samples, 1.06%)</title><rect x="107.5" y="451.0" width="12.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,440 samples, 1.06%)</title><rect x="107.5" y="435.0" width="12.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (457 samples, 0.20%)</title><rect x="107.5" y="419.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (148 samples, 0.06%)</title><rect x="107.5" y="403.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="110.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/434635916.apply (279 samples, 0.12%)</title><rect x="108.2" y="403.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (279 samples, 0.12%)</title><rect x="108.2" y="387.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (279 samples, 0.12%)</title><rect x="108.2" y="371.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.2" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (57 samples, 0.02%)</title><rect x="108.2" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.2" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (57 samples, 0.02%)</title><rect x="108.2" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.2" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (57 samples, 0.02%)</title><rect x="108.2" y="323.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="111.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (222 samples, 0.10%)</title><rect x="108.5" y="355.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (189 samples, 0.08%)</title><rect x="108.7" y="339.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (189 samples, 0.08%)</title><rect x="108.7" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (106 samples, 0.05%)</title><rect x="108.7" y="307.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="111.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (81 samples, 0.04%)</title><rect x="109.3" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (81 samples, 0.04%)</title><rect x="109.3" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (81 samples, 0.04%)</title><rect x="109.3" y="275.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="112.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,983 samples, 0.86%)</title><rect x="109.8" y="419.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,983 samples, 0.86%)</title><rect x="109.8" y="403.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/733215646.apply (1,983 samples, 0.86%)</title><rect x="109.8" y="387.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,983 samples, 0.86%)</title><rect x="109.8" y="371.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,983 samples, 0.86%)</title><rect x="109.8" y="355.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$216/483426623.apply (1,983 samples, 0.86%)</title><rect x="109.8" y="339.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,983 samples, 0.86%)</title><rect x="109.8" y="323.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (163 samples, 0.07%)</title><rect x="110.0" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (163 samples, 0.07%)</title><rect x="110.0" y="291.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (79 samples, 0.03%)</title><rect x="110.0" y="275.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="113.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (84 samples, 0.04%)</title><rect x="110.4" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (84 samples, 0.04%)</title><rect x="110.4" y="259.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (84 samples, 0.04%)</title><rect x="110.4" y="243.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="113.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1,781 samples, 0.78%)</title><rect x="110.9" y="307.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.03%)</title><rect x="110.9" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.03%)</title><rect x="110.9" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (666 samples, 0.29%)</title><rect x="111.2" y="291.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (666 samples, 0.29%)</title><rect x="111.2" y="275.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (666 samples, 0.29%)</title><rect x="111.2" y="259.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$397/1153846697.accept (247 samples, 0.11%)</title><rect x="111.2" y="243.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (247 samples, 0.11%)</title><rect x="111.2" y="227.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (247 samples, 0.11%)</title><rect x="111.2" y="211.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 0.03%)</title><rect x="111.2" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.03%)</title><rect x="111.2" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$398/1681444486.get$Lambda (66 samples, 0.03%)</title><rect x="111.2" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$398 (66 samples, 0.03%)</title><rect x="111.2" y="147.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="114.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (181 samples, 0.08%)</title><rect x="111.5" y="195.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (181 samples, 0.08%)</title><rect x="111.5" y="179.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (93 samples, 0.04%)</title><rect x="111.5" y="163.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="114.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.04%)</title><rect x="112.0" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.04%)</title><rect x="112.0" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (88 samples, 0.04%)</title><rect x="112.0" y="131.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="115.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$401/2015134065.accept (253 samples, 0.11%)</title><rect x="112.4" y="243.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (253 samples, 0.11%)</title><rect x="112.4" y="227.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (253 samples, 0.11%)</title><rect x="112.4" y="211.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (253 samples, 0.11%)</title><rect x="112.4" y="195.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (253 samples, 0.11%)</title><rect x="112.4" y="179.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (253 samples, 0.11%)</title><rect x="112.4" y="163.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (253 samples, 0.11%)</title><rect x="112.4" y="147.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (253 samples, 0.11%)</title><rect x="112.4" y="131.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (253 samples, 0.11%)</title><rect x="112.4" y="115.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (253 samples, 0.11%)</title><rect x="112.4" y="99.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (109 samples, 0.05%)</title><rect x="112.4" y="83.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (109 samples, 0.05%)</title><rect x="112.4" y="67.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.4" y="78.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (62 samples, 0.03%)</title><rect x="112.4" y="51.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="115.4" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (144 samples, 0.06%)</title><rect x="113.0" y="83.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (144 samples, 0.06%)</title><rect x="113.0" y="67.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (97 samples, 0.04%)</title><rect x="113.2" y="51.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.2" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (50 samples, 0.02%)</title><rect x="113.2" y="35.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="116.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (166 samples, 0.07%)</title><rect x="113.7" y="243.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (166 samples, 0.07%)</title><rect x="113.7" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (166 samples, 0.07%)</title><rect x="113.7" y="211.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="116.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1,055 samples, 0.46%)</title><rect x="114.6" y="291.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (115 samples, 0.05%)</title><rect x="114.6" y="275.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="117.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (75 samples, 0.03%)</title><rect x="115.2" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (75 samples, 0.03%)</title><rect x="115.2" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (75 samples, 0.03%)</title><rect x="115.2" y="243.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="118.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (865 samples, 0.38%)</title><rect x="115.6" y="275.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (67 samples, 0.03%)</title><rect x="115.6" y="259.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="118.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (471 samples, 0.21%)</title><rect x="115.9" y="259.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (81 samples, 0.04%)</title><rect x="115.9" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.9" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (81 samples, 0.04%)</title><rect x="115.9" y="227.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="118.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (80 samples, 0.03%)</title><rect x="116.3" y="243.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="119.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (310 samples, 0.14%)</title><rect x="116.7" y="243.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (73 samples, 0.03%)</title><rect x="117.2" y="227.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="120.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (53 samples, 0.02%)</title><rect x="117.5" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (53 samples, 0.02%)</title><rect x="117.5" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="120.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (104 samples, 0.05%)</title><rect x="117.8" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (327 samples, 0.14%)</title><rect x="118.3" y="259.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.3" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (62 samples, 0.03%)</title><rect x="118.3" y="243.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="121.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (160 samples, 0.07%)</title><rect x="118.7" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (94 samples, 0.04%)</title><rect x="118.7" y="227.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="121.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (66 samples, 0.03%)</title><rect x="119.1" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.1" y="238.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.03%)</title><rect x="119.1" y="211.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="122.1" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (105 samples, 0.05%)</title><rect x="119.5" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.5" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (105 samples, 0.05%)</title><rect x="119.5" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.5" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (105 samples, 0.05%)</title><rect x="119.5" y="211.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (105 samples, 0.05%)</title><rect x="119.5" y="195.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.5" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (105 samples, 0.05%)</title><rect x="119.5" y="179.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.5" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (105 samples, 0.05%)</title><rect x="119.5" y="163.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="122.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (256 samples, 0.11%)</title><rect x="120.0" y="499.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (256 samples, 0.11%)</title><rect x="120.0" y="483.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (256 samples, 0.11%)</title><rect x="120.0" y="467.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (256 samples, 0.11%)</title><rect x="120.0" y="451.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (256 samples, 0.11%)</title><rect x="120.0" y="435.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.0" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (256 samples, 0.11%)</title><rect x="120.0" y="419.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.0" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (107 samples, 0.05%)</title><rect x="120.0" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.0" y="414.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (107 samples, 0.05%)</title><rect x="120.0" y="387.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="123.0" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (149 samples, 0.06%)</title><rect x="120.6" y="403.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.6" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (149 samples, 0.06%)</title><rect x="120.6" y="387.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="123.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10,092 samples, 4.40%)</title><rect x="121.3" y="675.0" width="51.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.3" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10,092 samples, 4.40%)</title><rect x="121.3" y="659.0" width="51.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.3" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8,420 samples, 3.67%)</title><rect x="121.3" y="643.0" width="43.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.3" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (8,420 samples, 3.67%)</title><rect x="121.3" y="627.0" width="43.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.3" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8,420 samples, 3.67%)</title><rect x="121.3" y="611.0" width="43.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.3" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (216 samples, 0.09%)</title><rect x="121.3" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (216 samples, 0.09%)</title><rect x="121.3" y="579.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (216 samples, 0.09%)</title><rect x="121.3" y="563.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (216 samples, 0.09%)</title><rect x="121.3" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (124 samples, 0.05%)</title><rect x="121.3" y="531.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1311146128.invoke (124 samples, 0.05%)</title><rect x="121.3" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (124 samples, 0.05%)</title><rect x="121.3" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (124 samples, 0.05%)</title><rect x="121.3" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (124 samples, 0.05%)</title><rect x="121.3" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.3" y="478.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.05%)</title><rect x="121.3" y="451.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="124.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (92 samples, 0.04%)</title><rect x="122.0" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.04%)</title><rect x="122.0" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.04%)</title><rect x="122.0" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394/1177692966.get$Lambda (92 samples, 0.04%)</title><rect x="122.0" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394 (92 samples, 0.04%)</title><rect x="122.0" y="467.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="125.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (8,204 samples, 3.57%)</title><rect x="122.4" y="595.0" width="42.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.4" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (8,204 samples, 3.57%)</title><rect x="122.4" y="579.0" width="42.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.4" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,204 samples, 3.57%)</title><rect x="122.4" y="563.0" width="42.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.4" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,204 samples, 3.57%)</title><rect x="122.4" y="547.0" width="42.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.4" y="558.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3,845 samples, 1.67%)</title><rect x="122.4" y="531.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,845 samples, 1.67%)</title><rect x="122.4" y="515.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,845 samples, 1.67%)</title><rect x="122.4" y="499.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3,845 samples, 1.67%)</title><rect x="122.4" y="483.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,845 samples, 1.67%)</title><rect x="122.4" y="467.0" width="19.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3,845 samples, 1.67%)</title><rect x="122.4" y="451.0" width="19.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,845 samples, 1.67%)</title><rect x="122.4" y="435.0" width="19.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3,730 samples, 1.62%)</title><rect x="122.4" y="419.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,730 samples, 1.62%)</title><rect x="122.4" y="403.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,654 samples, 1.59%)</title><rect x="122.4" y="387.0" width="18.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (88 samples, 0.04%)</title><rect x="122.4" y="371.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="125.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/283532103.apply (3,399 samples, 1.48%)</title><rect x="122.9" y="371.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (3,399 samples, 1.48%)</title><rect x="122.9" y="355.0" width="17.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.03%)</title><rect x="122.9" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.03%)</title><rect x="122.9" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/1651911151.get$Lambda (58 samples, 0.03%)</title><rect x="122.9" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$445 (58 samples, 0.03%)</title><rect x="122.9" y="291.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="125.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (180 samples, 0.08%)</title><rect x="123.2" y="339.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (180 samples, 0.08%)</title><rect x="123.2" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (104 samples, 0.05%)</title><rect x="123.2" y="307.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="126.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.03%)</title><rect x="123.7" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.03%)</title><rect x="123.7" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (76 samples, 0.03%)</title><rect x="123.7" y="275.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="126.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (3,161 samples, 1.38%)</title><rect x="124.1" y="339.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (171 samples, 0.07%)</title><rect x="124.3" y="323.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (171 samples, 0.07%)</title><rect x="124.3" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (105 samples, 0.05%)</title><rect x="124.3" y="291.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="127.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.03%)</title><rect x="124.9" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.03%)</title><rect x="124.9" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.03%)</title><rect x="124.9" y="259.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="127.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2,949 samples, 1.28%)</title><rect x="125.2" y="323.0" width="15.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$156/104497043.apply (232 samples, 0.10%)</title><rect x="125.2" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (232 samples, 0.10%)</title><rect x="125.2" y="291.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.2" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (232 samples, 0.10%)</title><rect x="125.2" y="275.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (88 samples, 0.04%)</title><rect x="125.2" y="259.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="128.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (144 samples, 0.06%)</title><rect x="125.7" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.7" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (60 samples, 0.03%)</title><rect x="125.7" y="243.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="128.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (84 samples, 0.04%)</title><rect x="126.0" y="243.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="129.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2,713 samples, 1.18%)</title><rect x="126.4" y="307.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.04%)</title><rect x="126.4" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.04%)</title><rect x="126.4" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1038138773.linkToTargetMethod (109 samples, 0.05%)</title><rect x="126.8" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/61792593.invokeStatic (109 samples, 0.05%)</title><rect x="126.8" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1212401691.get$Lambda (109 samples, 0.05%)</title><rect x="126.8" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$424 (109 samples, 0.05%)</title><rect x="126.8" y="243.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="129.8" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (551 samples, 0.24%)</title><rect x="127.4" y="291.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collection.stream (209 samples, 0.09%)</title><rect x="127.4" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.4" y="286.0"></text>
</g>
<g>
<title>java/util/List.spliterator (81 samples, 0.04%)</title><rect x="127.4" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.4" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (81 samples, 0.04%)</title><rect x="127.4" y="243.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="130.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (128 samples, 0.06%)</title><rect x="127.8" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.8" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (128 samples, 0.06%)</title><rect x="127.8" y="243.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="130.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (176 samples, 0.08%)</title><rect x="128.5" y="275.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (176 samples, 0.08%)</title><rect x="128.5" y="259.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (176 samples, 0.08%)</title><rect x="128.5" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (52 samples, 0.02%)</title><rect x="128.5" y="227.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (52 samples, 0.02%)</title><rect x="128.5" y="211.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (52 samples, 0.02%)</title><rect x="128.5" y="195.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.5" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (52 samples, 0.02%)</title><rect x="128.5" y="179.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="131.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$421/1320568786.get (60 samples, 0.03%)</title><rect x="128.7" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.7" y="238.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (60 samples, 0.03%)</title><rect x="128.7" y="211.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="131.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (64 samples, 0.03%)</title><rect x="129.0" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (64 samples, 0.03%)</title><rect x="129.0" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.0" y="222.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (64 samples, 0.03%)</title><rect x="129.0" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.0" y="206.0"></text>
</g>
<g>
<title>java.util.OptionalLong (64 samples, 0.03%)</title><rect x="129.0" y="179.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="132.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (166 samples, 0.07%)</title><rect x="129.4" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.4" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (166 samples, 0.07%)</title><rect x="129.4" y="259.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="132.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (314 samples, 0.14%)</title><rect x="130.2" y="291.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (158 samples, 0.07%)</title><rect x="130.2" y="275.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.2" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (86 samples, 0.04%)</title><rect x="130.2" y="259.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="133.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (72 samples, 0.03%)</title><rect x="130.7" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (72 samples, 0.03%)</title><rect x="130.7" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (72 samples, 0.03%)</title><rect x="130.7" y="227.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="133.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (156 samples, 0.07%)</title><rect x="131.0" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (156 samples, 0.07%)</title><rect x="131.0" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (91 samples, 0.04%)</title><rect x="131.0" y="243.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="134.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.03%)</title><rect x="131.5" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.03%)</title><rect x="131.5" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.03%)</title><rect x="131.5" y="211.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="134.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (71 samples, 0.03%)</title><rect x="131.8" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="134.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (76 samples, 0.03%)</title><rect x="132.2" y="291.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="135.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (74 samples, 0.03%)</title><rect x="132.6" y="291.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="135.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,393 samples, 0.61%)</title><rect x="133.2" y="291.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1212401691.run (1,393 samples, 0.61%)</title><rect x="133.2" y="275.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,393 samples, 0.61%)</title><rect x="133.2" y="259.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (167 samples, 0.07%)</title><rect x="133.2" y="243.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (167 samples, 0.07%)</title><rect x="133.2" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/488176487.get$Lambda (52 samples, 0.02%)</title><rect x="133.4" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$435 (52 samples, 0.02%)</title><rect x="133.4" y="195.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="136.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$439/2095621459.get$Lambda (67 samples, 0.03%)</title><rect x="133.7" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$439 (67 samples, 0.03%)</title><rect x="133.7" y="195.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="136.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (163 samples, 0.07%)</title><rect x="134.1" y="243.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (163 samples, 0.07%)</title><rect x="134.1" y="227.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (82 samples, 0.04%)</title><rect x="134.1" y="211.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="137.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (81 samples, 0.04%)</title><rect x="134.5" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (81 samples, 0.04%)</title><rect x="134.5" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.5" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (81 samples, 0.04%)</title><rect x="134.5" y="179.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="137.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (89 samples, 0.04%)</title><rect x="134.9" y="243.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="137.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (71 samples, 0.03%)</title><rect x="135.4" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (71 samples, 0.03%)</title><rect x="135.4" y="227.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="138.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (235 samples, 0.10%)</title><rect x="135.7" y="243.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (235 samples, 0.10%)</title><rect x="135.7" y="227.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.02%)</title><rect x="135.7" y="211.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.02%)</title><rect x="135.7" y="195.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$440/162643331.get$Lambda (55 samples, 0.02%)</title><rect x="135.7" y="179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$440 (55 samples, 0.02%)</title><rect x="135.7" y="163.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="138.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (180 samples, 0.08%)</title><rect x="136.0" y="211.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (180 samples, 0.08%)</title><rect x="136.0" y="195.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (180 samples, 0.08%)</title><rect x="136.0" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (101 samples, 0.04%)</title><rect x="136.0" y="163.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="139.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (79 samples, 0.03%)</title><rect x="136.5" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (79 samples, 0.03%)</title><rect x="136.5" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (79 samples, 0.03%)</title><rect x="136.5" y="131.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="139.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (249 samples, 0.11%)</title><rect x="136.9" y="243.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (249 samples, 0.11%)</title><rect x="136.9" y="227.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1546693040.invoke (249 samples, 0.11%)</title><rect x="136.9" y="211.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (249 samples, 0.11%)</title><rect x="136.9" y="195.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (58 samples, 0.03%)</title><rect x="136.9" y="179.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (58 samples, 0.03%)</title><rect x="136.9" y="163.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="139.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (191 samples, 0.08%)</title><rect x="137.2" y="179.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (191 samples, 0.08%)</title><rect x="137.2" y="163.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.2" y="174.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.08%)</title><rect x="137.2" y="147.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="140.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (419 samples, 0.18%)</title><rect x="138.2" y="243.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="141.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (131 samples, 0.06%)</title><rect x="138.2" y="227.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="141.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (288 samples, 0.13%)</title><rect x="138.9" y="227.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (288 samples, 0.13%)</title><rect x="138.9" y="211.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1546693040.invoke (288 samples, 0.13%)</title><rect x="138.9" y="195.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (288 samples, 0.13%)</title><rect x="138.9" y="179.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (241 samples, 0.10%)</title><rect x="139.1" y="163.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (241 samples, 0.10%)</title><rect x="139.1" y="147.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.1" y="158.0"></text>
</g>
<g>
<title>byte[] (241 samples, 0.10%)</title><rect x="139.1" y="131.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="142.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$374/2048942177.apply (167 samples, 0.07%)</title><rect x="140.4" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (167 samples, 0.07%)</title><rect x="140.4" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (81 samples, 0.04%)</title><rect x="140.4" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (81 samples, 0.04%)</title><rect x="140.4" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.4" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (81 samples, 0.04%)</title><rect x="140.4" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.4" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (81 samples, 0.04%)</title><rect x="140.4" y="291.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="143.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (86 samples, 0.04%)</title><rect x="140.8" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (86 samples, 0.04%)</title><rect x="140.8" y="323.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="143.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (76 samples, 0.03%)</title><rect x="141.2" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (76 samples, 0.03%)</title><rect x="141.2" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/1325079472.apply (76 samples, 0.03%)</title><rect x="141.2" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (76 samples, 0.03%)</title><rect x="141.2" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (76 samples, 0.03%)</title><rect x="141.2" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (76 samples, 0.03%)</title><rect x="141.2" y="307.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="144.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$416/297087785.apply (115 samples, 0.05%)</title><rect x="141.6" y="419.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (115 samples, 0.05%)</title><rect x="141.6" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (115 samples, 0.05%)</title><rect x="141.6" y="387.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="144.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (4,359 samples, 1.90%)</title><rect x="142.2" y="531.0" width="22.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.2" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (267 samples, 0.12%)</title><rect x="142.2" y="515.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (267 samples, 0.12%)</title><rect x="142.2" y="499.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.2" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (267 samples, 0.12%)</title><rect x="142.2" y="483.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.2" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (267 samples, 0.12%)</title><rect x="142.2" y="467.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (267 samples, 0.12%)</title><rect x="142.2" y="451.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.2" y="462.0"></text>
</g>
<g>
<title>byte[] (267 samples, 0.12%)</title><rect x="142.2" y="435.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="145.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (165 samples, 0.07%)</title><rect x="143.6" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (165 samples, 0.07%)</title><rect x="143.6" y="499.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.6" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (165 samples, 0.07%)</title><rect x="143.6" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.6" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (165 samples, 0.07%)</title><rect x="143.6" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (165 samples, 0.07%)</title><rect x="143.6" y="451.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.6" y="462.0"></text>
</g>
<g>
<title>byte[] (165 samples, 0.07%)</title><rect x="143.6" y="435.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="146.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (344 samples, 0.15%)</title><rect x="144.4" y="515.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.4" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (61 samples, 0.03%)</title><rect x="144.4" y="499.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="147.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (65 samples, 0.03%)</title><rect x="144.7" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (65 samples, 0.03%)</title><rect x="144.7" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.03%)</title><rect x="144.7" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.7" y="478.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.03%)</title><rect x="144.7" y="451.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="147.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (79 samples, 0.03%)</title><rect x="145.1" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.1" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (79 samples, 0.03%)</title><rect x="145.1" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.1" y="494.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.03%)</title><rect x="145.1" y="467.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="148.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (139 samples, 0.06%)</title><rect x="145.5" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (139 samples, 0.06%)</title><rect x="145.5" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.02%)</title><rect x="145.5" y="467.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="148.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (82 samples, 0.04%)</title><rect x="145.8" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.8" y="478.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.04%)</title><rect x="145.8" y="451.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="148.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,185 samples, 0.52%)</title><rect x="146.2" y="515.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,185 samples, 0.52%)</title><rect x="146.2" y="499.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,185 samples, 0.52%)</title><rect x="146.2" y="483.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.2" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (136 samples, 0.06%)</title><rect x="146.7" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="149.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.03%)</title><rect x="147.6" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.03%)</title><rect x="147.6" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.get$Lambda (70 samples, 0.03%)</title><rect x="147.6" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.6" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$140 (70 samples, 0.03%)</title><rect x="147.6" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="150.6" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (71 samples, 0.03%)</title><rect x="147.9" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.9" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (71 samples, 0.03%)</title><rect x="147.9" y="451.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="150.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (675 samples, 0.29%)</title><rect x="148.3" y="467.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (675 samples, 0.29%)</title><rect x="148.3" y="451.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (675 samples, 0.29%)</title><rect x="148.3" y="435.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.05%)</title><rect x="148.3" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.05%)</title><rect x="148.3" y="403.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.get$Lambda (109 samples, 0.05%)</title><rect x="148.3" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.3" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (109 samples, 0.05%)</title><rect x="148.3" y="371.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="151.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (128 samples, 0.06%)</title><rect x="148.9" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (128 samples, 0.06%)</title><rect x="148.9" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (128 samples, 0.06%)</title><rect x="148.9" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (128 samples, 0.06%)</title><rect x="148.9" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (128 samples, 0.06%)</title><rect x="148.9" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (128 samples, 0.06%)</title><rect x="148.9" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (128 samples, 0.06%)</title><rect x="148.9" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (128 samples, 0.06%)</title><rect x="148.9" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (128 samples, 0.06%)</title><rect x="148.9" y="291.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="151.9" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (245 samples, 0.11%)</title><rect x="149.5" y="419.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.5" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (245 samples, 0.11%)</title><rect x="149.5" y="403.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (130 samples, 0.06%)</title><rect x="149.5" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.5" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (130 samples, 0.06%)</title><rect x="149.5" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (130 samples, 0.06%)</title><rect x="149.5" y="355.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="152.5" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (115 samples, 0.05%)</title><rect x="150.2" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.2" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (115 samples, 0.05%)</title><rect x="150.2" y="371.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="153.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (193 samples, 0.08%)</title><rect x="150.8" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.8" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (193 samples, 0.08%)</title><rect x="150.8" y="403.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="153.8" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (96 samples, 0.04%)</title><rect x="151.8" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.8" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (96 samples, 0.04%)</title><rect x="151.8" y="451.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="154.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (2,398 samples, 1.04%)</title><rect x="152.3" y="515.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.3" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (115 samples, 0.05%)</title><rect x="152.3" y="499.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="155.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (169 samples, 0.07%)</title><rect x="152.9" y="499.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.9" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (169 samples, 0.07%)</title><rect x="152.9" y="483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.9" y="494.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.07%)</title><rect x="152.9" y="467.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="155.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (291 samples, 0.13%)</title><rect x="153.7" y="499.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (291 samples, 0.13%)</title><rect x="153.7" y="483.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String (140 samples, 0.06%)</title><rect x="153.7" y="467.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="156.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (151 samples, 0.07%)</title><rect x="154.5" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.5" y="478.0"></text>
</g>
<g>
<title>byte[] (151 samples, 0.07%)</title><rect x="154.5" y="451.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="157.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,823 samples, 0.79%)</title><rect x="155.2" y="499.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (530 samples, 0.23%)</title><rect x="155.2" y="483.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (530 samples, 0.23%)</title><rect x="155.2" y="467.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (252 samples, 0.11%)</title><rect x="155.2" y="451.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="158.2" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (278 samples, 0.12%)</title><rect x="156.5" y="451.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.5" y="462.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.12%)</title><rect x="156.5" y="435.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="159.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (270 samples, 0.12%)</title><rect x="158.0" y="483.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (270 samples, 0.12%)</title><rect x="158.0" y="467.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.0" y="478.0"></text>
</g>
<g>
<title>byte[] (149 samples, 0.06%)</title><rect x="158.0" y="451.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="161.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (121 samples, 0.05%)</title><rect x="158.7" y="451.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="161.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.trim (266 samples, 0.12%)</title><rect x="159.3" y="483.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (266 samples, 0.12%)</title><rect x="159.3" y="467.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (266 samples, 0.12%)</title><rect x="159.3" y="451.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (127 samples, 0.06%)</title><rect x="159.3" y="435.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="162.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (139 samples, 0.06%)</title><rect x="160.0" y="435.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.0" y="446.0"></text>
</g>
<g>
<title>byte[] (139 samples, 0.06%)</title><rect x="160.0" y="419.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="163.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (282 samples, 0.12%)</title><rect x="160.7" y="483.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (282 samples, 0.12%)</title><rect x="160.7" y="467.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (282 samples, 0.12%)</title><rect x="160.7" y="451.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (282 samples, 0.12%)</title><rect x="160.7" y="435.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (282 samples, 0.12%)</title><rect x="160.7" y="419.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.7" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (282 samples, 0.12%)</title><rect x="160.7" y="403.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="163.7" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (475 samples, 0.21%)</title><rect x="162.2" y="483.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="165.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (149 samples, 0.06%)</title><rect x="162.2" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.2" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (149 samples, 0.06%)</title><rect x="162.2" y="451.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="165.2" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (214 samples, 0.09%)</title><rect x="162.9" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.9" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (214 samples, 0.09%)</title><rect x="162.9" y="451.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="165.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$417/307390683.apply (112 samples, 0.05%)</title><rect x="164.0" y="467.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (112 samples, 0.05%)</title><rect x="164.0" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.0" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (112 samples, 0.05%)</title><rect x="164.0" y="435.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="167.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,672 samples, 0.73%)</title><rect x="164.6" y="643.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,672 samples, 0.73%)</title><rect x="164.6" y="627.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,672 samples, 0.73%)</title><rect x="164.6" y="611.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="167.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (1,672 samples, 0.73%)</title><rect x="164.6" y="595.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,672 samples, 0.73%)</title><rect x="164.6" y="579.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,598 samples, 0.70%)</title><rect x="164.6" y="563.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (107 samples, 0.05%)</title><rect x="164.6" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (107 samples, 0.05%)</title><rect x="164.6" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$352/392108125.get$Lambda (70 samples, 0.03%)</title><rect x="164.8" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$352 (70 samples, 0.03%)</title><rect x="164.8" y="499.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="167.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (73 samples, 0.03%)</title><rect x="165.1" y="547.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="168.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (89 samples, 0.04%)</title><rect x="165.5" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (89 samples, 0.04%)</title><rect x="165.5" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (56 samples, 0.02%)</title><rect x="165.7" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (56 samples, 0.02%)</title><rect x="165.7" y="499.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="168.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,329 samples, 0.58%)</title><rect x="166.0" y="547.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,329 samples, 0.58%)</title><rect x="166.0" y="531.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1243324746.run (1,136 samples, 0.49%)</title><rect x="166.0" y="515.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,136 samples, 0.49%)</title><rect x="166.0" y="499.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,136 samples, 0.49%)</title><rect x="166.0" y="483.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (312 samples, 0.14%)</title><rect x="166.0" y="467.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.0" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (214 samples, 0.09%)</title><rect x="166.0" y="451.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.0" y="462.0"></text>
</g>
<g>
<title>java/util/List.spliterator (70 samples, 0.03%)</title><rect x="166.0" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.0" y="446.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (70 samples, 0.03%)</title><rect x="166.0" y="419.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="169.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (144 samples, 0.06%)</title><rect x="166.3" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.3" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (144 samples, 0.06%)</title><rect x="166.3" y="419.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="169.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (98 samples, 0.04%)</title><rect x="167.1" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (98 samples, 0.04%)</title><rect x="167.1" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (98 samples, 0.04%)</title><rect x="167.1" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/230643635.get (56 samples, 0.02%)</title><rect x="167.1" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.1" y="414.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (56 samples, 0.02%)</title><rect x="167.1" y="387.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="170.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (824 samples, 0.36%)</title><rect x="167.6" y="467.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.6" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.now (60 samples, 0.03%)</title><rect x="167.6" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.6" y="462.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (60 samples, 0.03%)</title><rect x="167.6" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.6" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (60 samples, 0.03%)</title><rect x="167.6" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.6" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.create (60 samples, 0.03%)</title><rect x="167.6" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.6" y="414.0"></text>
</g>
<g>
<title>java.time.Instant (60 samples, 0.03%)</title><rect x="167.6" y="387.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="170.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (764 samples, 0.33%)</title><rect x="167.9" y="451.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (248 samples, 0.11%)</title><rect x="167.9" y="435.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.9" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (58 samples, 0.03%)</title><rect x="167.9" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.9" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (58 samples, 0.03%)</title><rect x="167.9" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.9" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (58 samples, 0.03%)</title><rect x="167.9" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.9" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (58 samples, 0.03%)</title><rect x="167.9" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.9" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.create (58 samples, 0.03%)</title><rect x="167.9" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.9" y="366.0"></text>
</g>
<g>
<title>java.time.Instant (58 samples, 0.03%)</title><rect x="167.9" y="339.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="170.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (57 samples, 0.02%)</title><rect x="168.2" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (57 samples, 0.02%)</title><rect x="168.2" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.2" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (57 samples, 0.02%)</title><rect x="168.2" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.2" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (57 samples, 0.02%)</title><rect x="168.2" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.2" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.create (57 samples, 0.02%)</title><rect x="168.2" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.2" y="366.0"></text>
</g>
<g>
<title>java.time.Instant (57 samples, 0.02%)</title><rect x="168.2" y="339.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="171.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (58 samples, 0.03%)</title><rect x="168.5" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (58 samples, 0.03%)</title><rect x="168.5" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.5" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (58 samples, 0.03%)</title><rect x="168.5" y="387.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="171.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (69 samples, 0.03%)</title><rect x="168.8" y="419.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="171.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (211 samples, 0.09%)</title><rect x="169.2" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.2" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (71 samples, 0.03%)</title><rect x="169.2" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (71 samples, 0.03%)</title><rect x="169.2" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (71 samples, 0.03%)</title><rect x="169.2" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (71 samples, 0.03%)</title><rect x="169.2" y="371.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="172.2" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (60 samples, 0.03%)</title><rect x="169.5" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (60 samples, 0.03%)</title><rect x="169.5" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.5" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (60 samples, 0.03%)</title><rect x="169.5" y="387.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="172.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (80 samples, 0.03%)</title><rect x="169.8" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (80 samples, 0.03%)</title><rect x="169.8" y="403.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="172.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (305 samples, 0.13%)</title><rect x="170.3" y="435.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (55 samples, 0.02%)</title><rect x="170.3" y="419.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="173.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (250 samples, 0.11%)</title><rect x="170.5" y="419.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (89 samples, 0.04%)</title><rect x="170.5" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (89 samples, 0.04%)</title><rect x="170.5" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (89 samples, 0.04%)</title><rect x="170.5" y="371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (89 samples, 0.04%)</title><rect x="170.5" y="355.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="173.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (161 samples, 0.07%)</title><rect x="171.0" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (161 samples, 0.07%)</title><rect x="171.0" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (119 samples, 0.05%)</title><rect x="171.0" y="371.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="174.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (193 samples, 0.08%)</title><rect x="171.8" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (193 samples, 0.08%)</title><rect x="171.8" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (193 samples, 0.08%)</title><rect x="171.8" y="483.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (147 samples, 0.06%)</title><rect x="171.8" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (147 samples, 0.06%)</title><rect x="171.8" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (147 samples, 0.06%)</title><rect x="171.8" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (147 samples, 0.06%)</title><rect x="171.8" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/460704340.accept (147 samples, 0.06%)</title><rect x="171.8" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (147 samples, 0.06%)</title><rect x="171.8" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (147 samples, 0.06%)</title><rect x="171.8" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (147 samples, 0.06%)</title><rect x="171.8" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (147 samples, 0.06%)</title><rect x="171.8" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/1651911151.apply (147 samples, 0.06%)</title><rect x="171.8" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (147 samples, 0.06%)</title><rect x="171.8" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (147 samples, 0.06%)</title><rect x="171.8" y="291.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="174.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (74 samples, 0.03%)</title><rect x="172.8" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (74 samples, 0.03%)</title><rect x="172.8" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (74 samples, 0.03%)</title><rect x="172.8" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (74 samples, 0.03%)</title><rect x="172.8" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.run (83,511 samples, 36.37%)</title><rect x="173.2" y="675.0" width="429.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.2" y="686.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambd..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (83,511 samples, 36.37%)</title><rect x="173.2" y="659.0" width="429.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.2" y="670.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda..</text>
</g>
<g>
<title>java/lang/String.getBytes (2,727 samples, 1.19%)</title><rect x="173.2" y="643.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,727 samples, 1.19%)</title><rect x="173.2" y="627.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2,727 samples, 1.19%)</title><rect x="173.2" y="611.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,727 samples, 1.19%)</title><rect x="173.2" y="595.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.2" y="606.0"></text>
</g>
<g>
<title>byte[] (2,727 samples, 1.19%)</title><rect x="173.2" y="579.0" width="14.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="176.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,800 samples, 2.09%)</title><rect x="187.2" y="643.0" width="24.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.2" y="654.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,800 samples, 2.09%)</title><rect x="187.2" y="627.0" width="24.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.2" y="638.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,800 samples, 2.09%)</title><rect x="187.2" y="611.0" width="24.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="190.2" y="622.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.isProxied (7,353 samples, 3.20%)</title><rect x="211.9" y="643.0" width="37.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.9" y="654.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7,353 samples, 3.20%)</title><rect x="211.9" y="627.0" width="37.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.9" y="638.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (7,353 samples, 3.20%)</title><rect x="211.9" y="611.0" width="37.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.9" y="622.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7,353 samples, 3.20%)</title><rect x="211.9" y="595.0" width="37.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.9" y="606.0">jav..</text>
</g>
<g>
<title>java.lang.String (4,108 samples, 1.79%)</title><rect x="211.9" y="579.0" width="21.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="214.9" y="590.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,245 samples, 1.41%)</title><rect x="233.0" y="579.0" width="16.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.0" y="590.0"></text>
</g>
<g>
<title>byte[] (3,245 samples, 1.41%)</title><rect x="233.0" y="563.0" width="16.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="236.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (68,631 samples, 29.89%)</title><rect x="249.7" y="643.0" width="352.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.7" y="654.0">ru/mail/polis/service/kate/moreva/MySimpleHttpSe..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,356 samples, 1.03%)</title><rect x="249.7" y="627.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,356 samples, 1.03%)</title><rect x="249.7" y="611.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$123/478887125.get$Lambda (2,356 samples, 1.03%)</title><rect x="249.7" y="595.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.7" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$123 (2,356 samples, 1.03%)</title><rect x="249.7" y="579.0" width="12.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="252.7" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.Context (3,114 samples, 1.36%)</title><rect x="261.8" y="627.0" width="16.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="264.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMethod (63,161 samples, 27.51%)</title><rect x="277.8" y="627.0" width="324.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.8" y="638.0">ru/mail/polis/service/kate/moreva/MySimpleHt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (163 samples, 0.07%)</title><rect x="277.8" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (163 samples, 0.07%)</title><rect x="277.8" y="595.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$228/1550578698.get$Lambda (72 samples, 0.03%)</title><rect x="277.8" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.8" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$228 (72 samples, 0.03%)</title><rect x="277.8" y="563.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="280.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$232/1238386083.get$Lambda (91 samples, 0.04%)</title><rect x="278.1" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.1" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$232 (91 samples, 0.04%)</title><rect x="278.1" y="563.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="281.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (209 samples, 0.09%)</title><rect x="278.6" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (209 samples, 0.09%)</title><rect x="278.6" y="595.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (123 samples, 0.05%)</title><rect x="278.6" y="579.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="281.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (86 samples, 0.04%)</title><rect x="279.2" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (86 samples, 0.04%)</title><rect x="279.2" y="563.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="282.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAcceptAsync (191 samples, 0.08%)</title><rect x="279.7" y="611.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (191 samples, 0.08%)</title><rect x="279.7" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (123 samples, 0.05%)</title><rect x="279.7" y="579.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="282.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (68 samples, 0.03%)</title><rect x="280.3" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (68 samples, 0.03%)</title><rect x="280.3" y="563.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="283.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.collect (1,864 samples, 0.81%)</title><rect x="280.7" y="611.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.7" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (82 samples, 0.04%)</title><rect x="280.7" y="595.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="283.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (74 samples, 0.03%)</title><rect x="281.1" y="595.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="284.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/830943904.linkToTargetMethod (311 samples, 0.14%)</title><rect x="281.7" y="595.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/981843706.invokeStatic (311 samples, 0.14%)</title><rect x="281.7" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$204/1048669819.get$Lambda (311 samples, 0.14%)</title><rect x="281.7" y="563.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MyRequestHelper$$Lambda$204 (311 samples, 0.14%)</title><rect x="281.7" y="547.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="284.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (603 samples, 0.26%)</title><rect x="283.3" y="595.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (603 samples, 0.26%)</title><rect x="283.3" y="579.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (358 samples, 0.16%)</title><rect x="283.3" y="563.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="286.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (70 samples, 0.03%)</title><rect x="285.1" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (70 samples, 0.03%)</title><rect x="285.1" y="547.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="288.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (175 samples, 0.08%)</title><rect x="285.5" y="563.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (175 samples, 0.08%)</title><rect x="285.5" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (175 samples, 0.08%)</title><rect x="285.5" y="531.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="288.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (746 samples, 0.32%)</title><rect x="286.4" y="595.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (746 samples, 0.32%)</title><rect x="286.4" y="579.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (380 samples, 0.17%)</title><rect x="286.4" y="563.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="289.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (82 samples, 0.04%)</title><rect x="288.4" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (82 samples, 0.04%)</title><rect x="288.4" y="547.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="291.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (64 samples, 0.03%)</title><rect x="288.8" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (64 samples, 0.03%)</title><rect x="288.8" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (62 samples, 0.03%)</title><rect x="288.8" y="531.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="291.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (219 samples, 0.10%)</title><rect x="289.1" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (219 samples, 0.10%)</title><rect x="289.1" y="547.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (219 samples, 0.10%)</title><rect x="289.1" y="531.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="292.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.merge (491 samples, 0.21%)</title><rect x="290.2" y="611.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (64 samples, 0.03%)</title><rect x="290.2" y="595.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="293.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.02%)</title><rect x="290.6" y="595.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.02%)</title><rect x="290.6" y="579.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$221/654824253.get$Lambda (50 samples, 0.02%)</title><rect x="290.6" y="563.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.6" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MyRequestHelper$$Lambda$221 (50 samples, 0.02%)</title><rect x="290.6" y="547.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="293.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (179 samples, 0.08%)</title><rect x="290.8" y="595.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (179 samples, 0.08%)</title><rect x="290.8" y="579.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.8" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (112 samples, 0.05%)</title><rect x="290.8" y="563.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="293.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (67 samples, 0.03%)</title><rect x="291.4" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (67 samples, 0.03%)</title><rect x="291.4" y="547.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="294.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (198 samples, 0.09%)</title><rect x="291.7" y="595.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (198 samples, 0.09%)</title><rect x="291.7" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (132 samples, 0.06%)</title><rect x="291.7" y="563.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="294.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (66 samples, 0.03%)</title><rect x="292.4" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (66 samples, 0.03%)</title><rect x="292.4" y="547.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="295.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (12,122 samples, 5.28%)</title><rect x="292.8" y="611.0" width="62.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.8" y="622.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12,122 samples, 5.28%)</title><rect x="292.8" y="595.0" width="62.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.8" y="606.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12,122 samples, 5.28%)</title><rect x="292.8" y="579.0" width="62.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.8" y="590.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8,189 samples, 3.57%)</title><rect x="292.8" y="563.0" width="42.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.8" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8,189 samples, 3.57%)</title><rect x="292.8" y="547.0" width="42.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.8" y="558.0">one/..</text>
</g>
<g>
<title>byte[] (4,758 samples, 2.07%)</title><rect x="292.8" y="531.0" width="24.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="295.8" y="542.0">b..</text>
</g>
<g>
<title>byte[] (3,431 samples, 1.49%)</title><rect x="317.2" y="531.0" width="17.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="320.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3,933 samples, 1.71%)</title><rect x="334.8" y="563.0" width="20.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.8" y="574.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3,933 samples, 1.71%)</title><rect x="334.8" y="547.0" width="20.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="337.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$123/478887125.act (26,210 samples, 11.41%)</title><rect x="355.1" y="611.0" width="134.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.1" y="622.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$3 (26,210 samples, 11.41%)</title><rect x="355.1" y="595.0" width="134.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.1" y="606.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.putEntity (26,210 samples, 11.41%)</title><rect x="355.1" y="579.0" width="134.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.1" y="590.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one.nio.http.Response (2,149 samples, 0.94%)</title><rect x="355.1" y="563.0" width="11.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="358.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8,385 samples, 3.65%)</title><rect x="366.1" y="563.0" width="43.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.1" y="574.0">one/..</text>
</g>
<g>
<title>byte[] (3,470 samples, 1.51%)</title><rect x="366.1" y="547.0" width="17.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="369.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (2,807 samples, 1.22%)</title><rect x="383.9" y="547.0" width="14.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="386.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (2,108 samples, 0.92%)</title><rect x="398.4" y="547.0" width="10.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="401.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.upsert (15,676 samples, 6.83%)</title><rect x="409.2" y="563.0" width="80.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.2" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,468 samples, 1.95%)</title><rect x="409.2" y="547.0" width="23.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.2" y="558.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,468 samples, 1.95%)</title><rect x="409.2" y="531.0" width="23.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="412.2" y="542.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.upsert (11,208 samples, 4.88%)</title><rect x="432.2" y="547.0" width="57.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.2" y="558.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4,489 samples, 1.95%)</title><rect x="432.2" y="531.0" width="23.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.2" y="542.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,489 samples, 1.95%)</title><rect x="432.2" y="515.0" width="23.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="435.2" y="526.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4,411 samples, 1.92%)</title><rect x="455.2" y="531.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.2" y="542.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,411 samples, 1.92%)</title><rect x="455.2" y="515.0" width="22.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="458.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (130 samples, 0.06%)</title><rect x="477.9" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (130 samples, 0.06%)</title><rect x="477.9" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (130 samples, 0.06%)</title><rect x="477.9" y="499.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.9" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (119 samples, 0.05%)</title><rect x="477.9" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.9" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (119 samples, 0.05%)</title><rect x="477.9" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.9" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (63 samples, 0.03%)</title><rect x="477.9" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.9" y="462.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (63 samples, 0.03%)</title><rect x="477.9" y="435.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="480.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (56 samples, 0.02%)</title><rect x="478.2" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (56 samples, 0.02%)</title><rect x="478.2" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (56 samples, 0.02%)</title><rect x="478.2" y="419.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="481.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.upsert (2,178 samples, 0.95%)</title><rect x="478.6" y="531.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (2,178 samples, 0.95%)</title><rect x="478.6" y="515.0" width="11.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="481.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (21,911 samples, 9.54%)</title><rect x="489.7" y="611.0" width="112.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.7" y="622.0">ru/mail/polis/..</text>
</g>
<g>
<title>java.util.ArrayList (75 samples, 0.03%)</title><rect x="489.7" y="595.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="492.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.04%)</title><rect x="490.1" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.04%)</title><rect x="490.1" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$200/1317088569.get$Lambda (90 samples, 0.04%)</title><rect x="490.1" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.1" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$200 (90 samples, 0.04%)</title><rect x="490.1" y="547.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="493.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (100 samples, 0.04%)</title><rect x="490.6" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.6" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (100 samples, 0.04%)</title><rect x="490.6" y="579.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="493.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (189 samples, 0.08%)</title><rect x="491.1" y="595.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (126 samples, 0.05%)</title><rect x="491.1" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.1" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (126 samples, 0.05%)</title><rect x="491.1" y="563.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="494.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (63 samples, 0.03%)</title><rect x="491.8" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.8" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (63 samples, 0.03%)</title><rect x="491.8" y="563.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="494.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (444 samples, 0.19%)</title><rect x="492.1" y="595.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (444 samples, 0.19%)</title><rect x="492.1" y="579.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (253 samples, 0.11%)</title><rect x="492.1" y="563.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="495.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (191 samples, 0.08%)</title><rect x="493.4" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (191 samples, 0.08%)</title><rect x="493.4" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="496.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (191 samples, 0.08%)</title><rect x="493.4" y="531.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="496.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (12,175 samples, 5.30%)</title><rect x="494.4" y="595.0" width="62.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.4" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12,175 samples, 5.30%)</title><rect x="494.4" y="579.0" width="62.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.4" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12,175 samples, 5.30%)</title><rect x="494.4" y="563.0" width="62.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.4" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12,175 samples, 5.30%)</title><rect x="494.4" y="547.0" width="62.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.4" y="558.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.04%)</title><rect x="494.4" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="497.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.04%)</title><rect x="494.4" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="497.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$193/1142862075.get$Lambda (92 samples, 0.04%)</title><rect x="494.4" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$193 (92 samples, 0.04%)</title><rect x="494.4" y="483.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="497.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (479 samples, 0.21%)</title><rect x="494.8" y="531.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (479 samples, 0.21%)</title><rect x="494.8" y="515.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (254 samples, 0.11%)</title><rect x="494.8" y="499.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="497.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (225 samples, 0.10%)</title><rect x="496.1" y="499.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (225 samples, 0.10%)</title><rect x="496.1" y="483.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (225 samples, 0.10%)</title><rect x="496.1" y="467.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="499.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (431 samples, 0.19%)</title><rect x="497.3" y="531.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (431 samples, 0.19%)</title><rect x="497.3" y="515.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (239 samples, 0.10%)</title><rect x="497.3" y="499.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="500.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (192 samples, 0.08%)</title><rect x="498.5" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (192 samples, 0.08%)</title><rect x="498.5" y="483.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (192 samples, 0.08%)</title><rect x="498.5" y="467.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="501.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (297 samples, 0.13%)</title><rect x="499.5" y="531.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="502.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (575 samples, 0.25%)</title><rect x="501.0" y="531.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="504.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (5,980 samples, 2.60%)</title><rect x="504.0" y="531.0" width="30.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.0" y="542.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (639 samples, 0.28%)</title><rect x="504.0" y="515.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.0" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (488 samples, 0.21%)</title><rect x="504.0" y="499.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.0" y="510.0"></text>
</g>
<g>
<title>java/util/List.spliterator (200 samples, 0.09%)</title><rect x="504.0" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.0" y="494.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (200 samples, 0.09%)</title><rect x="504.0" y="467.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="507.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (288 samples, 0.13%)</title><rect x="505.0" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.0" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (288 samples, 0.13%)</title><rect x="505.0" y="467.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="508.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (151 samples, 0.07%)</title><rect x="506.5" y="499.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (151 samples, 0.07%)</title><rect x="506.5" y="483.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (151 samples, 0.07%)</title><rect x="506.5" y="467.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/230643635.get (151 samples, 0.07%)</title><rect x="506.5" y="451.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.5" y="462.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (151 samples, 0.07%)</title><rect x="506.5" y="435.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="509.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,267 samples, 0.99%)</title><rect x="507.3" y="515.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,267 samples, 0.99%)</title><rect x="507.3" y="499.0" width="11.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.3" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (103 samples, 0.04%)</title><rect x="507.3" y="483.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="510.3" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (151 samples, 0.07%)</title><rect x="507.8" y="483.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="510.8" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (294 samples, 0.13%)</title><rect x="508.6" y="483.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="511.6" y="494.0"></text>
</g>
<g>
<title>java.util.TreeSet (78 samples, 0.03%)</title><rect x="510.1" y="483.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="513.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (182 samples, 0.08%)</title><rect x="510.5" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (182 samples, 0.08%)</title><rect x="510.5" y="467.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.get$Lambda (182 samples, 0.08%)</title><rect x="510.5" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.5" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$140 (182 samples, 0.08%)</title><rect x="510.5" y="435.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="513.5" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (995 samples, 0.43%)</title><rect x="511.4" y="483.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (995 samples, 0.43%)</title><rect x="511.4" y="467.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (995 samples, 0.43%)</title><rect x="511.4" y="451.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (995 samples, 0.43%)</title><rect x="511.4" y="435.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.4" y="446.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (342 samples, 0.15%)</title><rect x="511.4" y="419.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (342 samples, 0.15%)</title><rect x="511.4" y="403.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (342 samples, 0.15%)</title><rect x="511.4" y="387.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (342 samples, 0.15%)</title><rect x="511.4" y="371.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (342 samples, 0.15%)</title><rect x="511.4" y="355.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (342 samples, 0.15%)</title><rect x="511.4" y="339.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (342 samples, 0.15%)</title><rect x="511.4" y="323.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (342 samples, 0.15%)</title><rect x="511.4" y="307.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (342 samples, 0.15%)</title><rect x="511.4" y="291.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="514.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (120 samples, 0.05%)</title><rect x="513.2" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.05%)</title><rect x="513.2" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="516.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.get$Lambda (120 samples, 0.05%)</title><rect x="513.2" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.2" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (120 samples, 0.05%)</title><rect x="513.2" y="371.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="516.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (293 samples, 0.13%)</title><rect x="513.8" y="419.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.8" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (293 samples, 0.13%)</title><rect x="513.8" y="403.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (156 samples, 0.07%)</title><rect x="513.8" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (156 samples, 0.07%)</title><rect x="513.8" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (156 samples, 0.07%)</title><rect x="513.8" y="355.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="516.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (137 samples, 0.06%)</title><rect x="514.6" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.6" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (137 samples, 0.06%)</title><rect x="514.6" y="371.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="517.6" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (240 samples, 0.10%)</title><rect x="515.3" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.3" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (240 samples, 0.10%)</title><rect x="515.3" y="403.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="518.3" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (188 samples, 0.08%)</title><rect x="516.5" y="483.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.5" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (188 samples, 0.08%)</title><rect x="516.5" y="467.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="519.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (276 samples, 0.12%)</title><rect x="517.5" y="483.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.5" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (276 samples, 0.12%)</title><rect x="517.5" y="467.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="520.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (99 samples, 0.04%)</title><rect x="518.9" y="515.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="521.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (2,196 samples, 0.96%)</title><rect x="519.4" y="515.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.4" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (2,196 samples, 0.96%)</title><rect x="519.4" y="499.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.4" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,986 samples, 0.86%)</title><rect x="519.4" y="483.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.4" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,986 samples, 0.86%)</title><rect x="519.4" y="467.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.4" y="478.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,986 samples, 0.86%)</title><rect x="519.4" y="451.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.4" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (413 samples, 0.18%)</title><rect x="519.4" y="435.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="522.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (552 samples, 0.24%)</title><rect x="521.6" y="435.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.6" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (552 samples, 0.24%)</title><rect x="521.6" y="419.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.6" y="430.0"></text>
</g>
<g>
<title>byte[] (552 samples, 0.24%)</title><rect x="521.6" y="403.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="524.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,021 samples, 0.44%)</title><rect x="524.4" y="435.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,021 samples, 0.44%)</title><rect x="524.4" y="419.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (429 samples, 0.19%)</title><rect x="524.4" y="403.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="527.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (592 samples, 0.26%)</title><rect x="526.6" y="403.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.6" y="414.0"></text>
</g>
<g>
<title>byte[] (592 samples, 0.26%)</title><rect x="526.6" y="387.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="529.6" y="398.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (210 samples, 0.09%)</title><rect x="529.6" y="483.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="532.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (286 samples, 0.12%)</title><rect x="530.7" y="515.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.7" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (286 samples, 0.12%)</title><rect x="530.7" y="499.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="533.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (493 samples, 0.21%)</title><rect x="532.2" y="515.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.2" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (142 samples, 0.06%)</title><rect x="532.2" y="499.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="535.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (147 samples, 0.06%)</title><rect x="532.9" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (147 samples, 0.06%)</title><rect x="532.9" y="483.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="535.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (204 samples, 0.09%)</title><rect x="533.7" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (204 samples, 0.09%)</title><rect x="533.7" y="483.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="536.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2,746 samples, 1.20%)</title><rect x="534.7" y="531.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (95 samples, 0.04%)</title><rect x="534.7" y="515.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="537.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (439 samples, 0.19%)</title><rect x="535.2" y="515.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="538.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (99 samples, 0.04%)</title><rect x="537.5" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (99 samples, 0.04%)</title><rect x="537.5" y="499.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="540.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2,113 samples, 0.92%)</title><rect x="538.0" y="515.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2,113 samples, 0.92%)</title><rect x="538.0" y="499.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Class[] (205 samples, 0.09%)</title><rect x="538.0" y="483.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="541.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (181 samples, 0.08%)</title><rect x="539.0" y="483.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="542.0" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList (196 samples, 0.09%)</title><rect x="540.0" y="483.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="543.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (907 samples, 0.39%)</title><rect x="541.0" y="483.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (907 samples, 0.39%)</title><rect x="541.0" y="467.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.0" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (907 samples, 0.39%)</title><rect x="541.0" y="451.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.0" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (907 samples, 0.39%)</title><rect x="541.0" y="435.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="544.0" y="446.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (907 samples, 0.39%)</title><rect x="541.0" y="419.0" width="4.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="544.0" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (323 samples, 0.14%)</title><rect x="545.6" y="483.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (323 samples, 0.14%)</title><rect x="545.6" y="467.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (238 samples, 0.10%)</title><rect x="545.6" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (238 samples, 0.10%)</title><rect x="545.6" y="435.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="548.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (85 samples, 0.04%)</title><rect x="546.9" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (85 samples, 0.04%)</title><rect x="546.9" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="549.9" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (301 samples, 0.13%)</title><rect x="547.3" y="483.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.3" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (301 samples, 0.13%)</title><rect x="547.3" y="467.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.3" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (301 samples, 0.13%)</title><rect x="547.3" y="451.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="550.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,575 samples, 0.69%)</title><rect x="548.8" y="531.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (297 samples, 0.13%)</title><rect x="548.8" y="515.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (152 samples, 0.07%)</title><rect x="548.8" y="499.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="551.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (145 samples, 0.06%)</title><rect x="549.6" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (145 samples, 0.06%)</title><rect x="549.6" y="483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (136 samples, 0.06%)</title><rect x="549.6" y="467.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="552.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (217 samples, 0.09%)</title><rect x="550.4" y="515.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="553.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1,061 samples, 0.46%)</title><rect x="551.5" y="515.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (199 samples, 0.09%)</title><rect x="551.5" y="499.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (199 samples, 0.09%)</title><rect x="551.5" y="483.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$172/330952395.get$Lambda (112 samples, 0.05%)</title><rect x="551.5" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$172 (112 samples, 0.05%)</title><rect x="551.5" y="451.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="554.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/283532103.get$Lambda (87 samples, 0.04%)</title><rect x="552.1" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$181 (87 samples, 0.04%)</title><rect x="552.1" y="451.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="555.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (862 samples, 0.38%)</title><rect x="552.5" y="499.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (862 samples, 0.38%)</title><rect x="552.5" y="483.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (496 samples, 0.22%)</title><rect x="552.5" y="467.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="555.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (366 samples, 0.16%)</title><rect x="555.0" y="467.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (366 samples, 0.16%)</title><rect x="555.0" y="451.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (366 samples, 0.16%)</title><rect x="555.0" y="435.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="558.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (783 samples, 0.34%)</title><rect x="556.9" y="595.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.9" y="606.0"></text>
</g>
<g>
<title>java.util.HashSet (61 samples, 0.03%)</title><rect x="556.9" y="579.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="559.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (156 samples, 0.07%)</title><rect x="557.2" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.2" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap (156 samples, 0.07%)</title><rect x="557.2" y="563.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="560.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.add (566 samples, 0.25%)</title><rect x="558.0" y="579.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (566 samples, 0.25%)</title><rect x="558.0" y="563.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (566 samples, 0.25%)</title><rect x="558.0" y="547.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (325 samples, 0.14%)</title><rect x="558.0" y="531.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.0" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (325 samples, 0.14%)</title><rect x="558.0" y="515.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="561.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (241 samples, 0.10%)</title><rect x="559.7" y="531.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.7" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (241 samples, 0.10%)</title><rect x="559.7" y="515.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="562.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getLocalResults (202 samples, 0.09%)</title><rect x="561.0" y="595.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.03%)</title><rect x="561.0" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.03%)</title><rect x="561.0" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/1936887332.get$Lambda (65 samples, 0.03%)</title><rect x="561.0" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.0" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$128 (65 samples, 0.03%)</title><rect x="561.0" y="531.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="564.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (137 samples, 0.06%)</title><rect x="561.3" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (137 samples, 0.06%)</title><rect x="561.3" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (70 samples, 0.03%)</title><rect x="561.3" y="547.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="564.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (67 samples, 0.03%)</title><rect x="561.6" y="547.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="564.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.requestForReplica (7,853 samples, 3.42%)</title><rect x="562.0" y="595.0" width="40.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.0" y="606.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (503 samples, 0.22%)</title><rect x="562.0" y="579.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (503 samples, 0.22%)</title><rect x="562.0" y="563.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/644345897.invoke (503 samples, 0.22%)</title><rect x="562.0" y="547.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (503 samples, 0.22%)</title><rect x="562.0" y="531.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (133 samples, 0.06%)</title><rect x="562.0" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (133 samples, 0.06%)</title><rect x="562.0" y="499.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="565.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (370 samples, 0.16%)</title><rect x="562.7" y="515.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (370 samples, 0.16%)</title><rect x="562.7" y="499.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.7" y="510.0"></text>
</g>
<g>
<title>byte[] (370 samples, 0.16%)</title><rect x="562.7" y="483.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="565.7" y="494.0"></text>
</g>
<g>
<title>java/net/URI.create (2,320 samples, 1.01%)</title><rect x="564.6" y="579.0" width="11.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.6" y="590.0"></text>
</g>
<g>
<title>java.net.URI (437 samples, 0.19%)</title><rect x="564.6" y="563.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="567.6" y="574.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,883 samples, 0.82%)</title><rect x="566.8" y="563.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.8" y="574.0"></text>
</g>
<g>
<title>java.net.URI$Parser (222 samples, 0.10%)</title><rect x="566.8" y="547.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="569.8" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,661 samples, 0.72%)</title><rect x="568.0" y="547.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="571.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (275 samples, 0.12%)</title><rect x="568.0" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (275 samples, 0.12%)</title><rect x="568.0" y="515.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (132 samples, 0.06%)</title><rect x="568.0" y="499.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="571.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (143 samples, 0.06%)</title><rect x="568.6" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.6" y="510.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.06%)</title><rect x="568.6" y="483.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="571.6" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,386 samples, 0.60%)</title><rect x="569.4" y="531.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (679 samples, 0.30%)</title><rect x="569.4" y="515.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (679 samples, 0.30%)</title><rect x="569.4" y="499.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String (315 samples, 0.14%)</title><rect x="569.4" y="483.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="572.4" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (364 samples, 0.16%)</title><rect x="571.0" y="483.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.0" y="494.0"></text>
</g>
<g>
<title>byte[] (364 samples, 0.16%)</title><rect x="571.0" y="467.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="574.0" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (707 samples, 0.31%)</title><rect x="572.9" y="515.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (330 samples, 0.14%)</title><rect x="572.9" y="499.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (330 samples, 0.14%)</title><rect x="572.9" y="483.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (150 samples, 0.07%)</title><rect x="572.9" y="467.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="575.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (180 samples, 0.08%)</title><rect x="573.6" y="467.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.6" y="478.0"></text>
</g>
<g>
<title>byte[] (180 samples, 0.08%)</title><rect x="573.6" y="451.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="576.6" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (377 samples, 0.16%)</title><rect x="574.6" y="499.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.6" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (377 samples, 0.16%)</title><rect x="574.6" y="483.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (377 samples, 0.16%)</title><rect x="574.6" y="467.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (377 samples, 0.16%)</title><rect x="574.6" y="451.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (183 samples, 0.08%)</title><rect x="574.6" y="435.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="577.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (194 samples, 0.08%)</title><rect x="575.5" y="435.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.5" y="446.0"></text>
</g>
<g>
<title>byte[] (194 samples, 0.08%)</title><rect x="575.5" y="419.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="578.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (194 samples, 0.08%)</title><rect x="576.5" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (194 samples, 0.08%)</title><rect x="576.5" y="563.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="579.5" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (642 samples, 0.28%)</title><rect x="577.5" y="579.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (245 samples, 0.11%)</title><rect x="577.5" y="563.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="580.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (397 samples, 0.17%)</title><rect x="578.8" y="563.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (106 samples, 0.05%)</title><rect x="578.8" y="547.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="581.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (291 samples, 0.13%)</title><rect x="579.3" y="547.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (291 samples, 0.13%)</title><rect x="579.3" y="531.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="582.3" y="542.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (148 samples, 0.06%)</title><rect x="580.8" y="579.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (148 samples, 0.06%)</title><rect x="580.8" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (148 samples, 0.06%)</title><rect x="580.8" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (148 samples, 0.06%)</title><rect x="580.8" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (148 samples, 0.06%)</title><rect x="580.8" y="515.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.8" y="526.0"></text>
</g>
<g>
<title>byte[] (148 samples, 0.06%)</title><rect x="580.8" y="499.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="583.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (299 samples, 0.13%)</title><rect x="581.6" y="579.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (299 samples, 0.13%)</title><rect x="581.6" y="563.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="584.6" y="574.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (477 samples, 0.21%)</title><rect x="583.1" y="579.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.1" y="590.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (477 samples, 0.21%)</title><rect x="583.1" y="563.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.1" y="574.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (477 samples, 0.21%)</title><rect x="583.1" y="547.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.1" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (269 samples, 0.12%)</title><rect x="583.1" y="531.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="586.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (208 samples, 0.09%)</title><rect x="584.5" y="531.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.5" y="542.0"></text>
</g>
<g>
<title>char[] (208 samples, 0.09%)</title><rect x="584.5" y="515.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="587.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2,735 samples, 1.19%)</title><rect x="585.5" y="579.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (235 samples, 0.10%)</title><rect x="585.5" y="563.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="588.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,500 samples, 1.09%)</title><rect x="586.7" y="563.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,314 samples, 1.01%)</title><rect x="586.7" y="547.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.7" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,314 samples, 1.01%)</title><rect x="586.7" y="531.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.7" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (101 samples, 0.04%)</title><rect x="586.7" y="515.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="589.7" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (150 samples, 0.07%)</title><rect x="587.3" y="515.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="590.3" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (273 samples, 0.12%)</title><rect x="588.0" y="515.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="591.0" y="526.0"></text>
</g>
<g>
<title>java.util.TreeSet (85 samples, 0.04%)</title><rect x="589.4" y="515.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="592.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (185 samples, 0.08%)</title><rect x="589.9" y="515.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (185 samples, 0.08%)</title><rect x="589.9" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.get$Lambda (185 samples, 0.08%)</title><rect x="589.9" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.9" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$140 (185 samples, 0.08%)</title><rect x="589.9" y="467.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="592.9" y="478.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (197 samples, 0.09%)</title><rect x="590.8" y="515.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.8" y="526.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (197 samples, 0.09%)</title><rect x="590.8" y="499.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="593.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,013 samples, 0.44%)</title><rect x="591.8" y="515.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.8" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (1,013 samples, 0.44%)</title><rect x="591.8" y="499.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,013 samples, 0.44%)</title><rect x="591.8" y="483.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (150 samples, 0.07%)</title><rect x="591.8" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (150 samples, 0.07%)</title><rect x="591.8" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.get$Lambda (150 samples, 0.07%)</title><rect x="591.8" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.8" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (150 samples, 0.07%)</title><rect x="591.8" y="419.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="594.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (317 samples, 0.14%)</title><rect x="592.6" y="467.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (317 samples, 0.14%)</title><rect x="592.6" y="451.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (317 samples, 0.14%)</title><rect x="592.6" y="435.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (317 samples, 0.14%)</title><rect x="592.6" y="419.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (317 samples, 0.14%)</title><rect x="592.6" y="403.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (317 samples, 0.14%)</title><rect x="592.6" y="387.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (317 samples, 0.14%)</title><rect x="592.6" y="371.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (317 samples, 0.14%)</title><rect x="592.6" y="355.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (317 samples, 0.14%)</title><rect x="592.6" y="339.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="595.6" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (314 samples, 0.14%)</title><rect x="594.2" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (314 samples, 0.14%)</title><rect x="594.2" y="451.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (175 samples, 0.08%)</title><rect x="594.2" y="435.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (175 samples, 0.08%)</title><rect x="594.2" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (175 samples, 0.08%)</title><rect x="594.2" y="403.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="597.2" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (139 samples, 0.06%)</title><rect x="595.1" y="435.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.1" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (139 samples, 0.06%)</title><rect x="595.1" y="419.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="598.1" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (232 samples, 0.10%)</title><rect x="595.9" y="467.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (232 samples, 0.10%)</title><rect x="595.9" y="451.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="598.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (310 samples, 0.14%)</title><rect x="597.0" y="515.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.0" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (310 samples, 0.14%)</title><rect x="597.0" y="499.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="600.0" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (186 samples, 0.08%)</title><rect x="598.6" y="547.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.6" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (186 samples, 0.08%)</title><rect x="598.6" y="531.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.6" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (186 samples, 0.08%)</title><rect x="598.6" y="515.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="601.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (535 samples, 0.23%)</title><rect x="599.6" y="579.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (535 samples, 0.23%)</title><rect x="599.6" y="563.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (535 samples, 0.23%)</title><rect x="599.6" y="547.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (535 samples, 0.23%)</title><rect x="599.6" y="531.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.6" y="542.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (535 samples, 0.23%)</title><rect x="599.6" y="515.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (264 samples, 0.11%)</title><rect x="599.6" y="499.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (264 samples, 0.11%)</title><rect x="599.6" y="483.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="602.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$136/696862212.apply (271 samples, 0.12%)</title><rect x="601.0" y="499.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (271 samples, 0.12%)</title><rect x="601.0" y="483.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.0" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (137 samples, 0.06%)</title><rect x="601.0" y="467.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="604.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (134 samples, 0.06%)</title><rect x="601.7" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (134 samples, 0.06%)</title><rect x="601.7" y="451.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="604.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (24,484 samples, 10.66%)</title><rect x="602.3" y="723.0" width="125.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.3" y="734.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (24,484 samples, 10.66%)</title><rect x="602.3" y="707.0" width="125.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.3" y="718.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (24,484 samples, 10.66%)</title><rect x="602.3" y="691.0" width="125.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.3" y="702.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (24,484 samples, 10.66%)</title><rect x="602.3" y="675.0" width="125.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.3" y="686.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (24,484 samples, 10.66%)</title><rect x="602.3" y="659.0" width="125.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.3" y="670.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (9,533 samples, 4.15%)</title><rect x="602.3" y="643.0" width="49.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.3" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9,533 samples, 4.15%)</title><rect x="602.3" y="627.0" width="49.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.3" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (192 samples, 0.08%)</title><rect x="602.3" y="611.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (192 samples, 0.08%)</title><rect x="602.3" y="595.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (192 samples, 0.08%)</title><rect x="602.3" y="579.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (192 samples, 0.08%)</title><rect x="602.3" y="563.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (192 samples, 0.08%)</title><rect x="602.3" y="547.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (192 samples, 0.08%)</title><rect x="602.3" y="531.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (187 samples, 0.08%)</title><rect x="602.3" y="515.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="605.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/1936887332.get (9,341 samples, 4.07%)</title><rect x="603.3" y="611.0" width="48.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.3" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getLocalResults$8 (9,341 samples, 4.07%)</title><rect x="603.3" y="595.0" width="48.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.3" y="606.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (871 samples, 0.38%)</title><rect x="603.3" y="579.0" width="4.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="606.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$123/478887125.act (8,020 samples, 3.49%)</title><rect x="607.8" y="579.0" width="41.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="610.8" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$3 (8,020 samples, 3.49%)</title><rect x="607.8" y="563.0" width="41.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.8" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.putEntity (8,020 samples, 3.49%)</title><rect x="607.8" y="547.0" width="41.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.8" y="558.0">ru/..</text>
</g>
<g>
<title>one.nio.http.Response (626 samples, 0.27%)</title><rect x="607.8" y="531.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="610.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,603 samples, 1.13%)</title><rect x="611.0" y="531.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="614.0" y="542.0"></text>
</g>
<g>
<title>byte[] (1,105 samples, 0.48%)</title><rect x="611.0" y="515.0" width="5.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="614.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (871 samples, 0.38%)</title><rect x="616.7" y="515.0" width="4.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="619.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (627 samples, 0.27%)</title><rect x="621.2" y="515.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="624.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.upsert (4,791 samples, 2.09%)</title><rect x="624.4" y="531.0" width="24.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.4" y="542.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,554 samples, 0.68%)</title><rect x="624.4" y="515.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,554 samples, 0.68%)</title><rect x="624.4" y="499.0" width="8.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="627.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.upsert (3,237 samples, 1.41%)</title><rect x="632.4" y="515.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,302 samples, 0.57%)</title><rect x="632.4" y="499.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,302 samples, 0.57%)</title><rect x="632.4" y="483.0" width="6.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="635.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1,275 samples, 0.56%)</title><rect x="639.1" y="499.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.1" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,275 samples, 0.56%)</title><rect x="639.1" y="483.0" width="6.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="642.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (75 samples, 0.03%)</title><rect x="645.6" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (75 samples, 0.03%)</title><rect x="645.6" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (75 samples, 0.03%)</title><rect x="645.6" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.6" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (63 samples, 0.03%)</title><rect x="645.6" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.6" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (63 samples, 0.03%)</title><rect x="645.6" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.upsert (585 samples, 0.25%)</title><rect x="646.0" y="499.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Value (585 samples, 0.25%)</title><rect x="646.0" y="483.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="649.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.&lt;init&gt; (450 samples, 0.20%)</title><rect x="649.0" y="579.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.0" y="590.0"></text>
</g>
<g>
<title>byte[] (450 samples, 0.20%)</title><rect x="649.0" y="563.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="652.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (14,951 samples, 6.51%)</title><rect x="651.3" y="643.0" width="76.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.3" y="654.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (14,951 samples, 6.51%)</title><rect x="651.3" y="627.0" width="76.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.3" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (14,951 samples, 6.51%)</title><rect x="651.3" y="611.0" width="76.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.3" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14,951 samples, 6.51%)</title><rect x="651.3" y="595.0" width="76.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.3" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (13,608 samples, 5.93%)</title><rect x="651.3" y="579.0" width="70.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.3" y="590.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$200/1317088569.apply (13,608 samples, 5.93%)</title><rect x="651.3" y="563.0" width="70.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.3" y="574.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$replication$7 (13,608 samples, 5.93%)</title><rect x="651.3" y="547.0" width="70.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.3" y="558.0">ru/mail..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (10,775 samples, 4.69%)</title><rect x="651.3" y="531.0" width="55.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.3" y="542.0">java/..</text>
</g>
<g>
<title>java/util/Collection.stream (4,731 samples, 2.06%)</title><rect x="651.3" y="515.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.3" y="526.0">j..</text>
</g>
<g>
<title>java/util/List.spliterator (1,700 samples, 0.74%)</title><rect x="651.3" y="499.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.3" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,700 samples, 0.74%)</title><rect x="651.3" y="483.0" width="8.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="654.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3,031 samples, 1.32%)</title><rect x="660.1" y="499.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.1" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3,031 samples, 1.32%)</title><rect x="660.1" y="483.0" width="15.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="663.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2,552 samples, 1.11%)</title><rect x="675.6" y="515.0" width="13.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,552 samples, 1.11%)</title><rect x="675.6" y="499.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2,552 samples, 1.11%)</title><rect x="675.6" y="483.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,276 samples, 0.56%)</title><rect x="675.6" y="467.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,276 samples, 0.56%)</title><rect x="675.6" y="451.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1,276 samples, 0.56%)</title><rect x="675.6" y="435.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.6" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (1,276 samples, 0.56%)</title><rect x="675.6" y="419.0" width="6.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="678.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$421/1320568786.get (1,276 samples, 0.56%)</title><rect x="682.2" y="467.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.2" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (1,276 samples, 0.56%)</title><rect x="682.2" y="451.0" width="6.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="685.2" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (3,492 samples, 1.52%)</title><rect x="688.8" y="515.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.8" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (3,492 samples, 1.52%)</title><rect x="688.8" y="499.0" width="17.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="691.8" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (1,911 samples, 0.83%)</title><rect x="706.7" y="531.0" width="9.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="709.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.&lt;init&gt; (922 samples, 0.40%)</title><rect x="716.5" y="531.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.5" y="542.0"></text>
</g>
<g>
<title>byte[] (922 samples, 0.40%)</title><rect x="716.5" y="515.0" width="4.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="719.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,343 samples, 0.58%)</title><rect x="721.3" y="579.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,343 samples, 0.58%)</title><rect x="721.3" y="563.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,343 samples, 0.58%)</title><rect x="721.3" y="547.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,343 samples, 0.58%)</title><rect x="721.3" y="531.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,343 samples, 0.58%)</title><rect x="721.3" y="515.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,260 samples, 0.55%)</title><rect x="721.3" y="499.0" width="6.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="724.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (77 samples, 0.03%)</title><rect x="727.8" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (77 samples, 0.03%)</title><rect x="727.8" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (77 samples, 0.03%)</title><rect x="727.8" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (77 samples, 0.03%)</title><rect x="727.8" y="451.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="730.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (3,520 samples, 1.53%)</title><rect x="728.2" y="723.0" width="18.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.03%)</title><rect x="728.2" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.03%)</title><rect x="728.2" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$379/732232211.get$Lambda (57 samples, 0.02%)</title><rect x="728.2" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.2" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$379 (57 samples, 0.02%)</title><rect x="728.2" y="659.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="731.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1610702581.linkToTargetMethod (95 samples, 0.04%)</title><rect x="728.6" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (95 samples, 0.04%)</title><rect x="728.6" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$380/1353633883.get$Lambda (95 samples, 0.04%)</title><rect x="728.6" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$380 (95 samples, 0.04%)</title><rect x="728.6" y="659.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="731.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,030 samples, 0.45%)</title><rect x="729.1" y="707.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$381/44958327.accept (873 samples, 0.38%)</title><rect x="729.1" y="691.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (873 samples, 0.38%)</title><rect x="729.1" y="675.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (873 samples, 0.38%)</title><rect x="729.1" y="659.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (873 samples, 0.38%)</title><rect x="729.1" y="643.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (873 samples, 0.38%)</title><rect x="729.1" y="627.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (873 samples, 0.38%)</title><rect x="729.1" y="611.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (873 samples, 0.38%)</title><rect x="729.1" y="595.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (873 samples, 0.38%)</title><rect x="729.1" y="579.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (873 samples, 0.38%)</title><rect x="729.1" y="563.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (873 samples, 0.38%)</title><rect x="729.1" y="547.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/493344851.run (873 samples, 0.38%)</title><rect x="729.1" y="531.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (873 samples, 0.38%)</title><rect x="729.1" y="515.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (163 samples, 0.07%)</title><rect x="729.1" y="499.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (163 samples, 0.07%)</title><rect x="729.1" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (163 samples, 0.07%)</title><rect x="729.1" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (85 samples, 0.04%)</title><rect x="729.1" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (85 samples, 0.04%)</title><rect x="729.1" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (85 samples, 0.04%)</title><rect x="729.1" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (85 samples, 0.04%)</title><rect x="729.1" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (85 samples, 0.04%)</title><rect x="729.1" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="732.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (78 samples, 0.03%)</title><rect x="729.5" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (78 samples, 0.03%)</title><rect x="729.5" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (78 samples, 0.03%)</title><rect x="729.5" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (78 samples, 0.03%)</title><rect x="729.5" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (78 samples, 0.03%)</title><rect x="729.5" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (76 samples, 0.03%)</title><rect x="729.5" y="371.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="732.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (56 samples, 0.02%)</title><rect x="729.9" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.02%)</title><rect x="729.9" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.02%)</title><rect x="729.9" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394/1177692966.get$Lambda (56 samples, 0.02%)</title><rect x="729.9" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394 (56 samples, 0.02%)</title><rect x="729.9" y="435.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="732.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (653 samples, 0.28%)</title><rect x="730.2" y="499.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (292 samples, 0.13%)</title><rect x="730.2" y="483.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (189 samples, 0.08%)</title><rect x="730.2" y="467.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.2" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (189 samples, 0.08%)</title><rect x="730.2" y="451.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="733.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (103 samples, 0.04%)</title><rect x="731.2" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.2" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (103 samples, 0.04%)</title><rect x="731.2" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.2" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (103 samples, 0.04%)</title><rect x="731.2" y="435.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="734.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (361 samples, 0.16%)</title><rect x="731.7" y="483.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$261/1758423440.get (361 samples, 0.16%)</title><rect x="731.7" y="467.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (361 samples, 0.16%)</title><rect x="731.7" y="451.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (361 samples, 0.16%)</title><rect x="731.7" y="435.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (360 samples, 0.16%)</title><rect x="731.7" y="419.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.7" y="430.0"></text>
</g>
<g>
<title>byte[] (331 samples, 0.14%)</title><rect x="731.8" y="403.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="734.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1109943227.accept (157 samples, 0.07%)</title><rect x="733.5" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (157 samples, 0.07%)</title><rect x="733.5" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$380/1353633883.run (157 samples, 0.07%)</title><rect x="733.5" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (157 samples, 0.07%)</title><rect x="733.5" y="643.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (157 samples, 0.07%)</title><rect x="733.5" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (157 samples, 0.07%)</title><rect x="733.5" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (157 samples, 0.07%)</title><rect x="733.5" y="595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="736.5" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (157 samples, 0.07%)</title><rect x="733.5" y="579.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="736.5" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (240 samples, 0.10%)</title><rect x="734.3" y="707.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.3" y="718.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (240 samples, 0.10%)</title><rect x="734.3" y="691.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="737.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (182 samples, 0.08%)</title><rect x="735.6" y="707.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (88 samples, 0.04%)</title><rect x="735.6" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (88 samples, 0.04%)</title><rect x="735.6" y="675.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (88 samples, 0.04%)</title><rect x="735.6" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (88 samples, 0.04%)</title><rect x="735.6" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (88 samples, 0.04%)</title><rect x="735.6" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (88 samples, 0.04%)</title><rect x="735.6" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.6" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (88 samples, 0.04%)</title><rect x="735.6" y="595.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="738.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (94 samples, 0.04%)</title><rect x="736.0" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.0" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (94 samples, 0.04%)</title><rect x="736.0" y="675.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="739.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (633 samples, 0.28%)</title><rect x="736.5" y="707.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1068922401.run (319 samples, 0.14%)</title><rect x="736.5" y="691.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (319 samples, 0.14%)</title><rect x="736.5" y="675.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (319 samples, 0.14%)</title><rect x="736.5" y="659.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (319 samples, 0.14%)</title><rect x="736.5" y="643.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (319 samples, 0.14%)</title><rect x="736.5" y="627.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (319 samples, 0.14%)</title><rect x="736.5" y="611.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/493344851.run (319 samples, 0.14%)</title><rect x="736.5" y="595.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (319 samples, 0.14%)</title><rect x="736.5" y="579.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (318 samples, 0.14%)</title><rect x="736.5" y="563.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (318 samples, 0.14%)</title><rect x="736.5" y="547.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (233 samples, 0.10%)</title><rect x="736.5" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (233 samples, 0.10%)</title><rect x="736.5" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (233 samples, 0.10%)</title><rect x="736.5" y="499.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (172 samples, 0.07%)</title><rect x="736.5" y="483.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1311146128.invoke (172 samples, 0.07%)</title><rect x="736.5" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (172 samples, 0.07%)</title><rect x="736.5" y="451.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (172 samples, 0.07%)</title><rect x="736.5" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (172 samples, 0.07%)</title><rect x="736.5" y="419.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.5" y="430.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.07%)</title><rect x="736.5" y="403.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="739.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (61 samples, 0.03%)</title><rect x="737.4" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.03%)</title><rect x="737.4" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.03%)</title><rect x="737.4" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="740.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394/1177692966.get$Lambda (61 samples, 0.03%)</title><rect x="737.4" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394 (61 samples, 0.03%)</title><rect x="737.4" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="740.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (85 samples, 0.04%)</title><rect x="737.7" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (85 samples, 0.04%)</title><rect x="737.7" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (85 samples, 0.04%)</title><rect x="737.7" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (85 samples, 0.04%)</title><rect x="737.7" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (85 samples, 0.04%)</title><rect x="737.7" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (85 samples, 0.04%)</title><rect x="737.7" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (84 samples, 0.04%)</title><rect x="737.7" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="740.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$293/850614757.run (314 samples, 0.14%)</title><rect x="738.2" y="691.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (314 samples, 0.14%)</title><rect x="738.2" y="675.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (124 samples, 0.05%)</title><rect x="738.2" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (124 samples, 0.05%)</title><rect x="738.2" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$389/2097994766.get$Lambda (124 samples, 0.05%)</title><rect x="738.2" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$389 (124 samples, 0.05%)</title><rect x="738.2" y="611.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="741.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (190 samples, 0.08%)</title><rect x="738.8" y="659.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (190 samples, 0.08%)</title><rect x="738.8" y="643.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (190 samples, 0.08%)</title><rect x="738.8" y="627.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (186 samples, 0.08%)</title><rect x="738.8" y="611.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="741.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (278 samples, 0.12%)</title><rect x="739.8" y="707.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.8" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.now (66 samples, 0.03%)</title><rect x="739.8" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.8" y="702.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (66 samples, 0.03%)</title><rect x="739.8" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.8" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (66 samples, 0.03%)</title><rect x="739.8" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.8" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.create (66 samples, 0.03%)</title><rect x="739.8" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.8" y="654.0"></text>
</g>
<g>
<title>java.time.Instant (66 samples, 0.03%)</title><rect x="739.8" y="627.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="742.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (212 samples, 0.09%)</title><rect x="740.1" y="691.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (174 samples, 0.08%)</title><rect x="740.3" y="675.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.3" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (74 samples, 0.03%)</title><rect x="740.3" y="659.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="743.3" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (100 samples, 0.04%)</title><rect x="740.7" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.7" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (100 samples, 0.04%)</title><rect x="740.7" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.7" y="654.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (100 samples, 0.04%)</title><rect x="740.7" y="627.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="743.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (681 samples, 0.30%)</title><rect x="741.2" y="707.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.03%)</title><rect x="741.2" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="744.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.03%)</title><rect x="741.2" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="744.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$378/1254294051.get$Lambda (64 samples, 0.03%)</title><rect x="741.2" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$378 (64 samples, 0.03%)</title><rect x="741.2" y="643.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="744.2" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (384 samples, 0.17%)</title><rect x="741.5" y="691.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (148 samples, 0.06%)</title><rect x="741.5" y="675.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.5" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (148 samples, 0.06%)</title><rect x="741.5" y="659.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="744.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (236 samples, 0.10%)</title><rect x="742.3" y="675.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.3" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (236 samples, 0.10%)</title><rect x="742.3" y="659.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="745.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (233 samples, 0.10%)</title><rect x="743.5" y="691.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.5" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (233 samples, 0.10%)</title><rect x="743.5" y="675.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="746.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (163 samples, 0.07%)</title><rect x="744.7" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (163 samples, 0.07%)</title><rect x="744.7" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (163 samples, 0.07%)</title><rect x="744.7" y="675.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (163 samples, 0.07%)</title><rect x="744.7" y="659.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (68 samples, 0.03%)</title><rect x="744.7" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.7" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (68 samples, 0.03%)</title><rect x="744.7" y="627.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="747.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (95 samples, 0.04%)</title><rect x="745.0" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (95 samples, 0.04%)</title><rect x="745.0" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (95 samples, 0.04%)</title><rect x="745.0" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (95 samples, 0.04%)</title><rect x="745.0" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (95 samples, 0.04%)</title><rect x="745.0" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.0" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (95 samples, 0.04%)</title><rect x="745.0" y="563.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="748.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (96 samples, 0.04%)</title><rect x="745.5" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (96 samples, 0.04%)</title><rect x="745.5" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (96 samples, 0.04%)</title><rect x="745.5" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (96 samples, 0.04%)</title><rect x="745.5" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (77 samples, 0.03%)</title><rect x="745.5" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (77 samples, 0.03%)</title><rect x="745.5" y="627.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="748.5" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (86,348 samples, 37.60%)</title><rect x="746.3" y="723.0" width="443.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="749.3" y="734.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,950 samples, 1.28%)</title><rect x="746.3" y="707.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.3" y="718.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,950 samples, 1.28%)</title><rect x="746.3" y="691.0" width="15.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="749.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (83,398 samples, 36.32%)</title><rect x="761.4" y="707.0" width="428.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.4" y="718.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (83,398 samples, 36.32%)</title><rect x="761.4" y="691.0" width="428.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.4" y="702.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (83,368 samples, 36.31%)</title><rect x="761.4" y="675.0" width="428.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.4" y="686.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12,155 samples, 5.29%)</title><rect x="761.4" y="659.0" width="62.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.4" y="670.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12,155 samples, 5.29%)</title><rect x="761.4" y="643.0" width="62.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.4" y="654.0">one/ni..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (7,262 samples, 3.16%)</title><rect x="761.4" y="627.0" width="37.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.4" y="638.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3,941 samples, 1.72%)</title><rect x="761.4" y="611.0" width="20.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,941 samples, 1.72%)</title><rect x="761.4" y="595.0" width="20.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,941 samples, 1.72%)</title><rect x="761.4" y="579.0" width="20.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,941 samples, 1.72%)</title><rect x="761.4" y="563.0" width="20.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (1,980 samples, 0.86%)</title><rect x="761.4" y="547.0" width="10.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="764.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,961 samples, 0.85%)</title><rect x="771.6" y="547.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.6" y="558.0"></text>
</g>
<g>
<title>byte[] (1,961 samples, 0.85%)</title><rect x="771.6" y="531.0" width="10.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="774.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (3,321 samples, 1.45%)</title><rect x="781.7" y="611.0" width="17.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/495083153.linkToTargetMethod (3,256 samples, 1.42%)</title><rect x="781.7" y="595.0" width="16.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,256 samples, 1.42%)</title><rect x="781.7" y="579.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.get$Lambda (3,256 samples, 1.42%)</title><rect x="781.7" y="563.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$112 (3,256 samples, 1.42%)</title><rect x="781.7" y="547.0" width="16.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="784.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (65 samples, 0.03%)</title><rect x="798.4" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (65 samples, 0.03%)</title><rect x="798.4" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (65 samples, 0.03%)</title><rect x="798.4" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (65 samples, 0.03%)</title><rect x="798.4" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (65 samples, 0.03%)</title><rect x="798.4" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (65 samples, 0.03%)</title><rect x="798.4" y="515.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="801.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,893 samples, 2.13%)</title><rect x="798.7" y="627.0" width="25.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="801.7" y="638.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (4,893 samples, 2.13%)</title><rect x="798.7" y="611.0" width="25.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.7" y="622.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,893 samples, 2.13%)</title><rect x="798.7" y="595.0" width="25.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.7" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String (2,222 samples, 0.97%)</title><rect x="798.7" y="579.0" width="11.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="801.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,671 samples, 1.16%)</title><rect x="810.2" y="579.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.2" y="590.0"></text>
</g>
<g>
<title>byte[] (2,671 samples, 1.16%)</title><rect x="810.2" y="563.0" width="13.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="813.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25,890 samples, 11.28%)</title><rect x="823.9" y="659.0" width="133.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.9" y="670.0">one/nio/http/Http..</text>
</g>
<g>
<title>one.nio.http.Request (3,862 samples, 1.68%)</title><rect x="823.9" y="643.0" width="19.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="826.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7,830 samples, 3.41%)</title><rect x="843.7" y="643.0" width="40.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.7" y="654.0">one..</text>
</g>
<g>
<title>java.lang.String[] (6,779 samples, 2.95%)</title><rect x="843.7" y="627.0" width="34.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="846.7" y="638.0">ja..</text>
</g>
<g>
<title>java.lang.String[] (1,051 samples, 0.46%)</title><rect x="878.6" y="627.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="881.6" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14,198 samples, 6.18%)</title><rect x="884.0" y="643.0" width="72.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.0" y="654.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (14,198 samples, 6.18%)</title><rect x="884.0" y="627.0" width="72.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.0" y="638.0">one/nio/..</text>
</g>
<g>
<title>char[] (8,256 samples, 3.60%)</title><rect x="884.0" y="611.0" width="42.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="887.0" y="622.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,914 samples, 0.83%)</title><rect x="926.6" y="611.0" width="9.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="929.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,990 samples, 1.74%)</title><rect x="936.4" y="611.0" width="20.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="939.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,990 samples, 1.74%)</title><rect x="936.4" y="595.0" width="20.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="939.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,990 samples, 1.74%)</title><rect x="936.4" y="579.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="939.4" y="590.0"></text>
</g>
<g>
<title>byte[] (3,990 samples, 1.74%)</title><rect x="936.4" y="563.0" width="20.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="939.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2,525 samples, 1.10%)</title><rect x="956.9" y="659.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="959.9" y="670.0"></text>
</g>
<g>
<title>byte[] (2,525 samples, 1.10%)</title><rect x="956.9" y="643.0" width="13.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="959.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4,405 samples, 1.92%)</title><rect x="969.9" y="659.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.9" y="670.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (4,405 samples, 1.92%)</title><rect x="969.9" y="643.0" width="22.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="972.9" y="654.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,405 samples, 1.92%)</title><rect x="969.9" y="627.0" width="22.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.9" y="638.0">j..</text>
</g>
<g>
<title>java.lang.String (2,008 samples, 0.87%)</title><rect x="969.9" y="611.0" width="10.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="972.9" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,397 samples, 1.04%)</title><rect x="980.2" y="611.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.2" y="622.0"></text>
</g>
<g>
<title>byte[] (2,397 samples, 1.04%)</title><rect x="980.2" y="595.0" width="12.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="983.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38,393 samples, 16.72%)</title><rect x="992.5" y="659.0" width="197.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="995.5" y="670.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (38,393 samples, 16.72%)</title><rect x="992.5" y="643.0" width="197.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="995.5" y="654.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (18,342 samples, 7.99%)</title><rect x="992.5" y="627.0" width="94.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="995.5" y="638.0">char[]</text>
</g>
<g>
<title>char[] (336 samples, 0.15%)</title><rect x="1086.8" y="627.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1089.8" y="638.0"></text>
</g>
<g>
<title>java.lang.String (7,809 samples, 3.40%)</title><rect x="1088.5" y="627.0" width="40.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1091.5" y="638.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11,906 samples, 5.19%)</title><rect x="1128.7" y="627.0" width="61.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.7" y="638.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11,906 samples, 5.19%)</title><rect x="1128.7" y="611.0" width="61.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.7" y="622.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11,906 samples, 5.19%)</title><rect x="1128.7" y="595.0" width="61.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.7" y="606.0">java/l..</text>
</g>
<g>
<title>byte[] (11,906 samples, 5.19%)</title><rect x="1128.7" y="579.0" width="61.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1131.7" y="590.0">byte[]</text>
</g>
</g>
</svg>
