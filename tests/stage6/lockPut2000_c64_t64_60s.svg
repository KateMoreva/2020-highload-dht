<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (497,199 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (415,084 samples, 83.48%)</title><rect x="10.0" y="563.0" width="985.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (415,084 samples, 83.48%)</title><rect x="10.0" y="547.0" width="985.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (415,084 samples, 83.48%)</title><rect x="10.0" y="531.0" width="985.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (152,187 samples, 30.61%)</title><rect x="10.0" y="515.0" width="361.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFuture$AsyncSuppl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (152,187 samples, 30.61%)</title><rect x="10.0" y="499.0" width="361.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (152,187 samples, 30.61%)</title><rect x="10.0" y="483.0" width="361.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/CompletableFuture$UniCompose..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/172879885.apply (152,187 samples, 30.61%)</title><rect x="10.0" y="467.0" width="361.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda$122/1..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (152,187 samples, 30.61%)</title><rect x="10.0" y="451.0" width="361.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/MultiExchange.lambda$respon..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (152,187 samples, 30.61%)</title><rect x="10.0" y="435.0" width="361.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/MultiExchange.responseAsync..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (130,864 samples, 26.32%)</title><rect x="10.0" y="419.0" width="310.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (130,864 samples, 26.32%)</title><rect x="10.0" y="403.0" width="310.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net/http/Exchange.responseAsy..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (130,864 samples, 26.32%)</title><rect x="10.0" y="387.0" width="310.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net/http/Exchange.responseAsy..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (123,625 samples, 24.86%)</title><rect x="10.0" y="371.0" width="293.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/CompletableFuture...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (123,625 samples, 24.86%)</title><rect x="10.0" y="355.0" width="293.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/CompletableFuture...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (123,625 samples, 24.86%)</title><rect x="10.0" y="339.0" width="293.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurrent/CompletableFuture...</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$178/1146133693.apply (123,625 samples, 24.86%)</title><rect x="10.0" y="323.0" width="293.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/net/http/Exchange$$Lambda$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (123,625 samples, 24.86%)</title><rect x="10.0" y="307.0" width="293.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="318.0">jdk/internal/net/http/Exchange.lambda$r..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (123,625 samples, 24.86%)</title><rect x="10.0" y="291.0" width="293.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="302.0">jdk/internal/net/http/Exchange.checkFor..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/1631076502.apply (123,625 samples, 24.86%)</title><rect x="10.0" y="275.0" width="293.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/net/http/Exchange$$Lambda$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (123,625 samples, 24.86%)</title><rect x="10.0" y="259.0" width="293.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/net/http/Exchange.lambda$r..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (123,625 samples, 24.86%)</title><rect x="10.0" y="243.0" width="293.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/net/http/Http1Exchange.sen..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (123,625 samples, 24.86%)</title><rect x="10.0" y="227.0" width="293.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/concurrent/CompletableFuture...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (123,625 samples, 24.86%)</title><rect x="10.0" y="211.0" width="293.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/concurrent/CompletableFuture...</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$196/1772088528.apply (123,625 samples, 24.86%)</title><rect x="10.0" y="195.0" width="293.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/internal/net/http/Http1Exchange$$La..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (123,625 samples, 24.86%)</title><rect x="10.0" y="179.0" width="293.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="190.0">jdk/internal/net/http/Http1Exchange.lam..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (123,625 samples, 24.86%)</title><rect x="10.0" y="163.0" width="293.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="174.0">jdk/internal/net/http/Http1Exchange.con..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (123,625 samples, 24.86%)</title><rect x="10.0" y="147.0" width="293.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="158.0">jdk/internal/net/http/SocketTube.connec..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (13,774 samples, 2.77%)</title><rect x="10.0" y="131.0" width="32.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="142.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (13,774 samples, 2.77%)</title><rect x="10.0" y="115.0" width="32.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="126.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (13,774 samples, 2.77%)</title><rect x="10.0" y="99.0" width="32.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="110.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (13,774 samples, 2.77%)</title><rect x="10.0" y="83.0" width="32.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="94.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13,774 samples, 2.77%)</title><rect x="10.0" y="67.0" width="32.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="78.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12,044 samples, 2.42%)</title><rect x="10.0" y="51.0" width="28.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="13.0" y="62.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,730 samples, 0.35%)</title><rect x="38.6" y="51.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.6" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (1,730 samples, 0.35%)</title><rect x="38.6" y="35.0" width="4.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="41.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (109,851 samples, 22.09%)</title><rect x="42.7" y="131.0" width="260.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.7" y="142.0">jdk/internal/net/http/SocketTube.su..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (109,851 samples, 22.09%)</title><rect x="42.7" y="115.0" width="260.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.7" y="126.0">jdk/internal/net/http/SocketTube$In..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (109,848 samples, 22.09%)</title><rect x="42.7" y="99.0" width="260.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.7" y="110.0">jdk/internal/net/http/SocketTube$In..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (109,848 samples, 22.09%)</title><rect x="42.7" y="83.0" width="260.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.7" y="94.0">jdk/internal/net/http/HttpClientImp..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (109,848 samples, 22.09%)</title><rect x="42.7" y="67.0" width="260.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.7" y="78.0">jdk/internal/net/http/HttpClientImp..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (105,984 samples, 21.32%)</title><rect x="42.7" y="51.0" width="251.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="45.7" y="62.0">jdk.internal.net.http.HttpClientI..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3,864 samples, 0.78%)</title><rect x="294.2" y="51.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.2" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (3,864 samples, 0.78%)</title><rect x="294.2" y="35.0" width="9.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="297.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (7,239 samples, 1.46%)</title><rect x="303.4" y="371.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (7,239 samples, 1.46%)</title><rect x="303.4" y="355.0" width="17.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (7,239 samples, 1.46%)</title><rect x="303.4" y="339.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (7,239 samples, 1.46%)</title><rect x="303.4" y="323.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (7,238 samples, 1.46%)</title><rect x="303.4" y="307.0" width="17.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (7,238 samples, 1.46%)</title><rect x="303.4" y="291.0" width="17.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (7,238 samples, 1.46%)</title><rect x="303.4" y="275.0" width="17.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="306.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (20,201 samples, 4.06%)</title><rect x="320.6" y="419.0" width="47.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.6" y="430.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (13,799 samples, 2.78%)</title><rect x="320.6" y="403.0" width="32.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="323.6" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (6,402 samples, 1.29%)</title><rect x="353.3" y="403.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="356.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6,402 samples, 1.29%)</title><rect x="353.3" y="387.0" width="15.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (6,402 samples, 1.29%)</title><rect x="353.3" y="371.0" width="15.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="356.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (1,122 samples, 0.23%)</title><rect x="368.5" y="419.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (1,122 samples, 0.23%)</title><rect x="368.5" y="403.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1,086 samples, 0.22%)</title><rect x="368.6" y="387.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Class (1,086 samples, 0.22%)</title><rect x="368.6" y="371.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="371.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (17,464 samples, 3.51%)</title><rect x="371.2" y="515.0" width="41.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.2" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,174 samples, 0.44%)</title><rect x="371.2" y="499.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (616 samples, 0.12%)</title><rect x="371.2" y="483.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (616 samples, 0.12%)</title><rect x="371.2" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (616 samples, 0.12%)</title><rect x="371.2" y="451.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="374.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (616 samples, 0.12%)</title><rect x="371.2" y="435.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (616 samples, 0.12%)</title><rect x="371.2" y="419.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (616 samples, 0.12%)</title><rect x="371.2" y="403.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="374.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,558 samples, 0.31%)</title><rect x="372.6" y="483.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,558 samples, 0.31%)</title><rect x="372.6" y="467.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,558 samples, 0.31%)</title><rect x="372.6" y="451.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,558 samples, 0.31%)</title><rect x="372.6" y="435.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,558 samples, 0.31%)</title><rect x="372.6" y="419.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,558 samples, 0.31%)</title><rect x="372.6" y="403.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,558 samples, 0.31%)</title><rect x="372.6" y="387.0" width="3.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="375.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (15,290 samples, 3.08%)</title><rect x="376.3" y="499.0" width="36.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="379.3" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,640 samples, 0.53%)</title><rect x="376.3" y="483.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,640 samples, 0.53%)</title><rect x="376.3" y="467.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,640 samples, 0.53%)</title><rect x="376.3" y="451.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="379.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,640 samples, 0.53%)</title><rect x="376.3" y="435.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,640 samples, 0.53%)</title><rect x="376.3" y="419.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,640 samples, 0.53%)</title><rect x="376.3" y="403.0" width="6.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="379.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (12,650 samples, 2.54%)</title><rect x="382.6" y="483.0" width="30.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.6" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (12,650 samples, 2.54%)</title><rect x="382.6" y="467.0" width="30.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.6" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (12,650 samples, 2.54%)</title><rect x="382.6" y="451.0" width="30.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.6" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12,650 samples, 2.54%)</title><rect x="382.6" y="435.0" width="30.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.6" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12,650 samples, 2.54%)</title><rect x="382.6" y="419.0" width="30.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.6" y="430.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12,650 samples, 2.54%)</title><rect x="382.6" y="403.0" width="30.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.6" y="414.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (12,650 samples, 2.54%)</title><rect x="382.6" y="387.0" width="30.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="385.6" y="398.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (243,630 samples, 49.00%)</title><rect x="412.8" y="515.0" width="578.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.8" y="526.0">jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (243,630 samples, 49.00%)</title><rect x="412.8" y="499.0" width="578.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.8" y="510.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (113,493 samples, 22.83%)</title><rect x="412.8" y="483.0" width="269.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.8" y="494.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (113,493 samples, 22.83%)</title><rect x="412.8" y="467.0" width="269.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.8" y="478.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (113,493 samples, 22.83%)</title><rect x="412.8" y="451.0" width="269.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.8" y="462.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (104,594 samples, 21.04%)</title><rect x="412.8" y="435.0" width="248.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.8" y="446.0">jdk/internal/net/http/Http1AsyncR..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (104,594 samples, 21.04%)</title><rect x="412.8" y="419.0" width="248.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.8" y="430.0">jdk/internal/net/http/Http1AsyncR..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (104,594 samples, 21.04%)</title><rect x="412.8" y="403.0" width="248.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.8" y="414.0">jdk/internal/net/http/SocketTube$..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (104,594 samples, 21.04%)</title><rect x="412.8" y="387.0" width="248.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.8" y="398.0">jdk/internal/net/http/SocketTube$..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (104,594 samples, 21.04%)</title><rect x="412.8" y="371.0" width="248.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.8" y="382.0">jdk/internal/net/http/SocketTube$..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (104,594 samples, 21.04%)</title><rect x="412.8" y="355.0" width="248.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.8" y="366.0">jdk/internal/net/http/SocketTube...</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (104,594 samples, 21.04%)</title><rect x="412.8" y="339.0" width="248.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.8" y="350.0">jdk/internal/net/http/HttpClientI..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (104,594 samples, 21.04%)</title><rect x="412.8" y="323.0" width="248.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.8" y="334.0">jdk/internal/net/http/HttpClientI..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (104,594 samples, 21.04%)</title><rect x="412.8" y="307.0" width="248.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.8" y="318.0">jdk/internal/net/http/HttpClientI..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (100,946 samples, 20.30%)</title><rect x="412.8" y="291.0" width="239.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="415.8" y="302.0">jdk.internal.net.http.HttpClient..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3,648 samples, 0.73%)</title><rect x="652.4" y="291.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.4" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (3,648 samples, 0.73%)</title><rect x="652.4" y="275.0" width="8.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="655.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (8,899 samples, 1.79%)</title><rect x="661.1" y="435.0" width="21.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.1" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (8,899 samples, 1.79%)</title><rect x="661.1" y="419.0" width="21.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.1" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,899 samples, 1.79%)</title><rect x="661.1" y="403.0" width="21.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.1" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,899 samples, 1.79%)</title><rect x="661.1" y="387.0" width="21.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8,899 samples, 1.79%)</title><rect x="661.1" y="371.0" width="21.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.1" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,899 samples, 1.79%)</title><rect x="661.1" y="355.0" width="21.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.1" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8,899 samples, 1.79%)</title><rect x="661.1" y="339.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.1" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8,899 samples, 1.79%)</title><rect x="661.1" y="323.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.1" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8,899 samples, 1.79%)</title><rect x="661.1" y="307.0" width="21.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.1" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (8,899 samples, 1.79%)</title><rect x="661.1" y="291.0" width="21.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.1" y="302.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8,899 samples, 1.79%)</title><rect x="661.1" y="275.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.1" y="286.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8,899 samples, 1.79%)</title><rect x="661.1" y="259.0" width="21.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.1" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,899 samples, 1.79%)</title><rect x="661.1" y="243.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.1" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,144 samples, 0.23%)</title><rect x="661.1" y="227.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$203/1559042816.apply (1,144 samples, 0.23%)</title><rect x="661.1" y="211.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1,144 samples, 0.23%)</title><rect x="661.1" y="195.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1,144 samples, 0.23%)</title><rect x="661.1" y="179.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1,144 samples, 0.23%)</title><rect x="661.1" y="163.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1,144 samples, 0.23%)</title><rect x="661.1" y="147.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.1" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (1,144 samples, 0.23%)</title><rect x="661.1" y="131.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="664.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (7,755 samples, 1.56%)</title><rect x="663.8" y="227.0" width="18.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7,755 samples, 1.56%)</title><rect x="663.8" y="211.0" width="18.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$205/1826986094.apply (7,755 samples, 1.56%)</title><rect x="663.8" y="195.0" width="18.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7,755 samples, 1.56%)</title><rect x="663.8" y="179.0" width="18.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (7,755 samples, 1.56%)</title><rect x="663.8" y="163.0" width="18.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (7,755 samples, 1.56%)</title><rect x="663.8" y="147.0" width="18.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.8" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (7,755 samples, 1.56%)</title><rect x="663.8" y="131.0" width="18.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="666.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (130,137 samples, 26.17%)</title><rect x="682.2" y="483.0" width="308.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.2" y="494.0">jdk/internal/net/http/common/SequentialSch..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (130,137 samples, 26.17%)</title><rect x="682.2" y="467.0" width="308.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.2" y="478.0">jdk/internal/net/http/common/SequentialSch..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (130,137 samples, 26.17%)</title><rect x="682.2" y="451.0" width="308.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.2" y="462.0">jdk/internal/net/http/common/SequentialSch..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (130,137 samples, 26.17%)</title><rect x="682.2" y="435.0" width="308.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.2" y="446.0">jdk/internal/net/http/Http1AsyncReceiver$$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (130,137 samples, 26.17%)</title><rect x="682.2" y="419.0" width="308.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.2" y="430.0">jdk/internal/net/http/Http1AsyncReceiver.f..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (129,459 samples, 26.04%)</title><rect x="682.2" y="403.0" width="307.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.2" y="414.0">jdk/internal/net/http/Http1AsyncReceiver...</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (129,459 samples, 26.04%)</title><rect x="682.2" y="387.0" width="307.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.2" y="398.0">jdk/internal/net/http/Http1Response$BodyR..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (129,459 samples, 26.04%)</title><rect x="682.2" y="371.0" width="307.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.2" y="382.0">jdk/internal/net/http/ResponseContent$Fix..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/684996081.run (129,459 samples, 26.04%)</title><rect x="682.2" y="355.0" width="307.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.2" y="366.0">jdk/internal/net/http/Http1Response$$Lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (129,459 samples, 26.04%)</title><rect x="682.2" y="339.0" width="307.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.2" y="350.0">jdk/internal/net/http/Http1Response.onFin..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (129,459 samples, 26.04%)</title><rect x="682.2" y="323.0" width="307.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.2" y="334.0">jdk/internal/net/http/HttpConnection.clos..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (129,459 samples, 26.04%)</title><rect x="682.2" y="307.0" width="307.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.2" y="318.0">jdk/internal/net/http/ConnectionPool.retu..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (129,459 samples, 26.04%)</title><rect x="682.2" y="291.0" width="307.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.2" y="302.0">jdk/internal/net/http/ConnectionPool.retu..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (8,811 samples, 1.77%)</title><rect x="682.2" y="275.0" width="20.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="685.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (120,648 samples, 24.27%)</title><rect x="703.1" y="275.0" width="286.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.1" y="286.0">jdk/internal/net/http/ConnectionPool.r..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (120,648 samples, 24.27%)</title><rect x="703.1" y="259.0" width="286.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.1" y="270.0">jdk/internal/net/http/SocketTube.conne..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (15,698 samples, 3.16%)</title><rect x="703.1" y="243.0" width="37.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.1" y="254.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (15,698 samples, 3.16%)</title><rect x="703.1" y="227.0" width="37.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.1" y="238.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (15,698 samples, 3.16%)</title><rect x="703.1" y="211.0" width="37.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.1" y="222.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (15,698 samples, 3.16%)</title><rect x="703.1" y="195.0" width="37.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.1" y="206.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (15,698 samples, 3.16%)</title><rect x="703.1" y="179.0" width="37.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.1" y="190.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (14,124 samples, 2.84%)</title><rect x="703.1" y="163.0" width="33.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="706.1" y="174.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,574 samples, 0.32%)</title><rect x="736.6" y="163.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.6" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (1,574 samples, 0.32%)</title><rect x="736.6" y="147.0" width="3.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="739.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (104,950 samples, 21.11%)</title><rect x="740.4" y="243.0" width="249.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.4" y="254.0">jdk/internal/net/http/SocketTube...</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (104,950 samples, 21.11%)</title><rect x="740.4" y="227.0" width="249.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.4" y="238.0">jdk/internal/net/http/SocketTube$..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (104,950 samples, 21.11%)</title><rect x="740.4" y="211.0" width="249.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.4" y="222.0">jdk/internal/net/http/SocketTube$..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (104,950 samples, 21.11%)</title><rect x="740.4" y="195.0" width="249.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.4" y="206.0">jdk/internal/net/http/HttpClientI..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (104,950 samples, 21.11%)</title><rect x="740.4" y="179.0" width="249.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.4" y="190.0">jdk/internal/net/http/HttpClientI..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (102,608 samples, 20.64%)</title><rect x="740.4" y="163.0" width="243.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="743.4" y="174.0">jdk.internal.net.http.HttpClient..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,342 samples, 0.47%)</title><rect x="983.9" y="163.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="986.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (2,342 samples, 0.47%)</title><rect x="983.9" y="147.0" width="5.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="986.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (678 samples, 0.14%)</title><rect x="989.4" y="403.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="992.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (678 samples, 0.14%)</title><rect x="989.4" y="387.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (678 samples, 0.14%)</title><rect x="989.4" y="371.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (678 samples, 0.14%)</title><rect x="989.4" y="355.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="992.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (678 samples, 0.14%)</title><rect x="989.4" y="339.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (678 samples, 0.14%)</title><rect x="989.4" y="323.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="992.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (678 samples, 0.14%)</title><rect x="989.4" y="307.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (678 samples, 0.14%)</title><rect x="989.4" y="291.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (678 samples, 0.14%)</title><rect x="989.4" y="275.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (678 samples, 0.14%)</title><rect x="989.4" y="259.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (678 samples, 0.14%)</title><rect x="989.4" y="243.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (678 samples, 0.14%)</title><rect x="989.4" y="227.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="992.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (678 samples, 0.14%)</title><rect x="989.4" y="211.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (580 samples, 0.12%)</title><rect x="989.7" y="195.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (580 samples, 0.12%)</title><rect x="989.7" y="179.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$205/1826986094.apply (580 samples, 0.12%)</title><rect x="989.7" y="163.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (580 samples, 0.12%)</title><rect x="989.7" y="147.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (580 samples, 0.12%)</title><rect x="989.7" y="131.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (580 samples, 0.12%)</title><rect x="989.7" y="115.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.7" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (580 samples, 0.12%)</title><rect x="989.7" y="99.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="992.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/285921815.run (1,719 samples, 0.35%)</title><rect x="991.0" y="515.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="994.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (1,719 samples, 0.35%)</title><rect x="991.0" y="499.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (1,719 samples, 0.35%)</title><rect x="991.0" y="483.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMethod (1,719 samples, 0.35%)</title><rect x="991.0" y="467.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (865 samples, 0.17%)</title><rect x="991.0" y="451.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (865 samples, 0.17%)</title><rect x="991.0" y="435.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.0" y="446.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (865 samples, 0.17%)</title><rect x="991.0" y="419.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="994.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (849 samples, 0.17%)</title><rect x="993.1" y="451.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (849 samples, 0.17%)</title><rect x="993.1" y="435.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="996.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (849 samples, 0.17%)</title><rect x="993.1" y="419.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="996.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (849 samples, 0.17%)</title><rect x="993.1" y="403.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (849 samples, 0.17%)</title><rect x="993.1" y="387.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (849 samples, 0.17%)</title><rect x="993.1" y="371.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="996.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (849 samples, 0.17%)</title><rect x="993.1" y="355.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (849 samples, 0.17%)</title><rect x="993.1" y="339.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="996.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (849 samples, 0.17%)</title><rect x="993.1" y="323.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (466 samples, 0.09%)</title><rect x="993.1" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="996.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (466 samples, 0.09%)</title><rect x="993.1" y="291.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="996.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (466 samples, 0.09%)</title><rect x="993.1" y="275.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (466 samples, 0.09%)</title><rect x="993.1" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (466 samples, 0.09%)</title><rect x="993.1" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="996.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (466 samples, 0.09%)</title><rect x="993.1" y="227.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (466 samples, 0.09%)</title><rect x="993.1" y="211.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="996.1" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (466 samples, 0.09%)</title><rect x="993.1" y="195.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="996.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (383 samples, 0.08%)</title><rect x="994.2" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (383 samples, 0.08%)</title><rect x="994.2" y="291.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (383 samples, 0.08%)</title><rect x="994.2" y="275.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="997.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (383 samples, 0.08%)</title><rect x="994.2" y="259.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (383 samples, 0.08%)</title><rect x="994.2" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (383 samples, 0.08%)</title><rect x="994.2" y="227.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (383 samples, 0.08%)</title><rect x="994.2" y="211.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="997.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (80,533 samples, 16.20%)</title><rect x="995.1" y="563.0" width="191.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.1" y="574.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (424 samples, 0.09%)</title><rect x="995.1" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$210/1173738397.accept (424 samples, 0.09%)</title><rect x="995.1" y="531.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (424 samples, 0.09%)</title><rect x="995.1" y="515.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (424 samples, 0.09%)</title><rect x="995.1" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (424 samples, 0.09%)</title><rect x="995.1" y="483.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (424 samples, 0.09%)</title><rect x="995.1" y="467.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (424 samples, 0.09%)</title><rect x="995.1" y="451.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (424 samples, 0.09%)</title><rect x="995.1" y="435.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (424 samples, 0.09%)</title><rect x="995.1" y="419.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (424 samples, 0.09%)</title><rect x="995.1" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="998.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (424 samples, 0.09%)</title><rect x="995.1" y="387.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/2066195330.run (424 samples, 0.09%)</title><rect x="995.1" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (424 samples, 0.09%)</title><rect x="995.1" y="355.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="998.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (420 samples, 0.08%)</title><rect x="995.1" y="339.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (420 samples, 0.08%)</title><rect x="995.1" y="323.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (420 samples, 0.08%)</title><rect x="995.1" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (420 samples, 0.08%)</title><rect x="995.1" y="291.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="998.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (420 samples, 0.08%)</title><rect x="995.1" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (420 samples, 0.08%)</title><rect x="995.1" y="259.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (420 samples, 0.08%)</title><rect x="995.1" y="243.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="998.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (420 samples, 0.08%)</title><rect x="995.1" y="227.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="998.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (374 samples, 0.08%)</title><rect x="995.1" y="211.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (374 samples, 0.08%)</title><rect x="995.1" y="195.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (374 samples, 0.08%)</title><rect x="995.1" y="179.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (374 samples, 0.08%)</title><rect x="995.1" y="163.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (374 samples, 0.08%)</title><rect x="995.1" y="147.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (374 samples, 0.08%)</title><rect x="995.1" y="131.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (374 samples, 0.08%)</title><rect x="995.1" y="115.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.1" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (374 samples, 0.08%)</title><rect x="995.1" y="99.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="998.1" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (63,301 samples, 12.73%)</title><rect x="996.1" y="547.0" width="150.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="999.1" y="558.0">jdk.internal.net.ht..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (621 samples, 0.12%)</title><rect x="1146.4" y="547.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$162/747915710.run (261 samples, 0.05%)</title><rect x="1146.4" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (261 samples, 0.05%)</title><rect x="1146.4" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (261 samples, 0.05%)</title><rect x="1146.4" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (261 samples, 0.05%)</title><rect x="1146.4" y="483.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (261 samples, 0.05%)</title><rect x="1146.4" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (261 samples, 0.05%)</title><rect x="1146.4" y="451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/2066195330.run (261 samples, 0.05%)</title><rect x="1146.4" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1149.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (261 samples, 0.05%)</title><rect x="1146.4" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (261 samples, 0.05%)</title><rect x="1146.4" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (261 samples, 0.05%)</title><rect x="1146.4" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1149.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (261 samples, 0.05%)</title><rect x="1146.4" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (261 samples, 0.05%)</title><rect x="1146.4" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (261 samples, 0.05%)</title><rect x="1146.4" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (261 samples, 0.05%)</title><rect x="1146.4" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (261 samples, 0.05%)</title><rect x="1146.4" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (261 samples, 0.05%)</title><rect x="1146.4" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (192 samples, 0.04%)</title><rect x="1146.4" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (192 samples, 0.04%)</title><rect x="1146.4" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (192 samples, 0.04%)</title><rect x="1146.4" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (192 samples, 0.04%)</title><rect x="1146.4" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (192 samples, 0.04%)</title><rect x="1146.4" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (192 samples, 0.04%)</title><rect x="1146.4" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (192 samples, 0.04%)</title><rect x="1146.4" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1149.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (192 samples, 0.04%)</title><rect x="1146.4" y="163.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1149.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$166/52281761.run (360 samples, 0.07%)</title><rect x="1147.0" y="531.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (360 samples, 0.07%)</title><rect x="1147.0" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (360 samples, 0.07%)</title><rect x="1147.0" y="499.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (360 samples, 0.07%)</title><rect x="1147.0" y="483.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (360 samples, 0.07%)</title><rect x="1147.0" y="467.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (297 samples, 0.06%)</title><rect x="1147.0" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (297 samples, 0.06%)</title><rect x="1147.0" y="435.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1150.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (297 samples, 0.06%)</title><rect x="1147.0" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1150.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (297 samples, 0.06%)</title><rect x="1147.0" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1150.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (297 samples, 0.06%)</title><rect x="1147.0" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (297 samples, 0.06%)</title><rect x="1147.0" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (297 samples, 0.06%)</title><rect x="1147.0" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1150.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (297 samples, 0.06%)</title><rect x="1147.0" y="339.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1150.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3,234 samples, 0.65%)</title><rect x="1147.8" y="547.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1150.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3,234 samples, 0.65%)</title><rect x="1147.8" y="531.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (3,234 samples, 0.65%)</title><rect x="1147.8" y="515.0" width="7.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1150.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (10,822 samples, 2.18%)</title><rect x="1155.5" y="547.0" width="25.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1158.5" y="558.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (10,822 samples, 2.18%)</title><rect x="1155.5" y="531.0" width="25.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1158.5" y="542.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,763 samples, 0.35%)</title><rect x="1181.2" y="547.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,763 samples, 0.35%)</title><rect x="1181.2" y="531.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1184.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,763 samples, 0.35%)</title><rect x="1181.2" y="515.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,763 samples, 0.35%)</title><rect x="1181.2" y="499.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1184.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1,763 samples, 0.35%)</title><rect x="1181.2" y="483.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.2" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (1,763 samples, 0.35%)</title><rect x="1181.2" y="467.0" width="4.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1184.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (368 samples, 0.07%)</title><rect x="1185.4" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (368 samples, 0.07%)</title><rect x="1185.4" y="531.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (368 samples, 0.07%)</title><rect x="1185.4" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (368 samples, 0.07%)</title><rect x="1185.4" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (368 samples, 0.07%)</title><rect x="1185.4" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.4" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (368 samples, 0.07%)</title><rect x="1185.4" y="467.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1188.4" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,582 samples, 0.32%)</title><rect x="1186.2" y="563.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,582 samples, 0.32%)</title><rect x="1186.2" y="547.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,582 samples, 0.32%)</title><rect x="1186.2" y="531.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,582 samples, 0.32%)</title><rect x="1186.2" y="515.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,582 samples, 0.32%)</title><rect x="1186.2" y="499.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,582 samples, 0.32%)</title><rect x="1186.2" y="483.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1189.2" y="494.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,582 samples, 0.32%)</title><rect x="1186.2" y="467.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (1,582 samples, 0.32%)</title><rect x="1186.2" y="451.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,582 samples, 0.32%)</title><rect x="1186.2" y="435.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,582 samples, 0.32%)</title><rect x="1186.2" y="419.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,582 samples, 0.32%)</title><rect x="1186.2" y="403.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,582 samples, 0.32%)</title><rect x="1186.2" y="387.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,582 samples, 0.32%)</title><rect x="1186.2" y="371.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,582 samples, 0.32%)</title><rect x="1186.2" y="355.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,582 samples, 0.32%)</title><rect x="1186.2" y="339.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,582 samples, 0.32%)</title><rect x="1186.2" y="323.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,582 samples, 0.32%)</title><rect x="1186.2" y="307.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1189.2" y="318.0"></text>
</g>
</g>
</svg>
