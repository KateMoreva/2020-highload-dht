<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (1,045,202 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (727,650 samples, 69.62%)</title><rect x="10.0" y="691.0" width="821.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (727,650 samples, 69.62%)</title><rect x="10.0" y="675.0" width="821.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (727,650 samples, 69.62%)</title><rect x="10.0" y="659.0" width="821.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (105,411 samples, 10.09%)</title><rect x="10.0" y="643.0" width="119.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (105,411 samples, 10.09%)</title><rect x="10.0" y="627.0" width="119.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (105,411 samples, 10.09%)</title><rect x="10.0" y="611.0" width="119.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/concu..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (641 samples, 0.06%)</title><rect x="10.0" y="595.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$172/330952395.apply (104,765 samples, 10.02%)</title><rect x="10.7" y="595.0" width="118.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.7" y="606.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (104,765 samples, 10.02%)</title><rect x="10.7" y="579.0" width="118.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.7" y="590.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (104,765 samples, 10.02%)</title><rect x="10.7" y="563.0" width="118.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.7" y="574.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (839 samples, 0.08%)</title><rect x="10.7" y="547.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (839 samples, 0.08%)</title><rect x="10.7" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$374/2048942177.get$Lambda (496 samples, 0.05%)</title><rect x="10.7" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$374 (496 samples, 0.05%)</title><rect x="10.7" y="499.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/1325079472.get$Lambda (343 samples, 0.03%)</title><rect x="11.3" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$376 (343 samples, 0.03%)</title><rect x="11.3" y="499.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="14.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,450 samples, 0.14%)</title><rect x="11.7" y="547.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,450 samples, 0.14%)</title><rect x="11.7" y="531.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (796 samples, 0.08%)</title><rect x="11.7" y="515.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="14.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (654 samples, 0.06%)</title><rect x="12.6" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (654 samples, 0.06%)</title><rect x="12.6" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (654 samples, 0.06%)</title><rect x="12.6" y="483.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="15.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,974 samples, 0.28%)</title><rect x="13.3" y="547.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,974 samples, 0.28%)</title><rect x="13.3" y="531.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,676 samples, 0.16%)</title><rect x="13.3" y="515.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="16.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,298 samples, 0.12%)</title><rect x="15.2" y="515.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,298 samples, 0.12%)</title><rect x="15.2" y="499.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,298 samples, 0.12%)</title><rect x="15.2" y="483.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="18.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (96,493 samples, 9.23%)</title><rect x="16.7" y="547.0" width="108.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.7" y="558.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (96,493 samples, 9.23%)</title><rect x="16.7" y="531.0" width="108.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.7" y="542.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (96,493 samples, 9.23%)</title><rect x="16.7" y="515.0" width="108.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.7" y="526.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,396 samples, 0.13%)</title><rect x="16.7" y="499.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,396 samples, 0.13%)</title><rect x="16.7" y="483.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$216/483426623.get$Lambda (381 samples, 0.04%)</title><rect x="16.7" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$216 (381 samples, 0.04%)</title><rect x="16.7" y="451.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="19.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1734934037.get$Lambda (494 samples, 0.05%)</title><rect x="17.1" y="467.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$217 (494 samples, 0.05%)</title><rect x="17.1" y="451.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="20.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$325/555075840.get$Lambda (521 samples, 0.05%)</title><rect x="17.7" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$325 (521 samples, 0.05%)</title><rect x="17.7" y="451.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="20.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (65,651 samples, 6.28%)</title><rect x="18.2" y="499.0" width="74.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.2" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (65,651 samples, 6.28%)</title><rect x="18.2" y="483.0" width="74.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.2" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (64,945 samples, 6.21%)</title><rect x="18.2" y="467.0" width="73.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.2" y="478.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$325/555075840.apply (64,945 samples, 6.21%)</title><rect x="18.2" y="451.0" width="73.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.2" y="462.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (64,945 samples, 6.21%)</title><rect x="18.2" y="435.0" width="73.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.2" y="446.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (64,945 samples, 6.21%)</title><rect x="18.2" y="419.0" width="73.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.2" y="430.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1734934037.apply (64,945 samples, 6.21%)</title><rect x="18.2" y="403.0" width="73.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.2" y="414.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (64,945 samples, 6.21%)</title><rect x="18.2" y="387.0" width="73.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.2" y="398.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (489 samples, 0.05%)</title><rect x="18.2" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (489 samples, 0.05%)</title><rect x="18.2" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/733215646.get$Lambda (489 samples, 0.05%)</title><rect x="18.2" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$372 (489 samples, 0.05%)</title><rect x="18.2" y="323.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="21.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,495 samples, 0.14%)</title><rect x="18.8" y="371.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,495 samples, 0.14%)</title><rect x="18.8" y="355.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (802 samples, 0.08%)</title><rect x="18.8" y="339.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="21.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (652 samples, 0.06%)</title><rect x="19.7" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (652 samples, 0.06%)</title><rect x="19.7" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (652 samples, 0.06%)</title><rect x="19.7" y="307.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="22.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,423 samples, 0.14%)</title><rect x="20.5" y="371.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,423 samples, 0.14%)</title><rect x="20.5" y="355.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (804 samples, 0.08%)</title><rect x="20.5" y="339.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="23.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (611 samples, 0.06%)</title><rect x="21.4" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (611 samples, 0.06%)</title><rect x="21.4" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (611 samples, 0.06%)</title><rect x="21.4" y="307.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="24.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (61,538 samples, 5.89%)</title><rect x="22.1" y="371.0" width="69.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.1" y="382.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (914 samples, 0.09%)</title><rect x="22.1" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (914 samples, 0.09%)</title><rect x="22.1" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/1292913949.get$Lambda (331 samples, 0.03%)</title><rect x="22.1" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$367 (331 samples, 0.03%)</title><rect x="22.1" y="307.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="25.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$369/1781662399.get$Lambda (583 samples, 0.06%)</title><rect x="22.5" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$369 (583 samples, 0.06%)</title><rect x="22.5" y="307.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="25.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (49,722 samples, 4.76%)</title><rect x="23.1" y="355.0" width="56.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.1" y="366.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (49,722 samples, 4.76%)</title><rect x="23.1" y="339.0" width="56.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.1" y="350.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (653 samples, 0.06%)</title><rect x="23.1" y="323.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="26.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/1292913949.apply (47,463 samples, 4.54%)</title><rect x="23.9" y="323.0" width="53.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.9" y="334.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (47,463 samples, 4.54%)</title><rect x="23.9" y="307.0" width="53.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.9" y="318.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (357 samples, 0.03%)</title><rect x="23.9" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (357 samples, 0.03%)</title><rect x="23.9" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$386/1388458449.get$Lambda (357 samples, 0.03%)</title><rect x="23.9" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$386 (357 samples, 0.03%)</title><rect x="23.9" y="243.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="26.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,555 samples, 0.15%)</title><rect x="24.3" y="291.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,555 samples, 0.15%)</title><rect x="24.3" y="275.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (871 samples, 0.08%)</title><rect x="24.3" y="259.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="27.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (684 samples, 0.07%)</title><rect x="25.2" y="259.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (684 samples, 0.07%)</title><rect x="25.2" y="243.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (684 samples, 0.07%)</title><rect x="25.2" y="227.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="28.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (698 samples, 0.07%)</title><rect x="26.0" y="291.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="29.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,230 samples, 0.12%)</title><rect x="26.8" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (501 samples, 0.05%)</title><rect x="26.8" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="29.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (729 samples, 0.07%)</title><rect x="27.4" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (616 samples, 0.06%)</title><rect x="27.4" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (616 samples, 0.06%)</title><rect x="27.4" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (616 samples, 0.06%)</title><rect x="27.4" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (616 samples, 0.06%)</title><rect x="27.4" y="211.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (616 samples, 0.06%)</title><rect x="27.4" y="195.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="30.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1,772 samples, 0.17%)</title><rect x="28.2" y="291.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,772 samples, 0.17%)</title><rect x="28.2" y="275.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (556 samples, 0.05%)</title><rect x="28.2" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (556 samples, 0.05%)</title><rect x="28.2" y="243.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (556 samples, 0.05%)</title><rect x="28.2" y="227.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (556 samples, 0.05%)</title><rect x="28.2" y="211.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="31.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1,216 samples, 0.12%)</title><rect x="28.8" y="259.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1,216 samples, 0.12%)</title><rect x="28.8" y="243.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (881 samples, 0.08%)</title><rect x="28.8" y="227.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="31.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (335 samples, 0.03%)</title><rect x="29.8" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.8" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (335 samples, 0.03%)</title><rect x="29.8" y="211.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="32.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (41,851 samples, 4.00%)</title><rect x="30.2" y="291.0" width="47.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.2" y="302.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (492 samples, 0.05%)</title><rect x="30.2" y="275.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="33.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3,743 samples, 0.36%)</title><rect x="30.8" y="275.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3,743 samples, 0.36%)</title><rect x="30.8" y="259.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3,743 samples, 0.36%)</title><rect x="30.8" y="243.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.8" y="254.0"></text>
</g>
<g>
<title>byte[] (2,990 samples, 0.29%)</title><rect x="30.8" y="227.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="33.8" y="238.0"></text>
</g>
<g>
<title>byte[] (753 samples, 0.07%)</title><rect x="34.1" y="227.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="37.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,676 samples, 0.16%)</title><rect x="35.0" y="275.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.0" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,676 samples, 0.16%)</title><rect x="35.0" y="259.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.0" y="270.0"></text>
</g>
<g>
<title>byte[] (1,676 samples, 0.16%)</title><rect x="35.0" y="243.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="38.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3,772 samples, 0.36%)</title><rect x="36.9" y="275.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,772 samples, 0.36%)</title><rect x="36.9" y="259.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (565 samples, 0.05%)</title><rect x="36.9" y="243.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="39.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,207 samples, 0.31%)</title><rect x="37.5" y="243.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.5" y="254.0"></text>
</g>
<g>
<title>byte[] (2,604 samples, 0.25%)</title><rect x="37.5" y="227.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="40.5" y="238.0"></text>
</g>
<g>
<title>byte[] (603 samples, 0.06%)</title><rect x="40.4" y="227.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="43.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (950 samples, 0.09%)</title><rect x="41.1" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (950 samples, 0.09%)</title><rect x="41.1" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.1" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (950 samples, 0.09%)</title><rect x="41.1" y="243.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="44.1" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (475 samples, 0.05%)</title><rect x="42.2" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.2" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (475 samples, 0.05%)</title><rect x="42.2" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="45.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (23,959 samples, 2.29%)</title><rect x="42.7" y="275.0" width="27.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.7" y="286.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,099 samples, 0.11%)</title><rect x="42.7" y="259.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.7" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,099 samples, 0.11%)</title><rect x="42.7" y="243.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.7" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,099 samples, 0.11%)</title><rect x="42.7" y="227.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,099 samples, 0.11%)</title><rect x="42.7" y="211.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.7" y="222.0"></text>
</g>
<g>
<title>byte[] (1,099 samples, 0.11%)</title><rect x="42.7" y="195.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="45.7" y="206.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (493 samples, 0.05%)</title><rect x="44.0" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (493 samples, 0.05%)</title><rect x="44.0" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (493 samples, 0.05%)</title><rect x="44.0" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.0" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/225288726.get$Lambda (493 samples, 0.05%)</title><rect x="44.0" y="211.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.0" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$390 (493 samples, 0.05%)</title><rect x="44.0" y="195.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="47.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (9,681 samples, 0.93%)</title><rect x="44.5" y="259.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3,243 samples, 0.31%)</title><rect x="44.5" y="243.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.5" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3,243 samples, 0.31%)</title><rect x="44.5" y="227.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.5" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3,243 samples, 0.31%)</title><rect x="44.5" y="211.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,243 samples, 0.31%)</title><rect x="44.5" y="195.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.5" y="206.0"></text>
</g>
<g>
<title>byte[] (2,593 samples, 0.25%)</title><rect x="44.5" y="179.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="47.5" y="190.0"></text>
</g>
<g>
<title>byte[] (650 samples, 0.06%)</title><rect x="47.5" y="179.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.5" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1,404 samples, 0.13%)</title><rect x="48.2" y="243.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.2" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1,404 samples, 0.13%)</title><rect x="48.2" y="227.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1,404 samples, 0.13%)</title><rect x="48.2" y="211.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1,404 samples, 0.13%)</title><rect x="48.2" y="195.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="51.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1,334 samples, 0.13%)</title><rect x="49.8" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.8" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (684 samples, 0.07%)</title><rect x="49.8" y="227.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="52.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (650 samples, 0.06%)</title><rect x="50.6" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (650 samples, 0.06%)</title><rect x="50.6" y="211.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="53.6" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/225288726.test (3,700 samples, 0.35%)</title><rect x="51.3" y="243.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.3" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3,700 samples, 0.35%)</title><rect x="51.3" y="227.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1810899357.test (3,700 samples, 0.35%)</title><rect x="51.3" y="211.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3,700 samples, 0.35%)</title><rect x="51.3" y="195.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.3" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1970982267.test (3,700 samples, 0.35%)</title><rect x="51.3" y="179.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.3" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3,700 samples, 0.35%)</title><rect x="51.3" y="163.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/73181251.test (3,700 samples, 0.35%)</title><rect x="51.3" y="147.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3,700 samples, 0.35%)</title><rect x="51.3" y="131.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,700 samples, 0.35%)</title><rect x="51.3" y="115.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,700 samples, 0.35%)</title><rect x="51.3" y="99.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1,841 samples, 0.18%)</title><rect x="51.3" y="83.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="54.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,859 samples, 0.18%)</title><rect x="53.4" y="83.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.4" y="94.0"></text>
</g>
<g>
<title>byte[] (1,859 samples, 0.18%)</title><rect x="53.4" y="67.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="56.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (12,686 samples, 1.21%)</title><rect x="55.5" y="259.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12,686 samples, 1.21%)</title><rect x="55.5" y="243.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12,686 samples, 1.21%)</title><rect x="55.5" y="227.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.5" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (330 samples, 0.03%)</title><rect x="55.5" y="211.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="58.5" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (510 samples, 0.05%)</title><rect x="55.8" y="211.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="58.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (999 samples, 0.10%)</title><rect x="56.4" y="211.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="59.4" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (350 samples, 0.03%)</title><rect x="57.5" y="211.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="60.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (659 samples, 0.06%)</title><rect x="57.9" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (659 samples, 0.06%)</title><rect x="57.9" y="195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.9" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.get$Lambda (659 samples, 0.06%)</title><rect x="57.9" y="179.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.9" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$140 (659 samples, 0.06%)</title><rect x="57.9" y="163.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="60.9" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (672 samples, 0.06%)</title><rect x="58.7" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.7" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (672 samples, 0.06%)</title><rect x="58.7" y="195.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="61.7" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8,155 samples, 0.78%)</title><rect x="59.4" y="211.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (8,155 samples, 0.78%)</title><rect x="59.4" y="195.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.4" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8,155 samples, 0.78%)</title><rect x="59.4" y="179.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,509 samples, 0.14%)</title><rect x="59.4" y="163.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,509 samples, 0.14%)</title><rect x="59.4" y="147.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.4" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.get$Lambda (1,509 samples, 0.14%)</title><rect x="59.4" y="131.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.4" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (1,509 samples, 0.14%)</title><rect x="59.4" y="115.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="62.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,166 samples, 0.11%)</title><rect x="61.1" y="163.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.1" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (1,166 samples, 0.11%)</title><rect x="61.1" y="147.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.1" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,166 samples, 0.11%)</title><rect x="61.1" y="131.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,166 samples, 0.11%)</title><rect x="61.1" y="115.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.1" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,166 samples, 0.11%)</title><rect x="61.1" y="99.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.1" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,166 samples, 0.11%)</title><rect x="61.1" y="83.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.1" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,166 samples, 0.11%)</title><rect x="61.1" y="67.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,166 samples, 0.11%)</title><rect x="61.1" y="51.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.1" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,166 samples, 0.11%)</title><rect x="61.1" y="35.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="64.1" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3,036 samples, 0.29%)</title><rect x="62.5" y="163.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.5" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3,036 samples, 0.29%)</title><rect x="62.5" y="147.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,461 samples, 0.14%)</title><rect x="62.5" y="131.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,461 samples, 0.14%)</title><rect x="62.5" y="115.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,461 samples, 0.14%)</title><rect x="62.5" y="99.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="65.5" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (1,575 samples, 0.15%)</title><rect x="64.1" y="131.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.1" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,575 samples, 0.15%)</title><rect x="64.1" y="115.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="67.1" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,444 samples, 0.23%)</title><rect x="65.9" y="163.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.9" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,444 samples, 0.23%)</title><rect x="65.9" y="147.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="68.9" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,011 samples, 0.10%)</title><rect x="68.6" y="211.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,011 samples, 0.10%)</title><rect x="68.6" y="195.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="71.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1,691 samples, 0.16%)</title><rect x="69.8" y="275.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (519 samples, 0.05%)</title><rect x="69.8" y="259.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.8" y="270.0"></text>
</g>
<g>
<title>byte[] (519 samples, 0.05%)</title><rect x="69.8" y="243.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="72.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,172 samples, 0.11%)</title><rect x="70.4" y="259.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,172 samples, 0.11%)</title><rect x="70.4" y="243.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/644345897.invoke (1,172 samples, 0.11%)</title><rect x="70.4" y="227.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,172 samples, 0.11%)</title><rect x="70.4" y="211.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (513 samples, 0.05%)</title><rect x="70.4" y="195.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.4" y="206.0"></text>
</g>
<g>
<title>java.lang.String (513 samples, 0.05%)</title><rect x="70.4" y="179.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="73.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (659 samples, 0.06%)</title><rect x="70.9" y="195.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (659 samples, 0.06%)</title><rect x="70.9" y="179.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.9" y="190.0"></text>
</g>
<g>
<title>byte[] (659 samples, 0.06%)</title><rect x="70.9" y="163.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="73.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1,444 samples, 0.14%)</title><rect x="71.7" y="275.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1,444 samples, 0.14%)</title><rect x="71.7" y="259.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,444 samples, 0.14%)</title><rect x="71.7" y="243.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,444 samples, 0.14%)</title><rect x="71.7" y="227.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/644345897.invoke (1,444 samples, 0.14%)</title><rect x="71.7" y="211.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,444 samples, 0.14%)</title><rect x="71.7" y="195.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (539 samples, 0.05%)</title><rect x="71.7" y="179.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (539 samples, 0.05%)</title><rect x="71.7" y="163.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="74.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (905 samples, 0.09%)</title><rect x="72.3" y="179.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (905 samples, 0.09%)</title><rect x="72.3" y="163.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.3" y="174.0"></text>
</g>
<g>
<title>byte[] (905 samples, 0.09%)</title><rect x="72.3" y="147.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="75.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3,649 samples, 0.35%)</title><rect x="73.3" y="275.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.3" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (984 samples, 0.09%)</title><rect x="73.3" y="259.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="76.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,024 samples, 0.10%)</title><rect x="74.4" y="259.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,024 samples, 0.10%)</title><rect x="74.4" y="243.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="77.4" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,641 samples, 0.16%)</title><rect x="75.6" y="259.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,641 samples, 0.16%)</title><rect x="75.6" y="243.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="78.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,606 samples, 0.15%)</title><rect x="77.4" y="323.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,606 samples, 0.15%)</title><rect x="77.4" y="307.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,606 samples, 0.15%)</title><rect x="77.4" y="291.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="80.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1,775 samples, 0.17%)</title><rect x="79.3" y="355.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="82.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (683 samples, 0.07%)</title><rect x="81.3" y="355.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="84.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (8,444 samples, 0.81%)</title><rect x="82.0" y="355.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (634 samples, 0.06%)</title><rect x="82.0" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (634 samples, 0.06%)</title><rect x="82.0" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$335/795354165.get$Lambda (322 samples, 0.03%)</title><rect x="82.0" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$335 (322 samples, 0.03%)</title><rect x="82.0" y="291.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="85.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$342/911259849.get$Lambda (311 samples, 0.03%)</title><rect x="82.4" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$342 (311 samples, 0.03%)</title><rect x="82.4" y="291.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="85.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (845 samples, 0.08%)</title><rect x="82.7" y="339.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="85.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (675 samples, 0.06%)</title><rect x="83.7" y="339.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="86.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (874 samples, 0.08%)</title><rect x="84.5" y="339.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="87.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2,456 samples, 0.23%)</title><rect x="85.5" y="339.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,456 samples, 0.23%)</title><rect x="85.5" y="323.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,456 samples, 0.23%)</title><rect x="85.5" y="307.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,456 samples, 0.23%)</title><rect x="85.5" y="291.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,456 samples, 0.23%)</title><rect x="85.5" y="275.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,456 samples, 0.23%)</title><rect x="85.5" y="259.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (2,456 samples, 0.23%)</title><rect x="85.5" y="243.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,456 samples, 0.23%)</title><rect x="85.5" y="227.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2,456 samples, 0.23%)</title><rect x="85.5" y="211.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (934 samples, 0.09%)</title><rect x="85.5" y="195.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (934 samples, 0.09%)</title><rect x="85.5" y="179.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/629961698.get$Lambda (357 samples, 0.03%)</title><rect x="85.5" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$346 (357 samples, 0.03%)</title><rect x="85.5" y="147.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="88.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$352/392108125.get$Lambda (577 samples, 0.06%)</title><rect x="85.9" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$352 (577 samples, 0.06%)</title><rect x="85.9" y="147.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="88.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (687 samples, 0.07%)</title><rect x="86.5" y="195.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="89.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (835 samples, 0.08%)</title><rect x="87.3" y="195.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (835 samples, 0.08%)</title><rect x="87.3" y="179.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (334 samples, 0.03%)</title><rect x="87.3" y="163.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="90.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (501 samples, 0.05%)</title><rect x="87.7" y="163.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.7" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (501 samples, 0.05%)</title><rect x="87.7" y="147.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="90.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2,281 samples, 0.22%)</title><rect x="88.2" y="339.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.2" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (523 samples, 0.05%)</title><rect x="88.2" y="323.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="91.2" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (1,092 samples, 0.10%)</title><rect x="88.8" y="323.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="91.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (666 samples, 0.06%)</title><rect x="90.0" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.0" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (666 samples, 0.06%)</title><rect x="90.0" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.0" y="318.0"></text>
</g>
<g>
<title>byte[] (666 samples, 0.06%)</title><rect x="90.0" y="291.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="93.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (679 samples, 0.06%)</title><rect x="90.8" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (679 samples, 0.06%)</title><rect x="90.8" y="323.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="93.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (706 samples, 0.07%)</title><rect x="91.6" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="94.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (706 samples, 0.07%)</title><rect x="91.6" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (706 samples, 0.07%)</title><rect x="91.6" y="435.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="94.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,354 samples, 0.13%)</title><rect x="92.4" y="499.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,354 samples, 0.13%)</title><rect x="92.4" y="483.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (679 samples, 0.06%)</title><rect x="92.4" y="467.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="95.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (675 samples, 0.06%)</title><rect x="93.1" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (675 samples, 0.06%)</title><rect x="93.1" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (675 samples, 0.06%)</title><rect x="93.1" y="435.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="96.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (28,092 samples, 2.69%)</title><rect x="93.9" y="499.0" width="31.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.9" y="510.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (887 samples, 0.08%)</title><rect x="93.9" y="483.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (887 samples, 0.08%)</title><rect x="93.9" y="467.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$319/1129528338.get$Lambda (525 samples, 0.05%)</title><rect x="93.9" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$319 (525 samples, 0.05%)</title><rect x="93.9" y="435.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="96.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$321/68142037.get$Lambda (362 samples, 0.03%)</title><rect x="94.5" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$321 (362 samples, 0.03%)</title><rect x="94.5" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="97.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,377 samples, 0.13%)</title><rect x="94.9" y="483.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,377 samples, 0.13%)</title><rect x="94.9" y="467.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$321/68142037.apply (676 samples, 0.06%)</title><rect x="94.9" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (676 samples, 0.06%)</title><rect x="94.9" y="435.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (676 samples, 0.06%)</title><rect x="94.9" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (676 samples, 0.06%)</title><rect x="94.9" y="403.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="97.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (701 samples, 0.07%)</title><rect x="95.7" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (701 samples, 0.07%)</title><rect x="95.7" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (701 samples, 0.07%)</title><rect x="95.7" y="419.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="98.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (686 samples, 0.07%)</title><rect x="96.4" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (686 samples, 0.07%)</title><rect x="96.4" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (686 samples, 0.07%)</title><rect x="96.4" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (686 samples, 0.07%)</title><rect x="96.4" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (686 samples, 0.07%)</title><rect x="96.4" y="419.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="99.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (25,142 samples, 2.41%)</title><rect x="97.2" y="483.0" width="28.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.2" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (25,142 samples, 2.41%)</title><rect x="97.2" y="467.0" width="28.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.2" y="478.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1,811 samples, 0.17%)</title><rect x="97.2" y="451.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="100.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (22,660 samples, 2.17%)</title><rect x="99.3" y="451.0" width="25.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.3" y="462.0">j..</text>
</g>
<g>
<title>java.lang.Object (344 samples, 0.03%)</title><rect x="99.3" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="102.3" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList (702 samples, 0.07%)</title><rect x="99.7" y="435.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="102.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (501 samples, 0.05%)</title><rect x="100.4" y="435.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="103.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (357 samples, 0.03%)</title><rect x="101.0" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (357 samples, 0.03%)</title><rect x="101.0" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$233/597857279.get$Lambda (357 samples, 0.03%)</title><rect x="101.0" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$233 (357 samples, 0.03%)</title><rect x="101.0" y="387.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="104.0" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1,026 samples, 0.10%)</title><rect x="101.4" y="435.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.4" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1,026 samples, 0.10%)</title><rect x="101.4" y="419.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.4" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1,026 samples, 0.10%)</title><rect x="101.4" y="403.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="104.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (510 samples, 0.05%)</title><rect x="102.6" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (510 samples, 0.05%)</title><rect x="102.6" y="419.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="105.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (1,516 samples, 0.15%)</title><rect x="103.1" y="435.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="106.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (990 samples, 0.09%)</title><rect x="104.9" y="435.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="107.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (1,213 samples, 0.12%)</title><rect x="106.0" y="435.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="109.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,330 samples, 0.13%)</title><rect x="107.3" y="435.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="110.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (6,613 samples, 0.63%)</title><rect x="108.8" y="435.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (483 samples, 0.05%)</title><rect x="108.8" y="419.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="111.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (347 samples, 0.03%)</title><rect x="109.4" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="112.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (505 samples, 0.05%)</title><rect x="109.8" y="419.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="112.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (332 samples, 0.03%)</title><rect x="110.4" y="419.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="113.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (689 samples, 0.07%)</title><rect x="110.7" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (689 samples, 0.07%)</title><rect x="110.7" y="403.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$307/1765127213.get$Lambda (348 samples, 0.03%)</title><rect x="110.7" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$307 (348 samples, 0.03%)</title><rect x="110.7" y="371.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="113.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.get$Lambda (341 samples, 0.03%)</title><rect x="111.1" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$310 (341 samples, 0.03%)</title><rect x="111.1" y="371.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="114.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (522 samples, 0.05%)</title><rect x="111.5" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (522 samples, 0.05%)</title><rect x="111.5" y="403.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="114.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (509 samples, 0.05%)</title><rect x="112.1" y="419.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="115.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (678 samples, 0.06%)</title><rect x="112.7" y="419.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="115.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2,548 samples, 0.24%)</title><rect x="113.4" y="419.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (498 samples, 0.05%)</title><rect x="113.4" y="403.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="116.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (696 samples, 0.07%)</title><rect x="114.0" y="403.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="117.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (338 samples, 0.03%)</title><rect x="114.8" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (338 samples, 0.03%)</title><rect x="114.8" y="387.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="117.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1,016 samples, 0.10%)</title><rect x="115.2" y="403.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (323 samples, 0.03%)</title><rect x="115.2" y="387.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="118.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (333 samples, 0.03%)</title><rect x="115.5" y="387.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="118.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (360 samples, 0.03%)</title><rect x="115.9" y="387.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="118.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (4,292 samples, 0.41%)</title><rect x="116.3" y="435.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (314 samples, 0.03%)</title><rect x="116.3" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (314 samples, 0.03%)</title><rect x="116.3" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$240/254632586.get$Lambda (314 samples, 0.03%)</title><rect x="116.3" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$$Lambda$240 (314 samples, 0.03%)</title><rect x="116.3" y="371.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="119.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (305 samples, 0.03%)</title><rect x="116.7" y="419.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="119.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (337 samples, 0.03%)</title><rect x="117.0" y="419.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="120.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (326 samples, 0.03%)</title><rect x="117.4" y="419.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="120.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (504 samples, 0.05%)</title><rect x="117.8" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (504 samples, 0.05%)</title><rect x="117.8" y="403.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="120.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2,506 samples, 0.24%)</title><rect x="118.3" y="419.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (446 samples, 0.04%)</title><rect x="118.3" y="403.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="121.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (703 samples, 0.07%)</title><rect x="118.8" y="403.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="121.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (350 samples, 0.03%)</title><rect x="119.6" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (350 samples, 0.03%)</title><rect x="119.6" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="122.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1,007 samples, 0.10%)</title><rect x="120.0" y="403.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (307 samples, 0.03%)</title><rect x="120.0" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="123.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (372 samples, 0.04%)</title><rect x="120.4" y="387.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="123.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (328 samples, 0.03%)</title><rect x="120.8" y="387.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="123.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (295 samples, 0.03%)</title><rect x="121.2" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (295 samples, 0.03%)</title><rect x="121.2" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (295 samples, 0.03%)</title><rect x="121.2" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$301/1266998631.get$Lambda (295 samples, 0.03%)</title><rect x="121.2" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$301 (295 samples, 0.03%)</title><rect x="121.2" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="124.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1,064 samples, 0.10%)</title><rect x="121.5" y="435.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1,064 samples, 0.10%)</title><rect x="121.5" y="419.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (530 samples, 0.05%)</title><rect x="121.5" y="403.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="124.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (534 samples, 0.05%)</title><rect x="122.1" y="403.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (534 samples, 0.05%)</title><rect x="122.1" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.1" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (534 samples, 0.05%)</title><rect x="122.1" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (534 samples, 0.05%)</title><rect x="122.1" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (534 samples, 0.05%)</title><rect x="122.1" y="339.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="125.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1,907 samples, 0.18%)</title><rect x="122.7" y="435.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1610702581.linkToTargetMethod (467 samples, 0.04%)</title><rect x="122.7" y="419.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (467 samples, 0.04%)</title><rect x="122.7" y="403.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$246/1776079527.get$Lambda (467 samples, 0.04%)</title><rect x="122.7" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$246 (467 samples, 0.04%)</title><rect x="122.7" y="371.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="125.7" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,440 samples, 0.14%)</title><rect x="123.2" y="419.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$246/1776079527.run (1,440 samples, 0.14%)</title><rect x="123.2" y="403.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1,440 samples, 0.14%)</title><rect x="123.2" y="387.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.2" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (361 samples, 0.03%)</title><rect x="123.2" y="371.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="126.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1,079 samples, 0.10%)</title><rect x="123.6" y="371.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.6" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (525 samples, 0.05%)</title><rect x="123.6" y="355.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="126.6" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (554 samples, 0.05%)</title><rect x="124.2" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (554 samples, 0.05%)</title><rect x="124.2" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.2" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (554 samples, 0.05%)</title><rect x="124.2" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.2" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (554 samples, 0.05%)</title><rect x="124.2" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.2" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (551 samples, 0.05%)</title><rect x="124.2" y="291.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="127.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (671 samples, 0.06%)</title><rect x="124.8" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (671 samples, 0.06%)</title><rect x="124.8" y="435.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="127.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (837 samples, 0.08%)</title><rect x="125.6" y="547.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (837 samples, 0.08%)</title><rect x="125.6" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (837 samples, 0.08%)</title><rect x="125.6" y="515.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (837 samples, 0.08%)</title><rect x="125.6" y="499.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="128.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2,172 samples, 0.21%)</title><rect x="126.6" y="547.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (1,630 samples, 0.16%)</title><rect x="126.6" y="531.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="129.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (542 samples, 0.05%)</title><rect x="128.4" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (542 samples, 0.05%)</title><rect x="128.4" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (542 samples, 0.05%)</title><rect x="128.4" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.4" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (542 samples, 0.05%)</title><rect x="128.4" y="483.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.4" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (542 samples, 0.05%)</title><rect x="128.4" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.4" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (542 samples, 0.05%)</title><rect x="128.4" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.4" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (542 samples, 0.05%)</title><rect x="128.4" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.4" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (542 samples, 0.05%)</title><rect x="128.4" y="419.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.4" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (542 samples, 0.05%)</title><rect x="128.4" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.4" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (542 samples, 0.05%)</title><rect x="128.4" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.4" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (542 samples, 0.05%)</title><rect x="128.4" y="371.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="131.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5,288 samples, 0.51%)</title><rect x="129.0" y="643.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (2,904 samples, 0.28%)</title><rect x="129.0" y="627.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$228/1550578698.accept (2,904 samples, 0.28%)</title><rect x="129.0" y="611.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$executeMethod$5 (2,904 samples, 0.28%)</title><rect x="129.0" y="595.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.0" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Response (301 samples, 0.03%)</title><rect x="129.0" y="579.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="132.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,032 samples, 0.10%)</title><rect x="129.3" y="579.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.3" y="590.0"></text>
</g>
<g>
<title>byte[] (424 samples, 0.04%)</title><rect x="129.3" y="563.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="132.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (346 samples, 0.03%)</title><rect x="129.8" y="563.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="132.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (262 samples, 0.03%)</title><rect x="130.2" y="563.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="133.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (1,295 samples, 0.12%)</title><rect x="130.5" y="579.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,295 samples, 0.12%)</title><rect x="130.5" y="563.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,295 samples, 0.12%)</title><rect x="130.5" y="547.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (907 samples, 0.09%)</title><rect x="130.5" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.5" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (907 samples, 0.09%)</title><rect x="130.5" y="515.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.5" y="526.0"></text>
</g>
<g>
<title>byte[] (907 samples, 0.09%)</title><rect x="130.5" y="499.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="133.5" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (388 samples, 0.04%)</title><rect x="131.5" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.5" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (388 samples, 0.04%)</title><rect x="131.5" y="515.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="134.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.getBody (276 samples, 0.03%)</title><rect x="132.0" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.0" y="590.0"></text>
</g>
<g>
<title>byte[] (276 samples, 0.03%)</title><rect x="132.0" y="563.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="135.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,384 samples, 0.23%)</title><rect x="132.3" y="627.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,384 samples, 0.23%)</title><rect x="132.3" y="611.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$204/1048669819.accept (2,384 samples, 0.23%)</title><rect x="132.3" y="595.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$collect$2 (2,384 samples, 0.23%)</title><rect x="132.3" y="579.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.3" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (999 samples, 0.10%)</title><rect x="132.3" y="563.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (999 samples, 0.10%)</title><rect x="132.3" y="547.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (999 samples, 0.10%)</title><rect x="132.3" y="531.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (999 samples, 0.10%)</title><rect x="132.3" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (999 samples, 0.10%)</title><rect x="132.3" y="499.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (999 samples, 0.10%)</title><rect x="132.3" y="483.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="135.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,385 samples, 0.13%)</title><rect x="133.4" y="563.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,385 samples, 0.13%)</title><rect x="133.4" y="547.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,385 samples, 0.13%)</title><rect x="133.4" y="531.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,385 samples, 0.13%)</title><rect x="133.4" y="515.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$221/654824253.accept (1,385 samples, 0.13%)</title><rect x="133.4" y="499.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$merge$0 (1,385 samples, 0.13%)</title><rect x="133.4" y="483.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.4" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (263 samples, 0.03%)</title><rect x="133.4" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="136.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (248 samples, 0.02%)</title><rect x="133.7" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (248 samples, 0.02%)</title><rect x="133.7" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (248 samples, 0.02%)</title><rect x="133.7" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (248 samples, 0.02%)</title><rect x="133.7" y="419.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="136.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (260 samples, 0.02%)</title><rect x="134.0" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (260 samples, 0.02%)</title><rect x="134.0" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (260 samples, 0.02%)</title><rect x="134.0" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (260 samples, 0.02%)</title><rect x="134.0" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (260 samples, 0.02%)</title><rect x="134.0" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (260 samples, 0.02%)</title><rect x="134.0" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (250 samples, 0.02%)</title><rect x="134.0" y="371.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="137.0" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (442 samples, 0.04%)</title><rect x="134.3" y="467.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="137.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (40,752 samples, 3.90%)</title><rect x="135.0" y="643.0" width="46.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.0" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (39,188 samples, 3.75%)</title><rect x="135.0" y="627.0" width="44.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.0" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (37,429 samples, 3.58%)</title><rect x="135.0" y="611.0" width="42.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.0" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (37,429 samples, 3.58%)</title><rect x="135.0" y="595.0" width="42.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.0" y="606.0">java..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (37,429 samples, 3.58%)</title><rect x="135.0" y="579.0" width="42.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="138.0" y="590.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,759 samples, 0.17%)</title><rect x="177.2" y="611.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,759 samples, 0.17%)</title><rect x="177.2" y="595.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,759 samples, 0.17%)</title><rect x="177.2" y="579.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1,759 samples, 0.17%)</title><rect x="177.2" y="563.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,759 samples, 0.17%)</title><rect x="177.2" y="547.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="180.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,564 samples, 0.15%)</title><rect x="179.2" y="627.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,407 samples, 0.13%)</title><rect x="179.2" y="611.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,407 samples, 0.13%)</title><rect x="179.2" y="595.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,407 samples, 0.13%)</title><rect x="179.2" y="579.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="182.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$389/2097994766.run (11,169 samples, 1.07%)</title><rect x="181.0" y="643.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (11,169 samples, 1.07%)</title><rect x="181.0" y="627.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (11,169 samples, 1.07%)</title><rect x="181.0" y="611.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (11,169 samples, 1.07%)</title><rect x="181.0" y="595.0" width="12.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11,169 samples, 1.07%)</title><rect x="181.0" y="579.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11,169 samples, 1.07%)</title><rect x="181.0" y="563.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11,169 samples, 1.07%)</title><rect x="181.0" y="547.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11,169 samples, 1.07%)</title><rect x="181.0" y="531.0" width="12.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11,169 samples, 1.07%)</title><rect x="181.0" y="515.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11,169 samples, 1.07%)</title><rect x="181.0" y="499.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (11,169 samples, 1.07%)</title><rect x="181.0" y="483.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (10,045 samples, 0.96%)</title><rect x="181.0" y="467.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,013 samples, 0.10%)</title><rect x="181.0" y="451.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,013 samples, 0.10%)</title><rect x="181.0" y="435.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$396/1178930500.get$Lambda (484 samples, 0.05%)</title><rect x="181.0" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$396 (484 samples, 0.05%)</title><rect x="181.0" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="184.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$415/222178550.get$Lambda (529 samples, 0.05%)</title><rect x="181.5" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$415 (529 samples, 0.05%)</title><rect x="181.5" y="403.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="184.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (9,032 samples, 0.86%)</title><rect x="182.1" y="451.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (994 samples, 0.10%)</title><rect x="182.1" y="435.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="185.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8,038 samples, 0.77%)</title><rect x="183.3" y="435.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (8,038 samples, 0.77%)</title><rect x="183.3" y="419.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,038 samples, 0.77%)</title><rect x="183.3" y="403.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4,155 samples, 0.40%)</title><rect x="183.3" y="387.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,232 samples, 0.12%)</title><rect x="183.3" y="371.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="186.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/434635916.apply (2,184 samples, 0.21%)</title><rect x="184.6" y="371.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2,184 samples, 0.21%)</title><rect x="184.6" y="355.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2,184 samples, 0.21%)</title><rect x="184.6" y="339.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (455 samples, 0.04%)</title><rect x="184.6" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.6" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (455 samples, 0.04%)</title><rect x="184.6" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.6" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (455 samples, 0.04%)</title><rect x="184.6" y="291.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="187.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1,729 samples, 0.17%)</title><rect x="185.2" y="323.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (309 samples, 0.03%)</title><rect x="185.2" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (309 samples, 0.03%)</title><rect x="185.2" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$416/297087785.get$Lambda (309 samples, 0.03%)</title><rect x="185.2" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$416 (309 samples, 0.03%)</title><rect x="185.2" y="259.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="188.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1,420 samples, 0.14%)</title><rect x="185.5" y="307.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="188.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,420 samples, 0.14%)</title><rect x="185.5" y="291.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (778 samples, 0.07%)</title><rect x="185.5" y="275.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="188.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (624 samples, 0.06%)</title><rect x="186.4" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (624 samples, 0.06%)</title><rect x="186.4" y="259.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (624 samples, 0.06%)</title><rect x="186.4" y="243.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="189.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/283532103.apply (730 samples, 0.07%)</title><rect x="187.1" y="371.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (730 samples, 0.07%)</title><rect x="187.1" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (679 samples, 0.06%)</title><rect x="187.2" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (664 samples, 0.06%)</title><rect x="187.2" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (640 samples, 0.06%)</title><rect x="187.2" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (556 samples, 0.05%)</title><rect x="187.3" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1212401691.run (556 samples, 0.05%)</title><rect x="187.3" y="275.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="190.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (556 samples, 0.05%)</title><rect x="187.3" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (329 samples, 0.03%)</title><rect x="187.5" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (329 samples, 0.03%)</title><rect x="187.5" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (327 samples, 0.03%)</title><rect x="187.5" y="211.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="190.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (327 samples, 0.03%)</title><rect x="187.5" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (327 samples, 0.03%)</title><rect x="187.5" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (319 samples, 0.03%)</title><rect x="187.5" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (319 samples, 0.03%)</title><rect x="187.5" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (319 samples, 0.03%)</title><rect x="187.5" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (312 samples, 0.03%)</title><rect x="187.5" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.5" y="126.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (312 samples, 0.03%)</title><rect x="187.5" y="99.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.5" y="110.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (312 samples, 0.03%)</title><rect x="187.5" y="83.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.5" y="94.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (312 samples, 0.03%)</title><rect x="187.5" y="67.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="190.5" y="78.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (312 samples, 0.03%)</title><rect x="187.5" y="51.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.5" y="62.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (312 samples, 0.03%)</title><rect x="187.5" y="35.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.5" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3,883 samples, 0.37%)</title><rect x="187.9" y="387.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,883 samples, 0.37%)</title><rect x="187.9" y="371.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/733215646.apply (3,874 samples, 0.37%)</title><rect x="187.9" y="355.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3,874 samples, 0.37%)</title><rect x="187.9" y="339.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,874 samples, 0.37%)</title><rect x="187.9" y="323.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$216/483426623.apply (3,874 samples, 0.37%)</title><rect x="187.9" y="307.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3,874 samples, 0.37%)</title><rect x="187.9" y="291.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (317 samples, 0.03%)</title><rect x="187.9" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (317 samples, 0.03%)</title><rect x="187.9" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/434635916.get$Lambda (317 samples, 0.03%)</title><rect x="187.9" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$405 (317 samples, 0.03%)</title><rect x="187.9" y="227.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="190.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,445 samples, 0.14%)</title><rect x="188.3" y="275.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,445 samples, 0.14%)</title><rect x="188.3" y="259.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (829 samples, 0.08%)</title><rect x="188.3" y="243.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="191.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (616 samples, 0.06%)</title><rect x="189.2" y="243.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (616 samples, 0.06%)</title><rect x="189.2" y="227.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (616 samples, 0.06%)</title><rect x="189.2" y="211.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="192.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2,112 samples, 0.20%)</title><rect x="189.9" y="275.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (1,202 samples, 0.12%)</title><rect x="189.9" y="259.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (617 samples, 0.06%)</title><rect x="189.9" y="243.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="192.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (585 samples, 0.06%)</title><rect x="190.6" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (585 samples, 0.06%)</title><rect x="190.6" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (585 samples, 0.06%)</title><rect x="190.6" y="211.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="193.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (910 samples, 0.09%)</title><rect x="191.3" y="259.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (451 samples, 0.04%)</title><rect x="191.3" y="243.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="194.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (459 samples, 0.04%)</title><rect x="191.8" y="243.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (459 samples, 0.04%)</title><rect x="191.8" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (459 samples, 0.04%)</title><rect x="191.8" y="211.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (459 samples, 0.04%)</title><rect x="191.8" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (459 samples, 0.04%)</title><rect x="191.8" y="179.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (459 samples, 0.04%)</title><rect x="191.8" y="163.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="194.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,124 samples, 0.11%)</title><rect x="192.3" y="467.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,124 samples, 0.11%)</title><rect x="192.3" y="451.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,124 samples, 0.11%)</title><rect x="192.3" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,124 samples, 0.11%)</title><rect x="192.3" y="419.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,124 samples, 0.11%)</title><rect x="192.3" y="403.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.3" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1,124 samples, 0.11%)</title><rect x="192.3" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.3" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (491 samples, 0.05%)</title><rect x="192.3" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.3" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (491 samples, 0.05%)</title><rect x="192.3" y="355.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="195.3" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (633 samples, 0.06%)</title><rect x="192.9" y="371.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.9" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (633 samples, 0.06%)</title><rect x="192.9" y="355.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="195.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (99,300 samples, 9.50%)</title><rect x="193.6" y="643.0" width="112.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.6" y="654.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (99,300 samples, 9.50%)</title><rect x="193.6" y="627.0" width="112.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.6" y="638.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (83,141 samples, 7.95%)</title><rect x="193.6" y="611.0" width="93.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.6" y="622.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (83,141 samples, 7.95%)</title><rect x="193.6" y="595.0" width="93.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.6" y="606.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (83,141 samples, 7.95%)</title><rect x="193.6" y="579.0" width="93.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.6" y="590.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1,511 samples, 0.14%)</title><rect x="193.6" y="563.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1,511 samples, 0.14%)</title><rect x="193.6" y="547.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,511 samples, 0.14%)</title><rect x="193.6" y="531.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,511 samples, 0.14%)</title><rect x="193.6" y="515.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (868 samples, 0.08%)</title><rect x="193.6" y="499.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1311146128.invoke (868 samples, 0.08%)</title><rect x="193.6" y="483.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="196.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (868 samples, 0.08%)</title><rect x="193.6" y="467.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (868 samples, 0.08%)</title><rect x="193.6" y="451.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (868 samples, 0.08%)</title><rect x="193.6" y="435.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.6" y="446.0"></text>
</g>
<g>
<title>byte[] (868 samples, 0.08%)</title><rect x="193.6" y="419.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="196.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (643 samples, 0.06%)</title><rect x="194.6" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (643 samples, 0.06%)</title><rect x="194.6" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (643 samples, 0.06%)</title><rect x="194.6" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394/1177692966.get$Lambda (643 samples, 0.06%)</title><rect x="194.6" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394 (643 samples, 0.06%)</title><rect x="194.6" y="435.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="197.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (81,630 samples, 7.81%)</title><rect x="195.3" y="563.0" width="92.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.3" y="574.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (81,630 samples, 7.81%)</title><rect x="195.3" y="547.0" width="92.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.3" y="558.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (81,630 samples, 7.81%)</title><rect x="195.3" y="531.0" width="92.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="198.3" y="542.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (81,630 samples, 7.81%)</title><rect x="195.3" y="515.0" width="92.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.3" y="526.0">jdk/interna..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (32,563 samples, 3.12%)</title><rect x="195.3" y="499.0" width="36.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.3" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32,563 samples, 3.12%)</title><rect x="195.3" y="483.0" width="36.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.3" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (32,563 samples, 3.12%)</title><rect x="195.3" y="467.0" width="36.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.3" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (32,563 samples, 3.12%)</title><rect x="195.3" y="451.0" width="36.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.3" y="462.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (32,563 samples, 3.12%)</title><rect x="195.3" y="435.0" width="36.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.3" y="446.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (32,563 samples, 3.12%)</title><rect x="195.3" y="419.0" width="36.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.3" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (32,563 samples, 3.12%)</title><rect x="195.3" y="403.0" width="36.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.3" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (31,560 samples, 3.02%)</title><rect x="195.3" y="387.0" width="35.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.3" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (31,560 samples, 3.02%)</title><rect x="195.3" y="371.0" width="35.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.3" y="382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (30,849 samples, 2.95%)</title><rect x="195.3" y="355.0" width="34.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.3" y="366.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (637 samples, 0.06%)</title><rect x="195.3" y="339.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="198.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/283532103.apply (28,796 samples, 2.76%)</title><rect x="196.0" y="339.0" width="32.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.0" y="350.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (28,796 samples, 2.76%)</title><rect x="196.0" y="323.0" width="32.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.0" y="334.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (484 samples, 0.05%)</title><rect x="196.0" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (484 samples, 0.05%)</title><rect x="196.0" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/1651911151.get$Lambda (484 samples, 0.05%)</title><rect x="196.0" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$445 (484 samples, 0.05%)</title><rect x="196.0" y="259.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="199.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,446 samples, 0.14%)</title><rect x="196.6" y="307.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,446 samples, 0.14%)</title><rect x="196.6" y="291.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (823 samples, 0.08%)</title><rect x="196.6" y="275.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="199.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (623 samples, 0.06%)</title><rect x="197.5" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (623 samples, 0.06%)</title><rect x="197.5" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (623 samples, 0.06%)</title><rect x="197.5" y="243.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="200.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (26,866 samples, 2.57%)</title><rect x="198.2" y="307.0" width="30.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.2" y="318.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (355 samples, 0.03%)</title><rect x="198.2" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (355 samples, 0.03%)</title><rect x="198.2" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$443/651680307.get$Lambda (355 samples, 0.03%)</title><rect x="198.2" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$443 (355 samples, 0.03%)</title><rect x="198.2" y="243.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="201.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,516 samples, 0.15%)</title><rect x="198.6" y="291.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,516 samples, 0.15%)</title><rect x="198.6" y="275.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (867 samples, 0.08%)</title><rect x="198.6" y="259.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="201.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (649 samples, 0.06%)</title><rect x="199.6" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="202.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (649 samples, 0.06%)</title><rect x="199.6" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (649 samples, 0.06%)</title><rect x="199.6" y="227.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="202.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (24,995 samples, 2.39%)</title><rect x="200.3" y="291.0" width="28.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="203.3" y="302.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$156/104497043.apply (1,753 samples, 0.17%)</title><rect x="200.3" y="275.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.3" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1,753 samples, 0.17%)</title><rect x="200.3" y="259.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1,753 samples, 0.17%)</title><rect x="200.3" y="243.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (656 samples, 0.06%)</title><rect x="200.3" y="227.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="203.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (1,097 samples, 0.10%)</title><rect x="201.1" y="227.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.1" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (480 samples, 0.05%)</title><rect x="201.1" y="211.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="204.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (617 samples, 0.06%)</title><rect x="201.6" y="211.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="204.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (23,242 samples, 2.22%)</title><rect x="202.3" y="275.0" width="26.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.3" y="286.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (737 samples, 0.07%)</title><rect x="202.3" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (737 samples, 0.07%)</title><rect x="202.3" y="243.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/460704340.get$Lambda (352 samples, 0.03%)</title><rect x="202.3" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$441 (352 samples, 0.03%)</title><rect x="202.3" y="211.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="205.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$442/571356756.get$Lambda (385 samples, 0.04%)</title><rect x="202.7" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$442 (385 samples, 0.04%)</title><rect x="202.7" y="211.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="205.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1038138773.linkToTargetMethod (786 samples, 0.08%)</title><rect x="203.1" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/61792593.invokeStatic (786 samples, 0.08%)</title><rect x="203.1" y="243.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1212401691.get$Lambda (786 samples, 0.08%)</title><rect x="203.1" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$424 (786 samples, 0.08%)</title><rect x="203.1" y="211.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="206.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (4,708 samples, 0.45%)</title><rect x="204.0" y="259.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.0" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,895 samples, 0.18%)</title><rect x="204.0" y="243.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.0" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (716 samples, 0.07%)</title><rect x="204.0" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.0" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (716 samples, 0.07%)</title><rect x="204.0" y="211.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="207.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,179 samples, 0.11%)</title><rect x="204.8" y="227.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,179 samples, 0.11%)</title><rect x="204.8" y="211.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="207.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1,456 samples, 0.14%)</title><rect x="206.1" y="243.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,456 samples, 0.14%)</title><rect x="206.1" y="227.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="209.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1,456 samples, 0.14%)</title><rect x="206.1" y="211.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (460 samples, 0.04%)</title><rect x="206.1" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (460 samples, 0.04%)</title><rect x="206.1" y="179.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (460 samples, 0.04%)</title><rect x="206.1" y="163.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.1" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (460 samples, 0.04%)</title><rect x="206.1" y="147.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="209.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$421/1320568786.get (502 samples, 0.05%)</title><rect x="206.7" y="195.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (502 samples, 0.05%)</title><rect x="206.7" y="179.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="209.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (494 samples, 0.05%)</title><rect x="207.2" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (494 samples, 0.05%)</title><rect x="207.2" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.2" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (494 samples, 0.05%)</title><rect x="207.2" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.2" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (494 samples, 0.05%)</title><rect x="207.2" y="147.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="210.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (1,357 samples, 0.13%)</title><rect x="207.8" y="243.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (1,357 samples, 0.13%)</title><rect x="207.8" y="227.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="210.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,922 samples, 0.28%)</title><rect x="209.3" y="259.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,460 samples, 0.14%)</title><rect x="209.3" y="243.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (832 samples, 0.08%)</title><rect x="209.3" y="227.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="212.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (628 samples, 0.06%)</title><rect x="210.3" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (628 samples, 0.06%)</title><rect x="210.3" y="211.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (628 samples, 0.06%)</title><rect x="210.3" y="195.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="213.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,462 samples, 0.14%)</title><rect x="211.0" y="243.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,462 samples, 0.14%)</title><rect x="211.0" y="227.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (837 samples, 0.08%)</title><rect x="211.0" y="211.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="214.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (625 samples, 0.06%)</title><rect x="211.9" y="211.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (625 samples, 0.06%)</title><rect x="211.9" y="195.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (625 samples, 0.06%)</title><rect x="211.9" y="179.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="214.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (514 samples, 0.05%)</title><rect x="212.6" y="259.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="215.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (663 samples, 0.06%)</title><rect x="213.2" y="259.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="216.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (663 samples, 0.06%)</title><rect x="214.0" y="259.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="217.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (335 samples, 0.03%)</title><rect x="214.7" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (335 samples, 0.03%)</title><rect x="214.7" y="243.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="217.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11,914 samples, 1.14%)</title><rect x="215.1" y="259.0" width="13.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1212401691.run (11,914 samples, 1.14%)</title><rect x="215.1" y="243.0" width="13.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (11,914 samples, 1.14%)</title><rect x="215.1" y="227.0" width="13.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="218.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,532 samples, 0.15%)</title><rect x="215.1" y="211.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,532 samples, 0.15%)</title><rect x="215.1" y="195.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1243324746.get$Lambda (350 samples, 0.03%)</title><rect x="215.1" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$429 (350 samples, 0.03%)</title><rect x="215.1" y="163.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="218.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/488176487.get$Lambda (523 samples, 0.05%)</title><rect x="215.5" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$435 (523 samples, 0.05%)</title><rect x="215.5" y="163.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="218.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$439/2095621459.get$Lambda (659 samples, 0.06%)</title><rect x="216.1" y="179.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$439 (659 samples, 0.06%)</title><rect x="216.1" y="163.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="219.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,423 samples, 0.14%)</title><rect x="216.8" y="211.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="219.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,423 samples, 0.14%)</title><rect x="216.8" y="195.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (751 samples, 0.07%)</title><rect x="216.8" y="179.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="219.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (672 samples, 0.06%)</title><rect x="217.7" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (672 samples, 0.06%)</title><rect x="217.7" y="163.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="220.7" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (672 samples, 0.06%)</title><rect x="217.7" y="147.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="220.7" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (842 samples, 0.08%)</title><rect x="218.4" y="211.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="221.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (602 samples, 0.06%)</title><rect x="219.4" y="211.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (602 samples, 0.06%)</title><rect x="219.4" y="195.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="222.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1,929 samples, 0.18%)</title><rect x="220.0" y="211.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1,929 samples, 0.18%)</title><rect x="220.0" y="195.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (483 samples, 0.05%)</title><rect x="220.0" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (483 samples, 0.05%)</title><rect x="220.0" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$440/162643331.get$Lambda (483 samples, 0.05%)</title><rect x="220.0" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$440 (483 samples, 0.05%)</title><rect x="220.0" y="131.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="223.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,438 samples, 0.14%)</title><rect x="220.6" y="179.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,438 samples, 0.14%)</title><rect x="220.6" y="163.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,438 samples, 0.14%)</title><rect x="220.6" y="147.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.6" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (799 samples, 0.08%)</title><rect x="220.6" y="131.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="223.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (639 samples, 0.06%)</title><rect x="221.5" y="131.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (639 samples, 0.06%)</title><rect x="221.5" y="115.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.5" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (639 samples, 0.06%)</title><rect x="221.5" y="99.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="224.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1,967 samples, 0.19%)</title><rect x="222.2" y="211.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,967 samples, 0.19%)</title><rect x="222.2" y="195.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1546693040.invoke (1,967 samples, 0.19%)</title><rect x="222.2" y="179.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,967 samples, 0.19%)</title><rect x="222.2" y="163.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (471 samples, 0.05%)</title><rect x="222.2" y="147.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (471 samples, 0.05%)</title><rect x="222.2" y="131.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="225.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,496 samples, 0.14%)</title><rect x="222.8" y="147.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,496 samples, 0.14%)</title><rect x="222.8" y="131.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.8" y="142.0"></text>
</g>
<g>
<title>byte[] (1,496 samples, 0.14%)</title><rect x="222.8" y="115.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="225.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3,619 samples, 0.35%)</title><rect x="224.4" y="211.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (1,195 samples, 0.11%)</title><rect x="224.4" y="195.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="227.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2,424 samples, 0.23%)</title><rect x="225.8" y="195.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,424 samples, 0.23%)</title><rect x="225.8" y="179.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1546693040.invoke (2,424 samples, 0.23%)</title><rect x="225.8" y="163.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,424 samples, 0.23%)</title><rect x="225.8" y="147.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (511 samples, 0.05%)</title><rect x="225.8" y="131.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (511 samples, 0.05%)</title><rect x="225.8" y="115.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="228.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,913 samples, 0.18%)</title><rect x="226.4" y="131.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,913 samples, 0.18%)</title><rect x="226.4" y="115.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.4" y="126.0"></text>
</g>
<g>
<title>byte[] (1,910 samples, 0.18%)</title><rect x="226.4" y="99.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="229.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$374/2048942177.apply (1,416 samples, 0.14%)</title><rect x="228.5" y="339.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1,416 samples, 0.14%)</title><rect x="228.5" y="323.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (742 samples, 0.07%)</title><rect x="228.5" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.5" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (702 samples, 0.07%)</title><rect x="228.6" y="291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.6" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (687 samples, 0.07%)</title><rect x="228.6" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.6" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (687 samples, 0.07%)</title><rect x="228.6" y="259.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="231.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (674 samples, 0.06%)</title><rect x="229.4" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (674 samples, 0.06%)</title><rect x="229.4" y="291.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="232.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (711 samples, 0.07%)</title><rect x="230.1" y="355.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="233.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (711 samples, 0.07%)</title><rect x="230.1" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/1325079472.apply (711 samples, 0.07%)</title><rect x="230.1" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (711 samples, 0.07%)</title><rect x="230.1" y="307.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (711 samples, 0.07%)</title><rect x="230.1" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (711 samples, 0.07%)</title><rect x="230.1" y="275.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="233.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$416/297087785.apply (1,003 samples, 0.10%)</title><rect x="230.9" y="387.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1,003 samples, 0.10%)</title><rect x="230.9" y="371.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (1,003 samples, 0.10%)</title><rect x="230.9" y="355.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="233.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (49,067 samples, 4.69%)</title><rect x="232.1" y="499.0" width="55.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.1" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3,568 samples, 0.34%)</title><rect x="232.1" y="483.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3,568 samples, 0.34%)</title><rect x="232.1" y="467.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3,568 samples, 0.34%)</title><rect x="232.1" y="451.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.1" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3,568 samples, 0.34%)</title><rect x="232.1" y="435.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,568 samples, 0.34%)</title><rect x="232.1" y="419.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.1" y="430.0"></text>
</g>
<g>
<title>byte[] (3,568 samples, 0.34%)</title><rect x="232.1" y="403.0" width="4.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="235.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (3,150 samples, 0.30%)</title><rect x="236.1" y="483.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.1" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (457 samples, 0.04%)</title><rect x="236.1" y="467.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="239.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (550 samples, 0.05%)</title><rect x="236.6" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (550 samples, 0.05%)</title><rect x="236.6" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (550 samples, 0.05%)</title><rect x="236.6" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.6" y="446.0"></text>
</g>
<g>
<title>byte[] (550 samples, 0.05%)</title><rect x="236.6" y="419.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="239.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (647 samples, 0.06%)</title><rect x="237.2" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (647 samples, 0.06%)</title><rect x="237.2" y="451.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.2" y="462.0"></text>
</g>
<g>
<title>byte[] (647 samples, 0.06%)</title><rect x="237.2" y="435.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="240.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,496 samples, 0.14%)</title><rect x="238.0" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,496 samples, 0.14%)</title><rect x="238.0" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (837 samples, 0.08%)</title><rect x="238.0" y="435.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="241.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (659 samples, 0.06%)</title><rect x="238.9" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.9" y="446.0"></text>
</g>
<g>
<title>byte[] (659 samples, 0.06%)</title><rect x="238.9" y="419.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="241.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (12,892 samples, 1.23%)</title><rect x="239.6" y="483.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12,892 samples, 1.23%)</title><rect x="239.6" y="467.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12,892 samples, 1.23%)</title><rect x="239.6" y="451.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.6" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (345 samples, 0.03%)</title><rect x="239.6" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="242.6" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (531 samples, 0.05%)</title><rect x="240.0" y="435.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="243.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,072 samples, 0.10%)</title><rect x="240.6" y="435.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="243.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (369 samples, 0.04%)</title><rect x="241.8" y="435.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="244.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (652 samples, 0.06%)</title><rect x="242.3" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (652 samples, 0.06%)</title><rect x="242.3" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.3" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.get$Lambda (652 samples, 0.06%)</title><rect x="242.3" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.3" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$140 (652 samples, 0.06%)</title><rect x="242.3" y="387.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="245.3" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (688 samples, 0.07%)</title><rect x="243.0" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.0" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (688 samples, 0.07%)</title><rect x="243.0" y="419.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="246.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (8,234 samples, 0.79%)</title><rect x="243.8" y="435.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.8" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (8,234 samples, 0.79%)</title><rect x="243.8" y="419.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8,234 samples, 0.79%)</title><rect x="243.8" y="403.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="246.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,494 samples, 0.14%)</title><rect x="243.8" y="387.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,494 samples, 0.14%)</title><rect x="243.8" y="371.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.get$Lambda (1,494 samples, 0.14%)</title><rect x="243.8" y="355.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.8" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (1,494 samples, 0.14%)</title><rect x="243.8" y="339.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="246.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,196 samples, 0.11%)</title><rect x="245.5" y="387.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (1,196 samples, 0.11%)</title><rect x="245.5" y="371.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,196 samples, 0.11%)</title><rect x="245.5" y="355.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,196 samples, 0.11%)</title><rect x="245.5" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,196 samples, 0.11%)</title><rect x="245.5" y="323.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,196 samples, 0.11%)</title><rect x="245.5" y="307.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,196 samples, 0.11%)</title><rect x="245.5" y="291.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,196 samples, 0.11%)</title><rect x="245.5" y="275.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,196 samples, 0.11%)</title><rect x="245.5" y="259.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="248.5" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3,030 samples, 0.29%)</title><rect x="246.8" y="387.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.8" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3,030 samples, 0.29%)</title><rect x="246.8" y="371.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,495 samples, 0.14%)</title><rect x="246.8" y="355.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,495 samples, 0.14%)</title><rect x="246.8" y="339.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,495 samples, 0.14%)</title><rect x="246.8" y="323.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="249.8" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (1,535 samples, 0.15%)</title><rect x="248.5" y="355.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.5" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,535 samples, 0.15%)</title><rect x="248.5" y="339.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="251.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,514 samples, 0.24%)</title><rect x="250.2" y="387.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.2" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,514 samples, 0.24%)</title><rect x="250.2" y="371.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="253.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,001 samples, 0.10%)</title><rect x="253.1" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,001 samples, 0.10%)</title><rect x="253.1" y="419.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="256.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (29,457 samples, 2.82%)</title><rect x="254.2" y="483.0" width="33.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.2" y="494.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (1,487 samples, 0.14%)</title><rect x="254.2" y="467.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="257.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2,024 samples, 0.19%)</title><rect x="255.9" y="467.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2,024 samples, 0.19%)</title><rect x="255.9" y="451.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.9" y="462.0"></text>
</g>
<g>
<title>byte[] (2,024 samples, 0.19%)</title><rect x="255.9" y="435.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="258.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4,243 samples, 0.41%)</title><rect x="258.2" y="467.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,243 samples, 0.41%)</title><rect x="258.2" y="451.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,528 samples, 0.15%)</title><rect x="258.2" y="435.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="261.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,715 samples, 0.26%)</title><rect x="259.9" y="435.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.9" y="446.0"></text>
</g>
<g>
<title>byte[] (2,715 samples, 0.26%)</title><rect x="259.9" y="419.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="262.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (21,703 samples, 2.08%)</title><rect x="263.0" y="467.0" width="24.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.0" y="478.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (7,117 samples, 0.68%)</title><rect x="263.0" y="451.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7,117 samples, 0.68%)</title><rect x="263.0" y="435.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (3,066 samples, 0.29%)</title><rect x="263.0" y="419.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="266.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,051 samples, 0.39%)</title><rect x="266.4" y="419.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.4" y="430.0"></text>
</g>
<g>
<title>byte[] (4,051 samples, 0.39%)</title><rect x="266.4" y="403.0" width="4.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="269.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3,454 samples, 0.33%)</title><rect x="271.0" y="451.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3,454 samples, 0.33%)</title><rect x="271.0" y="435.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.0" y="446.0"></text>
</g>
<g>
<title>byte[] (1,953 samples, 0.19%)</title><rect x="271.0" y="419.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="274.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,501 samples, 0.14%)</title><rect x="273.2" y="419.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="276.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (2,276 samples, 0.22%)</title><rect x="274.9" y="451.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2,276 samples, 0.22%)</title><rect x="274.9" y="435.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,276 samples, 0.22%)</title><rect x="274.9" y="419.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,073 samples, 0.10%)</title><rect x="274.9" y="403.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="277.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,203 samples, 0.12%)</title><rect x="276.1" y="403.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.1" y="414.0"></text>
</g>
<g>
<title>byte[] (1,203 samples, 0.12%)</title><rect x="276.1" y="387.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="279.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,554 samples, 0.34%)</title><rect x="277.5" y="451.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,554 samples, 0.34%)</title><rect x="277.5" y="435.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,554 samples, 0.34%)</title><rect x="277.5" y="419.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,554 samples, 0.34%)</title><rect x="277.5" y="403.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,554 samples, 0.34%)</title><rect x="277.5" y="387.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,554 samples, 0.34%)</title><rect x="277.5" y="371.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="280.5" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (5,302 samples, 0.51%)</title><rect x="281.5" y="451.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.5" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2,071 samples, 0.20%)</title><rect x="281.5" y="435.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.5" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2,071 samples, 0.20%)</title><rect x="281.5" y="419.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="284.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,674 samples, 0.16%)</title><rect x="283.8" y="435.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.8" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,674 samples, 0.16%)</title><rect x="283.8" y="419.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="286.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$417/307390683.apply (1,557 samples, 0.15%)</title><rect x="285.7" y="435.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1,557 samples, 0.15%)</title><rect x="285.7" y="419.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.7" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,557 samples, 0.15%)</title><rect x="285.7" y="403.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="288.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (16,159 samples, 1.55%)</title><rect x="287.5" y="611.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (16,159 samples, 1.55%)</title><rect x="287.5" y="595.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (16,159 samples, 1.55%)</title><rect x="287.5" y="579.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (16,159 samples, 1.55%)</title><rect x="287.5" y="563.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (16,159 samples, 1.55%)</title><rect x="287.5" y="547.0" width="18.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2,276 samples, 0.22%)</title><rect x="287.5" y="531.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (800 samples, 0.08%)</title><rect x="287.5" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (800 samples, 0.08%)</title><rect x="287.5" y="499.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/629961698.get$Lambda (339 samples, 0.03%)</title><rect x="287.5" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$346 (339 samples, 0.03%)</title><rect x="287.5" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="290.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$352/392108125.get$Lambda (461 samples, 0.04%)</title><rect x="287.8" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$352 (461 samples, 0.04%)</title><rect x="287.8" y="467.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="290.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (679 samples, 0.06%)</title><rect x="288.4" y="515.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="291.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (797 samples, 0.08%)</title><rect x="289.1" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (797 samples, 0.08%)</title><rect x="289.1" y="499.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (310 samples, 0.03%)</title><rect x="289.1" y="483.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="292.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (487 samples, 0.05%)</title><rect x="289.5" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (487 samples, 0.05%)</title><rect x="289.5" y="467.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="292.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (13,472 samples, 1.29%)</title><rect x="290.0" y="531.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (13,472 samples, 1.29%)</title><rect x="290.0" y="515.0" width="15.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (13,472 samples, 1.29%)</title><rect x="290.0" y="499.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (13,472 samples, 1.29%)</title><rect x="290.0" y="483.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (13,472 samples, 1.29%)</title><rect x="290.0" y="467.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (13,472 samples, 1.29%)</title><rect x="290.0" y="451.0" width="15.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (940 samples, 0.09%)</title><rect x="290.0" y="435.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.0" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (940 samples, 0.09%)</title><rect x="290.0" y="419.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.0" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (940 samples, 0.09%)</title><rect x="290.0" y="403.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="293.0" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (469 samples, 0.04%)</title><rect x="291.1" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.1" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (469 samples, 0.04%)</title><rect x="291.1" y="419.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="294.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1243324746.run (8,394 samples, 0.80%)</title><rect x="291.6" y="435.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (8,394 samples, 0.80%)</title><rect x="291.6" y="419.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (8,389 samples, 0.80%)</title><rect x="291.6" y="403.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2,619 samples, 0.25%)</title><rect x="291.6" y="387.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,796 samples, 0.17%)</title><rect x="291.6" y="371.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (662 samples, 0.06%)</title><rect x="291.6" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.6" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (662 samples, 0.06%)</title><rect x="291.6" y="339.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="294.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,134 samples, 0.11%)</title><rect x="292.4" y="355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.4" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,134 samples, 0.11%)</title><rect x="292.4" y="339.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="295.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (823 samples, 0.08%)</title><rect x="293.7" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (823 samples, 0.08%)</title><rect x="293.7" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (823 samples, 0.08%)</title><rect x="293.7" y="339.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/230643635.get (496 samples, 0.05%)</title><rect x="293.7" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.7" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (496 samples, 0.05%)</title><rect x="293.7" y="307.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="296.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (327 samples, 0.03%)</title><rect x="294.2" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (327 samples, 0.03%)</title><rect x="294.2" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="297.2" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (327 samples, 0.03%)</title><rect x="294.2" y="291.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.2" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (327 samples, 0.03%)</title><rect x="294.2" y="275.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="297.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,757 samples, 0.55%)</title><rect x="294.6" y="387.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.6" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (507 samples, 0.05%)</title><rect x="294.6" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.6" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (507 samples, 0.05%)</title><rect x="294.6" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.6" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (507 samples, 0.05%)</title><rect x="294.6" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (507 samples, 0.05%)</title><rect x="294.6" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.6" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (507 samples, 0.05%)</title><rect x="294.6" y="307.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="297.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,250 samples, 0.50%)</title><rect x="295.2" y="371.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="298.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1,935 samples, 0.19%)</title><rect x="295.2" y="355.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.2" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (484 samples, 0.05%)</title><rect x="295.2" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.2" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (484 samples, 0.05%)</title><rect x="295.2" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="298.2" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (484 samples, 0.05%)</title><rect x="295.2" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.2" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (484 samples, 0.05%)</title><rect x="295.2" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.2" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (484 samples, 0.05%)</title><rect x="295.2" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.2" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (484 samples, 0.05%)</title><rect x="295.2" y="259.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="298.2" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (473 samples, 0.05%)</title><rect x="295.7" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.7" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (473 samples, 0.05%)</title><rect x="295.7" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.7" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (473 samples, 0.05%)</title><rect x="295.7" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.7" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (473 samples, 0.05%)</title><rect x="295.7" y="291.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.7" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (473 samples, 0.05%)</title><rect x="295.7" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.7" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (473 samples, 0.05%)</title><rect x="295.7" y="259.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="298.7" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (462 samples, 0.04%)</title><rect x="296.3" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (462 samples, 0.04%)</title><rect x="296.3" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.3" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (462 samples, 0.04%)</title><rect x="296.3" y="307.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="299.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (503 samples, 0.05%)</title><rect x="296.8" y="339.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="299.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1,095 samples, 0.10%)</title><rect x="297.4" y="355.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.4" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (525 samples, 0.05%)</title><rect x="297.4" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.4" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (525 samples, 0.05%)</title><rect x="297.4" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (525 samples, 0.05%)</title><rect x="297.4" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (525 samples, 0.05%)</title><rect x="297.4" y="291.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="300.4" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (556 samples, 0.05%)</title><rect x="297.9" y="339.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (556 samples, 0.05%)</title><rect x="297.9" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (556 samples, 0.05%)</title><rect x="297.9" y="307.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="300.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2,220 samples, 0.21%)</title><rect x="298.6" y="355.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (527 samples, 0.05%)</title><rect x="298.6" y="339.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="301.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,693 samples, 0.16%)</title><rect x="299.2" y="339.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (525 samples, 0.05%)</title><rect x="299.2" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (525 samples, 0.05%)</title><rect x="299.2" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (525 samples, 0.05%)</title><rect x="299.2" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (525 samples, 0.05%)</title><rect x="299.2" y="275.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="302.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1,168 samples, 0.11%)</title><rect x="299.8" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1,168 samples, 0.11%)</title><rect x="299.8" y="307.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (807 samples, 0.08%)</title><rect x="299.8" y="291.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="302.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (361 samples, 0.03%)</title><rect x="300.7" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="303.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (361 samples, 0.03%)</title><rect x="300.7" y="275.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="303.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1,952 samples, 0.19%)</title><rect x="301.1" y="435.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1,952 samples, 0.19%)</title><rect x="301.1" y="419.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1,952 samples, 0.19%)</title><rect x="301.1" y="403.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,401 samples, 0.13%)</title><rect x="301.1" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,401 samples, 0.13%)</title><rect x="301.1" y="371.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,401 samples, 0.13%)</title><rect x="301.1" y="355.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,401 samples, 0.13%)</title><rect x="301.1" y="339.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/460704340.accept (1,401 samples, 0.13%)</title><rect x="301.1" y="323.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1,401 samples, 0.13%)</title><rect x="301.1" y="307.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,401 samples, 0.13%)</title><rect x="301.1" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,401 samples, 0.13%)</title><rect x="301.1" y="275.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,401 samples, 0.13%)</title><rect x="301.1" y="259.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/1651911151.apply (1,401 samples, 0.13%)</title><rect x="301.1" y="243.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1,401 samples, 0.13%)</title><rect x="301.1" y="227.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (1,401 samples, 0.13%)</title><rect x="301.1" y="211.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="304.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (551 samples, 0.05%)</title><rect x="302.7" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.7" y="398.0"></text>
</g>
<g>
<title>byte[] (537 samples, 0.05%)</title><rect x="302.7" y="371.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="305.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (1,628 samples, 0.16%)</title><rect x="303.3" y="435.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (1,628 samples, 0.16%)</title><rect x="303.3" y="419.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (1,628 samples, 0.16%)</title><rect x="303.3" y="403.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (1,628 samples, 0.16%)</title><rect x="303.3" y="387.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (1,628 samples, 0.16%)</title><rect x="303.3" y="371.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.3" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (470 samples, 0.04%)</title><rect x="303.3" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (458 samples, 0.04%)</title><rect x="303.3" y="339.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="306.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,158 samples, 0.11%)</title><rect x="303.8" y="355.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,158 samples, 0.11%)</title><rect x="303.8" y="339.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,125 samples, 0.11%)</title><rect x="303.8" y="323.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="306.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (411 samples, 0.04%)</title><rect x="305.2" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (411 samples, 0.04%)</title><rect x="305.2" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (411 samples, 0.04%)</title><rect x="305.2" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (411 samples, 0.04%)</title><rect x="305.2" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (227 samples, 0.02%)</title><rect x="305.4" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.run (465,730 samples, 44.56%)</title><rect x="305.7" y="643.0" width="525.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.7" y="654.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/32333069..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (465,730 samples, 44.56%)</title><rect x="305.7" y="627.0" width="525.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.7" y="638.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1</text>
</g>
<g>
<title>java/lang/String.getBytes (12,107 samples, 1.16%)</title><rect x="305.7" y="611.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12,107 samples, 1.16%)</title><rect x="305.7" y="595.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12,107 samples, 1.16%)</title><rect x="305.7" y="579.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12,107 samples, 1.16%)</title><rect x="305.7" y="563.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.7" y="574.0"></text>
</g>
<g>
<title>byte[] (12,107 samples, 1.16%)</title><rect x="305.7" y="547.0" width="13.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="308.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,458 samples, 0.33%)</title><rect x="319.4" y="611.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="322.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,458 samples, 0.33%)</title><rect x="319.4" y="595.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.4" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,458 samples, 0.33%)</title><rect x="319.4" y="579.0" width="3.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="322.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.isProxied (44,285 samples, 4.24%)</title><rect x="323.3" y="611.0" width="50.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.3" y="622.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (44,285 samples, 4.24%)</title><rect x="323.3" y="595.0" width="50.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.3" y="606.0">one/n..</text>
</g>
<g>
<title>java/lang/String.substring (44,285 samples, 4.24%)</title><rect x="323.3" y="579.0" width="50.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.3" y="590.0">java/..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44,285 samples, 4.24%)</title><rect x="323.3" y="563.0" width="50.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.3" y="574.0">java/..</text>
</g>
<g>
<title>java.lang.String (22,919 samples, 2.19%)</title><rect x="323.3" y="547.0" width="25.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="326.3" y="558.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21,366 samples, 2.04%)</title><rect x="349.1" y="547.0" width="24.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.1" y="558.0">j..</text>
</g>
<g>
<title>byte[] (21,366 samples, 2.04%)</title><rect x="349.1" y="531.0" width="24.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="352.1" y="542.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (405,880 samples, 38.83%)</title><rect x="373.3" y="611.0" width="458.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.3" y="622.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,731 samples, 0.17%)</title><rect x="373.3" y="595.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,731 samples, 0.17%)</title><rect x="373.3" y="579.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$460/1313189910.get$Lambda (1,731 samples, 0.17%)</title><rect x="373.3" y="563.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.3" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$460 (1,731 samples, 0.17%)</title><rect x="373.3" y="547.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="376.3" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.Context (2,107 samples, 0.20%)</title><rect x="375.2" y="595.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="378.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMethod (402,024 samples, 38.46%)</title><rect x="377.6" y="595.0" width="453.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.6" y="606.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMe..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,895 samples, 0.18%)</title><rect x="377.6" y="579.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="380.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,895 samples, 0.18%)</title><rect x="377.6" y="563.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$228/1550578698.get$Lambda (772 samples, 0.07%)</title><rect x="377.6" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.6" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$228 (772 samples, 0.07%)</title><rect x="377.6" y="531.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="380.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$232/1238386083.get$Lambda (1,123 samples, 0.11%)</title><rect x="378.5" y="547.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.5" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$232 (1,123 samples, 0.11%)</title><rect x="378.5" y="531.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="381.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2,157 samples, 0.21%)</title><rect x="379.8" y="579.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2,157 samples, 0.21%)</title><rect x="379.8" y="563.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,644 samples, 0.16%)</title><rect x="379.8" y="547.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="382.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (513 samples, 0.05%)</title><rect x="381.6" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (513 samples, 0.05%)</title><rect x="381.6" y="531.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="384.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAcceptAsync (4,514 samples, 0.43%)</title><rect x="382.2" y="579.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (4,514 samples, 0.43%)</title><rect x="382.2" y="563.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (4,027 samples, 0.39%)</title><rect x="382.2" y="547.0" width="4.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="385.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (487 samples, 0.05%)</title><rect x="386.7" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (487 samples, 0.05%)</title><rect x="386.7" y="531.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="389.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.collect (15,318 samples, 1.47%)</title><rect x="387.3" y="579.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.3" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (507 samples, 0.05%)</title><rect x="387.3" y="563.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="390.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (419 samples, 0.04%)</title><rect x="387.9" y="563.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="390.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (361 samples, 0.03%)</title><rect x="388.3" y="563.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="391.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/830943904.linkToTargetMethod (2,140 samples, 0.20%)</title><rect x="388.7" y="563.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/981843706.invokeStatic (2,140 samples, 0.20%)</title><rect x="388.7" y="547.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$204/1048669819.get$Lambda (2,140 samples, 0.20%)</title><rect x="388.7" y="531.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.7" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MyRequestHelper$$Lambda$204 (2,140 samples, 0.20%)</title><rect x="388.7" y="515.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="391.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (5,649 samples, 0.54%)</title><rect x="391.2" y="563.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (5,649 samples, 0.54%)</title><rect x="391.2" y="547.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (3,212 samples, 0.31%)</title><rect x="391.2" y="531.0" width="3.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="394.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (505 samples, 0.05%)</title><rect x="394.8" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (505 samples, 0.05%)</title><rect x="394.8" y="515.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="397.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,932 samples, 0.18%)</title><rect x="395.4" y="531.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,932 samples, 0.18%)</title><rect x="395.4" y="515.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,932 samples, 0.18%)</title><rect x="395.4" y="499.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="398.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (6,242 samples, 0.60%)</title><rect x="397.5" y="563.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="400.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6,242 samples, 0.60%)</title><rect x="397.5" y="547.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="400.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3,729 samples, 0.36%)</title><rect x="397.5" y="531.0" width="4.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="400.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (456 samples, 0.04%)</title><rect x="401.8" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (456 samples, 0.04%)</title><rect x="401.8" y="515.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="404.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (422 samples, 0.04%)</title><rect x="402.3" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (422 samples, 0.04%)</title><rect x="402.3" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (417 samples, 0.04%)</title><rect x="402.3" y="499.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="405.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,634 samples, 0.16%)</title><rect x="402.7" y="531.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,634 samples, 0.16%)</title><rect x="402.7" y="515.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,634 samples, 0.16%)</title><rect x="402.7" y="499.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="405.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.merge (9,470 samples, 0.91%)</title><rect x="404.6" y="579.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (773 samples, 0.07%)</title><rect x="404.6" y="563.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="407.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (369 samples, 0.04%)</title><rect x="405.5" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="408.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (369 samples, 0.04%)</title><rect x="405.5" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="408.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$221/654824253.get$Lambda (369 samples, 0.04%)</title><rect x="405.5" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.5" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MyRequestHelper$$Lambda$221 (369 samples, 0.04%)</title><rect x="405.5" y="515.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="408.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (6,612 samples, 0.63%)</title><rect x="405.9" y="563.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="408.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (6,612 samples, 0.63%)</title><rect x="405.9" y="547.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="408.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (5,968 samples, 0.57%)</title><rect x="405.9" y="531.0" width="6.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="408.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (644 samples, 0.06%)</title><rect x="412.6" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (644 samples, 0.06%)</title><rect x="412.6" y="515.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="415.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,716 samples, 0.16%)</title><rect x="413.3" y="563.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,716 samples, 0.16%)</title><rect x="413.3" y="547.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (968 samples, 0.09%)</title><rect x="413.3" y="531.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="416.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (748 samples, 0.07%)</title><rect x="414.4" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (748 samples, 0.07%)</title><rect x="414.4" y="515.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="417.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (76,077 samples, 7.28%)</title><rect x="415.3" y="579.0" width="85.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.3" y="590.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (76,077 samples, 7.28%)</title><rect x="415.3" y="563.0" width="85.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.3" y="574.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (76,077 samples, 7.28%)</title><rect x="415.3" y="547.0" width="85.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="418.3" y="558.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (40,882 samples, 3.91%)</title><rect x="415.3" y="531.0" width="46.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="418.3" y="542.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (40,882 samples, 3.91%)</title><rect x="415.3" y="515.0" width="46.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.3" y="526.0">one/..</text>
</g>
<g>
<title>byte[] (5,132 samples, 0.49%)</title><rect x="415.3" y="499.0" width="5.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="418.3" y="510.0"></text>
</g>
<g>
<title>byte[] (35,750 samples, 3.42%)</title><rect x="421.1" y="499.0" width="40.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="424.1" y="510.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.write (35,195 samples, 3.37%)</title><rect x="461.4" y="531.0" width="39.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.4" y="542.0">one..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (35,195 samples, 3.37%)</title><rect x="461.4" y="515.0" width="39.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="464.4" y="526.0">one..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$460/1313189910.act (88,575 samples, 8.47%)</title><rect x="501.2" y="579.0" width="100.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.2" y="590.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$2 (88,575 samples, 8.47%)</title><rect x="501.2" y="563.0" width="100.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.2" y="574.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (88,575 samples, 8.47%)</title><rect x="501.2" y="547.0" width="100.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.2" y="558.0">ru/mail/poli..</text>
</g>
<g>
<title>byte[] (1,443 samples, 0.14%)</title><rect x="501.2" y="531.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="504.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (3,484 samples, 0.33%)</title><rect x="502.8" y="531.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2020738054.invoke (3,484 samples, 0.33%)</title><rect x="502.8" y="515.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,484 samples, 0.33%)</title><rect x="502.8" y="499.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1,177 samples, 0.11%)</title><rect x="502.8" y="483.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="505.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String (1,177 samples, 0.11%)</title><rect x="502.8" y="467.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="505.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,307 samples, 0.22%)</title><rect x="504.1" y="483.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,307 samples, 0.22%)</title><rect x="504.1" y="467.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.1" y="478.0"></text>
</g>
<g>
<title>byte[] (2,307 samples, 0.22%)</title><rect x="504.1" y="451.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="507.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (312 samples, 0.03%)</title><rect x="506.7" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (312 samples, 0.03%)</title><rect x="506.7" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (312 samples, 0.03%)</title><rect x="506.7" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (312 samples, 0.03%)</title><rect x="506.7" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (311 samples, 0.03%)</title><rect x="506.7" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (311 samples, 0.03%)</title><rect x="506.7" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (311 samples, 0.03%)</title><rect x="506.7" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (311 samples, 0.03%)</title><rect x="506.7" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (311 samples, 0.03%)</title><rect x="506.7" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (311 samples, 0.03%)</title><rect x="506.7" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (311 samples, 0.03%)</title><rect x="506.7" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2,181 samples, 0.21%)</title><rect x="507.1" y="531.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.1" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,181 samples, 0.21%)</title><rect x="507.1" y="515.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="510.1" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (1,110 samples, 0.11%)</title><rect x="509.5" y="531.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="512.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4,500 samples, 0.43%)</title><rect x="510.8" y="531.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.8" y="542.0"></text>
</g>
<g>
<title>byte[] (1,838 samples, 0.18%)</title><rect x="510.8" y="515.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="513.8" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (1,458 samples, 0.14%)</title><rect x="512.9" y="515.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="515.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String (1,204 samples, 0.12%)</title><rect x="514.5" y="515.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="517.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (75,545 samples, 7.23%)</title><rect x="515.9" y="531.0" width="85.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.9" y="542.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10,775 samples, 1.03%)</title><rect x="515.9" y="515.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6,645 samples, 0.64%)</title><rect x="515.9" y="499.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (6,645 samples, 0.64%)</title><rect x="515.9" y="483.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6,645 samples, 0.64%)</title><rect x="515.9" y="467.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,530 samples, 0.15%)</title><rect x="515.9" y="451.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1,530 samples, 0.15%)</title><rect x="515.9" y="435.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.9" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,530 samples, 0.15%)</title><rect x="515.9" y="419.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,530 samples, 0.15%)</title><rect x="515.9" y="403.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,530 samples, 0.15%)</title><rect x="515.9" y="387.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1,530 samples, 0.15%)</title><rect x="515.9" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (1,530 samples, 0.15%)</title><rect x="515.9" y="355.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1,530 samples, 0.15%)</title><rect x="515.9" y="339.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1,530 samples, 0.15%)</title><rect x="515.9" y="323.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,516 samples, 0.15%)</title><rect x="515.9" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$474/216329199.apply (1,516 samples, 0.15%)</title><rect x="515.9" y="291.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1,516 samples, 0.15%)</title><rect x="515.9" y="275.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,516 samples, 0.15%)</title><rect x="515.9" y="259.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="518.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$519/1189393447.apply (5,115 samples, 0.49%)</title><rect x="517.6" y="451.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5,115 samples, 0.49%)</title><rect x="517.6" y="435.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5,115 samples, 0.49%)</title><rect x="517.6" y="419.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5,115 samples, 0.49%)</title><rect x="517.6" y="403.0" width="5.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="520.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$527/1360750443.apply (4,130 samples, 0.40%)</title><rect x="523.4" y="499.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4,130 samples, 0.40%)</title><rect x="523.4" y="483.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,130 samples, 0.40%)</title><rect x="523.4" y="467.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="526.4" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,130 samples, 0.40%)</title><rect x="523.4" y="451.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="526.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (2,229 samples, 0.21%)</title><rect x="528.0" y="515.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,229 samples, 0.21%)</title><rect x="528.0" y="499.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,229 samples, 0.21%)</title><rect x="528.0" y="483.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="531.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (62,540 samples, 5.98%)</title><rect x="530.6" y="515.0" width="70.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="533.6" y="526.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,255 samples, 0.60%)</title><rect x="530.6" y="499.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.6" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (713 samples, 0.07%)</title><rect x="530.6" y="483.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="533.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5,542 samples, 0.53%)</title><rect x="531.4" y="483.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.4" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1,226 samples, 0.12%)</title><rect x="531.4" y="467.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="534.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1,109 samples, 0.11%)</title><rect x="532.7" y="467.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.7" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1,109 samples, 0.11%)</title><rect x="532.7" y="451.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="535.7" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1,729 samples, 0.17%)</title><rect x="534.0" y="467.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="537.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1,398 samples, 0.13%)</title><rect x="536.0" y="467.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,398 samples, 0.13%)</title><rect x="536.0" y="451.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="539.0" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,122 samples, 0.11%)</title><rect x="537.6" y="499.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="540.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,281 samples, 0.31%)</title><rect x="538.9" y="499.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,281 samples, 0.31%)</title><rect x="538.9" y="483.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,281 samples, 0.31%)</title><rect x="538.9" y="467.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,281 samples, 0.31%)</title><rect x="538.9" y="451.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.9" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,281 samples, 0.31%)</title><rect x="538.9" y="435.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,008 samples, 0.29%)</title><rect x="538.9" y="419.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="541.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (876 samples, 0.08%)</title><rect x="542.6" y="499.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (876 samples, 0.08%)</title><rect x="542.6" y="483.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (876 samples, 0.08%)</title><rect x="542.6" y="467.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$494/938260855.get$Lambda (876 samples, 0.08%)</title><rect x="542.6" y="451.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.6" y="462.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$494 (876 samples, 0.08%)</title><rect x="542.6" y="435.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="545.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2,229 samples, 0.21%)</title><rect x="543.6" y="499.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.6" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (786 samples, 0.08%)</title><rect x="543.6" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (786 samples, 0.08%)</title><rect x="543.6" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (786 samples, 0.08%)</title><rect x="543.6" y="451.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$494/938260855.get$Lambda (786 samples, 0.08%)</title><rect x="543.6" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.6" y="446.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$494 (786 samples, 0.08%)</title><rect x="543.6" y="419.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="546.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,443 samples, 0.14%)</title><rect x="544.5" y="483.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,443 samples, 0.14%)</title><rect x="544.5" y="467.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,443 samples, 0.14%)</title><rect x="544.5" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$500/1126047288.get$Lambda (1,443 samples, 0.14%)</title><rect x="544.5" y="435.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.5" y="446.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$500 (1,443 samples, 0.14%)</title><rect x="544.5" y="419.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="547.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6,859 samples, 0.66%)</title><rect x="546.2" y="499.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6,799 samples, 0.65%)</title><rect x="546.2" y="483.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6,799 samples, 0.65%)</title><rect x="546.2" y="467.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (6,799 samples, 0.65%)</title><rect x="546.2" y="451.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6,799 samples, 0.65%)</title><rect x="546.2" y="435.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,550 samples, 0.15%)</title><rect x="546.2" y="419.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1,550 samples, 0.15%)</title><rect x="546.2" y="403.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.2" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,550 samples, 0.15%)</title><rect x="546.2" y="387.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,550 samples, 0.15%)</title><rect x="546.2" y="371.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,550 samples, 0.15%)</title><rect x="546.2" y="355.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1,550 samples, 0.15%)</title><rect x="546.2" y="339.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (1,550 samples, 0.15%)</title><rect x="546.2" y="323.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="549.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1,550 samples, 0.15%)</title><rect x="546.2" y="307.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1,550 samples, 0.15%)</title><rect x="546.2" y="291.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,545 samples, 0.15%)</title><rect x="546.3" y="275.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$474/216329199.apply (1,545 samples, 0.15%)</title><rect x="546.3" y="259.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1,545 samples, 0.15%)</title><rect x="546.3" y="243.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="549.3" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,545 samples, 0.15%)</title><rect x="546.3" y="227.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="549.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$519/1189393447.apply (5,249 samples, 0.50%)</title><rect x="548.0" y="419.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5,249 samples, 0.50%)</title><rect x="548.0" y="403.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5,249 samples, 0.50%)</title><rect x="548.0" y="387.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5,249 samples, 0.50%)</title><rect x="548.0" y="371.0" width="5.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="551.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (41,846 samples, 4.00%)</title><rect x="553.9" y="499.0" width="47.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.9" y="510.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (18,999 samples, 1.82%)</title><rect x="553.9" y="483.0" width="21.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.9" y="494.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (698 samples, 0.07%)</title><rect x="553.9" y="467.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="556.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (18,301 samples, 1.75%)</title><rect x="554.7" y="467.0" width="20.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.7" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1,141 samples, 0.11%)</title><rect x="554.7" y="451.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="557.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1,190 samples, 0.11%)</title><rect x="556.0" y="451.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.0" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1,178 samples, 0.11%)</title><rect x="556.0" y="435.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="559.0" y="446.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1,418 samples, 0.14%)</title><rect x="557.3" y="451.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="560.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1,429 samples, 0.14%)</title><rect x="558.9" y="451.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.9" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1,429 samples, 0.14%)</title><rect x="558.9" y="435.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="561.9" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1,090 samples, 0.10%)</title><rect x="560.6" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.6" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,090 samples, 0.10%)</title><rect x="560.6" y="435.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="563.6" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12,033 samples, 1.15%)</title><rect x="561.8" y="451.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12,033 samples, 1.15%)</title><rect x="561.8" y="435.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12,033 samples, 1.15%)</title><rect x="561.8" y="419.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2,594 samples, 0.25%)</title><rect x="561.8" y="403.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (2,594 samples, 0.25%)</title><rect x="561.8" y="387.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2,594 samples, 0.25%)</title><rect x="561.8" y="371.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2,594 samples, 0.25%)</title><rect x="561.8" y="355.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,558 samples, 0.24%)</title><rect x="561.8" y="339.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$474/216329199.apply (2,558 samples, 0.24%)</title><rect x="561.8" y="323.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (2,558 samples, 0.24%)</title><rect x="561.8" y="307.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.8" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (2,558 samples, 0.24%)</title><rect x="561.8" y="291.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="564.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (9,439 samples, 0.90%)</title><rect x="564.7" y="403.0" width="10.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.7" y="414.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (1,842 samples, 0.18%)</title><rect x="564.7" y="387.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="567.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,812 samples, 0.17%)</title><rect x="566.8" y="387.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,812 samples, 0.17%)</title><rect x="566.8" y="371.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.8" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$504/1645908117.get$Lambda (806 samples, 0.08%)</title><rect x="566.8" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$504 (806 samples, 0.08%)</title><rect x="566.8" y="339.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="569.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.get$Lambda (1,006 samples, 0.10%)</title><rect x="567.7" y="355.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$505 (1,006 samples, 0.10%)</title><rect x="567.7" y="339.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="570.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,382 samples, 0.13%)</title><rect x="568.9" y="387.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1,382 samples, 0.13%)</title><rect x="568.9" y="371.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="571.9" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (1,382 samples, 0.13%)</title><rect x="568.9" y="355.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="571.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (4,350 samples, 0.42%)</title><rect x="570.5" y="387.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,804 samples, 0.27%)</title><rect x="570.5" y="371.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="573.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,546 samples, 0.15%)</title><rect x="573.6" y="371.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="576.6" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,046 samples, 0.10%)</title><rect x="575.4" y="483.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="578.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,167 samples, 0.11%)</title><rect x="576.6" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="579.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,167 samples, 0.11%)</title><rect x="576.6" y="467.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="579.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (754 samples, 0.07%)</title><rect x="577.9" y="483.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (721 samples, 0.07%)</title><rect x="577.9" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (721 samples, 0.07%)</title><rect x="577.9" y="451.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$494/938260855.get$Lambda (721 samples, 0.07%)</title><rect x="577.9" y="435.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.9" y="446.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$494 (721 samples, 0.07%)</title><rect x="577.9" y="419.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="580.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,783 samples, 0.17%)</title><rect x="578.8" y="483.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.8" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (698 samples, 0.07%)</title><rect x="578.8" y="467.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (698 samples, 0.07%)</title><rect x="578.8" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (698 samples, 0.07%)</title><rect x="578.8" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.8" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$494/938260855.get$Lambda (698 samples, 0.07%)</title><rect x="578.8" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.8" y="430.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$494 (698 samples, 0.07%)</title><rect x="578.8" y="403.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="581.8" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,085 samples, 0.10%)</title><rect x="579.6" y="467.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,061 samples, 0.10%)</title><rect x="579.6" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="582.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,061 samples, 0.10%)</title><rect x="579.6" y="435.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$500/1126047288.get$Lambda (1,061 samples, 0.10%)</title><rect x="579.6" y="419.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.6" y="430.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$500 (1,061 samples, 0.10%)</title><rect x="579.6" y="403.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="582.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3,760 samples, 0.36%)</title><rect x="581.0" y="483.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.0" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1,153 samples, 0.11%)</title><rect x="581.0" y="467.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="584.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2,601 samples, 0.25%)</title><rect x="582.3" y="467.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,601 samples, 0.25%)</title><rect x="582.3" y="451.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2,601 samples, 0.25%)</title><rect x="582.3" y="435.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.3" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2,601 samples, 0.25%)</title><rect x="582.3" y="419.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2,601 samples, 0.25%)</title><rect x="582.3" y="403.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2,601 samples, 0.25%)</title><rect x="582.3" y="387.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2,601 samples, 0.25%)</title><rect x="582.3" y="371.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (2,601 samples, 0.25%)</title><rect x="582.3" y="355.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2,601 samples, 0.25%)</title><rect x="582.3" y="339.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2,601 samples, 0.25%)</title><rect x="582.3" y="323.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,350 samples, 0.13%)</title><rect x="582.3" y="307.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,350 samples, 0.13%)</title><rect x="582.3" y="291.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.3" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1,350 samples, 0.13%)</title><rect x="582.3" y="275.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="585.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,251 samples, 0.12%)</title><rect x="583.8" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$474/216329199.apply (1,251 samples, 0.12%)</title><rect x="583.8" y="291.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1,251 samples, 0.12%)</title><rect x="583.8" y="275.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.8" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,251 samples, 0.12%)</title><rect x="583.8" y="259.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="586.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (14,089 samples, 1.35%)</title><rect x="585.3" y="483.0" width="15.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.3" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3,914 samples, 0.37%)</title><rect x="585.3" y="467.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (1,418 samples, 0.14%)</title><rect x="585.3" y="451.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (1,418 samples, 0.14%)</title><rect x="585.3" y="435.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="588.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,496 samples, 0.24%)</title><rect x="586.9" y="451.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.9" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,367 samples, 0.23%)</title><rect x="586.9" y="435.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="589.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (771 samples, 0.07%)</title><rect x="589.7" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (771 samples, 0.07%)</title><rect x="589.7" y="451.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="592.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,138 samples, 0.20%)</title><rect x="590.6" y="467.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,138 samples, 0.20%)</title><rect x="590.6" y="451.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,138 samples, 0.20%)</title><rect x="590.6" y="435.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2,138 samples, 0.20%)</title><rect x="590.6" y="419.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="593.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (4,144 samples, 0.40%)</title><rect x="593.0" y="467.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.0" y="478.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (1,003 samples, 0.10%)</title><rect x="593.0" y="451.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.0" y="462.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (1,003 samples, 0.10%)</title><rect x="593.0" y="435.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="596.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (3,141 samples, 0.30%)</title><rect x="594.2" y="451.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (737 samples, 0.07%)</title><rect x="594.2" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (737 samples, 0.07%)</title><rect x="594.2" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$485/1673068368.get$Lambda (737 samples, 0.07%)</title><rect x="594.2" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$485 (737 samples, 0.07%)</title><rect x="594.2" y="387.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="597.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (2,389 samples, 0.23%)</title><rect x="595.0" y="435.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.0" y="446.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (2,389 samples, 0.23%)</title><rect x="595.0" y="419.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="598.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (3,066 samples, 0.29%)</title><rect x="597.7" y="467.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.7" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (2,689 samples, 0.26%)</title><rect x="597.7" y="451.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="600.7" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (377 samples, 0.04%)</title><rect x="600.7" y="451.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="603.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (204,018 samples, 19.52%)</title><rect x="601.2" y="579.0" width="230.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.2" y="590.0">ru/mail/polis/service/kate/mor..</text>
</g>
<g>
<title>java.util.ArrayList (482 samples, 0.05%)</title><rect x="601.2" y="563.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="604.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (670 samples, 0.06%)</title><rect x="601.7" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (670 samples, 0.06%)</title><rect x="601.7" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$200/1317088569.get$Lambda (670 samples, 0.06%)</title><rect x="601.7" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.7" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$200 (670 samples, 0.06%)</title><rect x="601.7" y="515.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="604.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (804 samples, 0.08%)</title><rect x="602.5" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (804 samples, 0.08%)</title><rect x="602.5" y="547.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="605.5" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,181 samples, 0.11%)</title><rect x="603.4" y="563.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (785 samples, 0.08%)</title><rect x="603.4" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (785 samples, 0.08%)</title><rect x="603.4" y="531.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="606.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (396 samples, 0.04%)</title><rect x="604.3" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (396 samples, 0.04%)</title><rect x="604.3" y="531.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="607.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (6,403 samples, 0.61%)</title><rect x="604.7" y="563.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (6,403 samples, 0.61%)</title><rect x="604.7" y="547.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (4,980 samples, 0.48%)</title><rect x="604.7" y="531.0" width="5.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="607.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,423 samples, 0.14%)</title><rect x="610.3" y="531.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,423 samples, 0.14%)</title><rect x="610.3" y="515.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,423 samples, 0.14%)</title><rect x="610.3" y="499.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="613.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (122,091 samples, 11.68%)</title><rect x="611.9" y="563.0" width="137.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.9" y="574.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (122,091 samples, 11.68%)</title><rect x="611.9" y="547.0" width="137.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.9" y="558.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (122,091 samples, 11.68%)</title><rect x="611.9" y="531.0" width="137.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.9" y="542.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (122,091 samples, 11.68%)</title><rect x="611.9" y="515.0" width="137.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.9" y="526.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,210 samples, 0.12%)</title><rect x="611.9" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,210 samples, 0.12%)</title><rect x="611.9" y="483.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$193/1142862075.get$Lambda (1,210 samples, 0.12%)</title><rect x="611.9" y="467.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$193 (1,210 samples, 0.12%)</title><rect x="611.9" y="451.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="614.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3,160 samples, 0.30%)</title><rect x="613.3" y="499.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3,160 samples, 0.30%)</title><rect x="613.3" y="483.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,673 samples, 0.16%)</title><rect x="613.3" y="467.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="616.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,487 samples, 0.14%)</title><rect x="615.2" y="467.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,487 samples, 0.14%)</title><rect x="615.2" y="451.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,487 samples, 0.14%)</title><rect x="615.2" y="435.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="618.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3,624 samples, 0.35%)</title><rect x="616.9" y="499.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3,624 samples, 0.35%)</title><rect x="616.9" y="483.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2,008 samples, 0.19%)</title><rect x="616.9" y="467.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="619.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,616 samples, 0.15%)</title><rect x="619.1" y="467.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,616 samples, 0.15%)</title><rect x="619.1" y="451.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,616 samples, 0.15%)</title><rect x="619.1" y="435.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="622.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (5,697 samples, 0.55%)</title><rect x="621.0" y="499.0" width="6.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="624.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (2,753 samples, 0.26%)</title><rect x="627.5" y="499.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="630.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (1,156 samples, 0.11%)</title><rect x="630.6" y="499.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="633.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (67,130 samples, 6.42%)</title><rect x="631.9" y="499.0" width="75.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.9" y="510.0">jdk/inte..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5,442 samples, 0.52%)</title><rect x="631.9" y="483.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.9" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4,331 samples, 0.41%)</title><rect x="631.9" y="467.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.9" y="478.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1,414 samples, 0.14%)</title><rect x="631.9" y="451.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.9" y="462.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,414 samples, 0.14%)</title><rect x="631.9" y="435.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="634.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,917 samples, 0.28%)</title><rect x="633.5" y="451.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.5" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,774 samples, 0.27%)</title><rect x="633.5" y="435.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="636.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1,111 samples, 0.11%)</title><rect x="636.8" y="467.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,111 samples, 0.11%)</title><rect x="636.8" y="451.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1,111 samples, 0.11%)</title><rect x="636.8" y="435.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/230643635.get (1,111 samples, 0.11%)</title><rect x="636.8" y="419.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.8" y="430.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (1,111 samples, 0.11%)</title><rect x="636.8" y="403.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="639.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (27,133 samples, 2.60%)</title><rect x="638.1" y="483.0" width="30.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.1" y="494.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (27,133 samples, 2.60%)</title><rect x="638.1" y="467.0" width="30.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.1" y="478.0">ja..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (673 samples, 0.06%)</title><rect x="638.1" y="451.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="641.1" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,334 samples, 0.13%)</title><rect x="638.8" y="451.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="641.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (4,055 samples, 0.39%)</title><rect x="640.4" y="451.0" width="4.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="643.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (850 samples, 0.08%)</title><rect x="644.9" y="451.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="647.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,738 samples, 0.26%)</title><rect x="645.9" y="451.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,738 samples, 0.26%)</title><rect x="645.9" y="435.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.get$Lambda (2,738 samples, 0.26%)</title><rect x="645.9" y="419.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.9" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$140 (2,738 samples, 0.26%)</title><rect x="645.9" y="403.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="648.9" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (10,382 samples, 0.99%)</title><rect x="649.0" y="451.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (10,382 samples, 0.99%)</title><rect x="649.0" y="435.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (10,382 samples, 0.99%)</title><rect x="649.0" y="419.0" width="11.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10,382 samples, 0.99%)</title><rect x="649.0" y="403.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3,874 samples, 0.37%)</title><rect x="649.0" y="387.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (3,874 samples, 0.37%)</title><rect x="649.0" y="371.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3,874 samples, 0.37%)</title><rect x="649.0" y="355.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,874 samples, 0.37%)</title><rect x="649.0" y="339.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,874 samples, 0.37%)</title><rect x="649.0" y="323.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,874 samples, 0.37%)</title><rect x="649.0" y="307.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,874 samples, 0.37%)</title><rect x="649.0" y="291.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,874 samples, 0.37%)</title><rect x="649.0" y="275.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,722 samples, 0.36%)</title><rect x="649.0" y="259.0" width="4.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="652.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,747 samples, 0.17%)</title><rect x="653.4" y="387.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,747 samples, 0.17%)</title><rect x="653.4" y="371.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.get$Lambda (1,747 samples, 0.17%)</title><rect x="653.4" y="355.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.4" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (1,747 samples, 0.17%)</title><rect x="653.4" y="339.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="656.4" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,314 samples, 0.22%)</title><rect x="655.3" y="387.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.3" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,314 samples, 0.22%)</title><rect x="655.3" y="371.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,283 samples, 0.12%)</title><rect x="655.3" y="355.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,283 samples, 0.12%)</title><rect x="655.3" y="339.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.3" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,283 samples, 0.12%)</title><rect x="655.3" y="323.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="658.3" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (1,031 samples, 0.10%)</title><rect x="656.8" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.8" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,031 samples, 0.10%)</title><rect x="656.8" y="339.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="659.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,447 samples, 0.23%)</title><rect x="657.9" y="387.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,447 samples, 0.23%)</title><rect x="657.9" y="371.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="660.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,950 samples, 0.19%)</title><rect x="660.7" y="451.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.7" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,950 samples, 0.19%)</title><rect x="660.7" y="435.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="663.7" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (5,151 samples, 0.49%)</title><rect x="662.9" y="451.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.9" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (5,151 samples, 0.49%)</title><rect x="662.9" y="435.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="665.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (700 samples, 0.07%)</title><rect x="668.7" y="483.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="671.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (27,148 samples, 2.60%)</title><rect x="669.5" y="483.0" width="30.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.5" y="494.0">jd..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (27,148 samples, 2.60%)</title><rect x="669.5" y="467.0" width="30.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.5" y="478.0">su..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (25,489 samples, 2.44%)</title><rect x="669.5" y="451.0" width="28.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.5" y="462.0">ja..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (25,489 samples, 2.44%)</title><rect x="669.5" y="435.0" width="28.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.5" y="446.0">su..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (25,489 samples, 2.44%)</title><rect x="669.5" y="419.0" width="28.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="672.5" y="430.0">su..</text>
</g>
<g>
<title>java.lang.StringBuilder (3,091 samples, 0.30%)</title><rect x="669.5" y="403.0" width="3.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="672.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (8,108 samples, 0.78%)</title><rect x="673.0" y="403.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.0" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8,108 samples, 0.78%)</title><rect x="673.0" y="387.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.0" y="398.0"></text>
</g>
<g>
<title>byte[] (8,108 samples, 0.78%)</title><rect x="673.0" y="371.0" width="9.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="676.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (14,290 samples, 1.37%)</title><rect x="682.2" y="403.0" width="16.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14,290 samples, 1.37%)</title><rect x="682.2" y="387.0" width="16.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (7,567 samples, 0.72%)</title><rect x="682.2" y="371.0" width="8.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="685.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6,723 samples, 0.64%)</title><rect x="690.7" y="371.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.7" y="382.0"></text>
</g>
<g>
<title>byte[] (6,723 samples, 0.64%)</title><rect x="690.7" y="355.0" width="7.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="693.7" y="366.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (1,659 samples, 0.16%)</title><rect x="698.3" y="451.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="701.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2,064 samples, 0.20%)</title><rect x="700.2" y="483.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.2" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,064 samples, 0.20%)</title><rect x="700.2" y="467.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="703.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4,643 samples, 0.44%)</title><rect x="702.5" y="483.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.5" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,261 samples, 0.12%)</title><rect x="702.5" y="467.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="705.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,170 samples, 0.11%)</title><rect x="703.9" y="467.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,170 samples, 0.11%)</title><rect x="703.9" y="451.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="706.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,212 samples, 0.21%)</title><rect x="705.2" y="467.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.2" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,212 samples, 0.21%)</title><rect x="705.2" y="451.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="708.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (25,051 samples, 2.40%)</title><rect x="707.7" y="499.0" width="28.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.7" y="510.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1,052 samples, 0.10%)</title><rect x="707.7" y="483.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="710.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (2,783 samples, 0.27%)</title><rect x="708.9" y="483.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="711.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (785 samples, 0.08%)</title><rect x="712.1" y="483.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (708 samples, 0.07%)</title><rect x="712.9" y="483.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (708 samples, 0.07%)</title><rect x="712.9" y="467.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="715.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (19,723 samples, 1.89%)</title><rect x="713.7" y="483.0" width="22.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="716.7" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (19,723 samples, 1.89%)</title><rect x="713.7" y="467.0" width="22.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="716.7" y="478.0">j..</text>
</g>
<g>
<title>java.lang.Class[] (2,080 samples, 0.20%)</title><rect x="713.7" y="451.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="716.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,507 samples, 0.14%)</title><rect x="716.1" y="451.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="719.1" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (1,518 samples, 0.15%)</title><rect x="717.8" y="451.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="720.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (8,522 samples, 0.82%)</title><rect x="719.5" y="451.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (8,522 samples, 0.82%)</title><rect x="719.5" y="435.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.5" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (8,522 samples, 0.82%)</title><rect x="719.5" y="419.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.5" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (8,522 samples, 0.82%)</title><rect x="719.5" y="403.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.5" y="414.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (6,613 samples, 0.63%)</title><rect x="719.5" y="387.0" width="7.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="722.5" y="398.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (1,909 samples, 0.18%)</title><rect x="727.0" y="387.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="730.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2,478 samples, 0.24%)</title><rect x="729.1" y="451.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2,478 samples, 0.24%)</title><rect x="729.1" y="435.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1,846 samples, 0.18%)</title><rect x="729.1" y="419.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (1,846 samples, 0.18%)</title><rect x="729.1" y="403.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="732.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (632 samples, 0.06%)</title><rect x="731.2" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (632 samples, 0.06%)</title><rect x="731.2" y="403.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="734.2" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3,618 samples, 0.35%)</title><rect x="731.9" y="451.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (3,618 samples, 0.35%)</title><rect x="731.9" y="435.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.9" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3,618 samples, 0.35%)</title><rect x="731.9" y="419.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="734.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (12,188 samples, 1.17%)</title><rect x="736.0" y="499.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,948 samples, 0.19%)</title><rect x="736.0" y="483.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (913 samples, 0.09%)</title><rect x="736.0" y="467.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="739.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,035 samples, 0.10%)</title><rect x="737.0" y="467.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,035 samples, 0.10%)</title><rect x="737.0" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (997 samples, 0.10%)</title><rect x="737.0" y="435.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="740.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,608 samples, 0.15%)</title><rect x="738.2" y="483.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="741.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (8,632 samples, 0.83%)</title><rect x="740.0" y="483.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,822 samples, 0.17%)</title><rect x="740.0" y="467.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,822 samples, 0.17%)</title><rect x="740.0" y="451.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$172/330952395.get$Lambda (951 samples, 0.09%)</title><rect x="740.0" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$172 (951 samples, 0.09%)</title><rect x="740.0" y="419.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="743.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/283532103.get$Lambda (871 samples, 0.08%)</title><rect x="741.1" y="435.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$181 (871 samples, 0.08%)</title><rect x="741.1" y="419.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="744.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6,810 samples, 0.65%)</title><rect x="742.1" y="467.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6,810 samples, 0.65%)</title><rect x="742.1" y="451.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (3,444 samples, 0.33%)</title><rect x="742.1" y="435.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="745.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3,366 samples, 0.32%)</title><rect x="746.0" y="435.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3,366 samples, 0.32%)</title><rect x="746.0" y="419.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3,366 samples, 0.32%)</title><rect x="746.0" y="403.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="749.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (5,217 samples, 0.50%)</title><rect x="749.8" y="563.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.8" y="574.0"></text>
</g>
<g>
<title>java.util.HashSet (318 samples, 0.03%)</title><rect x="749.8" y="547.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="752.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,286 samples, 0.12%)</title><rect x="750.1" y="547.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (1,286 samples, 0.12%)</title><rect x="750.1" y="531.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="753.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3,613 samples, 0.35%)</title><rect x="751.6" y="547.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3,613 samples, 0.35%)</title><rect x="751.6" y="531.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3,613 samples, 0.35%)</title><rect x="751.6" y="515.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2,168 samples, 0.21%)</title><rect x="751.6" y="499.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.6" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2,168 samples, 0.21%)</title><rect x="751.6" y="483.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="754.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,445 samples, 0.14%)</title><rect x="754.0" y="499.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.0" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,107 samples, 0.11%)</title><rect x="754.0" y="483.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="757.0" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (338 samples, 0.03%)</title><rect x="755.3" y="483.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="758.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getLocalResults (1,377 samples, 0.13%)</title><rect x="755.7" y="563.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="758.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (414 samples, 0.04%)</title><rect x="755.7" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (414 samples, 0.04%)</title><rect x="755.7" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/1936887332.get$Lambda (414 samples, 0.04%)</title><rect x="755.7" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.7" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$128 (414 samples, 0.04%)</title><rect x="755.7" y="499.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="758.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (963 samples, 0.09%)</title><rect x="756.1" y="547.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (963 samples, 0.09%)</title><rect x="756.1" y="531.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (472 samples, 0.05%)</title><rect x="756.1" y="515.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="759.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (491 samples, 0.05%)</title><rect x="756.7" y="515.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="759.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.requestForReplica (65,793 samples, 6.29%)</title><rect x="757.2" y="563.0" width="74.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.2" y="574.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5,162 samples, 0.49%)</title><rect x="757.3" y="547.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (5,162 samples, 0.49%)</title><rect x="757.3" y="531.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/644345897.invoke (5,162 samples, 0.49%)</title><rect x="757.3" y="515.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5,162 samples, 0.49%)</title><rect x="757.3" y="499.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1,845 samples, 0.18%)</title><rect x="757.3" y="483.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.3" y="494.0"></text>
</g>
<g>
<title>java.lang.String (1,845 samples, 0.18%)</title><rect x="757.3" y="467.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="760.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3,317 samples, 0.32%)</title><rect x="759.3" y="483.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3,317 samples, 0.32%)</title><rect x="759.3" y="467.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.3" y="478.0"></text>
</g>
<g>
<title>byte[] (2,968 samples, 0.28%)</title><rect x="759.3" y="451.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="762.3" y="462.0"></text>
</g>
<g>
<title>byte[] (349 samples, 0.03%)</title><rect x="762.7" y="451.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="765.7" y="462.0"></text>
</g>
<g>
<title>java/net/URI.create (18,371 samples, 1.76%)</title><rect x="763.1" y="547.0" width="20.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.1" y="558.0"></text>
</g>
<g>
<title>java.net.URI (2,762 samples, 0.26%)</title><rect x="763.1" y="531.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="766.1" y="542.0"></text>
</g>
<g>
<title>java.net.URI (1,035 samples, 0.10%)</title><rect x="766.2" y="531.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="769.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (14,574 samples, 1.39%)</title><rect x="767.4" y="531.0" width="16.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.4" y="542.0"></text>
</g>
<g>
<title>java.net.URI$Parser (1,315 samples, 0.13%)</title><rect x="767.4" y="515.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="770.4" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (13,259 samples, 1.27%)</title><rect x="768.9" y="515.0" width="14.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,509 samples, 0.34%)</title><rect x="768.9" y="499.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,509 samples, 0.34%)</title><rect x="768.9" y="483.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (1,466 samples, 0.14%)</title><rect x="768.9" y="467.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="771.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,043 samples, 0.20%)</title><rect x="770.5" y="467.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.5" y="478.0"></text>
</g>
<g>
<title>byte[] (2,043 samples, 0.20%)</title><rect x="770.5" y="451.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="773.5" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (9,750 samples, 0.93%)</title><rect x="772.8" y="499.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.8" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,075 samples, 0.49%)</title><rect x="772.8" y="483.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,075 samples, 0.49%)</title><rect x="772.8" y="467.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2,041 samples, 0.20%)</title><rect x="772.8" y="451.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="775.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,034 samples, 0.29%)</title><rect x="775.1" y="451.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.1" y="462.0"></text>
</g>
<g>
<title>byte[] (3,034 samples, 0.29%)</title><rect x="775.1" y="435.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="778.1" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (4,675 samples, 0.45%)</title><rect x="778.5" y="483.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,377 samples, 0.23%)</title><rect x="778.5" y="467.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,377 samples, 0.23%)</title><rect x="778.5" y="451.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,045 samples, 0.10%)</title><rect x="778.5" y="435.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="781.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,332 samples, 0.13%)</title><rect x="779.7" y="435.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.7" y="446.0"></text>
</g>
<g>
<title>byte[] (1,332 samples, 0.13%)</title><rect x="779.7" y="419.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="782.7" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2,298 samples, 0.22%)</title><rect x="781.2" y="467.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.2" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2,298 samples, 0.22%)</title><rect x="781.2" y="451.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,298 samples, 0.22%)</title><rect x="781.2" y="435.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,298 samples, 0.22%)</title><rect x="781.2" y="419.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (940 samples, 0.09%)</title><rect x="781.2" y="403.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="784.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,358 samples, 0.13%)</title><rect x="782.3" y="403.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="785.3" y="414.0"></text>
</g>
<g>
<title>byte[] (1,358 samples, 0.13%)</title><rect x="782.3" y="387.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="785.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (5,208 samples, 0.50%)</title><rect x="783.8" y="547.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (1,905 samples, 0.18%)</title><rect x="783.8" y="531.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="786.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3,303 samples, 0.32%)</title><rect x="786.0" y="531.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (700 samples, 0.07%)</title><rect x="786.0" y="515.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="789.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2,603 samples, 0.25%)</title><rect x="786.8" y="515.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,603 samples, 0.25%)</title><rect x="786.8" y="499.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="789.8" y="510.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (1,672 samples, 0.16%)</title><rect x="789.7" y="547.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (1,672 samples, 0.16%)</title><rect x="789.7" y="531.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,643 samples, 0.16%)</title><rect x="789.7" y="515.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,643 samples, 0.16%)</title><rect x="789.7" y="499.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,643 samples, 0.16%)</title><rect x="789.7" y="483.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.7" y="494.0"></text>
</g>
<g>
<title>byte[] (1,643 samples, 0.16%)</title><rect x="789.7" y="467.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="792.7" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4,274 samples, 0.41%)</title><rect x="791.6" y="547.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.6" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,274 samples, 0.41%)</title><rect x="791.6" y="531.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="794.6" y="542.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (6,532 samples, 0.62%)</title><rect x="796.4" y="547.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.4" y="558.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (6,532 samples, 0.62%)</title><rect x="796.4" y="531.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.4" y="542.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (6,532 samples, 0.62%)</title><rect x="796.4" y="515.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (4,994 samples, 0.48%)</title><rect x="796.4" y="499.0" width="5.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="799.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (1,538 samples, 0.15%)</title><rect x="802.1" y="499.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.1" y="510.0"></text>
</g>
<g>
<title>char[] (1,538 samples, 0.15%)</title><rect x="802.1" y="483.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="805.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (20,159 samples, 1.93%)</title><rect x="803.8" y="547.0" width="22.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.8" y="558.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (1,866 samples, 0.18%)</title><rect x="803.8" y="531.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="806.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (18,293 samples, 1.75%)</title><rect x="805.9" y="531.0" width="20.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (17,689 samples, 1.69%)</title><rect x="805.9" y="515.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (17,689 samples, 1.69%)</title><rect x="805.9" y="499.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.9" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (675 samples, 0.06%)</title><rect x="805.9" y="483.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="808.9" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,026 samples, 0.10%)</title><rect x="806.7" y="483.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="809.7" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,196 samples, 0.21%)</title><rect x="807.8" y="483.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="810.8" y="494.0"></text>
</g>
<g>
<title>java.util.TreeSet (859 samples, 0.08%)</title><rect x="810.3" y="483.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="813.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,247 samples, 0.12%)</title><rect x="811.3" y="483.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="814.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,247 samples, 0.12%)</title><rect x="811.3" y="467.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.get$Lambda (1,247 samples, 0.12%)</title><rect x="811.3" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.3" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$140 (1,247 samples, 0.12%)</title><rect x="811.3" y="435.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="814.3" y="446.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,659 samples, 0.16%)</title><rect x="812.7" y="483.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.7" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,659 samples, 0.16%)</title><rect x="812.7" y="467.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="815.7" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7,985 samples, 0.76%)</title><rect x="814.5" y="483.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (7,985 samples, 0.76%)</title><rect x="814.5" y="467.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7,985 samples, 0.76%)</title><rect x="814.5" y="451.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (951 samples, 0.09%)</title><rect x="814.5" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (951 samples, 0.09%)</title><rect x="814.5" y="419.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.get$Lambda (951 samples, 0.09%)</title><rect x="814.5" y="403.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.5" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (951 samples, 0.09%)</title><rect x="814.5" y="387.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="817.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2,874 samples, 0.27%)</title><rect x="815.6" y="435.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (2,874 samples, 0.27%)</title><rect x="815.6" y="419.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2,874 samples, 0.27%)</title><rect x="815.6" y="403.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,874 samples, 0.27%)</title><rect x="815.6" y="387.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,874 samples, 0.27%)</title><rect x="815.6" y="371.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,874 samples, 0.27%)</title><rect x="815.6" y="355.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,874 samples, 0.27%)</title><rect x="815.6" y="339.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,874 samples, 0.27%)</title><rect x="815.6" y="323.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.6" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,680 samples, 0.26%)</title><rect x="815.6" y="307.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="818.6" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,097 samples, 0.20%)</title><rect x="818.9" y="435.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.9" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,097 samples, 0.20%)</title><rect x="818.9" y="419.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (989 samples, 0.09%)</title><rect x="818.9" y="403.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (989 samples, 0.09%)</title><rect x="818.9" y="387.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (989 samples, 0.09%)</title><rect x="818.9" y="371.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="821.9" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (1,108 samples, 0.11%)</title><rect x="820.0" y="403.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.0" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,108 samples, 0.11%)</title><rect x="820.0" y="387.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="823.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,063 samples, 0.20%)</title><rect x="821.2" y="435.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,063 samples, 0.20%)</title><rect x="821.2" y="419.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="824.2" y="430.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2,042 samples, 0.20%)</title><rect x="823.6" y="483.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.6" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,042 samples, 0.20%)</title><rect x="823.6" y="467.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="826.6" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (604 samples, 0.06%)</title><rect x="825.9" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.9" y="526.0"></text>
</g>
<g>
<title>java/util/Optional.of (604 samples, 0.06%)</title><rect x="825.9" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.9" y="510.0"></text>
</g>
<g>
<title>java.util.Optional (604 samples, 0.06%)</title><rect x="825.9" y="483.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="828.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (4,385 samples, 0.42%)</title><rect x="826.5" y="547.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (4,385 samples, 0.42%)</title><rect x="826.5" y="531.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (4,385 samples, 0.42%)</title><rect x="826.5" y="515.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (4,385 samples, 0.42%)</title><rect x="826.5" y="499.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.5" y="510.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (4,385 samples, 0.42%)</title><rect x="826.5" y="483.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,846 samples, 0.18%)</title><rect x="826.5" y="467.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,846 samples, 0.18%)</title><rect x="826.5" y="451.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="829.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$136/696862212.apply (2,539 samples, 0.24%)</title><rect x="828.6" y="467.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (2,539 samples, 0.24%)</title><rect x="828.6" y="451.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.6" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,067 samples, 0.10%)</title><rect x="828.6" y="435.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="831.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,472 samples, 0.14%)</title><rect x="829.8" y="435.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,472 samples, 0.14%)</title><rect x="829.8" y="419.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="832.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (118,441 samples, 11.33%)</title><rect x="831.5" y="691.0" width="133.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.5" y="702.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (118,441 samples, 11.33%)</title><rect x="831.5" y="675.0" width="133.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.5" y="686.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (118,441 samples, 11.33%)</title><rect x="831.5" y="659.0" width="133.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.5" y="670.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (118,441 samples, 11.33%)</title><rect x="831.5" y="643.0" width="133.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.5" y="654.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (118,441 samples, 11.33%)</title><rect x="831.5" y="627.0" width="133.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="834.5" y="638.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (83,832 samples, 8.02%)</title><rect x="831.5" y="611.0" width="94.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.5" y="622.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (83,832 samples, 8.02%)</title><rect x="831.5" y="595.0" width="94.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.5" y="606.0">java/util/c..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/1936887332.get (83,729 samples, 8.01%)</title><rect x="831.6" y="579.0" width="94.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.6" y="590.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getLocalResults$8 (83,729 samples, 8.01%)</title><rect x="831.6" y="563.0" width="94.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.6" y="574.0">ru/mail/pol..</text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (944 samples, 0.09%)</title><rect x="831.6" y="547.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="834.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getTimestamp (3,136 samples, 0.30%)</title><rect x="832.7" y="547.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3,136 samples, 0.30%)</title><rect x="832.7" y="531.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,136 samples, 0.30%)</title><rect x="832.7" y="515.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,136 samples, 0.30%)</title><rect x="832.7" y="499.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (1,472 samples, 0.14%)</title><rect x="832.7" y="483.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="835.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,664 samples, 0.16%)</title><rect x="834.3" y="483.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.3" y="494.0"></text>
</g>
<g>
<title>byte[] (1,664 samples, 0.16%)</title><rect x="834.3" y="467.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="837.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$460/1313189910.act (78,537 samples, 7.51%)</title><rect x="836.2" y="547.0" width="88.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="839.2" y="558.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$2 (78,537 samples, 7.51%)</title><rect x="836.2" y="531.0" width="88.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.2" y="542.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (78,537 samples, 7.51%)</title><rect x="836.2" y="515.0" width="88.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.2" y="526.0">ru/mail/po..</text>
</g>
<g>
<title>byte[] (1,381 samples, 0.13%)</title><rect x="836.2" y="499.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="839.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (3,354 samples, 0.32%)</title><rect x="837.8" y="499.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2020738054.invoke (3,354 samples, 0.32%)</title><rect x="837.8" y="483.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,354 samples, 0.32%)</title><rect x="837.8" y="467.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1,256 samples, 0.12%)</title><rect x="837.8" y="451.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,256 samples, 0.12%)</title><rect x="837.8" y="435.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="840.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,098 samples, 0.20%)</title><rect x="839.2" y="451.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,098 samples, 0.20%)</title><rect x="839.2" y="435.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.2" y="446.0"></text>
</g>
<g>
<title>byte[] (2,098 samples, 0.20%)</title><rect x="839.2" y="419.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="842.2" y="430.0"></text>
</g>
<g>
<title>one.nio.http.Response (687 samples, 0.07%)</title><rect x="841.8" y="499.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="844.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4,521 samples, 0.43%)</title><rect x="842.6" y="499.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="845.6" y="510.0"></text>
</g>
<g>
<title>byte[] (2,035 samples, 0.19%)</title><rect x="842.6" y="483.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="845.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (1,629 samples, 0.16%)</title><rect x="844.9" y="483.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="847.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (857 samples, 0.08%)</title><rect x="846.7" y="483.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="849.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (68,374 samples, 6.54%)</title><rect x="847.7" y="499.0" width="77.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.7" y="510.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9,271 samples, 0.89%)</title><rect x="847.7" y="483.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5,250 samples, 0.50%)</title><rect x="847.7" y="467.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5,250 samples, 0.50%)</title><rect x="847.7" y="451.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5,250 samples, 0.50%)</title><rect x="847.7" y="435.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,133 samples, 0.11%)</title><rect x="847.7" y="419.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1,133 samples, 0.11%)</title><rect x="847.7" y="403.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.7" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,133 samples, 0.11%)</title><rect x="847.7" y="387.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,133 samples, 0.11%)</title><rect x="847.7" y="371.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,133 samples, 0.11%)</title><rect x="847.7" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1,133 samples, 0.11%)</title><rect x="847.7" y="339.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (1,133 samples, 0.11%)</title><rect x="847.7" y="323.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1,133 samples, 0.11%)</title><rect x="847.7" y="307.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1,133 samples, 0.11%)</title><rect x="847.7" y="291.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,105 samples, 0.11%)</title><rect x="847.7" y="275.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$474/216329199.apply (1,105 samples, 0.11%)</title><rect x="847.7" y="259.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1,105 samples, 0.11%)</title><rect x="847.7" y="243.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.7" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,105 samples, 0.11%)</title><rect x="847.7" y="227.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="850.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$519/1189393447.apply (4,117 samples, 0.39%)</title><rect x="849.0" y="419.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="852.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4,117 samples, 0.39%)</title><rect x="849.0" y="403.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,117 samples, 0.39%)</title><rect x="849.0" y="387.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,117 samples, 0.39%)</title><rect x="849.0" y="371.0" width="4.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="852.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$527/1360750443.apply (4,021 samples, 0.38%)</title><rect x="853.6" y="467.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4,021 samples, 0.38%)</title><rect x="853.6" y="451.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,021 samples, 0.38%)</title><rect x="853.6" y="435.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,021 samples, 0.38%)</title><rect x="853.6" y="419.0" width="4.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="856.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (1,722 samples, 0.16%)</title><rect x="858.2" y="483.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,722 samples, 0.16%)</title><rect x="858.2" y="467.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.2" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,722 samples, 0.16%)</title><rect x="858.2" y="451.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="861.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (57,381 samples, 5.49%)</title><rect x="860.1" y="483.0" width="64.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.1" y="494.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,254 samples, 0.50%)</title><rect x="860.1" y="467.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.1" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (681 samples, 0.07%)</title><rect x="860.1" y="451.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="863.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4,573 samples, 0.44%)</title><rect x="860.9" y="451.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.9" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1,081 samples, 0.10%)</title><rect x="860.9" y="435.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="863.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (893 samples, 0.09%)</title><rect x="862.1" y="435.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="865.1" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (893 samples, 0.09%)</title><rect x="862.1" y="419.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="865.1" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1,438 samples, 0.14%)</title><rect x="863.1" y="435.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="866.1" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1,140 samples, 0.11%)</title><rect x="864.7" y="435.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,140 samples, 0.11%)</title><rect x="864.7" y="419.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="867.7" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (2,710 samples, 0.26%)</title><rect x="866.0" y="467.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="869.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,166 samples, 0.21%)</title><rect x="869.1" y="467.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,166 samples, 0.21%)</title><rect x="869.1" y="451.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,166 samples, 0.21%)</title><rect x="869.1" y="435.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,166 samples, 0.21%)</title><rect x="869.1" y="419.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,166 samples, 0.21%)</title><rect x="869.1" y="403.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,801 samples, 0.17%)</title><rect x="869.1" y="387.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="872.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (287 samples, 0.03%)</title><rect x="871.1" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="874.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (376 samples, 0.04%)</title><rect x="871.5" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="874.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (376 samples, 0.04%)</title><rect x="871.5" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (376 samples, 0.04%)</title><rect x="871.5" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.5" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$494/938260855.get$Lambda (376 samples, 0.04%)</title><rect x="871.5" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.5" y="430.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$494 (376 samples, 0.04%)</title><rect x="871.5" y="403.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="874.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2,432 samples, 0.23%)</title><rect x="872.0" y="467.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1,142 samples, 0.11%)</title><rect x="872.0" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,142 samples, 0.11%)</title><rect x="872.0" y="435.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,142 samples, 0.11%)</title><rect x="872.0" y="419.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.0" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$494/938260855.get$Lambda (1,142 samples, 0.11%)</title><rect x="872.0" y="403.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.0" y="414.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$494 (1,142 samples, 0.11%)</title><rect x="872.0" y="387.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="875.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,290 samples, 0.12%)</title><rect x="873.3" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,290 samples, 0.12%)</title><rect x="873.3" y="435.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,290 samples, 0.12%)</title><rect x="873.3" y="419.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.3" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$500/1126047288.get$Lambda (1,290 samples, 0.12%)</title><rect x="873.3" y="403.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.3" y="414.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$500 (1,290 samples, 0.12%)</title><rect x="873.3" y="387.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="876.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6,054 samples, 0.58%)</title><rect x="874.8" y="467.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="877.8" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1,102 samples, 0.11%)</title><rect x="874.8" y="451.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="877.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4,952 samples, 0.47%)</title><rect x="876.0" y="451.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="879.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,952 samples, 0.47%)</title><rect x="876.0" y="435.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4,952 samples, 0.47%)</title><rect x="876.0" y="419.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="879.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,952 samples, 0.47%)</title><rect x="876.0" y="403.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="879.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (780 samples, 0.07%)</title><rect x="876.0" y="387.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (780 samples, 0.07%)</title><rect x="876.0" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="879.0" y="382.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (780 samples, 0.07%)</title><rect x="876.0" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (780 samples, 0.07%)</title><rect x="876.0" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (780 samples, 0.07%)</title><rect x="876.0" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (780 samples, 0.07%)</title><rect x="876.0" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="879.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (780 samples, 0.07%)</title><rect x="876.0" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="879.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (780 samples, 0.07%)</title><rect x="876.0" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="879.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (780 samples, 0.07%)</title><rect x="876.0" y="259.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="879.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (771 samples, 0.07%)</title><rect x="876.0" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$474/216329199.apply (771 samples, 0.07%)</title><rect x="876.0" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="879.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (771 samples, 0.07%)</title><rect x="876.0" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.0" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (771 samples, 0.07%)</title><rect x="876.0" y="195.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="879.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$519/1189393447.apply (4,172 samples, 0.40%)</title><rect x="876.9" y="387.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4,172 samples, 0.40%)</title><rect x="876.9" y="371.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4,172 samples, 0.40%)</title><rect x="876.9" y="355.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.9" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4,172 samples, 0.40%)</title><rect x="876.9" y="339.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="879.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (38,326 samples, 3.67%)</title><rect x="881.6" y="467.0" width="43.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.6" y="478.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (14,851 samples, 1.42%)</title><rect x="881.6" y="451.0" width="16.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.6" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (432 samples, 0.04%)</title><rect x="881.6" y="435.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="884.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (14,419 samples, 1.38%)</title><rect x="882.1" y="435.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.1" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (845 samples, 0.08%)</title><rect x="882.1" y="419.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="885.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (689 samples, 0.07%)</title><rect x="883.1" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="886.1" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (687 samples, 0.07%)</title><rect x="883.1" y="403.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="886.1" y="414.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1,674 samples, 0.16%)</title><rect x="883.8" y="419.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="886.8" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (892 samples, 0.09%)</title><rect x="885.8" y="419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (892 samples, 0.09%)</title><rect x="885.8" y="403.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="888.8" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10,288 samples, 0.98%)</title><rect x="886.8" y="419.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (10,288 samples, 0.98%)</title><rect x="886.8" y="403.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (10,288 samples, 0.98%)</title><rect x="886.8" y="387.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1,939 samples, 0.19%)</title><rect x="886.8" y="371.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.8" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (1,939 samples, 0.19%)</title><rect x="886.8" y="355.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1,939 samples, 0.19%)</title><rect x="886.8" y="339.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1,939 samples, 0.19%)</title><rect x="886.8" y="323.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,916 samples, 0.18%)</title><rect x="886.8" y="307.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$474/216329199.apply (1,916 samples, 0.18%)</title><rect x="886.8" y="291.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1,916 samples, 0.18%)</title><rect x="886.8" y="275.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.8" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,916 samples, 0.18%)</title><rect x="886.8" y="259.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="889.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (8,349 samples, 0.80%)</title><rect x="889.0" y="371.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.0" y="382.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (2,126 samples, 0.20%)</title><rect x="889.0" y="355.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="892.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,286 samples, 0.12%)</title><rect x="891.4" y="355.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,286 samples, 0.12%)</title><rect x="891.4" y="339.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="894.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$504/1645908117.get$Lambda (555 samples, 0.05%)</title><rect x="891.4" y="323.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$504 (555 samples, 0.05%)</title><rect x="891.4" y="307.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="894.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.get$Lambda (731 samples, 0.07%)</title><rect x="892.0" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.0" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$505 (731 samples, 0.07%)</title><rect x="892.0" y="307.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="895.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,037 samples, 0.10%)</title><rect x="892.8" y="355.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="895.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1,037 samples, 0.10%)</title><rect x="892.8" y="339.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (1,037 samples, 0.10%)</title><rect x="892.8" y="323.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="895.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (3,884 samples, 0.37%)</title><rect x="894.0" y="355.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,657 samples, 0.25%)</title><rect x="894.0" y="339.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="897.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,227 samples, 0.12%)</title><rect x="897.0" y="339.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="900.0" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (986 samples, 0.09%)</title><rect x="898.4" y="451.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="901.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (926 samples, 0.09%)</title><rect x="899.7" y="451.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (926 samples, 0.09%)</title><rect x="899.7" y="435.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="902.7" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (658 samples, 0.06%)</title><rect x="900.8" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (642 samples, 0.06%)</title><rect x="900.8" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (642 samples, 0.06%)</title><rect x="900.8" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.8" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$494/938260855.get$Lambda (642 samples, 0.06%)</title><rect x="900.8" y="403.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.8" y="414.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$494 (642 samples, 0.06%)</title><rect x="900.8" y="387.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="903.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,651 samples, 0.16%)</title><rect x="901.5" y="451.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (556 samples, 0.05%)</title><rect x="901.5" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (556 samples, 0.05%)</title><rect x="901.5" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (556 samples, 0.05%)</title><rect x="901.5" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$494/938260855.get$Lambda (556 samples, 0.05%)</title><rect x="901.5" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.5" y="398.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$494 (556 samples, 0.05%)</title><rect x="901.5" y="371.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="904.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1,095 samples, 0.10%)</title><rect x="902.1" y="435.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,085 samples, 0.10%)</title><rect x="902.1" y="419.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,085 samples, 0.10%)</title><rect x="902.1" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$500/1126047288.get$Lambda (1,085 samples, 0.10%)</title><rect x="902.1" y="387.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.1" y="398.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$500 (1,085 samples, 0.10%)</title><rect x="902.1" y="371.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="905.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3,384 samples, 0.32%)</title><rect x="903.6" y="451.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.6" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1,198 samples, 0.11%)</title><rect x="903.6" y="435.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="906.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2,186 samples, 0.21%)</title><rect x="904.9" y="435.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,186 samples, 0.21%)</title><rect x="904.9" y="419.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2,186 samples, 0.21%)</title><rect x="904.9" y="403.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.9" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2,186 samples, 0.21%)</title><rect x="904.9" y="387.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2,186 samples, 0.21%)</title><rect x="904.9" y="371.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2,186 samples, 0.21%)</title><rect x="904.9" y="355.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2,186 samples, 0.21%)</title><rect x="904.9" y="339.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (2,186 samples, 0.21%)</title><rect x="904.9" y="323.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2,186 samples, 0.21%)</title><rect x="904.9" y="307.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2,186 samples, 0.21%)</title><rect x="904.9" y="291.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (905 samples, 0.09%)</title><rect x="904.9" y="275.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (905 samples, 0.09%)</title><rect x="904.9" y="259.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.9" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (903 samples, 0.09%)</title><rect x="904.9" y="243.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="907.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,281 samples, 0.12%)</title><rect x="905.9" y="275.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$474/216329199.apply (1,280 samples, 0.12%)</title><rect x="905.9" y="259.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (1,280 samples, 0.12%)</title><rect x="905.9" y="243.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.9" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (1,280 samples, 0.12%)</title><rect x="905.9" y="227.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="908.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (15,501 samples, 1.48%)</title><rect x="907.4" y="451.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.4" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4,043 samples, 0.39%)</title><rect x="907.4" y="435.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (1,357 samples, 0.13%)</title><rect x="907.4" y="419.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (1,357 samples, 0.13%)</title><rect x="907.4" y="403.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="910.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,686 samples, 0.26%)</title><rect x="908.9" y="419.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="911.9" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,436 samples, 0.23%)</title><rect x="908.9" y="403.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="911.9" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (250 samples, 0.02%)</title><rect x="911.7" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="914.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (985 samples, 0.09%)</title><rect x="912.0" y="435.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (985 samples, 0.09%)</title><rect x="912.0" y="419.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="915.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,220 samples, 0.21%)</title><rect x="913.1" y="435.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,220 samples, 0.21%)</title><rect x="913.1" y="419.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,220 samples, 0.21%)</title><rect x="913.1" y="403.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2,220 samples, 0.21%)</title><rect x="913.1" y="387.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="916.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (4,654 samples, 0.45%)</title><rect x="915.6" y="435.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.6" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (1,279 samples, 0.12%)</title><rect x="915.6" y="419.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.6" y="430.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (1,279 samples, 0.12%)</title><rect x="915.6" y="403.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="918.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (3,375 samples, 0.32%)</title><rect x="917.0" y="419.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (676 samples, 0.06%)</title><rect x="917.0" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (676 samples, 0.06%)</title><rect x="917.0" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$485/1673068368.get$Lambda (676 samples, 0.06%)</title><rect x="917.0" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="920.0" y="382.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$485 (676 samples, 0.06%)</title><rect x="917.0" y="355.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="920.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (2,697 samples, 0.26%)</title><rect x="917.8" y="403.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.8" y="414.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (2,697 samples, 0.26%)</title><rect x="917.8" y="387.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="920.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (3,583 samples, 0.34%)</title><rect x="920.8" y="435.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.8" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (2,605 samples, 0.25%)</title><rect x="920.8" y="419.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="923.8" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (978 samples, 0.09%)</title><rect x="923.8" y="419.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.&lt;init&gt; (1,112 samples, 0.11%)</title><rect x="924.9" y="547.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.9" y="558.0"></text>
</g>
<g>
<title>byte[] (1,032 samples, 0.10%)</title><rect x="924.9" y="531.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="927.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (34,609 samples, 3.31%)</title><rect x="926.1" y="611.0" width="39.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="929.1" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (34,609 samples, 3.31%)</title><rect x="926.1" y="595.0" width="39.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.1" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (34,609 samples, 3.31%)</title><rect x="926.1" y="579.0" width="39.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="929.1" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (34,609 samples, 3.31%)</title><rect x="926.1" y="563.0" width="39.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.1" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (32,940 samples, 3.15%)</title><rect x="926.1" y="547.0" width="37.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="929.1" y="558.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$200/1317088569.apply (32,940 samples, 3.15%)</title><rect x="926.1" y="531.0" width="37.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="929.1" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$replication$7 (32,940 samples, 3.15%)</title><rect x="926.1" y="515.0" width="37.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="929.1" y="526.0">ru/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (26,282 samples, 2.51%)</title><rect x="926.1" y="499.0" width="29.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.1" y="510.0">ja..</text>
</g>
<g>
<title>java/util/Collection.stream (7,246 samples, 0.69%)</title><rect x="926.1" y="483.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.1" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2,691 samples, 0.26%)</title><rect x="926.1" y="467.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.1" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (2,691 samples, 0.26%)</title><rect x="926.1" y="451.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="929.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4,555 samples, 0.44%)</title><rect x="929.2" y="467.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="932.2" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3,994 samples, 0.38%)</title><rect x="929.2" y="451.0" width="4.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="932.2" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (561 samples, 0.05%)</title><rect x="933.7" y="451.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="936.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (12,602 samples, 1.21%)</title><rect x="934.3" y="483.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="937.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12,602 samples, 1.21%)</title><rect x="934.3" y="467.0" width="14.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (12,602 samples, 1.21%)</title><rect x="934.3" y="451.0" width="14.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="937.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8,099 samples, 0.77%)</title><rect x="934.3" y="435.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="937.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5,967 samples, 0.57%)</title><rect x="934.3" y="419.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5,967 samples, 0.57%)</title><rect x="934.3" y="403.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (5,967 samples, 0.57%)</title><rect x="934.3" y="387.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.3" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (5,967 samples, 0.57%)</title><rect x="934.3" y="371.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (5,967 samples, 0.57%)</title><rect x="934.3" y="355.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$419/1083086140.applyAsLong (3,199 samples, 0.31%)</title><rect x="934.3" y="339.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="937.3" y="350.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (3,199 samples, 0.31%)</title><rect x="934.3" y="323.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.3" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (3,199 samples, 0.31%)</title><rect x="934.3" y="307.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="937.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Long (3,199 samples, 0.31%)</title><rect x="934.3" y="291.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="937.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (2,768 samples, 0.26%)</title><rect x="937.9" y="339.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.9" y="350.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2,768 samples, 0.26%)</title><rect x="937.9" y="323.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="940.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Long (2,768 samples, 0.26%)</title><rect x="937.9" y="307.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="940.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2,132 samples, 0.20%)</title><rect x="941.1" y="419.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="944.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (2,132 samples, 0.20%)</title><rect x="941.1" y="403.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="944.1" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (2,132 samples, 0.20%)</title><rect x="941.1" y="387.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="944.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$421/1320568786.get (2,750 samples, 0.26%)</title><rect x="943.5" y="435.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.5" y="446.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (2,750 samples, 0.26%)</title><rect x="943.5" y="419.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="946.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1,753 samples, 0.17%)</title><rect x="946.6" y="435.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1,753 samples, 0.17%)</title><rect x="946.6" y="419.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.6" y="430.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1,753 samples, 0.17%)</title><rect x="946.6" y="403.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.6" y="414.0"></text>
</g>
<g>
<title>java.util.OptionalLong (1,753 samples, 0.17%)</title><rect x="946.6" y="387.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="949.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (6,434 samples, 0.62%)</title><rect x="948.5" y="483.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.5" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (5,535 samples, 0.53%)</title><rect x="948.5" y="467.0" width="6.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="951.5" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (899 samples, 0.09%)</title><rect x="954.8" y="467.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="957.8" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (4,205 samples, 0.40%)</title><rect x="955.8" y="499.0" width="4.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="958.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.&lt;init&gt; (2,453 samples, 0.23%)</title><rect x="960.6" y="499.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="963.6" y="510.0"></text>
</g>
<g>
<title>byte[] (2,360 samples, 0.23%)</title><rect x="960.6" y="483.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="963.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,669 samples, 0.16%)</title><rect x="963.3" y="547.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="966.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,669 samples, 0.16%)</title><rect x="963.3" y="531.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="966.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,669 samples, 0.16%)</title><rect x="963.3" y="515.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,669 samples, 0.16%)</title><rect x="963.3" y="499.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,669 samples, 0.16%)</title><rect x="963.3" y="483.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,584 samples, 0.15%)</title><rect x="963.3" y="467.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="966.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (26,949 samples, 2.58%)</title><rect x="965.2" y="691.0" width="30.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.2" y="702.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (643 samples, 0.06%)</title><rect x="965.2" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (643 samples, 0.06%)</title><rect x="965.2" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$379/732232211.get$Lambda (422 samples, 0.04%)</title><rect x="965.2" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$379 (422 samples, 0.04%)</title><rect x="965.2" y="627.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="968.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1610702581.linkToTargetMethod (588 samples, 0.06%)</title><rect x="965.9" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (588 samples, 0.06%)</title><rect x="965.9" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$380/1353633883.get$Lambda (588 samples, 0.06%)</title><rect x="965.9" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$380 (588 samples, 0.06%)</title><rect x="965.9" y="627.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="968.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5,761 samples, 0.55%)</title><rect x="966.6" y="675.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$381/44958327.accept (4,684 samples, 0.45%)</title><rect x="966.6" y="659.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (4,684 samples, 0.45%)</title><rect x="966.6" y="643.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (4,684 samples, 0.45%)</title><rect x="966.6" y="627.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (4,684 samples, 0.45%)</title><rect x="966.6" y="611.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (4,684 samples, 0.45%)</title><rect x="966.6" y="595.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (4,684 samples, 0.45%)</title><rect x="966.6" y="579.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,684 samples, 0.45%)</title><rect x="966.6" y="563.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,684 samples, 0.45%)</title><rect x="966.6" y="547.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4,684 samples, 0.45%)</title><rect x="966.6" y="531.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (4,684 samples, 0.45%)</title><rect x="966.6" y="515.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/493344851.run (4,684 samples, 0.45%)</title><rect x="966.6" y="499.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (4,684 samples, 0.45%)</title><rect x="966.6" y="483.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,187 samples, 0.11%)</title><rect x="966.6" y="467.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,187 samples, 0.11%)</title><rect x="966.6" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1,187 samples, 0.11%)</title><rect x="966.6" y="435.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="969.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (598 samples, 0.06%)</title><rect x="966.6" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (598 samples, 0.06%)</title><rect x="966.6" y="403.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (598 samples, 0.06%)</title><rect x="966.6" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="969.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (598 samples, 0.06%)</title><rect x="966.6" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (598 samples, 0.06%)</title><rect x="966.6" y="355.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="969.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (589 samples, 0.06%)</title><rect x="967.3" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="970.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (589 samples, 0.06%)</title><rect x="967.3" y="403.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (589 samples, 0.06%)</title><rect x="967.3" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (589 samples, 0.06%)</title><rect x="967.3" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="970.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (589 samples, 0.06%)</title><rect x="967.3" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="970.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (581 samples, 0.06%)</title><rect x="967.3" y="339.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="970.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (433 samples, 0.04%)</title><rect x="967.9" y="467.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (433 samples, 0.04%)</title><rect x="967.9" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (433 samples, 0.04%)</title><rect x="967.9" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394/1177692966.get$Lambda (433 samples, 0.04%)</title><rect x="967.9" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394 (433 samples, 0.04%)</title><rect x="967.9" y="403.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="970.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (3,063 samples, 0.29%)</title><rect x="968.4" y="467.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1,853 samples, 0.18%)</title><rect x="968.4" y="451.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="971.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,232 samples, 0.12%)</title><rect x="968.4" y="435.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,232 samples, 0.12%)</title><rect x="968.4" y="419.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="971.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (621 samples, 0.06%)</title><rect x="969.8" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="972.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (621 samples, 0.06%)</title><rect x="969.8" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.8" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (621 samples, 0.06%)</title><rect x="969.8" y="403.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="972.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1,210 samples, 0.12%)</title><rect x="970.5" y="451.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$261/1758423440.get (1,210 samples, 0.12%)</title><rect x="970.5" y="435.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1,210 samples, 0.12%)</title><rect x="970.5" y="419.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,210 samples, 0.12%)</title><rect x="970.5" y="403.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,203 samples, 0.12%)</title><rect x="970.5" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.5" y="398.0"></text>
</g>
<g>
<title>byte[] (1,173 samples, 0.11%)</title><rect x="970.6" y="371.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="973.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1109943227.accept (1,077 samples, 0.10%)</title><rect x="971.9" y="659.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (1,077 samples, 0.10%)</title><rect x="971.9" y="643.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$380/1353633883.run (1,077 samples, 0.10%)</title><rect x="971.9" y="627.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (1,077 samples, 0.10%)</title><rect x="971.9" y="611.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="974.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1,077 samples, 0.10%)</title><rect x="971.9" y="595.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,077 samples, 0.10%)</title><rect x="971.9" y="579.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,077 samples, 0.10%)</title><rect x="971.9" y="563.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.9" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,077 samples, 0.10%)</title><rect x="971.9" y="547.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="974.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3,315 samples, 0.32%)</title><rect x="973.1" y="675.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.1" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (3,315 samples, 0.32%)</title><rect x="973.1" y="659.0" width="3.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="976.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1,237 samples, 0.12%)</title><rect x="976.8" y="675.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (593 samples, 0.06%)</title><rect x="976.8" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="979.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (593 samples, 0.06%)</title><rect x="976.8" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="979.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (593 samples, 0.06%)</title><rect x="976.8" y="627.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (593 samples, 0.06%)</title><rect x="976.8" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="979.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (593 samples, 0.06%)</title><rect x="976.8" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="979.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (593 samples, 0.06%)</title><rect x="976.8" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="979.8" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (593 samples, 0.06%)</title><rect x="976.8" y="563.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="979.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (644 samples, 0.06%)</title><rect x="977.5" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="980.5" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (644 samples, 0.06%)</title><rect x="977.5" y="643.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="980.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (4,048 samples, 0.39%)</title><rect x="978.2" y="675.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1068922401.run (2,041 samples, 0.20%)</title><rect x="978.2" y="659.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (2,041 samples, 0.20%)</title><rect x="978.2" y="643.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,041 samples, 0.20%)</title><rect x="978.2" y="627.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,041 samples, 0.20%)</title><rect x="978.2" y="611.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,041 samples, 0.20%)</title><rect x="978.2" y="595.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2,041 samples, 0.20%)</title><rect x="978.2" y="579.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/493344851.run (2,041 samples, 0.20%)</title><rect x="978.2" y="563.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2,041 samples, 0.20%)</title><rect x="978.2" y="547.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2,040 samples, 0.20%)</title><rect x="978.2" y="531.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (2,040 samples, 0.20%)</title><rect x="978.2" y="515.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1,404 samples, 0.13%)</title><rect x="978.2" y="499.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,404 samples, 0.13%)</title><rect x="978.2" y="483.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,404 samples, 0.13%)</title><rect x="978.2" y="467.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (1,038 samples, 0.10%)</title><rect x="978.2" y="451.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="981.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1311146128.invoke (1,038 samples, 0.10%)</title><rect x="978.2" y="435.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,038 samples, 0.10%)</title><rect x="978.2" y="419.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,038 samples, 0.10%)</title><rect x="978.2" y="403.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="981.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,038 samples, 0.10%)</title><rect x="978.2" y="387.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.2" y="398.0"></text>
</g>
<g>
<title>byte[] (1,038 samples, 0.10%)</title><rect x="978.2" y="371.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="981.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (366 samples, 0.04%)</title><rect x="979.4" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (366 samples, 0.04%)</title><rect x="979.4" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (366 samples, 0.04%)</title><rect x="979.4" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="982.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394/1177692966.get$Lambda (366 samples, 0.04%)</title><rect x="979.4" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$394 (366 samples, 0.04%)</title><rect x="979.4" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="982.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (636 samples, 0.06%)</title><rect x="979.8" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (636 samples, 0.06%)</title><rect x="979.8" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (636 samples, 0.06%)</title><rect x="979.8" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="982.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (636 samples, 0.06%)</title><rect x="979.8" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (636 samples, 0.06%)</title><rect x="979.8" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (636 samples, 0.06%)</title><rect x="979.8" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="982.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (629 samples, 0.06%)</title><rect x="979.8" y="403.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="982.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$293/850614757.run (2,007 samples, 0.19%)</title><rect x="980.5" y="659.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (2,007 samples, 0.19%)</title><rect x="980.5" y="643.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="983.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (885 samples, 0.08%)</title><rect x="980.5" y="627.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="983.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (885 samples, 0.08%)</title><rect x="980.5" y="611.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="983.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$389/2097994766.get$Lambda (885 samples, 0.08%)</title><rect x="980.5" y="595.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$389 (885 samples, 0.08%)</title><rect x="980.5" y="579.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="983.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,122 samples, 0.11%)</title><rect x="981.5" y="627.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,122 samples, 0.11%)</title><rect x="981.5" y="611.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="984.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,122 samples, 0.11%)</title><rect x="981.5" y="595.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="984.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,108 samples, 0.11%)</title><rect x="981.5" y="579.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="984.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (4,587 samples, 0.44%)</title><rect x="982.8" y="675.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.8" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (1,179 samples, 0.11%)</title><rect x="982.8" y="659.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="985.8" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1,179 samples, 0.11%)</title><rect x="982.8" y="643.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.8" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1,179 samples, 0.11%)</title><rect x="982.8" y="627.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="985.8" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (1,179 samples, 0.11%)</title><rect x="982.8" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="985.8" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (1,179 samples, 0.11%)</title><rect x="982.8" y="595.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="985.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3,408 samples, 0.33%)</title><rect x="984.1" y="659.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="987.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (726 samples, 0.07%)</title><rect x="984.1" y="643.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="987.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (726 samples, 0.07%)</title><rect x="984.1" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="987.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$457/940835706.get$Lambda (726 samples, 0.07%)</title><rect x="984.1" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="987.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$457 (726 samples, 0.07%)</title><rect x="984.1" y="595.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="987.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (2,682 samples, 0.26%)</title><rect x="985.0" y="643.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.0" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,158 samples, 0.11%)</title><rect x="985.0" y="627.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="988.0" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1,524 samples, 0.15%)</title><rect x="986.3" y="627.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.3" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1,524 samples, 0.15%)</title><rect x="986.3" y="611.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="989.3" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1,524 samples, 0.15%)</title><rect x="986.3" y="595.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="989.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (4,390 samples, 0.42%)</title><rect x="988.0" y="675.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="991.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (350 samples, 0.03%)</title><rect x="988.0" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="991.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (350 samples, 0.03%)</title><rect x="988.0" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$378/1254294051.get$Lambda (350 samples, 0.03%)</title><rect x="988.0" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$378 (350 samples, 0.03%)</title><rect x="988.0" y="611.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="991.0" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,427 samples, 0.23%)</title><rect x="988.4" y="659.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (1,048 samples, 0.10%)</title><rect x="988.4" y="643.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.4" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (1,048 samples, 0.10%)</title><rect x="988.4" y="627.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="991.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,379 samples, 0.13%)</title><rect x="989.6" y="643.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.6" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,379 samples, 0.13%)</title><rect x="989.6" y="627.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="992.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,613 samples, 0.15%)</title><rect x="991.1" y="659.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.1" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,613 samples, 0.15%)</title><rect x="991.1" y="643.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="994.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,332 samples, 0.13%)</title><rect x="992.9" y="675.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="995.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,332 samples, 0.13%)</title><rect x="992.9" y="659.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,332 samples, 0.13%)</title><rect x="992.9" y="643.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="995.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,332 samples, 0.13%)</title><rect x="992.9" y="627.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="995.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (494 samples, 0.05%)</title><rect x="992.9" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.9" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (494 samples, 0.05%)</title><rect x="992.9" y="595.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="995.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (838 samples, 0.08%)</title><rect x="993.5" y="611.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="996.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (838 samples, 0.08%)</title><rect x="993.5" y="595.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (838 samples, 0.08%)</title><rect x="993.5" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.5" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (838 samples, 0.08%)</title><rect x="993.5" y="563.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (838 samples, 0.08%)</title><rect x="993.5" y="547.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="996.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (838 samples, 0.08%)</title><rect x="993.5" y="531.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="996.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (490 samples, 0.05%)</title><rect x="994.5" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="997.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (490 samples, 0.05%)</title><rect x="994.5" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (490 samples, 0.05%)</title><rect x="994.5" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (490 samples, 0.05%)</title><rect x="994.5" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (415 samples, 0.04%)</title><rect x="994.5" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (415 samples, 0.04%)</title><rect x="994.5" y="595.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="997.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (558 samples, 0.05%)</title><rect x="995.0" y="675.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (558 samples, 0.05%)</title><rect x="995.0" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (558 samples, 0.05%)</title><rect x="995.0" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (558 samples, 0.05%)</title><rect x="995.0" y="627.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="998.0" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (172,120 samples, 16.47%)</title><rect x="995.7" y="691.0" width="194.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.7" y="702.0">one/nio/server/SelectorTh..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5,102 samples, 0.49%)</title><rect x="995.7" y="675.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.7" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (5,102 samples, 0.49%)</title><rect x="995.7" y="659.0" width="5.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="998.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (167,018 samples, 15.98%)</title><rect x="1001.4" y="675.0" width="188.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1004.4" y="686.0">one/nio/net/Session.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (167,018 samples, 15.98%)</title><rect x="1001.4" y="659.0" width="188.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1004.4" y="670.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (166,974 samples, 15.98%)</title><rect x="1001.4" y="643.0" width="188.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1004.4" y="654.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24,965 samples, 2.39%)</title><rect x="1001.4" y="627.0" width="28.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1004.4" y="638.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24,965 samples, 2.39%)</title><rect x="1001.4" y="611.0" width="28.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1004.4" y="622.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (12,686 samples, 1.21%)</title><rect x="1001.4" y="595.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1004.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6,379 samples, 0.61%)</title><rect x="1001.4" y="579.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6,379 samples, 0.61%)</title><rect x="1001.4" y="563.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (6,379 samples, 0.61%)</title><rect x="1001.4" y="547.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,379 samples, 0.61%)</title><rect x="1001.4" y="531.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1004.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (4,157 samples, 0.40%)</title><rect x="1001.4" y="515.0" width="4.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1004.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,222 samples, 0.21%)</title><rect x="1006.1" y="515.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1009.1" y="526.0"></text>
</g>
<g>
<title>byte[] (2,222 samples, 0.21%)</title><rect x="1006.1" y="499.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1009.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (6,307 samples, 0.60%)</title><rect x="1008.6" y="579.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1011.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/495083153.linkToTargetMethod (6,279 samples, 0.60%)</title><rect x="1008.6" y="563.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1011.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6,279 samples, 0.60%)</title><rect x="1008.6" y="547.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.get$Lambda (6,279 samples, 0.60%)</title><rect x="1008.6" y="531.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$112 (6,279 samples, 0.60%)</title><rect x="1008.6" y="515.0" width="7.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1011.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (12,279 samples, 1.17%)</title><rect x="1015.8" y="595.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1018.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (12,279 samples, 1.17%)</title><rect x="1015.8" y="579.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1018.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12,279 samples, 1.17%)</title><rect x="1015.8" y="563.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1018.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (3,120 samples, 0.30%)</title><rect x="1015.8" y="547.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1018.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9,159 samples, 0.88%)</title><rect x="1019.3" y="547.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1022.3" y="558.0"></text>
</g>
<g>
<title>byte[] (9,159 samples, 0.88%)</title><rect x="1019.3" y="531.0" width="10.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1022.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (56,071 samples, 5.36%)</title><rect x="1029.6" y="627.0" width="63.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1032.6" y="638.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.Request (8,200 samples, 0.78%)</title><rect x="1029.6" y="611.0" width="9.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1032.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (20,642 samples, 1.97%)</title><rect x="1038.9" y="611.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.9" y="622.0">o..</text>
</g>
<g>
<title>java.lang.String[] (10,346 samples, 0.99%)</title><rect x="1038.9" y="595.0" width="11.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1041.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (10,296 samples, 0.99%)</title><rect x="1050.6" y="595.0" width="11.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1053.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27,229 samples, 2.61%)</title><rect x="1062.2" y="611.0" width="30.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1065.2" y="622.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (27,229 samples, 2.61%)</title><rect x="1062.2" y="595.0" width="30.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1065.2" y="606.0">on..</text>
</g>
<g>
<title>char[] (11,279 samples, 1.08%)</title><rect x="1062.2" y="579.0" width="12.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1065.2" y="590.0"></text>
</g>
<g>
<title>char[] (1,821 samples, 0.17%)</title><rect x="1074.9" y="579.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1077.9" y="590.0"></text>
</g>
<g>
<title>java.lang.String (8,386 samples, 0.80%)</title><rect x="1077.0" y="579.0" width="9.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1080.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,743 samples, 0.55%)</title><rect x="1086.4" y="579.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,743 samples, 0.55%)</title><rect x="1086.4" y="563.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5,743 samples, 0.55%)</title><rect x="1086.4" y="547.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.4" y="558.0"></text>
</g>
<g>
<title>byte[] (5,743 samples, 0.55%)</title><rect x="1086.4" y="531.0" width="6.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1089.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (460 samples, 0.04%)</title><rect x="1092.9" y="627.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.9" y="638.0"></text>
</g>
<g>
<title>byte[] (460 samples, 0.04%)</title><rect x="1092.9" y="611.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1095.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5,545 samples, 0.53%)</title><rect x="1093.4" y="627.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,545 samples, 0.53%)</title><rect x="1093.4" y="611.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,545 samples, 0.53%)</title><rect x="1093.4" y="595.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (1,812 samples, 0.17%)</title><rect x="1093.4" y="579.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1096.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,733 samples, 0.36%)</title><rect x="1095.5" y="579.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.5" y="590.0"></text>
</g>
<g>
<title>byte[] (3,733 samples, 0.36%)</title><rect x="1095.5" y="563.0" width="4.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1098.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (79,933 samples, 7.65%)</title><rect x="1099.7" y="627.0" width="90.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1102.7" y="638.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (79,933 samples, 7.65%)</title><rect x="1099.7" y="611.0" width="90.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.7" y="622.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (23,033 samples, 2.20%)</title><rect x="1099.7" y="595.0" width="26.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1102.7" y="606.0">c..</text>
</g>
<g>
<title>char[] (12,232 samples, 1.17%)</title><rect x="1125.7" y="595.0" width="13.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1128.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (21,575 samples, 2.06%)</title><rect x="1139.5" y="595.0" width="24.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1142.5" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23,093 samples, 2.21%)</title><rect x="1163.9" y="595.0" width="26.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1166.9" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23,093 samples, 2.21%)</title><rect x="1163.9" y="579.0" width="26.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.9" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (23,093 samples, 2.21%)</title><rect x="1163.9" y="563.0" width="26.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.9" y="574.0">j..</text>
</g>
<g>
<title>byte[] (22,975 samples, 2.20%)</title><rect x="1163.9" y="547.0" width="25.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1166.9" y="558.0">b..</text>
</g>
</g>
</svg>
