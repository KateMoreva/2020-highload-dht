<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1173"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1173"> </text>
<g id="frames">
<g>
<title>all (15,249 samples, 100.00%)</title><rect x="10.0" y="1139.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="1150.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (253 samples, 1.66%)</title><rect x="10.2" y="1123.0" width="19.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.2" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (250 samples, 1.64%)</title><rect x="10.5" y="1107.0" width="19.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.5" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (245 samples, 1.61%)</title><rect x="10.9" y="1091.0" width="18.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.9" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (224 samples, 1.47%)</title><rect x="11.6" y="1075.0" width="17.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.6" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (107 samples, 0.70%)</title><rect x="12.1" y="1059.0" width="8.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.1" y="1070.0"></text>
</g>
<g>
<title>SpinPause (35 samples, 0.23%)</title><rect x="20.4" y="1059.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="23.4" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (21 samples, 0.14%)</title><rect x="23.1" y="1059.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="26.1" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="24.2" y="1043.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.2" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="24.2" y="1027.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="27.2" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (30 samples, 0.20%)</title><rect x="24.7" y="1059.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="27.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.14%)</title><rect x="25.4" y="1043.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.14%)</title><rect x="25.4" y="1027.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="28.4" y="1038.0"></text>
</g>
<g>
<title>sys_futex (18 samples, 0.12%)</title><rect x="25.6" y="1011.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="28.6" y="1022.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.11%)</title><rect x="25.7" y="995.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="28.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait (16 samples, 0.10%)</title><rect x="25.7" y="979.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.7" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (13 samples, 0.09%)</title><rect x="25.8" y="963.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="28.8" y="974.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (8 samples, 0.05%)</title><rect x="25.8" y="947.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="28.8" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="25.8" y="931.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="28.8" y="942.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.03%)</title><rect x="26.4" y="947.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.4" y="958.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.03%)</title><rect x="26.5" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="29.5" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.03%)</title><rect x="26.5" y="915.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="29.5" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_wait (19 samples, 0.12%)</title><rect x="27.0" y="1059.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="30.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.09%)</title><rect x="27.5" y="1043.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="30.5" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.09%)</title><rect x="27.5" y="1027.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="30.5" y="1038.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.07%)</title><rect x="27.7" y="1011.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="30.7" y="1022.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.07%)</title><rect x="27.7" y="995.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="30.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.07%)</title><rect x="27.7" y="979.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="30.7" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.06%)</title><rect x="27.7" y="963.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="30.7" y="974.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.04%)</title><rect x="28.0" y="947.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="31.0" y="958.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.03%)</title><rect x="28.0" y="931.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.0" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.03%)</title><rect x="28.0" y="915.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.0" y="926.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (4 samples, 0.03%)</title><rect x="28.6" y="1059.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="31.6" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.03%)</title><rect x="29.0" y="1075.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="32.0" y="1086.0"></text>
</g>
<g>
<title>[no_Java_frame] (34 samples, 0.22%)</title><rect x="29.8" y="1123.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="32.8" y="1134.0"></text>
</g>
<g>
<title>[not_walkable_Java] (55 samples, 0.36%)</title><rect x="32.4" y="1123.0" width="4.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="35.4" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (31 samples, 0.20%)</title><rect x="32.7" y="1107.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="35.7" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (28 samples, 0.18%)</title><rect x="32.9" y="1091.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="35.9" y="1102.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (11 samples, 0.07%)</title><rect x="32.9" y="1075.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="35.9" y="1086.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (9 samples, 0.06%)</title><rect x="33.1" y="1059.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="36.1" y="1070.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (17 samples, 0.11%)</title><rect x="33.8" y="1075.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="36.8" y="1086.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (4 samples, 0.03%)</title><rect x="34.1" y="1059.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="37.1" y="1070.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (4 samples, 0.03%)</title><rect x="34.7" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="37.7" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="35.3" y="1107.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="38.3" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (7 samples, 0.05%)</title><rect x="35.6" y="1107.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="38.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="36.2" y="1107.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="39.2" y="1118.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.03%)</title><rect x="36.2" y="1091.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="39.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.09%)</title><rect x="36.7" y="1123.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="39.7" y="1134.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.3 (4 samples, 0.03%)</title><rect x="37.4" y="1107.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="40.4" y="1118.0"></text>
</g>
<g>
<title>[unknown_Java] (20 samples, 0.13%)</title><rect x="37.7" y="1123.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="40.7" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="37.8" y="1107.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="40.8" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (9 samples, 0.06%)</title><rect x="38.2" y="1107.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="41.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="38.9" y="1107.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="41.9" y="1118.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.03%)</title><rect x="38.9" y="1091.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="41.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9,817 samples, 64.38%)</title><rect x="39.6" y="1123.0" width="759.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.6" y="1134.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,817 samples, 64.38%)</title><rect x="39.6" y="1107.0" width="759.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.6" y="1118.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,816 samples, 64.37%)</title><rect x="39.6" y="1091.0" width="759.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.6" y="1102.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (19 samples, 0.12%)</title><rect x="40.3" y="1075.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="43.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,418 samples, 9.30%)</title><rect x="41.7" y="1075.0" width="109.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.7" y="1086.0">java/util/con..</text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="42.7" y="1059.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="45.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,401 samples, 9.19%)</title><rect x="43.0" y="1059.0" width="108.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.0" y="1070.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,395 samples, 9.15%)</title><rect x="43.4" y="1043.0" width="108.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.4" y="1054.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$172/330952395.apply (1,380 samples, 9.05%)</title><rect x="44.5" y="1027.0" width="106.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.5" y="1038.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,376 samples, 9.02%)</title><rect x="44.8" y="1011.0" width="106.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.8" y="1022.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,376 samples, 9.02%)</title><rect x="44.8" y="995.0" width="106.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.8" y="1006.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.05%)</title><rect x="45.2" y="979.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.05%)</title><rect x="45.2" y="963.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="45.4" y="947.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="45.4" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,113 samples, 7.30%)</title><rect x="45.8" y="979.0" width="86.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.8" y="990.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,113 samples, 7.30%)</title><rect x="45.8" y="963.0" width="86.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.8" y="974.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,113 samples, 7.30%)</title><rect x="45.8" y="947.0" width="86.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.8" y="958.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (584 samples, 3.83%)</title><rect x="45.8" y="931.0" width="45.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.8" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (584 samples, 3.83%)</title><rect x="45.8" y="915.0" width="45.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.8" y="926.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (7 samples, 0.05%)</title><rect x="45.8" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (7 samples, 0.05%)</title><rect x="45.8" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (576 samples, 3.78%)</title><rect x="46.4" y="899.0" width="44.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.4" y="910.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$325/555075840.apply (576 samples, 3.78%)</title><rect x="46.4" y="883.0" width="44.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.4" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (575 samples, 3.77%)</title><rect x="46.4" y="867.0" width="44.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.4" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (575 samples, 3.77%)</title><rect x="46.4" y="851.0" width="44.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.4" y="862.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1734934037.apply (572 samples, 3.75%)</title><rect x="46.7" y="835.0" width="44.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.7" y="846.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (572 samples, 3.75%)</title><rect x="46.7" y="819.0" width="44.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.7" y="830.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (8 samples, 0.05%)</title><rect x="46.7" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (8 samples, 0.05%)</title><rect x="46.7" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (6 samples, 0.04%)</title><rect x="46.7" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (6 samples, 0.04%)</title><rect x="46.7" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.03%)</title><rect x="47.3" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.03%)</title><rect x="47.3" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (560 samples, 3.67%)</title><rect x="47.6" y="803.0" width="43.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.6" y="814.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (489 samples, 3.21%)</title><rect x="47.6" y="787.0" width="37.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.6" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (489 samples, 3.21%)</title><rect x="47.6" y="771.0" width="37.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.6" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (5 samples, 0.03%)</title><rect x="47.8" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (5 samples, 0.03%)</title><rect x="47.8" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/1292913949.apply (472 samples, 3.10%)</title><rect x="48.1" y="755.0" width="36.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.1" y="766.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (469 samples, 3.08%)</title><rect x="48.4" y="739.0" width="36.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.4" y="750.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.03%)</title><rect x="48.8" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.03%)</title><rect x="48.8" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="48.8" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="48.8" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (18 samples, 0.12%)</title><rect x="49.2" y="723.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (17 samples, 0.11%)</title><rect x="49.3" y="707.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (9 samples, 0.06%)</title><rect x="49.3" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (9 samples, 0.06%)</title><rect x="49.3" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (9 samples, 0.06%)</title><rect x="49.3" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.05%)</title><rect x="50.0" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.05%)</title><rect x="50.0" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.05%)</title><rect x="50.0" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.05%)</title><rect x="50.0" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (140 samples, 0.92%)</title><rect x="50.6" y="723.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (136 samples, 0.89%)</title><rect x="50.8" y="707.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (31 samples, 0.20%)</title><rect x="50.8" y="691.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="53.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4 samples, 0.03%)</title><rect x="51.0" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (23 samples, 0.15%)</title><rect x="51.3" y="675.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (22 samples, 0.14%)</title><rect x="51.4" y="659.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (10 samples, 0.07%)</title><rect x="51.9" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (10 samples, 0.07%)</title><rect x="51.9" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.9" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="51.9" y="611.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="54.9" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.03%)</title><rect x="51.9" y="595.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="54.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.03%)</title><rect x="52.3" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (4 samples, 0.03%)</title><rect x="52.8" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.8" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="52.8" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="55.8" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (4 samples, 0.03%)</title><rect x="52.8" y="611.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="55.8" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.03%)</title><rect x="52.8" y="595.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="55.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (105 samples, 0.69%)</title><rect x="53.2" y="691.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (105 samples, 0.69%)</title><rect x="53.2" y="675.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (84 samples, 0.55%)</title><rect x="53.3" y="659.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (81 samples, 0.53%)</title><rect x="53.4" y="643.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (79 samples, 0.52%)</title><rect x="53.6" y="627.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.6" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (33 samples, 0.22%)</title><rect x="54.3" y="611.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="57.3" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (31 samples, 0.20%)</title><rect x="54.4" y="595.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="57.4" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (31 samples, 0.20%)</title><rect x="54.4" y="579.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="57.4" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (23 samples, 0.15%)</title><rect x="54.4" y="563.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="57.4" y="574.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.05%)</title><rect x="56.2" y="563.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="59.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (36 samples, 0.24%)</title><rect x="56.9" y="611.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.9" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.05%)</title><rect x="57.0" y="595.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="60.0" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.05%)</title><rect x="57.1" y="579.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="60.1" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.03%)</title><rect x="57.2" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="60.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (26 samples, 0.17%)</title><rect x="57.7" y="595.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.7" y="606.0"></text>
</g>
<g>
<title>__GI___write (23 samples, 0.15%)</title><rect x="57.8" y="579.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="60.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.11%)</title><rect x="58.3" y="563.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="61.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.10%)</title><rect x="58.3" y="547.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="61.3" y="558.0"></text>
</g>
<g>
<title>sys_write (14 samples, 0.09%)</title><rect x="58.4" y="531.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="61.4" y="542.0"></text>
</g>
<g>
<title>vfs_write (12 samples, 0.08%)</title><rect x="58.6" y="515.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="61.6" y="526.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.07%)</title><rect x="58.6" y="499.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.6" y="510.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 0.07%)</title><rect x="58.6" y="483.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.6" y="494.0"></text>
</g>
<g>
<title>pipe_write (10 samples, 0.07%)</title><rect x="58.6" y="467.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.6" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.04%)</title><rect x="58.6" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.6" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.04%)</title><rect x="58.6" y="435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="61.6" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="58.6" y="419.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="61.6" y="430.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.03%)</title><rect x="59.1" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="62.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (9 samples, 0.06%)</title><rect x="59.8" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (9 samples, 0.06%)</title><rect x="60.5" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.5" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.05%)</title><rect x="60.7" y="643.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="63.7" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (7 samples, 0.05%)</title><rect x="60.7" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="63.7" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.04%)</title><rect x="60.8" y="611.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="63.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="60.9" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="63.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="60.9" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="63.9" y="590.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.03%)</title><rect x="60.9" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="63.9" y="574.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.03%)</title><rect x="60.9" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="63.9" y="558.0"></text>
</g>
<g>
<title>futex_wake_op (4 samples, 0.03%)</title><rect x="60.9" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="63.9" y="542.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.03%)</title><rect x="60.9" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="63.9" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.03%)</title><rect x="60.9" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.9" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.03%)</title><rect x="60.9" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (299 samples, 1.96%)</title><rect x="61.5" y="723.0" width="23.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.5" y="734.0">j..</text>
</g>
<g>
<title>java/lang/Long.toString (5 samples, 0.03%)</title><rect x="61.8" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (15 samples, 0.10%)</title><rect x="62.4" y="707.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.4" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (15 samples, 0.10%)</title><rect x="62.4" y="691.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.4" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (10 samples, 0.07%)</title><rect x="62.7" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.7" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (10 samples, 0.07%)</title><rect x="62.7" y="659.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.7" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.04%)</title><rect x="63.0" y="643.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="66.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.03%)</title><rect x="63.5" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.03%)</title><rect x="63.5" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="63.5" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.5" y="686.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.03%)</title><rect x="63.9" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (189 samples, 1.24%)</title><rect x="64.2" y="707.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (8 samples, 0.05%)</title><rect x="64.6" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.6" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.05%)</title><rect x="64.6" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.6" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (7 samples, 0.05%)</title><rect x="64.6" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.05%)</title><rect x="64.6" y="643.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.03%)</title><rect x="64.8" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (84 samples, 0.55%)</title><rect x="65.2" y="691.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (31 samples, 0.20%)</title><rect x="65.4" y="675.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.4" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (29 samples, 0.19%)</title><rect x="65.6" y="659.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.6" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (16 samples, 0.10%)</title><rect x="66.3" y="643.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.3" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (16 samples, 0.10%)</title><rect x="66.3" y="627.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.3" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.04%)</title><rect x="67.1" y="611.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="70.1" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (21 samples, 0.14%)</title><rect x="67.8" y="675.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.8" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (17 samples, 0.11%)</title><rect x="68.1" y="659.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (10 samples, 0.07%)</title><rect x="68.3" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (4 samples, 0.03%)</title><rect x="68.3" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.3" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (6 samples, 0.04%)</title><rect x="68.6" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.6" y="638.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/225288726.test (5 samples, 0.03%)</title><rect x="69.0" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.0" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (8 samples, 0.05%)</title><rect x="69.4" y="675.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (4 samples, 0.03%)</title><rect x="69.7" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.7" y="670.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/225288726.test (21 samples, 0.14%)</title><rect x="70.0" y="675.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.0" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (17 samples, 0.11%)</title><rect x="70.4" y="659.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1810899357.test (14 samples, 0.09%)</title><rect x="70.6" y="643.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (14 samples, 0.09%)</title><rect x="70.6" y="627.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.6" y="638.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1970982267.test (14 samples, 0.09%)</title><rect x="70.6" y="611.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.6" y="622.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (14 samples, 0.09%)</title><rect x="70.6" y="595.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/73181251.test (11 samples, 0.07%)</title><rect x="70.6" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (11 samples, 0.07%)</title><rect x="70.6" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.03%)</title><rect x="70.7" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.03%)</title><rect x="70.7" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.03%)</title><rect x="70.7" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="71.1" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="71.1" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (10 samples, 0.07%)</title><rect x="71.7" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (10 samples, 0.07%)</title><rect x="71.7" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.07%)</title><rect x="71.7" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.07%)</title><rect x="71.7" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.05%)</title><rect x="71.8" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.03%)</title><rect x="72.1" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.03%)</title><rect x="72.1" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.1" y="606.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.03%)</title><rect x="72.1" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (82 samples, 0.54%)</title><rect x="72.4" y="691.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.4" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (82 samples, 0.54%)</title><rect x="72.4" y="675.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.4" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (82 samples, 0.54%)</title><rect x="72.4" y="659.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.4" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (11 samples, 0.07%)</title><rect x="72.7" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (11 samples, 0.07%)</title><rect x="72.7" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.7" y="638.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.05%)</title><rect x="72.7" y="611.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="75.7" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.03%)</title><rect x="73.2" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.2" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (66 samples, 0.43%)</title><rect x="73.7" y="643.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.7" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (62 samples, 0.41%)</title><rect x="73.8" y="627.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.8" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (55 samples, 0.36%)</title><rect x="74.4" y="611.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.03%)</title><rect x="74.4" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.03%)</title><rect x="74.4" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (24 samples, 0.16%)</title><rect x="75.0" y="595.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.0" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (22 samples, 0.14%)</title><rect x="75.1" y="579.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.1" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (19 samples, 0.12%)</title><rect x="75.3" y="563.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.03%)</title><rect x="75.5" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.03%)</title><rect x="75.5" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="75.9" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="75.9" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.9" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.03%)</title><rect x="76.0" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.03%)</title><rect x="76.0" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/707161353.test (6 samples, 0.04%)</title><rect x="76.3" y="547.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.3" y="558.0"></text>
</g>
<g>
<title>java/util/List.copyOf (9 samples, 0.06%)</title><rect x="76.9" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.9" y="606.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (9 samples, 0.06%)</title><rect x="76.9" y="579.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.9" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (5 samples, 0.03%)</title><rect x="76.9" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.03%)</title><rect x="76.9" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.9" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.03%)</title><rect x="77.2" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (14 samples, 0.09%)</title><rect x="77.6" y="595.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (10 samples, 0.07%)</title><rect x="77.8" y="579.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.06%)</title><rect x="77.9" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.05%)</title><rect x="77.9" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (7 samples, 0.05%)</title><rect x="78.0" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (11 samples, 0.07%)</title><rect x="78.8" y="707.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.8" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (8 samples, 0.05%)</title><rect x="78.8" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (16 samples, 0.10%)</title><rect x="79.6" y="707.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.equals (5 samples, 0.03%)</title><rect x="79.6" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (11 samples, 0.07%)</title><rect x="80.0" y="691.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.03%)</title><rect x="80.3" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="80.6" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.03%)</title><rect x="80.6" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/644345897.invoke (4 samples, 0.03%)</title><rect x="80.6" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="80.6" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (48 samples, 0.31%)</title><rect x="80.9" y="707.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.17%)</title><rect x="81.0" y="691.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.17%)</title><rect x="81.0" y="675.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.11%)</title><rect x="81.3" y="659.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.10%)</title><rect x="81.4" y="643.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (5 samples, 0.03%)</title><rect x="82.0" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.0" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.03%)</title><rect x="82.1" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (21 samples, 0.14%)</title><rect x="83.0" y="691.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (9 samples, 0.06%)</title><rect x="83.0" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (10 samples, 0.07%)</title><rect x="83.7" y="675.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (10 samples, 0.07%)</title><rect x="83.7" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="84.1" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.04%)</title><rect x="84.1" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$369/1781662399.apply (5 samples, 0.03%)</title><rect x="84.7" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="85.1" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="85.1" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (71 samples, 0.47%)</title><rect x="85.4" y="787.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="86.6" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (39 samples, 0.26%)</title><rect x="86.9" y="771.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (9 samples, 0.06%)</title><rect x="87.1" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (4 samples, 0.03%)</title><rect x="87.5" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.17%)</title><rect x="87.9" y="755.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.17%)</title><rect x="87.9" y="739.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (26 samples, 0.17%)</title><rect x="87.9" y="723.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (26 samples, 0.17%)</title><rect x="87.9" y="707.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.03%)</title><rect x="87.9" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11 samples, 0.07%)</title><rect x="88.5" y="691.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (11 samples, 0.07%)</title><rect x="88.5" y="675.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (11 samples, 0.07%)</title><rect x="88.5" y="659.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7 samples, 0.05%)</title><rect x="88.6" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.03%)</title><rect x="88.6" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="88.6" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$352/392108125.get$Lambda (5 samples, 0.03%)</title><rect x="88.6" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$352/392108125.&lt;init&gt; (5 samples, 0.03%)</title><rect x="88.6" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7 samples, 0.05%)</title><rect x="89.4" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.05%)</title><rect x="90.4" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.05%)</title><rect x="90.4" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (7 samples, 0.05%)</title><rect x="90.4" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.05%)</title><rect x="91.0" y="931.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.05%)</title><rect x="91.0" y="915.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (520 samples, 3.41%)</title><rect x="91.6" y="931.0" width="40.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.6" y="942.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.07%)</title><rect x="91.6" y="915.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="94.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11 samples, 0.07%)</title><rect x="91.6" y="899.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="92.2" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="92.2" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.12%)</title><rect x="92.5" y="915.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 0.12%)</title><rect x="92.5" y="899.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (15 samples, 0.10%)</title><rect x="92.6" y="883.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="95.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (15 samples, 0.10%)</title><rect x="92.6" y="867.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="95.6" y="878.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="92.9" y="851.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="95.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$319/1129528338.accept (6 samples, 0.04%)</title><rect x="93.3" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (490 samples, 3.21%)</title><rect x="94.0" y="915.0" width="37.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.0" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (490 samples, 3.21%)</title><rect x="94.0" y="899.0" width="37.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.0" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (485 samples, 3.18%)</title><rect x="94.0" y="883.0" width="37.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.0" y="894.0">jdk..</text>
</g>
<g>
<title>java/util/LinkedList.add (6 samples, 0.04%)</title><rect x="94.3" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.3" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (6 samples, 0.04%)</title><rect x="94.3" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.3" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList$Node.&lt;init&gt; (5 samples, 0.03%)</title><rect x="94.3" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (118 samples, 0.77%)</title><rect x="95.0" y="867.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.0" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (23 samples, 0.15%)</title><rect x="99.3" y="851.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="102.3" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (22 samples, 0.14%)</title><rect x="99.4" y="835.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="102.4" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.13%)</title><rect x="99.5" y="819.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="102.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.11%)</title><rect x="99.7" y="803.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="102.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.11%)</title><rect x="99.7" y="787.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="102.7" y="798.0"></text>
</g>
<g>
<title>sys_futex (16 samples, 0.10%)</title><rect x="99.8" y="771.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="102.8" y="782.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.10%)</title><rect x="99.8" y="755.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="102.8" y="766.0"></text>
</g>
<g>
<title>futex_wake_op (16 samples, 0.10%)</title><rect x="99.8" y="739.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="102.8" y="750.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.10%)</title><rect x="99.8" y="723.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.8" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.10%)</title><rect x="99.8" y="707.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="102.8" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.10%)</title><rect x="99.8" y="691.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.03%)</title><rect x="101.2" y="851.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.2" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="101.2" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$307/1765127213.get$Lambda (5 samples, 0.03%)</title><rect x="101.2" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (5 samples, 0.03%)</title><rect x="103.4" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (4 samples, 0.03%)</title><rect x="103.5" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (15 samples, 0.10%)</title><rect x="104.1" y="867.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (10 samples, 0.07%)</title><rect x="104.4" y="851.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (8 samples, 0.05%)</title><rect x="104.5" y="835.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (6 samples, 0.04%)</title><rect x="105.3" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="105.3" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="105.3" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$301/1266998631.get$Lambda (4 samples, 0.03%)</title><rect x="105.3" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (120 samples, 0.79%)</title><rect x="105.7" y="867.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (105 samples, 0.69%)</title><rect x="105.7" y="851.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.7" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (45 samples, 0.30%)</title><rect x="106.5" y="835.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="109.5" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (45 samples, 0.30%)</title><rect x="106.5" y="819.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="109.5" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (44 samples, 0.29%)</title><rect x="106.6" y="803.0" width="3.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="109.6" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (35 samples, 0.23%)</title><rect x="106.7" y="787.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="109.7" y="798.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.05%)</title><rect x="109.4" y="787.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="112.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (5 samples, 0.03%)</title><rect x="110.0" y="835.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (45 samples, 0.30%)</title><rect x="110.4" y="835.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (40 samples, 0.26%)</title><rect x="110.5" y="819.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (39 samples, 0.26%)</title><rect x="110.5" y="803.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (39 samples, 0.26%)</title><rect x="110.5" y="787.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.5" y="798.0"></text>
</g>
<g>
<title>java/util/Objects.equals (38 samples, 0.25%)</title><rect x="110.6" y="771.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.6" y="782.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (36 samples, 0.24%)</title><rect x="110.8" y="755.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.8" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (31 samples, 0.20%)</title><rect x="111.1" y="739.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.1" y="750.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (16 samples, 0.10%)</title><rect x="112.3" y="723.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.3" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (6 samples, 0.04%)</title><rect x="113.0" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (14 samples, 0.09%)</title><rect x="113.8" y="851.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (8 samples, 0.05%)</title><rect x="114.3" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (204 samples, 1.34%)</title><rect x="115.0" y="867.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.0" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (200 samples, 1.31%)</title><rect x="115.2" y="851.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.2" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (141 samples, 0.92%)</title><rect x="115.7" y="835.0" width="10.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="118.7" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (8 samples, 0.05%)</title><rect x="117.1" y="819.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="120.1" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (8 samples, 0.05%)</title><rect x="117.1" y="803.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="120.1" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (33 samples, 0.22%)</title><rect x="118.0" y="819.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="121.0" y="830.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (7 samples, 0.05%)</title><rect x="119.0" y="803.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="122.0" y="814.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (4 samples, 0.03%)</title><rect x="119.2" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="122.2" y="798.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (6 samples, 0.04%)</title><rect x="119.7" y="803.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="122.7" y="814.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.03%)</title><rect x="120.8" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="123.8" y="830.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (33 samples, 0.22%)</title><rect x="121.8" y="819.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="124.8" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (25 samples, 0.16%)</title><rect x="122.3" y="803.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="125.3" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (12 samples, 0.08%)</title><rect x="122.4" y="787.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="125.4" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.03%)</title><rect x="123.4" y="787.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="126.4" y="798.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (6 samples, 0.04%)</title><rect x="123.8" y="787.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="126.8" y="798.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (29 samples, 0.19%)</title><rect x="124.4" y="819.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="127.4" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (13 samples, 0.09%)</title><rect x="125.0" y="803.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="128.0" y="814.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (8 samples, 0.05%)</title><rect x="125.4" y="787.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="128.4" y="798.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.05%)</title><rect x="126.1" y="803.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="129.1" y="814.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (7 samples, 0.05%)</title><rect x="126.1" y="787.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="129.1" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.04%)</title><rect x="126.1" y="771.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="129.1" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.03%)</title><rect x="126.2" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="129.2" y="766.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.03%)</title><rect x="126.9" y="835.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="129.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$246/1776079527.run (40 samples, 0.26%)</title><rect x="127.2" y="835.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (38 samples, 0.25%)</title><rect x="127.4" y="819.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.4" y="830.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (37 samples, 0.24%)</title><rect x="127.5" y="803.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="130.5" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (33 samples, 0.22%)</title><rect x="127.6" y="787.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.6" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (33 samples, 0.22%)</title><rect x="127.6" y="771.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.6" y="782.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (33 samples, 0.22%)</title><rect x="127.6" y="755.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.03%)</title><rect x="127.6" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (4 samples, 0.03%)</title><rect x="127.6" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (4 samples, 0.03%)</title><rect x="127.6" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.6" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (26 samples, 0.17%)</title><rect x="128.2" y="739.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (23 samples, 0.15%)</title><rect x="128.4" y="723.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (10 samples, 0.07%)</title><rect x="129.2" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (10 samples, 0.07%)</title><rect x="129.2" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (7 samples, 0.05%)</title><rect x="129.2" y="675.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (7 samples, 0.05%)</title><rect x="129.2" y="659.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (8 samples, 0.05%)</title><rect x="130.9" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (8 samples, 0.05%)</title><rect x="130.9" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (8 samples, 0.05%)</title><rect x="130.9" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (8 samples, 0.05%)</title><rect x="130.9" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.9" y="830.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (5 samples, 0.03%)</title><rect x="131.2" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.2" y="814.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (5 samples, 0.03%)</title><rect x="131.2" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.03%)</title><rect x="131.6" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (141 samples, 0.92%)</title><rect x="131.9" y="979.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.9" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (54 samples, 0.35%)</title><rect x="132.5" y="963.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="135.5" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (52 samples, 0.34%)</title><rect x="132.7" y="947.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="135.7" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (49 samples, 0.32%)</title><rect x="132.7" y="931.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="135.7" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (45 samples, 0.30%)</title><rect x="132.8" y="915.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="135.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (44 samples, 0.29%)</title><rect x="136.7" y="963.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.7" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (44 samples, 0.29%)</title><rect x="136.7" y="947.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.7" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (11 samples, 0.07%)</title><rect x="136.9" y="931.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.9" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (16 samples, 0.10%)</title><rect x="137.8" y="931.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (16 samples, 0.10%)</title><rect x="137.8" y="915.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (16 samples, 0.10%)</title><rect x="137.8" y="899.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.04%)</title><rect x="138.5" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (6 samples, 0.04%)</title><rect x="139.0" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (8 samples, 0.05%)</title><rect x="139.5" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (35 samples, 0.23%)</title><rect x="140.1" y="963.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.1" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (35 samples, 0.23%)</title><rect x="140.1" y="947.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (31 samples, 0.20%)</title><rect x="140.4" y="931.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.4" y="942.0"></text>
</g>
<g>
<title>__GI___write (30 samples, 0.20%)</title><rect x="140.5" y="915.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="143.5" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.15%)</title><rect x="141.0" y="899.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="144.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.15%)</title><rect x="141.0" y="883.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="144.0" y="894.0"></text>
</g>
<g>
<title>sys_write (21 samples, 0.14%)</title><rect x="141.2" y="867.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="144.2" y="878.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.11%)</title><rect x="141.5" y="851.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.5" y="862.0"></text>
</g>
<g>
<title>__vfs_write (13 samples, 0.09%)</title><rect x="141.5" y="835.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="144.5" y="846.0"></text>
</g>
<g>
<title>new_sync_write (13 samples, 0.09%)</title><rect x="141.5" y="819.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.5" y="830.0"></text>
</g>
<g>
<title>pipe_write (11 samples, 0.07%)</title><rect x="141.7" y="803.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="144.7" y="814.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.07%)</title><rect x="141.7" y="787.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.7" y="798.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.07%)</title><rect x="141.7" y="771.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="144.7" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.07%)</title><rect x="141.7" y="755.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="144.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (84 samples, 0.55%)</title><rect x="142.9" y="979.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.9" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (21 samples, 0.14%)</title><rect x="143.3" y="963.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (52 samples, 0.34%)</title><rect x="145.0" y="963.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (6 samples, 0.04%)</title><rect x="145.0" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (46 samples, 0.30%)</title><rect x="145.4" y="947.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.4" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.05%)</title><rect x="147.2" y="931.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="150.2" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.05%)</title><rect x="147.2" y="915.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="150.2" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.05%)</title><rect x="147.2" y="899.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="150.2" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (6 samples, 0.04%)</title><rect x="147.2" y="883.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="150.2" y="894.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (15 samples, 0.10%)</title><rect x="147.7" y="931.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.7" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (4 samples, 0.03%)</title><rect x="147.7" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.7" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (4 samples, 0.03%)</title><rect x="147.7" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="150.7" y="910.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (11 samples, 0.07%)</title><rect x="148.0" y="915.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (11 samples, 0.07%)</title><rect x="148.0" y="899.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.0" y="910.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.03%)</title><rect x="148.3" y="883.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="151.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (5 samples, 0.03%)</title><rect x="149.0" y="963.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (25 samples, 0.16%)</title><rect x="149.4" y="979.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (25 samples, 0.16%)</title><rect x="149.4" y="963.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (24 samples, 0.16%)</title><rect x="149.4" y="947.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.4" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.now (16 samples, 0.10%)</title><rect x="149.6" y="931.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.6" y="942.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (16 samples, 0.10%)</title><rect x="149.6" y="915.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (15 samples, 0.10%)</title><rect x="149.7" y="899.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.7" y="910.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (10 samples, 0.07%)</title><rect x="150.0" y="883.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="153.0" y="894.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.03%)</title><rect x="150.4" y="867.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="153.4" y="878.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.03%)</title><rect x="150.4" y="851.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="153.4" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.03%)</title><rect x="150.8" y="931.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.8" y="942.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (5 samples, 0.03%)</title><rect x="150.8" y="915.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (615 samples, 4.03%)</title><rect x="151.5" y="1075.0" width="47.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.5" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (541 samples, 3.55%)</title><rect x="152.0" y="1059.0" width="41.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.0" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.03%)</title><rect x="152.1" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.03%)</title><rect x="152.1" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$228/1550578698.accept (533 samples, 3.50%)</title><rect x="152.6" y="1043.0" width="41.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.6" y="1054.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$executeMethod$5 (533 samples, 3.50%)</title><rect x="152.6" y="1027.0" width="41.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.6" y="1038.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (529 samples, 3.47%)</title><rect x="152.9" y="1011.0" width="41.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.9" y="1022.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (529 samples, 3.47%)</title><rect x="152.9" y="995.0" width="41.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.9" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (517 samples, 3.39%)</title><rect x="153.3" y="979.0" width="40.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.3" y="990.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.09%)</title><rect x="153.3" y="963.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.3" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.07%)</title><rect x="153.5" y="947.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.5" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.05%)</title><rect x="153.5" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.5" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.03%)</title><rect x="154.1" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.1" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.03%)</title><rect x="154.1" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.1" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.03%)</title><rect x="154.1" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (503 samples, 3.30%)</title><rect x="154.4" y="963.0" width="38.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.4" y="974.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (503 samples, 3.30%)</title><rect x="154.4" y="947.0" width="38.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.4" y="958.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (498 samples, 3.27%)</title><rect x="154.5" y="931.0" width="38.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.5" y="942.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (497 samples, 3.26%)</title><rect x="154.6" y="915.0" width="38.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.6" y="926.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.05%)</title><rect x="155.0" y="899.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="158.0" y="910.0"></text>
</g>
<g>
<title>send (481 samples, 3.15%)</title><rect x="155.8" y="899.0" width="37.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="158.8" y="910.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (467 samples, 3.06%)</title><rect x="156.9" y="883.0" width="36.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="159.9" y="894.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (467 samples, 3.06%)</title><rect x="156.9" y="867.0" width="36.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="159.9" y="878.0">do_..</text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.03%)</title><rect x="157.5" y="851.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="160.5" y="862.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.03%)</title><rect x="157.5" y="835.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="160.5" y="846.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.03%)</title><rect x="157.6" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.6" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.03%)</title><rect x="157.6" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="160.6" y="814.0"></text>
</g>
<g>
<title>sys_sendto (454 samples, 2.98%)</title><rect x="157.9" y="851.0" width="35.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="160.9" y="862.0">sys..</text>
</g>
<g>
<title>SYSC_sendto (452 samples, 2.96%)</title><rect x="157.9" y="835.0" width="35.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="160.9" y="846.0">SY..</text>
</g>
<g>
<title>sock_sendmsg (444 samples, 2.91%)</title><rect x="158.1" y="819.0" width="34.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="161.1" y="830.0">so..</text>
</g>
<g>
<title>inet_sendmsg (442 samples, 2.90%)</title><rect x="158.1" y="803.0" width="34.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="161.1" y="814.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (442 samples, 2.90%)</title><rect x="158.1" y="787.0" width="34.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="161.1" y="798.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (430 samples, 2.82%)</title><rect x="158.8" y="771.0" width="33.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="161.8" y="782.0">tc..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.03%)</title><rect x="159.4" y="755.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="162.4" y="766.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.04%)</title><rect x="159.9" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="162.9" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.03%)</title><rect x="159.9" y="739.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="162.9" y="750.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (23 samples, 0.15%)</title><rect x="160.4" y="755.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="163.4" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (21 samples, 0.14%)</title><rect x="160.4" y="739.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="163.4" y="750.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (11 samples, 0.07%)</title><rect x="160.7" y="723.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="163.7" y="734.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.06%)</title><rect x="160.7" y="707.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="163.7" y="718.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.03%)</title><rect x="161.1" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="164.1" y="702.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.03%)</title><rect x="161.6" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="164.6" y="734.0"></text>
</g>
<g>
<title>tcp_push (383 samples, 2.51%)</title><rect x="162.1" y="755.0" width="29.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="165.1" y="766.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (383 samples, 2.51%)</title><rect x="162.1" y="739.0" width="29.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="165.1" y="750.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (380 samples, 2.49%)</title><rect x="162.4" y="723.0" width="29.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="165.4" y="734.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (355 samples, 2.33%)</title><rect x="162.9" y="707.0" width="27.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.9" y="718.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (339 samples, 2.22%)</title><rect x="163.9" y="691.0" width="26.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="166.9" y="702.0">i..</text>
</g>
<g>
<title>ip_local_out (333 samples, 2.18%)</title><rect x="164.3" y="675.0" width="25.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="167.3" y="686.0">i..</text>
</g>
<g>
<title>__ip_local_out (66 samples, 0.43%)</title><rect x="164.3" y="659.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="167.3" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (57 samples, 0.37%)</title><rect x="165.0" y="643.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="168.0" y="654.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (8 samples, 0.05%)</title><rect x="165.0" y="627.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="168.0" y="638.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.05%)</title><rect x="165.1" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="168.1" y="622.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (45 samples, 0.30%)</title><rect x="165.9" y="627.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="168.9" y="638.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (36 samples, 0.24%)</title><rect x="166.2" y="611.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="169.2" y="622.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (6 samples, 0.04%)</title><rect x="166.8" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="169.8" y="606.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (15 samples, 0.10%)</title><rect x="167.7" y="595.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="170.7" y="606.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (7 samples, 0.05%)</title><rect x="168.3" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="171.3" y="590.0"></text>
</g>
<g>
<title>ip_output (263 samples, 1.72%)</title><rect x="169.4" y="659.0" width="20.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="172.4" y="670.0"></text>
</g>
<g>
<title>ip_finish_output (247 samples, 1.62%)</title><rect x="169.6" y="643.0" width="19.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="172.6" y="654.0"></text>
</g>
<g>
<title>ip_finish_output2 (247 samples, 1.62%)</title><rect x="169.6" y="627.0" width="19.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="172.6" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (226 samples, 1.48%)</title><rect x="169.7" y="611.0" width="17.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="172.7" y="622.0"></text>
</g>
<g>
<title>do_softirq.part.17 (226 samples, 1.48%)</title><rect x="169.7" y="595.0" width="17.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="172.7" y="606.0"></text>
</g>
<g>
<title>do_softirq_own_stack (224 samples, 1.47%)</title><rect x="169.9" y="579.0" width="17.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="172.9" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (223 samples, 1.46%)</title><rect x="169.9" y="563.0" width="17.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="172.9" y="574.0"></text>
</g>
<g>
<title>net_rx_action (216 samples, 1.42%)</title><rect x="170.3" y="547.0" width="16.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="173.3" y="558.0"></text>
</g>
<g>
<title>process_backlog (213 samples, 1.40%)</title><rect x="170.6" y="531.0" width="16.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="173.6" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (208 samples, 1.36%)</title><rect x="170.9" y="515.0" width="16.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="173.9" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (206 samples, 1.35%)</title><rect x="171.0" y="499.0" width="15.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="174.0" y="510.0"></text>
</g>
<g>
<title>ip_rcv (203 samples, 1.33%)</title><rect x="171.1" y="483.0" width="15.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="174.1" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (186 samples, 1.22%)</title><rect x="171.4" y="467.0" width="14.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="174.4" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (185 samples, 1.21%)</title><rect x="171.5" y="451.0" width="14.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="174.5" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (175 samples, 1.15%)</title><rect x="171.6" y="435.0" width="13.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="174.6" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (173 samples, 1.13%)</title><rect x="171.7" y="419.0" width="13.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="174.7" y="430.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.03%)</title><rect x="171.9" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="174.9" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (161 samples, 1.06%)</title><rect x="172.6" y="403.0" width="12.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="175.6" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (157 samples, 1.03%)</title><rect x="172.9" y="387.0" width="12.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="175.9" y="398.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.04%)</title><rect x="173.3" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="176.3" y="382.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.04%)</title><rect x="173.3" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="176.3" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.03%)</title><rect x="173.4" y="339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="176.4" y="350.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.03%)</title><rect x="173.4" y="323.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="176.4" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.03%)</title><rect x="173.4" y="307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="176.4" y="318.0"></text>
</g>
<g>
<title>tcp_ack (43 samples, 0.28%)</title><rect x="174.1" y="371.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="177.1" y="382.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (22 samples, 0.14%)</title><rect x="175.7" y="355.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="178.7" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.09%)</title><rect x="175.9" y="339.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="178.9" y="350.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.03%)</title><rect x="175.9" y="323.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="178.9" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.03%)</title><rect x="175.9" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="178.9" y="318.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.05%)</title><rect x="176.2" y="323.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="179.2" y="334.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.05%)</title><rect x="176.2" y="307.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="179.2" y="318.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.03%)</title><rect x="176.4" y="291.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="179.4" y="302.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.03%)</title><rect x="176.4" y="275.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="179.4" y="286.0"></text>
</g>
<g>
<title>tcp_data_queue (96 samples, 0.63%)</title><rect x="177.5" y="371.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="180.5" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (88 samples, 0.58%)</title><rect x="177.6" y="355.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="180.6" y="366.0"></text>
</g>
<g>
<title>__wake_up_sync_key (88 samples, 0.58%)</title><rect x="177.6" y="339.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="180.6" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (87 samples, 0.57%)</title><rect x="177.7" y="323.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="180.7" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (87 samples, 0.57%)</title><rect x="177.7" y="307.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="180.7" y="318.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.03%)</title><rect x="184.4" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="187.4" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.05%)</title><rect x="185.2" y="435.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.07%)</title><rect x="186.0" y="467.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="189.0" y="478.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (6 samples, 0.04%)</title><rect x="186.0" y="451.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="189.0" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.04%)</title><rect x="186.0" y="435.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="189.0" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (4 samples, 0.03%)</title><rect x="186.5" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="189.5" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.03%)</title><rect x="186.5" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="189.5" y="446.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.13%)</title><rect x="187.2" y="611.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="190.2" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.13%)</title><rect x="187.2" y="595.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="190.2" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.05%)</title><rect x="187.7" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="190.7" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.03%)</title><rect x="187.7" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="190.7" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.07%)</title><rect x="189.0" y="643.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="192.0" y="654.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (4 samples, 0.03%)</title><rect x="189.1" y="627.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="192.1" y="638.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.03%)</title><rect x="189.1" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.1" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.06%)</title><rect x="190.5" y="707.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="193.5" y="718.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.03%)</title><rect x="190.8" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="193.8" y="702.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (4 samples, 0.03%)</title><rect x="190.9" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.9" y="686.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.03%)</title><rect x="191.8" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="194.8" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.03%)</title><rect x="191.8" y="739.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="194.8" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.03%)</title><rect x="192.5" y="819.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.5" y="830.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.03%)</title><rect x="192.5" y="803.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="195.5" y="814.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.03%)</title><rect x="192.5" y="787.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="195.5" y="798.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.03%)</title><rect x="192.5" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="195.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.05%)</title><rect x="193.3" y="979.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="193.5" y="963.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.5" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.03%)</title><rect x="193.6" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (65 samples, 0.43%)</title><rect x="193.9" y="1059.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.04%)</title><rect x="194.6" y="1043.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.04%)</title><rect x="194.6" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (4 samples, 0.03%)</title><rect x="194.8" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (49 samples, 0.32%)</title><rect x="195.1" y="1043.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.07%)</title><rect x="195.3" y="1027.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (10 samples, 0.07%)</title><rect x="195.3" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$204/1048669819.accept (37 samples, 0.24%)</title><rect x="196.0" y="1027.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="199.0" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$collect$2 (37 samples, 0.24%)</title><rect x="196.0" y="1011.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.0" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.05%)</title><rect x="196.2" y="995.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.2" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.05%)</title><rect x="196.2" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.2" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.05%)</title><rect x="196.2" y="963.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.2" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.05%)</title><rect x="196.2" y="947.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (28 samples, 0.18%)</title><rect x="196.7" y="995.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (28 samples, 0.18%)</title><rect x="196.7" y="979.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (6 samples, 0.04%)</title><rect x="196.8" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (20 samples, 0.13%)</title><rect x="197.3" y="963.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (20 samples, 0.13%)</title><rect x="197.3" y="947.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$221/654824253.accept (18 samples, 0.12%)</title><rect x="197.4" y="931.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$merge$0 (18 samples, 0.12%)</title><rect x="197.4" y="915.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.07%)</title><rect x="197.9" y="899.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.07%)</title><rect x="197.9" y="883.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (10 samples, 0.07%)</title><rect x="197.9" y="867.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.06%)</title><rect x="198.0" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.04%)</title><rect x="198.2" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.03%)</title><rect x="198.3" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (27 samples, 0.18%)</title><rect x="199.0" y="1075.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (27 samples, 0.18%)</title><rect x="199.0" y="1059.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (27 samples, 0.18%)</title><rect x="199.0" y="1043.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (20 samples, 0.13%)</title><rect x="199.6" y="1027.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (20 samples, 0.13%)</title><rect x="199.6" y="1011.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (20 samples, 0.13%)</title><rect x="199.6" y="995.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (20 samples, 0.13%)</title><rect x="201.1" y="1075.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.13%)</title><rect x="201.1" y="1059.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (13 samples, 0.09%)</title><rect x="201.7" y="1043.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (13 samples, 0.09%)</title><rect x="201.7" y="1027.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,515 samples, 9.94%)</title><rect x="202.7" y="1075.0" width="117.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.7" y="1086.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (704 samples, 4.62%)</title><rect x="205.1" y="1059.0" width="54.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.1" y="1070.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (563 samples, 3.69%)</title><rect x="205.6" y="1043.0" width="43.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.6" y="1054.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (30 samples, 0.20%)</title><rect x="205.9" y="1027.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (20 samples, 0.13%)</title><rect x="206.6" y="1011.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (18 samples, 0.12%)</title><rect x="206.7" y="995.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.04%)</title><rect x="207.5" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (19 samples, 0.12%)</title><rect x="208.3" y="1027.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (12 samples, 0.08%)</title><rect x="208.9" y="1011.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (12 samples, 0.08%)</title><rect x="208.9" y="995.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.03%)</title><rect x="209.4" y="979.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.4" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.03%)</title><rect x="209.4" y="963.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.4" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.03%)</title><rect x="209.4" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (107 samples, 0.70%)</title><rect x="209.8" y="1027.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (105 samples, 0.69%)</title><rect x="210.0" y="1011.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (101 samples, 0.66%)</title><rect x="210.1" y="995.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (5 samples, 0.03%)</title><rect x="210.1" y="979.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="213.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (96 samples, 0.63%)</title><rect x="210.5" y="979.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (96 samples, 0.63%)</title><rect x="210.5" y="963.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.5" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.12%)</title><rect x="210.7" y="947.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="213.7" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.03%)</title><rect x="211.1" y="931.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="214.1" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.03%)</title><rect x="211.6" y="931.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="214.6" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (76 samples, 0.50%)</title><rect x="212.0" y="947.0" width="5.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="215.0" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 0.43%)</title><rect x="212.8" y="931.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="215.8" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (66 samples, 0.43%)</title><rect x="212.8" y="915.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="215.8" y="926.0"></text>
</g>
<g>
<title>sys_futex (59 samples, 0.39%)</title><rect x="213.4" y="899.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="216.4" y="910.0"></text>
</g>
<g>
<title>do_futex (58 samples, 0.38%)</title><rect x="213.4" y="883.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="216.4" y="894.0"></text>
</g>
<g>
<title>futex_wake_op (53 samples, 0.35%)</title><rect x="213.5" y="867.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.5" y="878.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.03%)</title><rect x="214.1" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="217.1" y="862.0"></text>
</g>
<g>
<title>wake_up_q (41 samples, 0.27%)</title><rect x="214.4" y="851.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="217.4" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (41 samples, 0.27%)</title><rect x="214.4" y="835.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="217.4" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (41 samples, 0.27%)</title><rect x="214.4" y="819.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="217.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (401 samples, 2.63%)</title><rect x="218.2" y="1027.0" width="31.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.2" y="1038.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (401 samples, 2.63%)</title><rect x="218.2" y="1011.0" width="31.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.2" y="1022.0">jd..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (4 samples, 0.03%)</title><rect x="218.7" y="995.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="221.7" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (385 samples, 2.52%)</title><rect x="219.0" y="995.0" width="29.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="222.0" y="1006.0">Un..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.03%)</title><rect x="220.0" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="223.0" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (36 samples, 0.24%)</title><rect x="220.6" y="979.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="223.6" y="990.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (8 samples, 0.05%)</title><rect x="222.0" y="963.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="225.0" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.05%)</title><rect x="222.8" y="963.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="225.8" y="974.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.03%)</title><rect x="223.6" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="226.6" y="990.0"></text>
</g>
<g>
<title>__lll_unlock_wake (84 samples, 0.55%)</title><rect x="224.3" y="979.0" width="6.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="227.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.28%)</title><rect x="227.5" y="963.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="230.5" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.28%)</title><rect x="227.5" y="947.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="230.5" y="958.0"></text>
</g>
<g>
<title>sys_futex (24 samples, 0.16%)</title><rect x="228.9" y="931.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="231.9" y="942.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.16%)</title><rect x="228.9" y="915.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="231.9" y="926.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.14%)</title><rect x="229.0" y="899.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="232.0" y="910.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.04%)</title><rect x="230.2" y="883.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="233.2" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_wait (207 samples, 1.36%)</title><rect x="230.8" y="979.0" width="16.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="233.8" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (151 samples, 0.99%)</title><rect x="235.1" y="963.0" width="11.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="238.1" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (148 samples, 0.97%)</title><rect x="235.1" y="947.0" width="11.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="238.1" y="958.0"></text>
</g>
<g>
<title>sys_futex (127 samples, 0.83%)</title><rect x="236.7" y="931.0" width="9.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="239.7" y="942.0"></text>
</g>
<g>
<title>do_futex (124 samples, 0.81%)</title><rect x="236.9" y="915.0" width="9.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="239.9" y="926.0"></text>
</g>
<g>
<title>futex_wait (118 samples, 0.77%)</title><rect x="237.3" y="899.0" width="9.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="240.3" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (92 samples, 0.60%)</title><rect x="237.8" y="883.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="240.8" y="894.0"></text>
</g>
<g>
<title>schedule (79 samples, 0.52%)</title><rect x="238.8" y="867.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="241.8" y="878.0"></text>
</g>
<g>
<title>__schedule (76 samples, 0.50%)</title><rect x="239.1" y="851.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="242.1" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (64 samples, 0.42%)</title><rect x="240.0" y="835.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="243.0" y="846.0"></text>
</g>
<g>
<title>futex_wait_setup (15 samples, 0.10%)</title><rect x="244.9" y="883.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="247.9" y="894.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.03%)</title><rect x="245.6" y="867.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="248.6" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.03%)</title><rect x="247.3" y="979.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="250.3" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (8 samples, 0.05%)</title><rect x="248.0" y="979.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="251.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (9 samples, 0.06%)</title><rect x="249.2" y="1043.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (8 samples, 0.05%)</title><rect x="249.3" y="1027.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.04%)</title><rect x="249.4" y="1011.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.04%)</title><rect x="249.4" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (6 samples, 0.04%)</title><rect x="249.4" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.4" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (6 samples, 0.04%)</title><rect x="249.4" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.4" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (6 samples, 0.04%)</title><rect x="249.4" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (125 samples, 0.82%)</title><rect x="249.9" y="1043.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (125 samples, 0.82%)</title><rect x="249.9" y="1027.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (125 samples, 0.82%)</title><rect x="249.9" y="1011.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (125 samples, 0.82%)</title><rect x="249.9" y="995.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (125 samples, 0.82%)</title><rect x="249.9" y="979.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.9" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.14%)</title><rect x="250.3" y="963.0" width="1.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="253.3" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (6 samples, 0.04%)</title><rect x="251.0" y="947.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="254.0" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (99 samples, 0.65%)</title><rect x="251.9" y="963.0" width="7.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="254.9" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (85 samples, 0.56%)</title><rect x="253.0" y="947.0" width="6.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="256.0" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (83 samples, 0.54%)</title><rect x="253.0" y="931.0" width="6.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="256.0" y="942.0"></text>
</g>
<g>
<title>sys_futex (69 samples, 0.45%)</title><rect x="254.1" y="915.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="257.1" y="926.0"></text>
</g>
<g>
<title>do_futex (67 samples, 0.44%)</title><rect x="254.1" y="899.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="257.1" y="910.0"></text>
</g>
<g>
<title>futex_wake_op (65 samples, 0.43%)</title><rect x="254.2" y="883.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="257.2" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.04%)</title><rect x="255.0" y="867.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="258.0" y="878.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 0.32%)</title><rect x="255.5" y="867.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="258.5" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (49 samples, 0.32%)</title><rect x="255.5" y="851.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="258.5" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (49 samples, 0.32%)</title><rect x="255.5" y="835.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="258.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (779 samples, 5.11%)</title><rect x="259.6" y="1059.0" width="60.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.6" y="1070.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (459 samples, 3.01%)</title><rect x="260.3" y="1043.0" width="35.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.3" y="1054.0">jav..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.03%)</title><rect x="260.5" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.03%)</title><rect x="260.5" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (52 samples, 0.34%)</title><rect x="260.9" y="1027.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (35 samples, 0.23%)</title><rect x="262.1" y="1011.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (16 samples, 0.10%)</title><rect x="263.6" y="995.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (14 samples, 0.09%)</title><rect x="263.7" y="979.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (17 samples, 0.11%)</title><rect x="264.9" y="1027.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.03%)</title><rect x="265.1" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.03%)</title><rect x="265.1" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.03%)</title><rect x="265.1" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.1" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.03%)</title><rect x="265.1" y="963.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="268.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (9 samples, 0.06%)</title><rect x="265.5" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="268.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (9 samples, 0.06%)</title><rect x="265.5" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.03%)</title><rect x="265.9" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.9" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.03%)</title><rect x="265.9" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="268.9" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.03%)</title><rect x="265.9" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="268.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (119 samples, 0.78%)</title><rect x="266.2" y="1027.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (118 samples, 0.77%)</title><rect x="266.3" y="1011.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (111 samples, 0.73%)</title><rect x="266.8" y="995.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (91 samples, 0.60%)</title><rect x="268.3" y="979.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (91 samples, 0.60%)</title><rect x="268.3" y="963.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.3" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.09%)</title><rect x="268.5" y="947.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="271.5" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.03%)</title><rect x="269.2" y="931.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="272.2" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (74 samples, 0.49%)</title><rect x="269.5" y="947.0" width="5.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="272.5" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 0.41%)</title><rect x="270.5" y="931.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="273.5" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (62 samples, 0.41%)</title><rect x="270.5" y="915.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="273.5" y="926.0"></text>
</g>
<g>
<title>sys_futex (57 samples, 0.37%)</title><rect x="270.9" y="899.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="273.9" y="910.0"></text>
</g>
<g>
<title>do_futex (56 samples, 0.37%)</title><rect x="270.9" y="883.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="273.9" y="894.0"></text>
</g>
<g>
<title>futex_wake_op (50 samples, 0.33%)</title><rect x="271.2" y="867.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="274.2" y="878.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.04%)</title><rect x="271.7" y="851.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="274.7" y="862.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.24%)</title><rect x="272.2" y="851.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.2" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.24%)</title><rect x="272.2" y="835.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.2" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (36 samples, 0.24%)</title><rect x="272.2" y="819.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (260 samples, 1.71%)</title><rect x="275.7" y="1027.0" width="20.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="278.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (260 samples, 1.71%)</title><rect x="275.7" y="1011.0" width="20.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.7" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (251 samples, 1.65%)</title><rect x="276.0" y="995.0" width="19.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="279.0" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (23 samples, 0.15%)</title><rect x="276.9" y="979.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="279.9" y="990.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.04%)</title><rect x="277.7" y="963.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="280.7" y="974.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.03%)</title><rect x="278.9" y="979.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="281.9" y="990.0"></text>
</g>
<g>
<title>__lll_unlock_wake (41 samples, 0.27%)</title><rect x="279.4" y="979.0" width="3.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="282.4" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.14%)</title><rect x="281.0" y="963.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="284.0" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.14%)</title><rect x="281.0" y="947.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="284.0" y="958.0"></text>
</g>
<g>
<title>sys_futex (11 samples, 0.07%)</title><rect x="281.8" y="931.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="284.8" y="942.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.06%)</title><rect x="281.9" y="915.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="284.9" y="926.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.05%)</title><rect x="281.9" y="899.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="284.9" y="910.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.03%)</title><rect x="282.2" y="883.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="285.2" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_wait (150 samples, 0.98%)</title><rect x="282.6" y="979.0" width="11.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="285.6" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (107 samples, 0.70%)</title><rect x="285.9" y="963.0" width="8.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="288.9" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (104 samples, 0.68%)</title><rect x="285.9" y="947.0" width="8.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="288.9" y="958.0"></text>
</g>
<g>
<title>sys_futex (96 samples, 0.63%)</title><rect x="286.6" y="931.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="289.6" y="942.0"></text>
</g>
<g>
<title>do_futex (93 samples, 0.61%)</title><rect x="286.6" y="915.0" width="7.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="289.6" y="926.0"></text>
</g>
<g>
<title>futex_wait (87 samples, 0.57%)</title><rect x="286.9" y="899.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="289.9" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (68 samples, 0.45%)</title><rect x="287.2" y="883.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.2" y="894.0"></text>
</g>
<g>
<title>schedule (54 samples, 0.35%)</title><rect x="288.3" y="867.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="291.3" y="878.0"></text>
</g>
<g>
<title>__schedule (51 samples, 0.33%)</title><rect x="288.5" y="851.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="291.5" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (48 samples, 0.31%)</title><rect x="288.7" y="835.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.7" y="846.0"></text>
</g>
<g>
<title>futex_wait_setup (12 samples, 0.08%)</title><rect x="292.4" y="883.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="295.4" y="894.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.03%)</title><rect x="293.1" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="296.1" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (4 samples, 0.03%)</title><rect x="294.4" y="979.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="297.4" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.03%)</title><rect x="295.1" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="298.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (133 samples, 0.87%)</title><rect x="295.9" y="1043.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (125 samples, 0.82%)</title><rect x="296.5" y="1027.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (23 samples, 0.15%)</title><rect x="296.5" y="1011.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (71 samples, 0.47%)</title><rect x="298.3" y="1011.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.03%)</title><rect x="298.4" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (64 samples, 0.42%)</title><rect x="298.7" y="995.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (64 samples, 0.42%)</title><rect x="298.7" y="979.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (64 samples, 0.42%)</title><rect x="298.7" y="963.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.7" y="974.0"></text>
</g>
<g>
<title>Unsafe_Park (64 samples, 0.42%)</title><rect x="298.7" y="947.0" width="5.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="301.7" y="958.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.04%)</title><rect x="298.8" y="931.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="301.8" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (13 samples, 0.09%)</title><rect x="299.6" y="931.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="302.6" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="300.3" y="915.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="303.3" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="300.3" y="899.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="303.3" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_wait (35 samples, 0.23%)</title><rect x="300.6" y="931.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="303.6" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.15%)</title><rect x="301.6" y="915.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="304.6" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.15%)</title><rect x="301.6" y="899.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="304.6" y="910.0"></text>
</g>
<g>
<title>sys_futex (19 samples, 0.12%)</title><rect x="301.9" y="883.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="304.9" y="894.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.12%)</title><rect x="302.0" y="867.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="305.0" y="878.0"></text>
</g>
<g>
<title>futex_wait (18 samples, 0.12%)</title><rect x="302.0" y="851.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.0" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.09%)</title><rect x="302.0" y="835.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.0" y="846.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.08%)</title><rect x="302.2" y="819.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="305.2" y="830.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.08%)</title><rect x="302.2" y="803.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="305.2" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (10 samples, 0.07%)</title><rect x="302.3" y="787.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="305.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (31 samples, 0.20%)</title><rect x="303.8" y="1011.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (31 samples, 0.20%)</title><rect x="303.8" y="995.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (29 samples, 0.19%)</title><rect x="304.0" y="979.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (29 samples, 0.19%)</title><rect x="304.0" y="963.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (29 samples, 0.19%)</title><rect x="304.0" y="947.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="307.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (176 samples, 1.15%)</title><rect x="306.2" y="1043.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (176 samples, 1.15%)</title><rect x="306.2" y="1027.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (176 samples, 1.15%)</title><rect x="306.2" y="1011.0" width="13.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (176 samples, 1.15%)</title><rect x="306.2" y="995.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (176 samples, 1.15%)</title><rect x="306.2" y="979.0" width="13.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.2" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (39 samples, 0.26%)</title><rect x="306.8" y="963.0" width="3.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="309.8" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.06%)</title><rect x="307.7" y="947.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="310.7" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (8 samples, 0.05%)</title><rect x="308.6" y="947.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="311.6" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (5 samples, 0.03%)</title><rect x="309.3" y="947.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="312.3" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (128 samples, 0.84%)</title><rect x="309.9" y="963.0" width="9.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="312.9" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (108 samples, 0.71%)</title><rect x="311.4" y="947.0" width="8.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="314.4" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (106 samples, 0.70%)</title><rect x="311.4" y="931.0" width="8.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="314.4" y="942.0"></text>
</g>
<g>
<title>sys_futex (91 samples, 0.60%)</title><rect x="312.6" y="915.0" width="7.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="315.6" y="926.0"></text>
</g>
<g>
<title>do_futex (88 samples, 0.58%)</title><rect x="312.6" y="899.0" width="6.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="315.6" y="910.0"></text>
</g>
<g>
<title>futex_wake_op (86 samples, 0.56%)</title><rect x="312.8" y="883.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="315.8" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.04%)</title><rect x="313.6" y="867.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="316.6" y="878.0"></text>
</g>
<g>
<title>wake_up_q (69 samples, 0.45%)</title><rect x="314.1" y="867.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="317.1" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (69 samples, 0.45%)</title><rect x="314.1" y="851.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="317.1" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (68 samples, 0.45%)</title><rect x="314.2" y="835.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="317.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$389/2097994766.run (2,292 samples, 15.03%)</title><rect x="319.9" y="1075.0" width="177.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.9" y="1086.0">jdk/internal/net/http/S..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2,289 samples, 15.01%)</title><rect x="320.1" y="1059.0" width="177.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="323.1" y="1070.0">jdk/internal/net/http/S..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2,285 samples, 14.98%)</title><rect x="320.5" y="1043.0" width="176.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.5" y="1054.0">jdk/internal/net/http/S..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (2,259 samples, 14.81%)</title><rect x="321.8" y="1027.0" width="174.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.8" y="1038.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,256 samples, 14.79%)</title><rect x="322.1" y="1011.0" width="174.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.1" y="1022.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,256 samples, 14.79%)</title><rect x="322.1" y="995.0" width="174.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.1" y="1006.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,254 samples, 14.78%)</title><rect x="322.1" y="979.0" width="174.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.1" y="990.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,254 samples, 14.78%)</title><rect x="322.1" y="963.0" width="174.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.1" y="974.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,254 samples, 14.78%)</title><rect x="322.1" y="947.0" width="174.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.1" y="958.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (8 samples, 0.05%)</title><rect x="322.3" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="325.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (6 samples, 0.04%)</title><rect x="322.5" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (6 samples, 0.04%)</title><rect x="322.5" y="899.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.04%)</title><rect x="322.5" y="883.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="325.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.03%)</title><rect x="322.5" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (5 samples, 0.03%)</title><rect x="322.5" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (5 samples, 0.03%)</title><rect x="322.5" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (5 samples, 0.03%)</title><rect x="322.5" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,242 samples, 14.70%)</title><rect x="322.9" y="931.0" width="173.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.9" y="942.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2,242 samples, 14.70%)</title><rect x="322.9" y="915.0" width="173.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.9" y="926.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (290 samples, 1.90%)</title><rect x="323.3" y="899.0" width="22.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.3" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (231 samples, 1.51%)</title><rect x="324.6" y="883.0" width="17.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (229 samples, 1.50%)</title><rect x="324.7" y="867.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.7" y="878.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.04%)</title><rect x="324.7" y="851.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="327.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (223 samples, 1.46%)</title><rect x="325.2" y="851.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (200 samples, 1.31%)</title><rect x="326.3" y="835.0" width="15.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (45 samples, 0.30%)</title><rect x="326.8" y="819.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.8" y="830.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="327.3" y="803.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="330.3" y="814.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$32/992846223.apply (4 samples, 0.03%)</title><rect x="327.9" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/434635916.apply (22 samples, 0.14%)</title><rect x="328.2" y="803.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (16 samples, 0.10%)</title><rect x="328.7" y="787.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (15 samples, 0.10%)</title><rect x="328.7" y="771.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (10 samples, 0.07%)</title><rect x="329.1" y="755.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.05%)</title><rect x="329.2" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.05%)</title><rect x="329.2" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$416/297087785.get$Lambda (7 samples, 0.05%)</title><rect x="329.2" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$416/297087785.&lt;init&gt; (5 samples, 0.03%)</title><rect x="329.4" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/283532103.apply (5 samples, 0.03%)</title><rect x="329.9" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="332.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (5 samples, 0.03%)</title><rect x="329.9" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (5 samples, 0.03%)</title><rect x="329.9" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (5 samples, 0.03%)</title><rect x="329.9" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (4 samples, 0.03%)</title><rect x="330.0" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.03%)</title><rect x="330.0" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1212401691.run (4 samples, 0.03%)</title><rect x="330.0" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (4 samples, 0.03%)</title><rect x="330.0" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (141 samples, 0.92%)</title><rect x="330.3" y="819.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (138 samples, 0.90%)</title><rect x="330.5" y="803.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.06%)</title><rect x="330.5" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (9 samples, 0.06%)</title><rect x="330.5" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.5" y="782.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="330.7" y="755.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="333.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/733215646.apply (129 samples, 0.85%)</title><rect x="331.2" y="787.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (126 samples, 0.83%)</title><rect x="331.4" y="771.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (126 samples, 0.83%)</title><rect x="331.4" y="755.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$216/483426623.apply (119 samples, 0.78%)</title><rect x="331.4" y="739.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (119 samples, 0.78%)</title><rect x="331.4" y="723.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.03%)</title><rect x="331.4" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.03%)</title><rect x="331.4" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (4 samples, 0.03%)</title><rect x="331.4" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.03%)</title><rect x="331.4" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (114 samples, 0.75%)</title><rect x="331.8" y="707.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (48 samples, 0.31%)</title><rect x="332.0" y="691.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (48 samples, 0.31%)</title><rect x="332.0" y="675.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (48 samples, 0.31%)</title><rect x="332.0" y="659.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$397/1153846697.accept (19 samples, 0.12%)</title><rect x="332.1" y="643.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (17 samples, 0.11%)</title><rect x="332.3" y="627.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (17 samples, 0.11%)</title><rect x="332.3" y="611.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.03%)</title><rect x="332.3" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="332.3" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$398/1681444486.get$Lambda (5 samples, 0.03%)</title><rect x="332.3" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="335.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (12 samples, 0.08%)</title><rect x="332.7" y="595.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (12 samples, 0.08%)</title><rect x="332.7" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (5 samples, 0.03%)</title><rect x="332.9" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (5 samples, 0.03%)</title><rect x="332.9" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="335.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="333.3" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="333.3" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$401/2015134065.accept (23 samples, 0.15%)</title><rect x="333.6" y="643.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (23 samples, 0.15%)</title><rect x="333.6" y="627.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (23 samples, 0.15%)</title><rect x="333.6" y="611.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (22 samples, 0.14%)</title><rect x="333.7" y="595.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (22 samples, 0.14%)</title><rect x="333.7" y="579.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (21 samples, 0.14%)</title><rect x="333.8" y="563.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (21 samples, 0.14%)</title><rect x="333.8" y="547.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (19 samples, 0.12%)</title><rect x="333.9" y="531.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (19 samples, 0.12%)</title><rect x="333.9" y="515.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (17 samples, 0.11%)</title><rect x="334.1" y="499.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (15 samples, 0.10%)</title><rect x="334.2" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (13 samples, 0.09%)</title><rect x="334.3" y="467.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.07%)</title><rect x="334.5" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.07%)</title><rect x="334.5" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (9 samples, 0.06%)</title><rect x="334.5" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (9 samples, 0.06%)</title><rect x="334.5" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (9 samples, 0.06%)</title><rect x="334.5" y="387.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (7 samples, 0.05%)</title><rect x="334.7" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (6 samples, 0.04%)</title><rect x="334.8" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (4 samples, 0.03%)</title><rect x="334.9" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="335.4" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="335.4" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (64 samples, 0.42%)</title><rect x="335.7" y="691.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (60 samples, 0.39%)</title><rect x="336.0" y="675.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (33 samples, 0.22%)</title><rect x="336.0" y="659.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="339.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (32 samples, 0.21%)</title><rect x="336.0" y="643.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (32 samples, 0.21%)</title><rect x="336.0" y="627.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (32 samples, 0.21%)</title><rect x="336.0" y="611.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32 samples, 0.21%)</title><rect x="336.0" y="595.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (27 samples, 0.18%)</title><rect x="338.6" y="659.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.08%)</title><rect x="338.6" y="643.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.6" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="338.9" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="341.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="338.9" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.9" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="339.1" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.07%)</title><rect x="339.9" y="643.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.06%)</title><rect x="340.0" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="340.2" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.2" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="340.2" y="595.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.2" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="340.2" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1734934037.apply (7 samples, 0.05%)</title><rect x="340.7" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (7 samples, 0.05%)</title><rect x="340.7" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.05%)</title><rect x="340.7" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.05%)</title><rect x="340.7" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/733215646.get$Lambda (7 samples, 0.05%)</title><rect x="340.7" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/733215646.&lt;init&gt; (7 samples, 0.05%)</title><rect x="340.7" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.7" y="670.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.03%)</title><rect x="341.4" y="819.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="344.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$415/222178550.get (6 samples, 0.04%)</title><rect x="342.0" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (21 samples, 0.14%)</title><rect x="342.4" y="883.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.04%)</title><rect x="342.7" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.7" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.04%)</title><rect x="342.7" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="345.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (10 samples, 0.07%)</title><rect x="343.2" y="867.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="346.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (6 samples, 0.04%)</title><rect x="343.5" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.12%)</title><rect x="344.3" y="883.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$411/517901774.run (12 samples, 0.08%)</title><rect x="344.8" y="867.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (6 samples, 0.04%)</title><rect x="345.2" y="851.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (6 samples, 0.04%)</title><rect x="345.2" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (21 samples, 0.14%)</title><rect x="345.8" y="899.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="348.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (21 samples, 0.14%)</title><rect x="345.8" y="883.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (21 samples, 0.14%)</title><rect x="345.8" y="867.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,923 samples, 12.61%)</title><rect x="347.4" y="899.0" width="148.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.4" y="910.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,922 samples, 12.60%)</title><rect x="347.5" y="883.0" width="148.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.5" y="894.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,922 samples, 12.60%)</title><rect x="347.5" y="867.0" width="148.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.5" y="878.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,918 samples, 12.58%)</title><rect x="347.7" y="851.0" width="148.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.7" y="862.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$402/472541682.run (15 samples, 0.10%)</title><rect x="347.7" y="835.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (15 samples, 0.10%)</title><rect x="347.7" y="819.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (15 samples, 0.10%)</title><rect x="347.7" y="803.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (8 samples, 0.05%)</title><rect x="348.2" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,876 samples, 12.30%)</title><rect x="348.9" y="835.0" width="145.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.9" y="846.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1,873 samples, 12.28%)</title><rect x="348.9" y="819.0" width="144.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.9" y="830.0">java/nio/channels/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1,873 samples, 12.28%)</title><rect x="348.9" y="803.0" width="144.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.9" y="814.0">sun/nio/ch/SocketC..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.03%)</title><rect x="348.9" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.03%)</title><rect x="348.9" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.03%)</title><rect x="348.9" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.03%)</title><rect x="348.9" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.07%)</title><rect x="349.2" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.05%)</title><rect x="349.4" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.03%)</title><rect x="349.6" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (4 samples, 0.03%)</title><rect x="349.7" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.03%)</title><rect x="349.7" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,858 samples, 12.18%)</title><rect x="350.0" y="787.0" width="143.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.0" y="798.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,858 samples, 12.18%)</title><rect x="350.0" y="771.0" width="143.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.0" y="782.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (16 samples, 0.10%)</title><rect x="351.3" y="755.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.3" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (14 samples, 0.09%)</title><rect x="351.4" y="739.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (9 samples, 0.06%)</title><rect x="351.7" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (7 samples, 0.05%)</title><rect x="351.9" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (7 samples, 0.05%)</title><rect x="351.9" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (7 samples, 0.05%)</title><rect x="351.9" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (6 samples, 0.04%)</title><rect x="352.6" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (7 samples, 0.05%)</title><rect x="353.3" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="356.3" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.03%)</title><rect x="353.5" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1,786 samples, 11.71%)</title><rect x="353.8" y="755.0" width="138.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.8" y="766.0">sun/nio/ch/Socket..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1,784 samples, 11.70%)</title><rect x="354.0" y="739.0" width="138.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.0" y="750.0">sun/nio/ch/FileDi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (6 samples, 0.04%)</title><rect x="354.8" y="723.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="357.8" y="734.0"></text>
</g>
<g>
<title>__GI_writev (1,744 samples, 11.44%)</title><rect x="355.3" y="723.0" width="134.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="358.3" y="734.0">__GI_writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,646 samples, 10.79%)</title><rect x="362.6" y="707.0" width="127.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="365.6" y="718.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (1,643 samples, 10.77%)</title><rect x="362.6" y="691.0" width="127.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="365.6" y="702.0">do_syscall_64</text>
</g>
<g>
<title>exit_to_usermode_loop (21 samples, 0.14%)</title><rect x="365.7" y="675.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="368.7" y="686.0"></text>
</g>
<g>
<title>schedule (18 samples, 0.12%)</title><rect x="366.0" y="659.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="369.0" y="670.0"></text>
</g>
<g>
<title>__schedule (17 samples, 0.11%)</title><rect x="366.0" y="643.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="369.0" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.10%)</title><rect x="366.1" y="627.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="369.1" y="638.0"></text>
</g>
<g>
<title>sys_writev (1,582 samples, 10.37%)</title><rect x="367.4" y="675.0" width="122.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="370.4" y="686.0">sys_writev</text>
</g>
<g>
<title>do_writev (1,577 samples, 10.34%)</title><rect x="367.5" y="659.0" width="122.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="370.5" y="670.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (21 samples, 0.14%)</title><rect x="367.7" y="643.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="370.7" y="654.0"></text>
</g>
<g>
<title>__fget_light (20 samples, 0.13%)</title><rect x="367.8" y="627.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="370.8" y="638.0"></text>
</g>
<g>
<title>__fget (20 samples, 0.13%)</title><rect x="367.8" y="611.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="370.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="369.4" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="372.4" y="654.0"></text>
</g>
<g>
<title>vfs_writev (1,548 samples, 10.15%)</title><rect x="369.7" y="643.0" width="119.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="372.7" y="654.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (1,524 samples, 9.99%)</title><rect x="370.3" y="627.0" width="117.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="373.3" y="638.0">do_iter_write</text>
</g>
<g>
<title>do_iter_readv_writev (1,481 samples, 9.71%)</title><rect x="371.0" y="611.0" width="114.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="374.0" y="622.0">do_iter_readv_..</text>
</g>
<g>
<title>sock_write_iter (1,473 samples, 9.66%)</title><rect x="371.6" y="595.0" width="114.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="374.6" y="606.0">sock_write_iter</text>
</g>
<g>
<title>sock_sendmsg (1,466 samples, 9.61%)</title><rect x="372.1" y="579.0" width="113.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="375.1" y="590.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (1,447 samples, 9.49%)</title><rect x="372.5" y="563.0" width="111.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="375.5" y="574.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,440 samples, 9.44%)</title><rect x="372.9" y="547.0" width="111.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="375.9" y="558.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.05%)</title><rect x="373.4" y="531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="376.4" y="542.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.04%)</title><rect x="373.9" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="376.9" y="542.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.03%)</title><rect x="375.0" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="378.0" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,400 samples, 9.18%)</title><rect x="375.5" y="531.0" width="108.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="378.5" y="542.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (13 samples, 0.09%)</title><rect x="377.6" y="515.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="380.6" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (9 samples, 0.06%)</title><rect x="377.9" y="499.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="380.9" y="510.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.05%)</title><rect x="378.7" y="515.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="381.7" y="526.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.03%)</title><rect x="379.7" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.7" y="526.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.03%)</title><rect x="379.7" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="382.7" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (58 samples, 0.38%)</title><rect x="380.0" y="515.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="383.0" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (44 samples, 0.29%)</title><rect x="380.7" y="499.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="383.7" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (18 samples, 0.12%)</title><rect x="381.4" y="483.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="384.4" y="494.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (13 samples, 0.09%)</title><rect x="381.4" y="467.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="384.4" y="478.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.03%)</title><rect x="382.0" y="451.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.0" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.08%)</title><rect x="382.9" y="483.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="385.9" y="494.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.03%)</title><rect x="383.8" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="386.8" y="494.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.03%)</title><rect x="384.5" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="387.5" y="526.0"></text>
</g>
<g>
<title>tcp_push (1,253 samples, 8.22%)</title><rect x="385.0" y="515.0" width="97.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="388.0" y="526.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,249 samples, 8.19%)</title><rect x="385.2" y="499.0" width="96.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.2" y="510.0">__tcp_push_..</text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.04%)</title><rect x="385.4" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="388.4" y="494.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,239 samples, 8.13%)</title><rect x="386.0" y="483.0" width="95.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="389.0" y="494.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (1,146 samples, 7.52%)</title><rect x="387.3" y="467.0" width="88.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="390.3" y="478.0">__tcp_tran..</text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.03%)</title><rect x="389.5" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="392.5" y="462.0"></text>
</g>
<g>
<title>ip_queue_xmit (1,088 samples, 7.13%)</title><rect x="389.9" y="451.0" width="84.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="392.9" y="462.0">ip_queue_x..</text>
</g>
<g>
<title>__sk_dst_check (8 samples, 0.05%)</title><rect x="390.9" y="435.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="393.9" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (7 samples, 0.05%)</title><rect x="391.0" y="419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="394.0" y="430.0"></text>
</g>
<g>
<title>ip_local_out (1,064 samples, 6.98%)</title><rect x="391.5" y="435.0" width="82.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="394.5" y="446.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (235 samples, 1.54%)</title><rect x="391.6" y="419.0" width="18.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="394.6" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.06%)</title><rect x="391.8" y="403.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="394.8" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.03%)</title><rect x="392.9" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="395.9" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (8 samples, 0.05%)</title><rect x="393.2" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="396.2" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (206 samples, 1.35%)</title><rect x="393.8" y="403.0" width="16.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="396.8" y="414.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (17 samples, 0.11%)</title><rect x="394.0" y="387.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="397.0" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (15 samples, 0.10%)</title><rect x="394.2" y="371.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="397.2" y="382.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (21 samples, 0.14%)</title><rect x="395.4" y="387.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="398.4" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (19 samples, 0.12%)</title><rect x="395.5" y="371.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="398.5" y="382.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (10 samples, 0.07%)</title><rect x="397.0" y="387.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.0" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.03%)</title><rect x="397.0" y="371.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="400.0" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (6 samples, 0.04%)</title><rect x="397.3" y="371.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="400.3" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (149 samples, 0.98%)</title><rect x="397.8" y="387.0" width="11.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="400.8" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (122 samples, 0.80%)</title><rect x="398.4" y="371.0" width="9.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="401.4" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (14 samples, 0.09%)</title><rect x="400.2" y="355.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="403.2" y="366.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (6 samples, 0.04%)</title><rect x="401.9" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="404.9" y="366.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (9 samples, 0.06%)</title><rect x="402.6" y="355.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="405.6" y="366.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (7 samples, 0.05%)</title><rect x="402.6" y="339.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="405.6" y="350.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (8 samples, 0.05%)</title><rect x="403.3" y="355.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="406.3" y="366.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (47 samples, 0.31%)</title><rect x="404.1" y="355.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="407.1" y="366.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (7 samples, 0.05%)</title><rect x="405.5" y="339.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="408.5" y="350.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (19 samples, 0.12%)</title><rect x="406.3" y="339.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="409.3" y="350.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (9 samples, 0.06%)</title><rect x="407.9" y="371.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.9" y="382.0"></text>
</g>
<g>
<title>tcp_get_timeouts?[nf_conntrack] (4 samples, 0.03%)</title><rect x="408.6" y="371.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.6" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (5 samples, 0.03%)</title><rect x="408.9" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="411.9" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (6 samples, 0.04%)</title><rect x="409.3" y="387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="412.3" y="398.0"></text>
</g>
<g>
<title>ip_output (824 samples, 5.40%)</title><rect x="409.8" y="419.0" width="63.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="412.8" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (783 samples, 5.13%)</title><rect x="410.2" y="403.0" width="60.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="413.2" y="414.0">ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (777 samples, 5.10%)</title><rect x="410.6" y="387.0" width="60.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.6" y="398.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (696 samples, 4.56%)</title><rect x="411.5" y="371.0" width="53.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.5" y="382.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.17 (693 samples, 4.54%)</title><rect x="411.8" y="355.0" width="53.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="414.8" y="366.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (685 samples, 4.49%)</title><rect x="412.4" y="339.0" width="53.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="415.4" y="350.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (684 samples, 4.49%)</title><rect x="412.4" y="323.0" width="52.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="415.4" y="334.0">__sof..</text>
</g>
<g>
<title>net_rx_action (657 samples, 4.31%)</title><rect x="414.1" y="307.0" width="50.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="417.1" y="318.0">net_r..</text>
</g>
<g>
<title>process_backlog (646 samples, 4.24%)</title><rect x="414.9" y="291.0" width="50.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="417.9" y="302.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (630 samples, 4.13%)</title><rect x="416.0" y="275.0" width="48.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="419.0" y="286.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (626 samples, 4.11%)</title><rect x="416.1" y="259.0" width="48.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="419.1" y="270.0">__ne..</text>
</g>
<g>
<title>ip_rcv (594 samples, 3.90%)</title><rect x="417.9" y="243.0" width="45.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="420.9" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (7 samples, 0.05%)</title><rect x="418.5" y="227.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="421.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (538 samples, 3.53%)</title><rect x="419.0" y="227.0" width="41.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="422.0" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (534 samples, 3.50%)</title><rect x="419.2" y="211.0" width="41.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="422.2" y="222.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (485 samples, 3.18%)</title><rect x="419.6" y="195.0" width="37.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="422.6" y="206.0">ip_..</text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.03%)</title><rect x="420.0" y="179.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="423.0" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (6 samples, 0.04%)</title><rect x="420.3" y="179.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="423.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (468 samples, 3.07%)</title><rect x="420.9" y="179.0" width="36.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="423.9" y="190.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (19 samples, 0.12%)</title><rect x="422.2" y="163.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="425.2" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (14 samples, 0.09%)</title><rect x="424.2" y="163.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.2" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.03%)</title><rect x="424.9" y="147.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.9" y="158.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (7 samples, 0.05%)</title><rect x="425.5" y="163.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="428.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (400 samples, 2.62%)</title><rect x="426.0" y="163.0" width="31.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="429.0" y="174.0">tc..</text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.04%)</title><rect x="426.6" y="147.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="429.6" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (385 samples, 2.52%)</title><rect x="427.2" y="147.0" width="29.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="430.2" y="158.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (20 samples, 0.13%)</title><rect x="428.2" y="131.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="431.2" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (18 samples, 0.12%)</title><rect x="428.3" y="115.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="431.3" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.09%)</title><rect x="428.7" y="99.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="431.7" y="110.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.08%)</title><rect x="428.8" y="83.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="431.8" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.07%)</title><rect x="428.9" y="67.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="431.9" y="78.0"></text>
</g>
<g>
<title>sched_clock_cpu (4 samples, 0.03%)</title><rect x="430.0" y="131.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="433.0" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (70 samples, 0.46%)</title><rect x="430.4" y="131.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="433.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (65 samples, 0.43%)</title><rect x="430.8" y="115.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="433.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (62 samples, 0.41%)</title><rect x="430.9" y="99.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="433.9" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (61 samples, 0.40%)</title><rect x="431.0" y="83.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="434.0" y="94.0"></text>
</g>
<g>
<title>tcp_ack (85 samples, 0.56%)</title><rect x="435.8" y="131.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.8" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (52 samples, 0.34%)</title><rect x="438.0" y="115.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="441.0" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (25 samples, 0.16%)</title><rect x="439.2" y="99.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="442.2" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.03%)</title><rect x="439.2" y="83.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="442.2" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.03%)</title><rect x="439.2" y="67.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="442.2" y="78.0"></text>
</g>
<g>
<title>skb_release_all (16 samples, 0.10%)</title><rect x="439.6" y="83.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="442.6" y="94.0"></text>
</g>
<g>
<title>skb_release_data (14 samples, 0.09%)</title><rect x="439.6" y="67.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="442.6" y="78.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.05%)</title><rect x="440.1" y="51.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.1" y="62.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.05%)</title><rect x="440.1" y="35.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.1" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (7 samples, 0.05%)</title><rect x="441.5" y="99.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="444.5" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (172 samples, 1.13%)</title><rect x="442.4" y="131.0" width="13.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="445.4" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (155 samples, 1.02%)</title><rect x="443.0" y="115.0" width="12.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="446.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (153 samples, 1.00%)</title><rect x="443.2" y="99.0" width="11.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="446.2" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (153 samples, 1.00%)</title><rect x="443.2" y="83.0" width="11.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="446.2" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (153 samples, 1.00%)</title><rect x="443.2" y="67.0" width="11.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="446.2" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (8 samples, 0.05%)</title><rect x="455.0" y="115.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="458.0" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.03%)</title><rect x="455.7" y="131.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="458.7" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (6 samples, 0.04%)</title><rect x="456.1" y="131.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="459.1" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (32 samples, 0.21%)</title><rect x="457.7" y="195.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="460.7" y="206.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (19 samples, 0.12%)</title><rect x="458.0" y="179.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="461.0" y="190.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (19 samples, 0.12%)</title><rect x="458.0" y="163.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="461.0" y="174.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (6 samples, 0.04%)</title><rect x="459.4" y="179.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.4" y="190.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.04%)</title><rect x="459.4" y="163.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="462.4" y="174.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (7 samples, 0.05%)</title><rect x="460.7" y="227.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="463.7" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (27 samples, 0.18%)</title><rect x="461.8" y="227.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="464.8" y="238.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (15 samples, 0.10%)</title><rect x="462.0" y="211.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="465.0" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (12 samples, 0.08%)</title><rect x="462.2" y="195.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="465.2" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="463.9" y="243.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="466.9" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (69 samples, 0.45%)</title><rect x="465.4" y="371.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.4" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (69 samples, 0.45%)</title><rect x="465.4" y="355.0" width="5.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.4" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (32 samples, 0.21%)</title><rect x="466.5" y="339.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="469.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (23 samples, 0.15%)</title><rect x="466.7" y="323.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.7" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.03%)</title><rect x="466.9" y="307.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="469.9" y="318.0"></text>
</g>
<g>
<title>netif_rx (14 samples, 0.09%)</title><rect x="467.3" y="307.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="470.3" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.09%)</title><rect x="467.3" y="291.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="470.3" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (12 samples, 0.08%)</title><rect x="467.4" y="275.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="470.4" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.04%)</title><rect x="469.0" y="339.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="472.0" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (9 samples, 0.06%)</title><rect x="469.8" y="339.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.8" y="350.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.03%)</title><rect x="470.0" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="473.0" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (25 samples, 0.16%)</title><rect x="471.6" y="403.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="474.6" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (7 samples, 0.05%)</title><rect x="471.7" y="387.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="474.7" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.03%)</title><rect x="471.8" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="474.8" y="382.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (7 samples, 0.05%)</title><rect x="472.2" y="387.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="475.2" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (6 samples, 0.04%)</title><rect x="472.3" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.3" y="382.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (5 samples, 0.03%)</title><rect x="473.0" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="476.0" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.03%)</title><rect x="473.5" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="476.5" y="430.0"></text>
</g>
<g>
<title>skb_clone (17 samples, 0.11%)</title><rect x="474.1" y="451.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.1" y="462.0"></text>
</g>
<g>
<title>__skb_clone (12 samples, 0.08%)</title><rect x="474.5" y="435.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="477.5" y="446.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.03%)</title><rect x="475.5" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.5" y="462.0"></text>
</g>
<g>
<title>sched_clock_cpu (5 samples, 0.03%)</title><rect x="476.7" y="467.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="479.7" y="478.0"></text>
</g>
<g>
<title>sched_clock (4 samples, 0.03%)</title><rect x="476.8" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="479.8" y="462.0"></text>
</g>
<g>
<title>native_sched_clock (4 samples, 0.03%)</title><rect x="476.8" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="479.8" y="446.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (24 samples, 0.16%)</title><rect x="477.3" y="467.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="480.3" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (19 samples, 0.12%)</title><rect x="477.7" y="451.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="480.7" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (17 samples, 0.11%)</title><rect x="477.9" y="435.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="480.9" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.07%)</title><rect x="478.3" y="419.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="481.3" y="430.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.07%)</title><rect x="478.3" y="403.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="481.3" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.05%)</title><rect x="478.6" y="387.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="481.6" y="398.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.03%)</title><rect x="479.7" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="482.7" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (15 samples, 0.10%)</title><rect x="480.0" y="467.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.0" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (14 samples, 0.09%)</title><rect x="480.1" y="451.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.1" y="462.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.09%)</title><rect x="480.1" y="435.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.1" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.09%)</title><rect x="480.1" y="419.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="483.1" y="430.0"></text>
</g>
<g>
<title>tcp_v4_send_check (6 samples, 0.04%)</title><rect x="481.4" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="484.4" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (21 samples, 0.14%)</title><rect x="482.0" y="515.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="485.0" y="526.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.03%)</title><rect x="482.0" y="499.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="485.0" y="510.0"></text>
</g>
<g>
<title>tcp_current_mss (15 samples, 0.10%)</title><rect x="482.4" y="499.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="485.4" y="510.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (4 samples, 0.03%)</title><rect x="484.0" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="487.0" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.09%)</title><rect x="484.4" y="563.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.4" y="574.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.05%)</title><rect x="484.8" y="547.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.8" y="558.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.05%)</title><rect x="484.8" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="487.8" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (32 samples, 0.21%)</title><rect x="485.7" y="611.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="488.7" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.05%)</title><rect x="485.9" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="488.9" y="606.0"></text>
</g>
<g>
<title>security_file_permission (23 samples, 0.15%)</title><rect x="486.4" y="595.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="489.4" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (18 samples, 0.12%)</title><rect x="486.6" y="579.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="489.6" y="590.0"></text>
</g>
<g>
<title>common_file_perm (18 samples, 0.12%)</title><rect x="486.6" y="563.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="489.6" y="574.0"></text>
</g>
<g>
<title>import_iovec (15 samples, 0.10%)</title><rect x="488.3" y="627.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="491.3" y="638.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (13 samples, 0.09%)</title><rect x="488.5" y="611.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="491.5" y="622.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.03%)</title><rect x="490.2" y="723.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="493.2" y="734.0"></text>
</g>
<g>
<title>fdval (13 samples, 0.09%)</title><rect x="490.9" y="723.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="493.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (21 samples, 0.14%)</title><rect x="492.0" y="755.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.0" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.05%)</title><rect x="492.2" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.04%)</title><rect x="492.2" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.03%)</title><rect x="492.3" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (12 samples, 0.08%)</title><rect x="492.7" y="739.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="495.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (27 samples, 0.18%)</title><rect x="494.0" y="835.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.0" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (12 samples, 0.08%)</title><rect x="495.1" y="819.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.get (5 samples, 0.03%)</title><rect x="496.9" y="1027.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (5 samples, 0.03%)</title><rect x="496.9" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,890 samples, 12.39%)</title><rect x="497.3" y="1075.0" width="146.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.3" y="1086.0">jdk/internal/net/h..</text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="497.6" y="1059.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="500.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,882 samples, 12.34%)</title><rect x="497.9" y="1059.0" width="145.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="500.9" y="1070.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (4 samples, 0.03%)</title><rect x="498.1" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.03%)</title><rect x="498.1" y="1027.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.03%)</title><rect x="498.1" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.03%)</title><rect x="498.1" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.03%)</title><rect x="498.1" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (4 samples, 0.03%)</title><rect x="498.1" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (4 samples, 0.03%)</title><rect x="498.1" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (4 samples, 0.03%)</title><rect x="498.1" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="501.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (904 samples, 5.93%)</title><rect x="498.4" y="1043.0" width="70.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.4" y="1054.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (904 samples, 5.93%)</title><rect x="498.4" y="1027.0" width="70.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.4" y="1038.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (904 samples, 5.93%)</title><rect x="498.4" y="1011.0" width="70.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.4" y="1022.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (107 samples, 0.70%)</title><rect x="499.4" y="995.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (107 samples, 0.70%)</title><rect x="499.4" y="979.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (107 samples, 0.70%)</title><rect x="499.4" y="963.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (107 samples, 0.70%)</title><rect x="499.4" y="947.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (107 samples, 0.70%)</title><rect x="499.4" y="931.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (103 samples, 0.68%)</title><rect x="499.6" y="915.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (102 samples, 0.67%)</title><rect x="499.7" y="899.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (102 samples, 0.67%)</title><rect x="499.7" y="883.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.7" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.08%)</title><rect x="500.1" y="867.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="503.1" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (11 samples, 0.07%)</title><rect x="500.2" y="851.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="503.2" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.06%)</title><rect x="500.3" y="835.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="503.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="500.5" y="819.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="503.5" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="500.5" y="803.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.5" y="814.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.04%)</title><rect x="500.5" y="787.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.5" y="798.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.04%)</title><rect x="500.5" y="771.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="503.5" y="782.0"></text>
</g>
<g>
<title>futex_wake_op (6 samples, 0.04%)</title><rect x="500.5" y="755.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="503.5" y="766.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="500.6" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="503.6" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="500.6" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="503.6" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="500.6" y="707.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="503.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (84 samples, 0.55%)</title><rect x="501.1" y="867.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.1" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (24 samples, 0.16%)</title><rect x="502.5" y="851.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="505.5" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (23 samples, 0.15%)</title><rect x="502.6" y="835.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="505.6" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (23 samples, 0.15%)</title><rect x="502.6" y="819.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="505.6" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (20 samples, 0.13%)</title><rect x="502.7" y="803.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="505.7" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.03%)</title><rect x="504.4" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (37 samples, 0.24%)</title><rect x="504.7" y="851.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.7" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (34 samples, 0.22%)</title><rect x="504.9" y="835.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.9" y="846.0"></text>
</g>
<g>
<title>__GI___write (34 samples, 0.22%)</title><rect x="504.9" y="819.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="507.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.17%)</title><rect x="505.6" y="803.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="508.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.17%)</title><rect x="505.6" y="787.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="508.6" y="798.0"></text>
</g>
<g>
<title>sys_write (25 samples, 0.16%)</title><rect x="505.6" y="771.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="508.6" y="782.0"></text>
</g>
<g>
<title>vfs_write (22 samples, 0.14%)</title><rect x="505.9" y="755.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="508.9" y="766.0"></text>
</g>
<g>
<title>__vfs_write (21 samples, 0.14%)</title><rect x="505.9" y="739.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="508.9" y="750.0"></text>
</g>
<g>
<title>new_sync_write (21 samples, 0.14%)</title><rect x="505.9" y="723.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="508.9" y="734.0"></text>
</g>
<g>
<title>pipe_write (19 samples, 0.12%)</title><rect x="506.1" y="707.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="509.1" y="718.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.09%)</title><rect x="506.2" y="691.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="509.2" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.09%)</title><rect x="506.2" y="675.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="509.2" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.08%)</title><rect x="506.2" y="659.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="509.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.03%)</title><rect x="507.6" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (777 samples, 5.10%)</title><rect x="508.3" y="995.0" width="60.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.3" y="1006.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (13 samples, 0.09%)</title><rect x="508.3" y="979.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (5 samples, 0.03%)</title><rect x="508.4" y="963.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.4" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="508.5" y="947.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="511.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.04%)</title><rect x="508.8" y="963.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.04%)</title><rect x="508.8" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (759 samples, 4.98%)</title><rect x="509.3" y="979.0" width="58.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.3" y="990.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (756 samples, 4.96%)</title><rect x="509.4" y="963.0" width="58.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.4" y="974.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (756 samples, 4.96%)</title><rect x="509.4" y="947.0" width="58.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.4" y="958.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (446 samples, 2.92%)</title><rect x="509.9" y="931.0" width="34.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.9" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (5 samples, 0.03%)</title><rect x="509.9" y="915.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.03%)</title><rect x="509.9" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.03%)</title><rect x="509.9" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (441 samples, 2.89%)</title><rect x="510.3" y="915.0" width="34.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.3" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (438 samples, 2.87%)</title><rect x="510.4" y="899.0" width="33.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.4" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (438 samples, 2.87%)</title><rect x="510.4" y="883.0" width="33.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.4" y="894.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (435 samples, 2.85%)</title><rect x="510.6" y="867.0" width="33.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.6" y="878.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (431 samples, 2.83%)</title><rect x="510.8" y="851.0" width="33.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.8" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (426 samples, 2.79%)</title><rect x="511.1" y="835.0" width="33.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.1" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.08%)</title><rect x="511.4" y="819.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (12 samples, 0.08%)</title><rect x="511.4" y="803.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.4" y="814.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="511.7" y="787.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="514.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (400 samples, 2.62%)</title><rect x="512.3" y="819.0" width="30.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.3" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (399 samples, 2.62%)</title><rect x="512.4" y="803.0" width="30.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.4" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (291 samples, 1.91%)</title><rect x="512.8" y="787.0" width="22.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.8" y="798.0">j..</text>
</g>
<g>
<title>itable stub (7 samples, 0.05%)</title><rect x="513.1" y="771.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="516.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.07%)</title><rect x="513.7" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (10 samples, 0.07%)</title><rect x="513.7" y="755.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/283532103.apply (203 samples, 1.33%)</title><rect x="514.7" y="771.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (200 samples, 1.31%)</title><rect x="514.9" y="755.0" width="15.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.03%)</title><rect x="514.9" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="514.9" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/1651911151.get$Lambda (5 samples, 0.03%)</title><rect x="514.9" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/1651911151.&lt;init&gt; (5 samples, 0.03%)</title><rect x="514.9" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (192 samples, 1.26%)</title><rect x="515.4" y="739.0" width="14.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (189 samples, 1.24%)</title><rect x="515.6" y="723.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.6" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$156/104497043.apply (13 samples, 0.09%)</title><rect x="515.6" y="707.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.6" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (13 samples, 0.09%)</title><rect x="515.6" y="691.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.6" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (13 samples, 0.09%)</title><rect x="515.6" y="675.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (13 samples, 0.09%)</title><rect x="515.6" y="659.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.05%)</title><rect x="515.6" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.6" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.03%)</title><rect x="515.8" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (6 samples, 0.04%)</title><rect x="516.2" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (6 samples, 0.04%)</title><rect x="516.2" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.03%)</title><rect x="516.2" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (176 samples, 1.15%)</title><rect x="516.6" y="707.0" width="13.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.6" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (54 samples, 0.35%)</title><rect x="516.8" y="691.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.8" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (12 samples, 0.08%)</title><rect x="516.9" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.9" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (12 samples, 0.08%)</title><rect x="516.9" y="659.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (9 samples, 0.06%)</title><rect x="517.1" y="643.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (8 samples, 0.05%)</title><rect x="517.2" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.03%)</title><rect x="517.5" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.03%)</title><rect x="517.5" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.03%)</title><rect x="517.5" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.03%)</title><rect x="517.5" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (33 samples, 0.22%)</title><rect x="517.9" y="675.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (33 samples, 0.22%)</title><rect x="517.9" y="659.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (29 samples, 0.19%)</title><rect x="518.2" y="643.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (24 samples, 0.16%)</title><rect x="518.5" y="627.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (18 samples, 0.12%)</title><rect x="518.5" y="611.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="521.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (4 samples, 0.03%)</title><rect x="518.8" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (7 samples, 0.05%)</title><rect x="519.1" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.03%)</title><rect x="519.3" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.04%)</title><rect x="519.9" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (6 samples, 0.04%)</title><rect x="519.9" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (6 samples, 0.04%)</title><rect x="519.9" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (6 samples, 0.04%)</title><rect x="519.9" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (6 samples, 0.04%)</title><rect x="520.5" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (6 samples, 0.04%)</title><rect x="520.5" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (5 samples, 0.03%)</title><rect x="520.6" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (5 samples, 0.03%)</title><rect x="520.6" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (5 samples, 0.03%)</title><rect x="520.6" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.03%)</title><rect x="521.0" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (111 samples, 0.73%)</title><rect x="521.7" y="691.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1212401691.run (111 samples, 0.73%)</title><rect x="521.7" y="675.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (111 samples, 0.73%)</title><rect x="521.7" y="659.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.07%)</title><rect x="522.1" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.07%)</title><rect x="522.1" y="627.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/488176487.get$Lambda (6 samples, 0.04%)</title><rect x="522.3" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/488176487.&lt;init&gt; (6 samples, 0.04%)</title><rect x="522.3" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (12 samples, 0.08%)</title><rect x="523.2" y="643.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.set (8 samples, 0.05%)</title><rect x="523.4" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (21 samples, 0.14%)</title><rect x="524.1" y="643.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (4 samples, 0.03%)</title><rect x="525.3" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (35 samples, 0.23%)</title><rect x="525.9" y="643.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (35 samples, 0.23%)</title><rect x="525.9" y="627.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="528.9" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (26 samples, 0.17%)</title><rect x="526.0" y="611.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.0" y="622.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (25 samples, 0.16%)</title><rect x="526.1" y="595.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.1" y="606.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (25 samples, 0.16%)</title><rect x="526.1" y="579.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.1" y="590.0"></text>
</g>
<g>
<title>JVM_IHashCode (23 samples, 0.15%)</title><rect x="526.1" y="563.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="529.1" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (12 samples, 0.08%)</title><rect x="526.4" y="547.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="529.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.05%)</title><rect x="528.0" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.05%)</title><rect x="528.0" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.05%)</title><rect x="528.0" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="528.3" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="528.3" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (13 samples, 0.09%)</title><rect x="528.6" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.07%)</title><rect x="528.8" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1546693040.invoke (10 samples, 0.07%)</title><rect x="528.8" y="611.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.06%)</title><rect x="528.8" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (4 samples, 0.03%)</title><rect x="528.8" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (8 samples, 0.05%)</title><rect x="529.6" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (7 samples, 0.05%)</title><rect x="529.7" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="529.8" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$374/2048942177.apply (64 samples, 0.42%)</title><rect x="530.4" y="771.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (59 samples, 0.39%)</title><rect x="530.8" y="755.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (58 samples, 0.38%)</title><rect x="530.8" y="739.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (13 samples, 0.09%)</title><rect x="531.3" y="723.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.3" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (13 samples, 0.09%)</title><rect x="531.3" y="707.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.3" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (12 samples, 0.08%)</title><rect x="531.3" y="691.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (34 samples, 0.22%)</title><rect x="532.3" y="723.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (34 samples, 0.22%)</title><rect x="532.3" y="707.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.3" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.09%)</title><rect x="532.7" y="691.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="535.7" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (13 samples, 0.09%)</title><rect x="532.8" y="675.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="535.8" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.08%)</title><rect x="532.9" y="659.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="535.9" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (11 samples, 0.07%)</title><rect x="532.9" y="643.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="535.9" y="654.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (15 samples, 0.10%)</title><rect x="533.8" y="691.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.8" y="702.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (12 samples, 0.08%)</title><rect x="534.0" y="675.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (10 samples, 0.07%)</title><rect x="534.2" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.2" y="670.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.03%)</title><rect x="534.4" y="643.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="537.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (4 samples, 0.03%)</title><rect x="535.0" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (82 samples, 0.54%)</title><rect x="535.3" y="787.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (81 samples, 0.53%)</title><rect x="535.4" y="771.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.03%)</title><rect x="535.5" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.03%)</title><rect x="535.5" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/1325079472.apply (76 samples, 0.50%)</title><rect x="535.8" y="755.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (75 samples, 0.49%)</title><rect x="535.9" y="739.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (68 samples, 0.45%)</title><rect x="535.9" y="723.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (68 samples, 0.45%)</title><rect x="535.9" y="707.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.9" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (26 samples, 0.17%)</title><rect x="537.0" y="691.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="540.0" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (26 samples, 0.17%)</title><rect x="537.0" y="675.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="540.0" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (25 samples, 0.16%)</title><rect x="537.1" y="659.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="540.1" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (21 samples, 0.14%)</title><rect x="537.2" y="643.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="540.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (27 samples, 0.18%)</title><rect x="539.1" y="691.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.1" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (26 samples, 0.17%)</title><rect x="539.1" y="675.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="542.1" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (5 samples, 0.03%)</title><rect x="539.1" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (5 samples, 0.03%)</title><rect x="539.1" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (21 samples, 0.14%)</title><rect x="539.5" y="659.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="542.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (11 samples, 0.07%)</title><rect x="540.3" y="643.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (7 samples, 0.05%)</title><rect x="541.2" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.04%)</title><rect x="541.2" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (6 samples, 0.04%)</title><rect x="541.2" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.04%)</title><rect x="541.2" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.04%)</title><rect x="541.2" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (18 samples, 0.12%)</title><rect x="541.7" y="787.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (5 samples, 0.03%)</title><rect x="542.6" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.03%)</title><rect x="542.6" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.03%)</title><rect x="542.6" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$416/297087785.apply (11 samples, 0.07%)</title><rect x="543.2" y="819.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (11 samples, 0.07%)</title><rect x="543.2" y="803.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (6 samples, 0.04%)</title><rect x="543.5" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.04%)</title><rect x="543.5" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.04%)</title><rect x="543.5" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.04%)</title><rect x="543.5" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (294 samples, 1.93%)</title><rect x="544.4" y="931.0" width="22.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.4" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (14 samples, 0.09%)</title><rect x="544.6" y="915.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.07%)</title><rect x="544.6" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.6" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.07%)</title><rect x="544.6" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.6" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.03%)</title><rect x="545.0" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (36 samples, 0.24%)</title><rect x="545.6" y="915.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.08%)</title><rect x="546.9" y="899.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.9" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.08%)</title><rect x="546.9" y="883.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.9" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.05%)</title><rect x="547.2" y="867.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.2" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="547.9" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (30 samples, 0.20%)</title><rect x="548.4" y="915.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.05%)</title><rect x="549.1" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.1" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.05%)</title><rect x="549.1" y="883.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.1" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.05%)</title><rect x="549.2" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.2" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.08%)</title><rect x="549.8" y="899.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (23 samples, 0.15%)</title><rect x="550.7" y="915.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.03%)</title><rect x="551.1" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (5 samples, 0.03%)</title><rect x="551.1" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="554.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.07%)</title><rect x="551.5" y="899.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.5" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.05%)</title><rect x="551.8" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (87 samples, 0.57%)</title><rect x="552.5" y="915.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.5" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (75 samples, 0.49%)</title><rect x="553.1" y="899.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="556.1" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (75 samples, 0.49%)</title><rect x="553.1" y="883.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.1" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (9 samples, 0.06%)</title><rect x="553.2" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.2" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (9 samples, 0.06%)</title><rect x="553.2" y="851.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.2" y="862.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.05%)</title><rect x="553.2" y="835.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="556.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (58 samples, 0.38%)</title><rect x="553.9" y="867.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.9" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (52 samples, 0.34%)</title><rect x="554.3" y="851.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.3" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (50 samples, 0.33%)</title><rect x="554.5" y="835.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.5" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (18 samples, 0.12%)</title><rect x="554.8" y="819.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.8" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (15 samples, 0.10%)</title><rect x="555.0" y="803.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.0" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (10 samples, 0.07%)</title><rect x="555.4" y="787.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.03%)</title><rect x="555.4" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.03%)</title><rect x="555.4" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/707161353.test (4 samples, 0.03%)</title><rect x="555.9" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="558.9" y="782.0"></text>
</g>
<g>
<title>java/util/List.copyOf (7 samples, 0.05%)</title><rect x="556.2" y="819.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.2" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (7 samples, 0.05%)</title><rect x="556.2" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.2" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (5 samples, 0.03%)</title><rect x="556.2" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.2" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.03%)</title><rect x="556.2" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (20 samples, 0.13%)</title><rect x="556.8" y="819.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.8" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (11 samples, 0.07%)</title><rect x="557.4" y="803.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (10 samples, 0.07%)</title><rect x="557.4" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.05%)</title><rect x="557.6" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.04%)</title><rect x="557.7" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.7" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (7 samples, 0.05%)</title><rect x="558.4" y="867.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.4" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.03%)</title><rect x="558.9" y="899.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (5 samples, 0.03%)</title><rect x="559.3" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (97 samples, 0.64%)</title><rect x="559.6" y="915.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (11 samples, 0.07%)</title><rect x="560.0" y="899.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.07%)</title><rect x="560.0" y="883.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.07%)</title><rect x="560.0" y="867.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (81 samples, 0.53%)</title><rect x="560.9" y="899.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.08%)</title><rect x="561.3" y="883.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.08%)</title><rect x="561.3" y="867.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (12 samples, 0.08%)</title><rect x="561.3" y="851.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.05%)</title><rect x="562.2" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.04%)</title><rect x="562.4" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.4" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="562.5" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (17 samples, 0.11%)</title><rect x="562.8" y="883.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (17 samples, 0.11%)</title><rect x="562.8" y="867.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.03%)</title><rect x="564.1" y="883.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.03%)</title><rect x="564.2" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.2" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.03%)</title><rect x="564.8" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (27 samples, 0.18%)</title><rect x="565.1" y="883.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.1" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.05%)</title><rect x="565.4" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.03%)</title><rect x="565.5" y="851.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.03%)</title><rect x="565.5" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (9 samples, 0.06%)</title><rect x="565.9" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$417/307390683.apply (7 samples, 0.05%)</title><rect x="566.6" y="867.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (7 samples, 0.05%)</title><rect x="566.6" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.6" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.03%)</title><rect x="566.8" y="835.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$335/795354165.accept (9 samples, 0.06%)</title><rect x="567.2" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (8 samples, 0.05%)</title><rect x="567.3" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (5 samples, 0.03%)</title><rect x="568.0" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (4 samples, 0.03%)</title><rect x="568.1" y="963.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (971 samples, 6.37%)</title><rect x="568.4" y="1043.0" width="75.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.4" y="1054.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (965 samples, 6.33%)</title><rect x="568.9" y="1027.0" width="74.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="571.9" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (956 samples, 6.27%)</title><rect x="569.5" y="1011.0" width="74.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.5" y="1022.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (956 samples, 6.27%)</title><rect x="569.5" y="995.0" width="74.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.5" y="1006.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (956 samples, 6.27%)</title><rect x="569.5" y="979.0" width="74.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.5" y="990.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (929 samples, 6.09%)</title><rect x="570.0" y="963.0" width="71.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.0" y="974.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (28 samples, 0.18%)</title><rect x="570.2" y="947.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (17 samples, 0.11%)</title><rect x="571.1" y="931.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (14 samples, 0.09%)</title><rect x="571.3" y="915.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (10 samples, 0.07%)</title><rect x="571.6" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.6" y="910.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (10 samples, 0.07%)</title><rect x="571.6" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.6" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.05%)</title><rect x="571.7" y="867.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="574.7" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (8 samples, 0.05%)</title><rect x="571.7" y="851.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="574.7" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.04%)</title><rect x="571.9" y="835.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="574.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="571.9" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="574.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="571.9" y="803.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="574.9" y="814.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.03%)</title><rect x="571.9" y="787.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="574.9" y="798.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="571.9" y="771.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="574.9" y="782.0"></text>
</g>
<g>
<title>futex_wake_op (5 samples, 0.03%)</title><rect x="571.9" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="574.9" y="766.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.03%)</title><rect x="572.0" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.0" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.03%)</title><rect x="572.0" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="575.0" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.03%)</title><rect x="572.0" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (891 samples, 5.84%)</title><rect x="572.4" y="947.0" width="69.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.4" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (891 samples, 5.84%)</title><rect x="572.4" y="931.0" width="69.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.4" y="942.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1243324746.run (466 samples, 3.06%)</title><rect x="573.0" y="915.0" width="36.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.0" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (465 samples, 3.05%)</title><rect x="573.1" y="899.0" width="36.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.1" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (459 samples, 3.01%)</title><rect x="573.5" y="883.0" width="35.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.5" y="894.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (21 samples, 0.14%)</title><rect x="573.5" y="867.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.5" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (10 samples, 0.07%)</title><rect x="573.5" y="851.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.5" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (10 samples, 0.07%)</title><rect x="573.5" y="835.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.5" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (10 samples, 0.07%)</title><rect x="573.5" y="819.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (9 samples, 0.06%)</title><rect x="573.6" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.6" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (9 samples, 0.06%)</title><rect x="573.6" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.05%)</title><rect x="573.7" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.05%)</title><rect x="573.7" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (7 samples, 0.05%)</title><rect x="573.7" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (9 samples, 0.06%)</title><rect x="574.4" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.4" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.06%)</title><rect x="574.4" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.4" y="846.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.03%)</title><rect x="574.7" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (434 samples, 2.85%)</title><rect x="575.3" y="867.0" width="33.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.3" y="878.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (16 samples, 0.10%)</title><rect x="575.3" y="851.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.3" y="862.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (16 samples, 0.10%)</title><rect x="575.3" y="835.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.3" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.03%)</title><rect x="575.4" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.4" y="830.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (4 samples, 0.03%)</title><rect x="575.4" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (4 samples, 0.03%)</title><rect x="575.4" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (10 samples, 0.07%)</title><rect x="575.7" y="819.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.7" y="830.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (9 samples, 0.06%)</title><rect x="575.8" y="803.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="578.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (418 samples, 2.74%)</title><rect x="576.5" y="851.0" width="32.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.5" y="862.0">jd..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (85 samples, 0.56%)</title><rect x="578.0" y="835.0" width="6.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="581.0" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (85 samples, 0.56%)</title><rect x="578.0" y="819.0" width="6.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="581.0" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (83 samples, 0.54%)</title><rect x="578.1" y="803.0" width="6.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="581.1" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (67 samples, 0.44%)</title><rect x="578.1" y="787.0" width="5.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="581.1" y="798.0"></text>
</g>
<g>
<title>SpinPause (15 samples, 0.10%)</title><rect x="583.3" y="787.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="586.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (155 samples, 1.02%)</title><rect x="584.6" y="835.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.6" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.plus (61 samples, 0.40%)</title><rect x="585.6" y="819.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="588.6" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (60 samples, 0.39%)</title><rect x="585.6" y="803.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.6" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.plus (60 samples, 0.39%)</title><rect x="585.6" y="787.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.6" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.09%)</title><rect x="589.2" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.2" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.create (11 samples, 0.07%)</title><rect x="589.4" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.4" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (5 samples, 0.03%)</title><rect x="590.3" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.3" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (12 samples, 0.08%)</title><rect x="590.7" y="819.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.7" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (12 samples, 0.08%)</title><rect x="590.7" y="803.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.7" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (12 samples, 0.08%)</title><rect x="590.7" y="787.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="593.7" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.hasNext (5 samples, 0.03%)</title><rect x="591.6" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.6" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (27 samples, 0.18%)</title><rect x="592.0" y="819.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.0" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (30 samples, 0.20%)</title><rect x="594.1" y="819.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.1" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (30 samples, 0.20%)</title><rect x="594.1" y="803.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (10 samples, 0.07%)</title><rect x="596.6" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.06%)</title><rect x="596.6" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.05%)</title><rect x="596.7" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (5 samples, 0.03%)</title><rect x="596.9" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.9" y="798.0"></text>
</g>
<g>
<title>java/util/Objects.hash (5 samples, 0.03%)</title><rect x="596.9" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.9" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (5 samples, 0.03%)</title><rect x="596.9" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (148 samples, 0.97%)</title><rect x="597.3" y="835.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (148 samples, 0.97%)</title><rect x="597.3" y="819.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (34 samples, 0.22%)</title><rect x="597.3" y="803.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (31 samples, 0.20%)</title><rect x="597.6" y="787.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (31 samples, 0.20%)</title><rect x="597.6" y="771.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (17 samples, 0.11%)</title><rect x="597.9" y="755.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.11%)</title><rect x="597.9" y="739.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.9" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.05%)</title><rect x="598.2" y="723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="601.2" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.04%)</title><rect x="598.3" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="601.3" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.03%)</title><rect x="598.4" y="691.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="601.4" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (4 samples, 0.03%)</title><rect x="598.4" y="675.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="601.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (4 samples, 0.03%)</title><rect x="599.2" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (6 samples, 0.04%)</title><rect x="599.5" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (114 samples, 0.75%)</title><rect x="600.0" y="803.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (114 samples, 0.75%)</title><rect x="600.0" y="787.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (89 samples, 0.58%)</title><rect x="600.2" y="771.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (88 samples, 0.58%)</title><rect x="600.2" y="755.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (88 samples, 0.58%)</title><rect x="600.2" y="739.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.2" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (23 samples, 0.15%)</title><rect x="601.4" y="723.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="604.4" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (22 samples, 0.14%)</title><rect x="601.5" y="707.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="604.5" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (22 samples, 0.14%)</title><rect x="601.5" y="691.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="604.5" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (16 samples, 0.10%)</title><rect x="601.5" y="675.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="604.5" y="686.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.04%)</title><rect x="602.7" y="675.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="605.7" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="603.3" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (42 samples, 0.28%)</title><rect x="603.8" y="723.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (36 samples, 0.24%)</title><rect x="604.2" y="707.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.2" y="718.0"></text>
</g>
<g>
<title>__GI___write (33 samples, 0.22%)</title><rect x="604.2" y="691.0" width="2.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="607.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.20%)</title><rect x="604.4" y="675.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="607.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.20%)</title><rect x="604.4" y="659.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="607.4" y="670.0"></text>
</g>
<g>
<title>sys_write (27 samples, 0.18%)</title><rect x="604.7" y="643.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="607.7" y="654.0"></text>
</g>
<g>
<title>vfs_write (23 samples, 0.15%)</title><rect x="605.0" y="627.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="608.0" y="638.0"></text>
</g>
<g>
<title>__vfs_write (22 samples, 0.14%)</title><rect x="605.0" y="611.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="608.0" y="622.0"></text>
</g>
<g>
<title>new_sync_write (21 samples, 0.14%)</title><rect x="605.1" y="595.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="608.1" y="606.0"></text>
</g>
<g>
<title>pipe_write (19 samples, 0.12%)</title><rect x="605.2" y="579.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="608.2" y="590.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.10%)</title><rect x="605.4" y="563.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="608.4" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.10%)</title><rect x="605.4" y="547.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="608.4" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.10%)</title><rect x="605.4" y="531.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="608.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (7 samples, 0.05%)</title><rect x="607.1" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (14 samples, 0.09%)</title><rect x="607.6" y="771.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.6" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.08%)</title><rect x="607.8" y="755.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="610.8" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (10 samples, 0.07%)</title><rect x="607.9" y="739.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="610.9" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.03%)</title><rect x="608.4" y="723.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="611.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="608.4" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="611.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="608.4" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="611.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/488176487.accept (37 samples, 0.24%)</title><rect x="609.1" y="915.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (37 samples, 0.24%)</title><rect x="609.1" y="899.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (37 samples, 0.24%)</title><rect x="609.1" y="883.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (32 samples, 0.21%)</title><rect x="609.1" y="867.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32 samples, 0.21%)</title><rect x="609.1" y="851.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (31 samples, 0.20%)</title><rect x="609.2" y="835.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (30 samples, 0.20%)</title><rect x="609.2" y="819.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.06%)</title><rect x="609.2" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (9 samples, 0.06%)</title><rect x="609.2" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$439/2095621459.accept (4 samples, 0.03%)</title><rect x="609.5" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$439/2095621459.accept (4 samples, 0.03%)</title><rect x="609.9" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (4 samples, 0.03%)</title><rect x="609.9" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (4 samples, 0.03%)</title><rect x="609.9" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (4 samples, 0.03%)</title><rect x="609.9" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$440/162643331.accept (17 samples, 0.11%)</title><rect x="610.3" y="803.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (13 samples, 0.09%)</title><rect x="610.6" y="787.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (13 samples, 0.09%)</title><rect x="610.6" y="771.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.6" y="782.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (11 samples, 0.07%)</title><rect x="610.7" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.7" y="766.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (8 samples, 0.05%)</title><rect x="610.9" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.9" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (8 samples, 0.05%)</title><rect x="610.9" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$342/911259849.accept (5 samples, 0.03%)</title><rect x="611.6" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (5 samples, 0.03%)</title><rect x="611.6" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (359 samples, 2.35%)</title><rect x="612.0" y="915.0" width="27.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.0" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (359 samples, 2.35%)</title><rect x="612.0" y="899.0" width="27.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.0" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (351 samples, 2.30%)</title><rect x="612.6" y="883.0" width="27.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.6" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (347 samples, 2.28%)</title><rect x="612.6" y="867.0" width="26.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.6" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (347 samples, 2.28%)</title><rect x="612.6" y="851.0" width="26.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.6" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (347 samples, 2.28%)</title><rect x="612.6" y="835.0" width="26.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.6" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (347 samples, 2.28%)</title><rect x="612.6" y="819.0" width="26.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.6" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.08%)</title><rect x="612.6" y="803.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (12 samples, 0.08%)</title><rect x="612.6" y="787.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.6" y="798.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.04%)</title><rect x="612.7" y="771.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="615.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/460704340.accept (4 samples, 0.03%)</title><rect x="613.2" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/460704340.accept (333 samples, 2.18%)</title><rect x="613.7" y="803.0" width="25.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.7" y="814.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (333 samples, 2.18%)</title><rect x="613.7" y="787.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.7" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (333 samples, 2.18%)</title><rect x="613.7" y="771.0" width="25.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="616.7" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (4 samples, 0.03%)</title><rect x="613.7" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="616.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.03%)</title><rect x="613.7" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.03%)</title><rect x="613.7" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (329 samples, 2.16%)</title><rect x="614.0" y="755.0" width="25.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.0" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9 samples, 0.06%)</title><rect x="614.4" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/1651911151.apply (5 samples, 0.03%)</title><rect x="614.7" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (4 samples, 0.03%)</title><rect x="614.8" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (4 samples, 0.03%)</title><rect x="614.8" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (311 samples, 2.04%)</title><rect x="615.3" y="739.0" width="24.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.3" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (307 samples, 2.01%)</title><rect x="615.6" y="723.0" width="23.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.6" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (303 samples, 1.99%)</title><rect x="615.6" y="707.0" width="23.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.6" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (283 samples, 1.86%)</title><rect x="615.6" y="691.0" width="21.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.6" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (283 samples, 1.86%)</title><rect x="615.6" y="675.0" width="21.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.6" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (281 samples, 1.84%)</title><rect x="615.7" y="659.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.7" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (4 samples, 0.03%)</title><rect x="615.8" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.tryLockPhase (5 samples, 0.03%)</title><rect x="616.1" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.03%)</title><rect x="616.1" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.03%)</title><rect x="616.1" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (268 samples, 1.76%)</title><rect x="616.5" y="643.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (265 samples, 1.74%)</title><rect x="616.8" y="627.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (265 samples, 1.74%)</title><rect x="616.8" y="611.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.8" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (39 samples, 0.26%)</title><rect x="617.1" y="595.0" width="3.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="620.1" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.04%)</title><rect x="618.1" y="579.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="621.1" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (11 samples, 0.07%)</title><rect x="618.8" y="579.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="621.8" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (220 samples, 1.44%)</title><rect x="620.2" y="595.0" width="17.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="623.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (189 samples, 1.24%)</title><rect x="622.6" y="579.0" width="14.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="625.6" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (188 samples, 1.23%)</title><rect x="622.6" y="563.0" width="14.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="625.6" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.06%)</title><rect x="623.7" y="547.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="626.7" y="558.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.04%)</title><rect x="623.9" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="626.9" y="542.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.04%)</title><rect x="623.9" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="626.9" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.04%)</title><rect x="623.9" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="626.9" y="510.0"></text>
</g>
<g>
<title>sys_futex (164 samples, 1.08%)</title><rect x="624.4" y="547.0" width="12.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="627.4" y="558.0"></text>
</g>
<g>
<title>do_futex (160 samples, 1.05%)</title><rect x="624.6" y="531.0" width="12.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="627.6" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock (6 samples, 0.04%)</title><rect x="624.7" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.7" y="526.0"></text>
</g>
<g>
<title>futex_wake_op (151 samples, 0.99%)</title><rect x="625.2" y="515.0" width="11.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="628.2" y="526.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.06%)</title><rect x="626.5" y="499.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="629.5" y="510.0"></text>
</g>
<g>
<title>wake_up_q (125 samples, 0.82%)</title><rect x="627.2" y="499.0" width="9.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="630.2" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (125 samples, 0.82%)</title><rect x="627.2" y="483.0" width="9.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="630.2" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (124 samples, 0.81%)</title><rect x="627.3" y="467.0" width="9.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="630.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (20 samples, 0.13%)</title><rect x="637.5" y="691.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$193/1142862075.accept (4 samples, 0.03%)</title><rect x="638.7" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (4 samples, 0.03%)</title><rect x="639.4" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (20 samples, 0.13%)</title><rect x="639.7" y="915.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (20 samples, 0.13%)</title><rect x="639.7" y="899.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (20 samples, 0.13%)</title><rect x="639.7" y="883.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.10%)</title><rect x="640.1" y="867.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.10%)</title><rect x="640.1" y="851.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (14 samples, 0.09%)</title><rect x="640.2" y="835.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.2" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (4 samples, 0.03%)</title><rect x="641.0" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (7 samples, 0.05%)</title><rect x="641.4" y="947.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (7 samples, 0.05%)</title><rect x="641.4" y="931.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (17 samples, 0.11%)</title><rect x="642.1" y="963.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (6 samples, 0.04%)</title><rect x="642.2" y="947.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.04%)</title><rect x="642.2" y="931.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (8 samples, 0.05%)</title><rect x="642.7" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8 samples, 0.05%)</title><rect x="642.7" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8 samples, 0.05%)</title><rect x="642.7" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.03%)</title><rect x="642.7" y="899.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.03%)</title><rect x="642.7" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.03%)</title><rect x="642.7" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.03%)</title><rect x="642.7" y="851.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.03%)</title><rect x="642.7" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 0.03%)</title><rect x="642.7" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.03%)</title><rect x="642.7" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.03%)</title><rect x="642.7" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.03%)</title><rect x="642.7" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.run (2,010 samples, 13.18%)</title><rect x="643.7" y="1075.0" width="155.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.7" y="1086.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (2,006 samples, 13.15%)</title><rect x="644.0" y="1059.0" width="155.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.0" y="1070.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.12%)</title><rect x="644.9" y="1043.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.09%)</title><rect x="645.1" y="1027.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.05%)</title><rect x="645.2" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.2" y="1022.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="645.5" y="995.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.5" y="1006.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="645.8" y="1011.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="648.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.06%)</title><rect x="646.4" y="1043.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.4" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.06%)</title><rect x="646.4" y="1027.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.isProxied (46 samples, 0.30%)</title><rect x="647.1" y="1043.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (46 samples, 0.30%)</title><rect x="647.1" y="1027.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.04%)</title><rect x="647.4" y="1011.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (25 samples, 0.16%)</title><rect x="647.9" y="1011.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.length (7 samples, 0.05%)</title><rect x="647.9" y="995.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (18 samples, 0.12%)</title><rect x="648.4" y="995.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.4" y="1006.0"></text>
</g>
<g>
<title>jbyte_arraycopy (4 samples, 0.03%)</title><rect x="649.3" y="979.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="652.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.07%)</title><rect x="649.8" y="1011.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.07%)</title><rect x="649.8" y="995.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.8" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="650.1" y="979.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="653.1" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.03%)</title><rect x="650.2" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="653.2" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.03%)</title><rect x="650.2" y="947.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="653.2" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="650.2" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="653.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (1,919 samples, 12.58%)</title><rect x="650.6" y="1043.0" width="148.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.6" y="1054.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.04%)</title><rect x="650.9" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.04%)</title><rect x="650.9" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$123/478887125.get$Lambda (6 samples, 0.04%)</title><rect x="650.9" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/Context.&lt;init&gt; (8 samples, 0.05%)</title><rect x="651.3" y="1027.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMethod (4 samples, 0.03%)</title><rect x="651.7" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMethod (1,902 samples, 12.47%)</title><rect x="652.0" y="1027.0" width="147.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.0" y="1038.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAcceptAsync (4 samples, 0.03%)</title><rect x="652.4" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (4 samples, 0.03%)</title><rect x="652.4" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.collect (19 samples, 0.12%)</title><rect x="652.8" y="1011.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.8" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.05%)</title><rect x="653.1" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (5 samples, 0.03%)</title><rect x="653.7" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (5 samples, 0.03%)</title><rect x="653.7" y="979.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.merge (6 samples, 0.04%)</title><rect x="654.3" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="654.3" y="995.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="654.3" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$221/654824253.get$Lambda (4 samples, 0.03%)</title><rect x="654.3" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (797 samples, 5.23%)</title><rect x="654.7" y="1011.0" width="61.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.7" y="1022.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (797 samples, 5.23%)</title><rect x="654.7" y="995.0" width="61.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.7" y="1006.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.05%)</title><rect x="655.6" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.05%)</title><rect x="655.6" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.05%)</title><rect x="655.6" y="947.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.6" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (767 samples, 5.03%)</title><rect x="656.1" y="979.0" width="59.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.1" y="990.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (23 samples, 0.15%)</title><rect x="656.1" y="963.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.05%)</title><rect x="656.2" y="947.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.2" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.04%)</title><rect x="656.3" y="931.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="659.3" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.04%)</title><rect x="656.3" y="915.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="659.3" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.03%)</title><rect x="656.3" y="899.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="659.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (15 samples, 0.10%)</title><rect x="656.8" y="947.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.8" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.03%)</title><rect x="657.0" y="931.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.0" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.05%)</title><rect x="657.4" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.4" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.05%)</title><rect x="657.4" y="915.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.4" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.05%)</title><rect x="657.4" y="899.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (744 samples, 4.88%)</title><rect x="657.9" y="963.0" width="57.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.9" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (742 samples, 4.87%)</title><rect x="658.1" y="947.0" width="57.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.1" y="958.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="658.2" y="931.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="661.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (733 samples, 4.81%)</title><rect x="658.7" y="931.0" width="56.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.7" y="942.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (732 samples, 4.80%)</title><rect x="658.8" y="915.0" width="56.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.8" y="926.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (16 samples, 0.10%)</title><rect x="659.3" y="899.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="662.3" y="910.0"></text>
</g>
<g>
<title>send (705 samples, 4.62%)</title><rect x="660.8" y="899.0" width="54.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="663.8" y="910.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (668 samples, 4.38%)</title><rect x="663.6" y="883.0" width="51.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="666.6" y="894.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (666 samples, 4.37%)</title><rect x="663.6" y="867.0" width="51.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="666.6" y="878.0">do_sy..</text>
</g>
<g>
<title>sys_sendto (650 samples, 4.26%)</title><rect x="664.9" y="851.0" width="50.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="667.9" y="862.0">sys_s..</text>
</g>
<g>
<title>SYSC_sendto (648 samples, 4.25%)</title><rect x="664.9" y="835.0" width="50.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="667.9" y="846.0">SYSC_..</text>
</g>
<g>
<title>import_single_range (4 samples, 0.03%)</title><rect x="665.0" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="668.0" y="830.0"></text>
</g>
<g>
<title>sock_sendmsg (626 samples, 4.11%)</title><rect x="665.3" y="819.0" width="48.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="668.3" y="830.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (619 samples, 4.06%)</title><rect x="665.3" y="803.0" width="47.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="668.3" y="814.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (618 samples, 4.05%)</title><rect x="665.4" y="787.0" width="47.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="668.4" y="798.0">tcp_..</text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.03%)</title><rect x="665.4" y="771.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="668.4" y="782.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.03%)</title><rect x="666.4" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="669.4" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (598 samples, 3.92%)</title><rect x="666.8" y="771.0" width="46.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="669.8" y="782.0">tcp_..</text>
</g>
<g>
<title>sk_stream_alloc_skb (46 samples, 0.30%)</title><rect x="668.4" y="755.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="671.4" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (42 samples, 0.28%)</title><rect x="668.4" y="739.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.4" y="750.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (19 samples, 0.12%)</title><rect x="668.8" y="723.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="671.8" y="734.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (17 samples, 0.11%)</title><rect x="668.8" y="707.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="671.8" y="718.0"></text>
</g>
<g>
<title>__slab_alloc (10 samples, 0.07%)</title><rect x="669.4" y="691.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="672.4" y="702.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.08%)</title><rect x="670.3" y="723.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="673.3" y="734.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.03%)</title><rect x="670.8" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="673.8" y="718.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.04%)</title><rect x="671.2" y="723.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.2" y="734.0"></text>
</g>
<g>
<title>tcp_push (510 samples, 3.34%)</title><rect x="672.2" y="755.0" width="39.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="675.2" y="766.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (510 samples, 3.34%)</title><rect x="672.2" y="739.0" width="39.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="675.2" y="750.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (505 samples, 3.31%)</title><rect x="672.6" y="723.0" width="39.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="675.6" y="734.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (465 samples, 3.05%)</title><rect x="673.7" y="707.0" width="36.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="676.7" y="718.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (441 samples, 2.89%)</title><rect x="674.8" y="691.0" width="34.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="677.8" y="702.0">ip..</text>
</g>
<g>
<title>ip_local_out (429 samples, 2.81%)</title><rect x="675.6" y="675.0" width="33.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="678.6" y="686.0">ip..</text>
</g>
<g>
<title>__ip_local_out (128 samples, 0.84%)</title><rect x="675.6" y="659.0" width="9.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="678.6" y="670.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (4 samples, 0.03%)</title><rect x="676.3" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="679.3" y="654.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (4 samples, 0.03%)</title><rect x="676.7" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="679.7" y="654.0"></text>
</g>
<g>
<title>nf_hook_slow (109 samples, 0.71%)</title><rect x="677.0" y="643.0" width="8.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="680.0" y="654.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (10 samples, 0.07%)</title><rect x="677.6" y="627.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="680.6" y="638.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (10 samples, 0.07%)</title><rect x="677.6" y="611.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.6" y="622.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (11 samples, 0.07%)</title><rect x="678.3" y="627.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="681.3" y="638.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (10 samples, 0.07%)</title><rect x="678.4" y="611.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="681.4" y="622.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (4 samples, 0.03%)</title><rect x="679.2" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="682.2" y="638.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (75 samples, 0.49%)</title><rect x="679.5" y="627.0" width="5.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="682.5" y="638.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (62 samples, 0.41%)</title><rect x="679.9" y="611.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="682.9" y="622.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (11 samples, 0.07%)</title><rect x="680.7" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="683.7" y="606.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (4 samples, 0.03%)</title><rect x="681.8" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="684.8" y="606.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (4 samples, 0.03%)</title><rect x="682.1" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="685.1" y="606.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (20 samples, 0.13%)</title><rect x="683.0" y="595.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="686.0" y="606.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (11 samples, 0.07%)</title><rect x="683.7" y="579.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="686.7" y="590.0"></text>
</g>
<g>
<title>ip_output (299 samples, 1.96%)</title><rect x="685.5" y="659.0" width="23.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="688.5" y="670.0">i..</text>
</g>
<g>
<title>ip_finish_output (281 samples, 1.84%)</title><rect x="685.5" y="643.0" width="21.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="688.5" y="654.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (279 samples, 1.83%)</title><rect x="685.6" y="627.0" width="21.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="688.6" y="638.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (217 samples, 1.42%)</title><rect x="686.9" y="611.0" width="16.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="689.9" y="622.0"></text>
</g>
<g>
<title>do_softirq.part.17 (215 samples, 1.41%)</title><rect x="687.1" y="595.0" width="16.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="690.1" y="606.0"></text>
</g>
<g>
<title>do_softirq_own_stack (212 samples, 1.39%)</title><rect x="687.3" y="579.0" width="16.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="690.3" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (210 samples, 1.38%)</title><rect x="687.3" y="563.0" width="16.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="690.3" y="574.0"></text>
</g>
<g>
<title>net_rx_action (195 samples, 1.28%)</title><rect x="688.3" y="547.0" width="15.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="691.3" y="558.0"></text>
</g>
<g>
<title>process_backlog (185 samples, 1.21%)</title><rect x="689.1" y="531.0" width="14.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="692.1" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (180 samples, 1.18%)</title><rect x="689.3" y="515.0" width="14.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="692.3" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (178 samples, 1.17%)</title><rect x="689.4" y="499.0" width="13.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="692.4" y="510.0"></text>
</g>
<g>
<title>ip_rcv (164 samples, 1.08%)</title><rect x="690.2" y="483.0" width="12.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="693.2" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (141 samples, 0.92%)</title><rect x="690.5" y="467.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="693.5" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (137 samples, 0.90%)</title><rect x="690.7" y="451.0" width="10.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="693.7" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (112 samples, 0.73%)</title><rect x="690.9" y="435.0" width="8.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="693.9" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (103 samples, 0.68%)</title><rect x="691.6" y="419.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="694.6" y="430.0"></text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.07%)</title><rect x="691.9" y="403.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="694.9" y="414.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.03%)</title><rect x="692.7" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="695.7" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (79 samples, 0.52%)</title><rect x="693.4" y="403.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.4" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (72 samples, 0.47%)</title><rect x="693.9" y="387.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="696.9" y="398.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (17 samples, 0.11%)</title><rect x="694.4" y="371.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="697.4" y="382.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (16 samples, 0.10%)</title><rect x="694.5" y="355.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.5" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.09%)</title><rect x="694.8" y="339.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="697.8" y="350.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.08%)</title><rect x="694.8" y="323.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="697.8" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="694.8" y="307.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="697.8" y="318.0"></text>
</g>
<g>
<title>sock_def_readable (43 samples, 0.28%)</title><rect x="695.8" y="371.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="698.8" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (37 samples, 0.24%)</title><rect x="696.3" y="355.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="699.3" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (37 samples, 0.24%)</title><rect x="696.3" y="339.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="699.3" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (35 samples, 0.23%)</title><rect x="696.3" y="323.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="699.3" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.12%)</title><rect x="699.8" y="435.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="702.8" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.04%)</title><rect x="699.9" y="419.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="702.9" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.03%)</title><rect x="700.0" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="703.0" y="414.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (5 samples, 0.03%)</title><rect x="700.8" y="419.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.8" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (4 samples, 0.03%)</title><rect x="700.9" y="403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="703.9" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.09%)</title><rect x="701.9" y="467.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="704.9" y="478.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (5 samples, 0.03%)</title><rect x="702.0" y="451.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="705.0" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.03%)</title><rect x="702.1" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="705.1" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.03%)</title><rect x="702.9" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="705.9" y="494.0"></text>
</g>
<g>
<title>dev_queue_xmit (45 samples, 0.30%)</title><rect x="703.7" y="611.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="706.7" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (44 samples, 0.29%)</title><rect x="703.7" y="595.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="706.7" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (24 samples, 0.16%)</title><rect x="704.4" y="579.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="707.4" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (16 samples, 0.10%)</title><rect x="704.7" y="563.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="707.7" y="574.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.05%)</title><rect x="704.9" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="707.9" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.05%)</title><rect x="704.9" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.9" y="542.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.05%)</title><rect x="704.9" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="707.9" y="526.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.05%)</title><rect x="706.5" y="579.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="709.5" y="590.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.03%)</title><rect x="706.6" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="709.6" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.08%)</title><rect x="707.7" y="643.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="710.7" y="654.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (6 samples, 0.04%)</title><rect x="707.9" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="710.9" y="638.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.03%)</title><rect x="708.1" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="711.1" y="622.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.03%)</title><rect x="708.9" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="711.9" y="702.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.03%)</title><rect x="708.9" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.9" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.09%)</title><rect x="710.2" y="707.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.2" y="718.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.03%)</title><rect x="710.8" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.8" y="702.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (5 samples, 0.03%)</title><rect x="710.8" y="675.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="713.8" y="686.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.03%)</title><rect x="710.8" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="713.8" y="670.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.03%)</title><rect x="710.8" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.8" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="710.8" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.8" y="638.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.03%)</title><rect x="711.2" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="714.2" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.09%)</title><rect x="711.8" y="755.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="714.8" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (11 samples, 0.07%)</title><rect x="711.9" y="739.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="714.9" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.03%)</title><rect x="712.8" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.8" y="766.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.04%)</title><rect x="713.2" y="803.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="716.2" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.04%)</title><rect x="713.2" y="787.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="716.2" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.04%)</title><rect x="713.2" y="771.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="716.2" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.10%)</title><rect x="713.8" y="819.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="716.8" y="830.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.05%)</title><rect x="713.8" y="803.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.8" y="814.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.05%)</title><rect x="713.8" y="787.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="716.8" y="798.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.05%)</title><rect x="713.8" y="771.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="716.8" y="782.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.05%)</title><rect x="714.4" y="803.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="717.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.07%)</title><rect x="715.5" y="979.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.5" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.05%)</title><rect x="715.6" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="715.9" y="947.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$123/478887125.act (289 samples, 1.90%)</title><rect x="716.4" y="1011.0" width="22.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.4" y="1022.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$3 (286 samples, 1.88%)</title><rect x="716.7" y="995.0" width="22.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.7" y="1006.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.putEntity (285 samples, 1.87%)</title><rect x="716.7" y="979.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.7" y="990.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.05%)</title><rect x="716.8" y="963.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.05%)</title><rect x="716.8" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.8" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="716.8" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.8" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="716.8" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 0.08%)</title><rect x="717.7" y="963.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.7" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="718.0" y="947.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="721.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.upsert (261 samples, 1.71%)</title><rect x="718.6" y="963.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.6" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="718.6" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.upsert (256 samples, 1.68%)</title><rect x="719.0" y="947.0" width="19.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.0" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.05%)</title><rect x="719.0" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.0" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="719.1" y="915.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.1" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="719.1" y="899.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.1" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="719.2" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.2" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="719.2" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.2" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (18 samples, 0.12%)</title><rect x="719.6" y="931.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.6" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="719.6" y="915.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="722.6" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="719.6" y="899.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="722.6" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="719.6" y="883.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="722.6" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="719.6" y="867.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="722.6" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (13 samples, 0.09%)</title><rect x="720.0" y="915.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.0" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.09%)</title><rect x="720.0" y="899.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.09%)</title><rect x="720.0" y="883.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.0" y="894.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.09%)</title><rect x="720.0" y="867.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.0" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.06%)</title><rect x="720.3" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.3" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.05%)</title><rect x="720.4" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (10 samples, 0.07%)</title><rect x="721.0" y="931.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (10 samples, 0.07%)</title><rect x="721.0" y="915.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (9 samples, 0.06%)</title><rect x="721.1" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.upsert (220 samples, 1.44%)</title><rect x="721.8" y="931.0" width="17.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (217 samples, 1.42%)</title><rect x="722.0" y="915.0" width="16.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (217 samples, 1.42%)</title><rect x="722.0" y="899.0" width="16.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (155 samples, 1.02%)</title><rect x="726.8" y="883.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (148 samples, 0.97%)</title><rect x="727.3" y="867.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.3" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (111 samples, 0.73%)</title><rect x="730.2" y="851.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.2" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="730.4" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.4" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (94 samples, 0.62%)</title><rect x="731.0" y="835.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.0" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (40 samples, 0.26%)</title><rect x="735.1" y="819.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.1" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (23 samples, 0.15%)</title><rect x="735.8" y="803.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.8" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (8 samples, 0.05%)</title><rect x="737.6" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.05%)</title><rect x="738.2" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.2" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.03%)</title><rect x="738.3" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="741.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$460/1313189910.act (12 samples, 0.08%)</title><rect x="738.8" y="1011.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$2 (12 samples, 0.08%)</title><rect x="738.8" y="995.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (12 samples, 0.08%)</title><rect x="738.8" y="979.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (12 samples, 0.08%)</title><rect x="738.8" y="963.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (12 samples, 0.08%)</title><rect x="738.8" y="947.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (5 samples, 0.03%)</title><rect x="738.9" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (4 samples, 0.03%)</title><rect x="739.4" y="931.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (768 samples, 5.04%)</title><rect x="739.7" y="1011.0" width="59.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.7" y="1022.0">ru/mai..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (10 samples, 0.07%)</title><rect x="740.5" y="995.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.5" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (5 samples, 0.03%)</title><rect x="740.6" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.6" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (5 samples, 0.03%)</title><rect x="740.6" y="963.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.6" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.03%)</title><rect x="740.6" y="947.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.6" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (16 samples, 0.10%)</title><rect x="741.7" y="995.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (13 samples, 0.09%)</title><rect x="741.8" y="979.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="744.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (7 samples, 0.05%)</title><rect x="742.3" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (7 samples, 0.05%)</title><rect x="742.3" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (364 samples, 2.39%)</title><rect x="743.2" y="995.0" width="28.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.2" y="1006.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (364 samples, 2.39%)</title><rect x="743.2" y="979.0" width="28.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.2" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (364 samples, 2.39%)</title><rect x="743.2" y="963.0" width="28.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.2" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (364 samples, 2.39%)</title><rect x="743.2" y="947.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.2" y="958.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.03%)</title><rect x="743.6" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.03%)</title><rect x="743.6" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (6 samples, 0.04%)</title><rect x="743.9" y="931.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.04%)</title><rect x="743.9" y="915.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (4 samples, 0.03%)</title><rect x="743.9" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.03%)</title><rect x="743.9" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (255 samples, 1.67%)</title><rect x="744.6" y="931.0" width="19.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (16 samples, 0.10%)</title><rect x="745.4" y="915.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.4" y="926.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.03%)</title><rect x="745.4" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.03%)</title><rect x="745.4" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (11 samples, 0.07%)</title><rect x="745.7" y="899.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.7" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.07%)</title><rect x="745.7" y="883.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.03%)</title><rect x="746.2" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.2" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.03%)</title><rect x="746.3" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.03%)</title><rect x="746.3" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.3" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (45 samples, 0.30%)</title><rect x="746.6" y="915.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.6" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (45 samples, 0.30%)</title><rect x="746.6" y="899.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.6" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (5 samples, 0.03%)</title><rect x="746.9" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.9" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (5 samples, 0.03%)</title><rect x="746.9" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.9" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (34 samples, 0.22%)</title><rect x="747.3" y="883.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.3" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (34 samples, 0.22%)</title><rect x="747.3" y="867.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.3" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (34 samples, 0.22%)</title><rect x="747.3" y="851.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.3" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (32 samples, 0.21%)</title><rect x="747.5" y="835.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (23 samples, 0.15%)</title><rect x="747.5" y="819.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.5" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (22 samples, 0.14%)</title><rect x="747.5" y="803.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.5" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (22 samples, 0.14%)</title><rect x="747.5" y="787.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/409962262.test (18 samples, 0.12%)</title><rect x="747.8" y="771.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (15 samples, 0.10%)</title><rect x="748.1" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1522132780.test (13 samples, 0.09%)</title><rect x="748.1" y="739.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (13 samples, 0.09%)</title><rect x="748.1" y="723.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.1" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (13 samples, 0.09%)</title><rect x="748.1" y="707.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.1" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (12 samples, 0.08%)</title><rect x="748.1" y="691.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.1" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (12 samples, 0.08%)</title><rect x="748.1" y="675.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.1" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (12 samples, 0.08%)</title><rect x="748.1" y="659.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (12 samples, 0.08%)</title><rect x="748.1" y="643.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (12 samples, 0.08%)</title><rect x="748.1" y="627.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (12 samples, 0.08%)</title><rect x="748.1" y="611.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (10 samples, 0.07%)</title><rect x="748.3" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.3" y="606.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.03%)</title><rect x="748.5" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.03%)</title><rect x="749.5" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (7 samples, 0.05%)</title><rect x="750.1" y="915.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (161 samples, 1.06%)</title><rect x="750.7" y="915.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.7" y="926.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (159 samples, 1.04%)</title><rect x="750.9" y="899.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.9" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (153 samples, 1.00%)</title><rect x="751.3" y="883.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.3" y="894.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (91 samples, 0.60%)</title><rect x="751.8" y="867.0" width="7.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="754.8" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (7 samples, 0.05%)</title><rect x="752.9" y="851.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="755.9" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (7 samples, 0.05%)</title><rect x="752.9" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="755.9" y="846.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (18 samples, 0.12%)</title><rect x="753.4" y="851.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="756.4" y="862.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.03%)</title><rect x="754.2" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="757.2" y="846.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.03%)</title><rect x="754.8" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="757.8" y="862.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (17 samples, 0.11%)</title><rect x="755.3" y="851.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="758.3" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (11 samples, 0.07%)</title><rect x="755.7" y="835.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="758.7" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.04%)</title><rect x="755.7" y="819.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="758.7" y="830.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (28 samples, 0.18%)</title><rect x="756.7" y="851.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="759.7" y="862.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (13 samples, 0.09%)</title><rect x="757.4" y="835.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="760.4" y="846.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (10 samples, 0.07%)</title><rect x="757.7" y="819.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="760.7" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.03%)</title><rect x="758.4" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="761.4" y="846.0"></text>
</g>
<g>
<title>call_stub (6 samples, 0.04%)</title><rect x="759.0" y="867.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="762.0" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (46 samples, 0.30%)</title><rect x="759.5" y="867.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.5" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (45 samples, 0.30%)</title><rect x="759.6" y="851.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="762.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (18 samples, 0.12%)</title><rect x="759.8" y="835.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="762.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (18 samples, 0.12%)</title><rect x="759.8" y="819.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.10%)</title><rect x="760.0" y="803.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (11 samples, 0.07%)</title><rect x="760.3" y="787.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.3" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (9 samples, 0.06%)</title><rect x="760.5" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.5" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (7 samples, 0.05%)</title><rect x="760.6" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.06%)</title><rect x="761.4" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.4" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.06%)</title><rect x="761.4" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.4" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (8 samples, 0.05%)</title><rect x="761.5" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.5" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (8 samples, 0.05%)</title><rect x="761.5" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.5" y="798.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (10 samples, 0.07%)</title><rect x="762.3" y="835.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.3" y="846.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.04%)</title><rect x="762.6" y="819.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.03%)</title><rect x="762.7" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (8 samples, 0.05%)</title><rect x="763.2" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.03%)</title><rect x="763.8" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.03%)</title><rect x="763.9" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (41 samples, 0.27%)</title><rect x="764.5" y="931.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (18 samples, 0.12%)</title><rect x="765.9" y="915.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (18 samples, 0.12%)</title><rect x="765.9" y="899.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.9" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (9 samples, 0.06%)</title><rect x="766.3" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.3" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (5 samples, 0.03%)</title><rect x="766.3" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.3" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (4 samples, 0.03%)</title><rect x="766.3" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.3" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (4 samples, 0.03%)</title><rect x="766.3" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (4 samples, 0.03%)</title><rect x="766.3" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (4 samples, 0.03%)</title><rect x="766.6" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.6" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (5 samples, 0.03%)</title><rect x="767.0" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.0" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (5 samples, 0.03%)</title><rect x="767.0" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.0" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (5 samples, 0.03%)</title><rect x="767.0" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.0" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (5 samples, 0.03%)</title><rect x="767.0" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (48 samples, 0.31%)</title><rect x="767.6" y="931.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (38 samples, 0.25%)</title><rect x="767.6" y="915.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (6 samples, 0.04%)</title><rect x="767.6" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (31 samples, 0.20%)</title><rect x="768.1" y="899.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.04%)</title><rect x="768.1" y="883.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.04%)</title><rect x="768.1" y="867.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.04%)</title><rect x="768.1" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.03%)</title><rect x="768.2" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (25 samples, 0.16%)</title><rect x="768.6" y="883.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.08%)</title><rect x="768.7" y="867.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.07%)</title><rect x="768.8" y="851.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.07%)</title><rect x="768.8" y="835.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.07%)</title><rect x="768.8" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.07%)</title><rect x="768.8" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.07%)</title><rect x="768.8" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.8" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.05%)</title><rect x="769.0" y="771.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="772.0" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.05%)</title><rect x="769.0" y="755.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="772.0" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.05%)</title><rect x="769.0" y="739.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="772.0" y="750.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.05%)</title><rect x="769.0" y="723.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="772.0" y="734.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.05%)</title><rect x="769.0" y="707.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="772.0" y="718.0"></text>
</g>
<g>
<title>futex_wake_op (5 samples, 0.03%)</title><rect x="769.1" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="772.1" y="702.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="769.1" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="772.1" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="769.1" y="659.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="772.1" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="769.1" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="772.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (12 samples, 0.08%)</title><rect x="769.6" y="867.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.06%)</title><rect x="769.8" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.04%)</title><rect x="770.0" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.04%)</title><rect x="770.0" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (10 samples, 0.07%)</title><rect x="770.6" y="915.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.06%)</title><rect x="770.7" y="899.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.06%)</title><rect x="770.7" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="773.7" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (24 samples, 0.16%)</title><rect x="771.4" y="995.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.4" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.add (14 samples, 0.09%)</title><rect x="772.1" y="979.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.put (14 samples, 0.09%)</title><rect x="772.1" y="963.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (13 samples, 0.09%)</title><rect x="772.1" y="947.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getLocalResults (112 samples, 0.73%)</title><rect x="773.2" y="995.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (110 samples, 0.72%)</title><rect x="773.4" y="979.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (110 samples, 0.72%)</title><rect x="773.4" y="963.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (110 samples, 0.72%)</title><rect x="773.4" y="947.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (110 samples, 0.72%)</title><rect x="773.4" y="931.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="776.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (110 samples, 0.72%)</title><rect x="773.4" y="915.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (110 samples, 0.72%)</title><rect x="773.4" y="899.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (108 samples, 0.71%)</title><rect x="773.5" y="883.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (108 samples, 0.71%)</title><rect x="773.5" y="867.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.5" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (17 samples, 0.11%)</title><rect x="773.7" y="851.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="776.7" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.03%)</title><rect x="774.0" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="777.0" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.03%)</title><rect x="774.5" y="835.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="777.5" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (88 samples, 0.58%)</title><rect x="775.0" y="851.0" width="6.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="778.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 0.54%)</title><rect x="775.5" y="835.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="778.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (81 samples, 0.53%)</title><rect x="775.5" y="819.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="778.5" y="830.0"></text>
</g>
<g>
<title>sys_futex (76 samples, 0.50%)</title><rect x="775.9" y="803.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="778.9" y="814.0"></text>
</g>
<g>
<title>do_futex (76 samples, 0.50%)</title><rect x="775.9" y="787.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="778.9" y="798.0"></text>
</g>
<g>
<title>futex_wake_op (74 samples, 0.49%)</title><rect x="775.9" y="771.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="778.9" y="782.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.03%)</title><rect x="776.5" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="779.5" y="766.0"></text>
</g>
<g>
<title>wake_up_q (62 samples, 0.41%)</title><rect x="776.9" y="755.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="779.9" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (62 samples, 0.41%)</title><rect x="776.9" y="739.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="779.9" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (62 samples, 0.41%)</title><rect x="776.9" y="723.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.requestForReplica (223 samples, 1.46%)</title><rect x="781.9" y="995.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.04%)</title><rect x="782.0" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (5 samples, 0.03%)</title><rect x="782.0" y="963.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/644345897.invoke (4 samples, 0.03%)</title><rect x="782.1" y="947.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.1" y="958.0"></text>
</g>
<g>
<title>java/net/URI.create (95 samples, 0.62%)</title><rect x="782.4" y="979.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="785.4" y="990.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (95 samples, 0.62%)</title><rect x="782.4" y="963.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.4" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (94 samples, 0.62%)</title><rect x="782.5" y="947.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.5" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (9 samples, 0.06%)</title><rect x="782.5" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="785.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.03%)</title><rect x="782.5" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.5" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (5 samples, 0.03%)</title><rect x="782.8" y="915.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="785.8" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (84 samples, 0.55%)</title><rect x="783.2" y="931.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.05%)</title><rect x="783.2" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="783.5" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.5" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (11 samples, 0.07%)</title><rect x="784.1" y="915.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.1" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (11 samples, 0.07%)</title><rect x="784.1" y="899.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="787.1" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (54 samples, 0.35%)</title><rect x="784.9" y="915.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="785.1" y="899.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.1" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (23 samples, 0.15%)</title><rect x="785.4" y="899.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.4" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.03%)</title><rect x="785.4" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.4" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (5 samples, 0.03%)</title><rect x="786.1" y="883.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.1" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.05%)</title><rect x="786.6" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.05%)</title><rect x="786.6" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.05%)</title><rect x="786.6" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.04%)</title><rect x="786.7" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.03%)</title><rect x="786.8" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.8" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (25 samples, 0.16%)</title><rect x="787.1" y="899.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.05%)</title><rect x="787.8" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.8" y="894.0"></text>
</g>
<g>
<title>java/net/URI.match (5 samples, 0.03%)</title><rect x="788.7" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.7" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.05%)</title><rect x="789.1" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.1" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.05%)</title><rect x="790.2" y="979.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.2" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.05%)</title><rect x="790.2" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.2" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.05%)</title><rect x="790.2" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.2" y="958.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (23 samples, 0.15%)</title><rect x="790.8" y="979.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.8" y="990.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (9 samples, 0.06%)</title><rect x="790.8" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.8" y="974.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (6 samples, 0.04%)</title><rect x="790.8" y="947.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.8" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="790.8" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.8" y="942.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="790.8" y="915.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.8" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="790.8" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.8" y="910.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.limit (4 samples, 0.03%)</title><rect x="790.9" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.9" y="894.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.onUnmappableCharacter (9 samples, 0.06%)</title><rect x="791.5" y="963.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.5" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.03%)</title><rect x="791.7" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.7" y="958.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.decoderFor (5 samples, 0.03%)</title><rect x="792.2" y="963.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="795.2" y="974.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (4 samples, 0.03%)</title><rect x="792.3" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (46 samples, 0.30%)</title><rect x="792.6" y="979.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (46 samples, 0.30%)</title><rect x="792.6" y="963.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.6" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (46 samples, 0.30%)</title><rect x="792.6" y="947.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.6" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (46 samples, 0.30%)</title><rect x="792.6" y="931.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.6" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (7 samples, 0.05%)</title><rect x="793.0" y="915.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.0" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (33 samples, 0.22%)</title><rect x="793.6" y="915.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.6" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (30 samples, 0.20%)</title><rect x="793.7" y="899.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.7" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (30 samples, 0.20%)</title><rect x="793.7" y="883.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.7" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (25 samples, 0.16%)</title><rect x="794.0" y="867.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.0" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (25 samples, 0.16%)</title><rect x="794.0" y="851.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.0" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (24 samples, 0.16%)</title><rect x="794.0" y="835.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.0" y="846.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.06%)</title><rect x="794.0" y="819.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="797.0" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="794.8" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.8" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.03%)</title><rect x="794.9" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.9" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.03%)</title><rect x="794.9" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.9" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.03%)</title><rect x="794.9" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1522132780.test (9 samples, 0.06%)</title><rect x="795.2" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (8 samples, 0.05%)</title><rect x="795.3" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.3" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (8 samples, 0.05%)</title><rect x="795.3" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.3" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (8 samples, 0.05%)</title><rect x="795.3" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.3" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (8 samples, 0.05%)</title><rect x="795.3" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="798.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (8 samples, 0.05%)</title><rect x="795.3" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (8 samples, 0.05%)</title><rect x="795.3" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="795.4" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="795.4" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.04%)</title><rect x="795.4" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (32 samples, 0.21%)</title><rect x="796.1" y="979.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (32 samples, 0.21%)</title><rect x="796.1" y="963.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (32 samples, 0.21%)</title><rect x="796.1" y="947.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (26 samples, 0.17%)</title><rect x="796.1" y="931.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1522132780.test (22 samples, 0.14%)</title><rect x="796.1" y="915.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (21 samples, 0.14%)</title><rect x="796.2" y="899.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.2" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (21 samples, 0.14%)</title><rect x="796.2" y="883.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.2" y="894.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (21 samples, 0.14%)</title><rect x="796.2" y="867.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.2" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (21 samples, 0.14%)</title><rect x="796.2" y="851.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.2" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (21 samples, 0.14%)</title><rect x="796.2" y="835.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.2" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (21 samples, 0.14%)</title><rect x="796.2" y="819.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (20 samples, 0.13%)</title><rect x="796.3" y="803.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (17 samples, 0.11%)</title><rect x="796.5" y="787.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (15 samples, 0.10%)</title><rect x="796.7" y="771.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (11 samples, 0.07%)</title><rect x="796.7" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (10 samples, 0.07%)</title><rect x="796.7" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (6 samples, 0.04%)</title><rect x="797.1" y="723.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.1" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (6 samples, 0.04%)</title><rect x="797.1" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.1" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.03%)</title><rect x="797.5" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="800.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (4 samples, 0.03%)</title><rect x="797.8" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (6 samples, 0.04%)</title><rect x="798.1" y="931.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.1" y="942.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (6 samples, 0.04%)</title><rect x="798.1" y="915.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (5 samples, 0.03%)</title><rect x="798.8" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (5 samples, 0.03%)</title><rect x="798.8" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (4 samples, 0.03%)</title><rect x="798.8" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (898 samples, 5.89%)</title><rect x="799.3" y="1123.0" width="69.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.3" y="1134.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (898 samples, 5.89%)</title><rect x="799.3" y="1107.0" width="69.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.3" y="1118.0">java/ut..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (7 samples, 0.05%)</title><rect x="801.8" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.weakCompareAndSet (7 samples, 0.05%)</title><rect x="801.8" y="1075.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (388 samples, 2.54%)</title><rect x="802.3" y="1091.0" width="30.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.3" y="1102.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (18 samples, 0.12%)</title><rect x="802.8" y="1075.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (12 samples, 0.08%)</title><rect x="803.2" y="1059.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (333 samples, 2.18%)</title><rect x="804.3" y="1075.0" width="25.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="807.3" y="1086.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (333 samples, 2.18%)</title><rect x="804.3" y="1059.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.3" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (194 samples, 1.27%)</title><rect x="804.3" y="1043.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (194 samples, 1.27%)</title><rect x="804.3" y="1027.0" width="15.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.03%)</title><rect x="804.6" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.03%)</title><rect x="804.9" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (4 samples, 0.03%)</title><rect x="805.3" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11 samples, 0.07%)</title><rect x="805.6" y="1011.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.05%)</title><rect x="805.9" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.05%)</title><rect x="805.9" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.05%)</title><rect x="805.9" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.03%)</title><rect x="806.0" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.03%)</title><rect x="806.1" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/1936887332.get (164 samples, 1.08%)</title><rect x="806.4" y="1011.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getLocalResults$8 (164 samples, 1.08%)</title><rect x="806.4" y="995.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getTimestamp (9 samples, 0.06%)</title><rect x="806.6" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (5 samples, 0.03%)</title><rect x="806.6" y="963.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.6" y="974.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (5 samples, 0.03%)</title><rect x="806.6" y="947.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.03%)</title><rect x="806.6" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.6" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.03%)</title><rect x="807.0" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.0" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$123/478887125.act (153 samples, 1.00%)</title><rect x="807.3" y="979.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$3 (153 samples, 1.00%)</title><rect x="807.3" y="963.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.putEntity (153 samples, 1.00%)</title><rect x="807.3" y="947.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.3" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.09%)</title><rect x="807.5" y="931.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.5" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.07%)</title><rect x="807.7" y="915.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.7" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.07%)</title><rect x="807.7" y="899.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.7" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.07%)</title><rect x="807.7" y="883.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.03%)</title><rect x="808.7" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.upsert (131 samples, 0.86%)</title><rect x="809.0" y="931.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.0" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.03%)</title><rect x="809.0" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.upsert (127 samples, 0.83%)</title><rect x="809.3" y="915.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.3" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.07%)</title><rect x="809.3" y="899.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.3" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="809.6" y="883.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.6" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="809.6" y="867.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.6" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="809.7" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="809.7" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (11 samples, 0.07%)</title><rect x="810.2" y="899.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (11 samples, 0.07%)</title><rect x="810.2" y="883.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (11 samples, 0.07%)</title><rect x="810.2" y="867.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.2" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.04%)</title><rect x="810.4" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.upsert (103 samples, 0.68%)</title><rect x="811.1" y="899.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (103 samples, 0.68%)</title><rect x="811.1" y="883.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (103 samples, 0.68%)</title><rect x="811.1" y="867.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (75 samples, 0.49%)</title><rect x="813.3" y="851.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.3" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (68 samples, 0.45%)</title><rect x="813.8" y="835.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (40 samples, 0.26%)</title><rect x="816.0" y="819.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.0" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (30 samples, 0.20%)</title><rect x="816.6" y="803.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.07%)</title><rect x="818.0" y="787.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.0" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.04%)</title><rect x="818.3" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (139 samples, 0.91%)</title><rect x="819.3" y="1043.0" width="10.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (139 samples, 0.91%)</title><rect x="819.3" y="1027.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (117 samples, 0.77%)</title><rect x="820.3" y="1011.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (110 samples, 0.72%)</title><rect x="820.8" y="995.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (77 samples, 0.50%)</title><rect x="820.9" y="979.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (13 samples, 0.09%)</title><rect x="820.9" y="963.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (13 samples, 0.09%)</title><rect x="820.9" y="947.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.9" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.03%)</title><rect x="821.1" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.1" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (4 samples, 0.03%)</title><rect x="821.1" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$200/1317088569.apply (6 samples, 0.04%)</title><rect x="821.4" y="931.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$200/1317088569.apply (63 samples, 0.41%)</title><rect x="822.0" y="963.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.0" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$replication$7 (63 samples, 0.41%)</title><rect x="822.0" y="947.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.0" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (54 samples, 0.35%)</title><rect x="822.4" y="931.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.4" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.03%)</title><rect x="822.4" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.4" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (14 samples, 0.09%)</title><rect x="822.7" y="915.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.7" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (11 samples, 0.07%)</title><rect x="822.9" y="899.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.9" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (11 samples, 0.07%)</title><rect x="822.9" y="883.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.9" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (11 samples, 0.07%)</title><rect x="822.9" y="867.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.9" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.05%)</title><rect x="823.1" y="851.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.05%)</title><rect x="823.1" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="823.2" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.2" y="830.0"></text>
</g>
<g>
<title>java/util/Collection.stream (11 samples, 0.07%)</title><rect x="823.8" y="915.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.8" y="926.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.03%)</title><rect x="823.8" y="899.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.04%)</title><rect x="824.1" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="827.1" y="910.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (21 samples, 0.14%)</title><rect x="824.6" y="915.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.6" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (21 samples, 0.14%)</title><rect x="824.6" y="899.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.6" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (4 samples, 0.03%)</title><rect x="824.6" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="827.6" y="894.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (17 samples, 0.11%)</title><rect x="824.9" y="883.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="827.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.10%)</title><rect x="825.0" y="867.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.05%)</title><rect x="825.0" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (7 samples, 0.05%)</title><rect x="825.0" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.06%)</title><rect x="825.5" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (7 samples, 0.05%)</title><rect x="825.7" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.7" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (4 samples, 0.03%)</title><rect x="825.9" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.9" y="830.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (4 samples, 0.03%)</title><rect x="825.9" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.9" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (4 samples, 0.03%)</title><rect x="826.2" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.2" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.03%)</title><rect x="826.2" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="829.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (32 samples, 0.21%)</title><rect x="826.8" y="979.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (32 samples, 0.21%)</title><rect x="826.8" y="963.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (32 samples, 0.21%)</title><rect x="826.8" y="947.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 0.18%)</title><rect x="827.2" y="931.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.04%)</title><rect x="827.2" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.03%)</title><rect x="827.2" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 0.14%)</title><rect x="827.6" y="915.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.07%)</title><rect x="828.2" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="831.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.06%)</title><rect x="828.2" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.03%)</title><rect x="828.2" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.03%)</title><rect x="828.2" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.03%)</title><rect x="828.5" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.03%)</title><rect x="828.5" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="831.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.03%)</title><rect x="828.5" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.03%)</title><rect x="828.5" y="819.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.03%)</title><rect x="828.5" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.03%)</title><rect x="828.9" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.03%)</title><rect x="828.9" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.03%)</title><rect x="828.9" y="867.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="828.9" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="828.9" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.9" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.03%)</title><rect x="829.0" y="819.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="832.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9 samples, 0.06%)</title><rect x="829.3" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (4 samples, 0.03%)</title><rect x="829.7" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (30 samples, 0.20%)</title><rect x="830.0" y="1075.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (4 samples, 0.03%)</title><rect x="830.2" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.16%)</title><rect x="830.5" y="1059.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.16%)</title><rect x="830.5" y="1043.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.5" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.03%)</title><rect x="830.5" y="1027.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="833.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.13%)</title><rect x="830.8" y="1027.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="833.8" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.10%)</title><rect x="831.1" y="1011.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="834.1" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.10%)</title><rect x="831.1" y="995.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="834.1" y="1006.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 0.10%)</title><rect x="831.2" y="979.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="834.2" y="990.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.10%)</title><rect x="831.2" y="963.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="834.2" y="974.0"></text>
</g>
<g>
<title>futex_wake_op (14 samples, 0.09%)</title><rect x="831.3" y="947.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="834.3" y="958.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.09%)</title><rect x="831.3" y="931.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="834.3" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.09%)</title><rect x="831.3" y="915.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="834.3" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.09%)</title><rect x="831.3" y="899.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="834.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (195 samples, 1.28%)</title><rect x="832.3" y="1091.0" width="15.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (5 samples, 0.03%)</title><rect x="832.3" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (190 samples, 1.25%)</title><rect x="832.7" y="1075.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.7" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (177 samples, 1.16%)</title><rect x="833.5" y="1059.0" width="13.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="836.5" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.07%)</title><rect x="834.1" y="1043.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="837.1" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (45 samples, 0.30%)</title><rect x="835.0" y="1043.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="838.0" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.14%)</title><rect x="836.9" y="1027.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="839.9" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.14%)</title><rect x="836.9" y="1011.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="839.9" y="1022.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.08%)</title><rect x="837.6" y="995.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="840.6" y="1006.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.08%)</title><rect x="837.6" y="979.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="840.6" y="990.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.06%)</title><rect x="837.7" y="963.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="840.7" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_wait (100 samples, 0.66%)</title><rect x="838.5" y="1043.0" width="7.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="841.5" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 0.47%)</title><rect x="840.7" y="1027.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="843.7" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 0.47%)</title><rect x="840.7" y="1011.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="843.7" y="1022.0"></text>
</g>
<g>
<title>sys_futex (59 samples, 0.39%)</title><rect x="841.7" y="995.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="844.7" y="1006.0"></text>
</g>
<g>
<title>do_futex (59 samples, 0.39%)</title><rect x="841.7" y="979.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="844.7" y="990.0"></text>
</g>
<g>
<title>futex_wait (59 samples, 0.39%)</title><rect x="841.7" y="963.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="844.7" y="974.0"></text>
</g>
<g>
<title>futex_wait_queue_me (47 samples, 0.31%)</title><rect x="841.9" y="947.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="844.9" y="958.0"></text>
</g>
<g>
<title>schedule (43 samples, 0.28%)</title><rect x="842.2" y="931.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="845.2" y="942.0"></text>
</g>
<g>
<title>__schedule (38 samples, 0.25%)</title><rect x="842.6" y="915.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="845.6" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (32 samples, 0.21%)</title><rect x="843.1" y="899.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="846.1" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (8 samples, 0.05%)</title><rect x="845.6" y="947.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="848.6" y="958.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.03%)</title><rect x="845.9" y="931.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="848.9" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.03%)</title><rect x="846.6" y="1043.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="849.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (271 samples, 1.78%)</title><rect x="847.4" y="1091.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (268 samples, 1.76%)</title><rect x="847.7" y="1075.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.7" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (261 samples, 1.71%)</title><rect x="848.0" y="1059.0" width="20.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="851.0" y="1070.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.03%)</title><rect x="848.7" y="1043.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="851.7" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (28 samples, 0.18%)</title><rect x="849.1" y="1043.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="852.1" y="1054.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.03%)</title><rect x="850.4" y="1027.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="853.4" y="1038.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (5 samples, 0.03%)</title><rect x="850.8" y="1027.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="853.8" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.03%)</title><rect x="851.3" y="1043.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="854.3" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (40 samples, 0.26%)</title><rect x="851.8" y="1043.0" width="3.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="854.8" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.12%)</title><rect x="853.5" y="1027.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="856.5" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.12%)</title><rect x="853.5" y="1011.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="856.5" y="1022.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.06%)</title><rect x="854.2" y="995.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="857.2" y="1006.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.06%)</title><rect x="854.2" y="979.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="857.2" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (154 samples, 1.01%)</title><rect x="854.9" y="1043.0" width="12.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="857.9" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (116 samples, 0.76%)</title><rect x="857.9" y="1027.0" width="9.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.9" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (116 samples, 0.76%)</title><rect x="857.9" y="1011.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="860.9" y="1022.0"></text>
</g>
<g>
<title>sys_futex (95 samples, 0.62%)</title><rect x="859.5" y="995.0" width="7.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="862.5" y="1006.0"></text>
</g>
<g>
<title>do_futex (90 samples, 0.59%)</title><rect x="859.9" y="979.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="862.9" y="990.0"></text>
</g>
<g>
<title>futex_wait (88 samples, 0.58%)</title><rect x="860.0" y="963.0" width="6.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="863.0" y="974.0"></text>
</g>
<g>
<title>futex_wait_queue_me (57 samples, 0.37%)</title><rect x="860.9" y="947.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="863.9" y="958.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (8 samples, 0.05%)</title><rect x="861.6" y="931.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="864.6" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.05%)</title><rect x="861.6" y="915.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="864.6" y="926.0"></text>
</g>
<g>
<title>schedule (38 samples, 0.25%)</title><rect x="862.4" y="931.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="865.4" y="942.0"></text>
</g>
<g>
<title>__schedule (31 samples, 0.20%)</title><rect x="862.9" y="915.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="865.9" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (26 samples, 0.17%)</title><rect x="863.3" y="899.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="866.3" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (10 samples, 0.07%)</title><rect x="865.3" y="947.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="868.3" y="958.0"></text>
</g>
<g>
<title>hrtimer_cancel (4 samples, 0.03%)</title><rect x="866.2" y="947.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="869.2" y="958.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (4 samples, 0.03%)</title><rect x="866.2" y="931.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="869.2" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.03%)</title><rect x="866.2" y="915.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="869.2" y="926.0"></text>
</g>
<g>
<title>hrtimer_init (4 samples, 0.03%)</title><rect x="866.5" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="869.5" y="958.0"></text>
</g>
<g>
<title>__hrtimer_init (4 samples, 0.03%)</title><rect x="866.5" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="869.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,142 samples, 7.49%)</title><rect x="868.9" y="1123.0" width="88.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="871.9" y="1134.0">jdk/intern..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.11%)</title><rect x="872.3" y="1107.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="875.3" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (16 samples, 0.10%)</title><rect x="872.3" y="1091.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="875.3" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (15 samples, 0.10%)</title><rect x="872.3" y="1075.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="875.3" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (6 samples, 0.04%)</title><rect x="872.3" y="1059.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="875.3" y="1070.0"></text>
</g>
<g>
<title>SpinPause (9 samples, 0.06%)</title><rect x="872.8" y="1059.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="875.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="873.7" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.7" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (11 samples, 0.07%)</title><rect x="874.0" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (9 samples, 0.06%)</title><rect x="874.1" y="1091.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.1" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (6 samples, 0.04%)</title><rect x="875.3" y="1107.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.3" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (384 samples, 2.52%)</title><rect x="875.8" y="1107.0" width="29.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.8" y="1118.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$381/44958327.accept (363 samples, 2.38%)</title><rect x="876.4" y="1091.0" width="28.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.4" y="1102.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (363 samples, 2.38%)</title><rect x="876.4" y="1075.0" width="28.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="879.4" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (363 samples, 2.38%)</title><rect x="876.4" y="1059.0" width="28.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="879.4" y="1070.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (363 samples, 2.38%)</title><rect x="876.4" y="1043.0" width="28.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="879.4" y="1054.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (362 samples, 2.37%)</title><rect x="876.5" y="1027.0" width="28.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.5" y="1038.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.03%)</title><rect x="876.5" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="879.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.03%)</title><rect x="876.5" y="995.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="879.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (358 samples, 2.35%)</title><rect x="876.8" y="1011.0" width="27.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="879.8" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (358 samples, 2.35%)</title><rect x="876.8" y="995.0" width="27.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="879.8" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (358 samples, 2.35%)</title><rect x="876.8" y="979.0" width="27.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="879.8" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (355 samples, 2.33%)</title><rect x="877.1" y="963.0" width="27.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="880.1" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (354 samples, 2.32%)</title><rect x="877.1" y="947.0" width="27.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.1" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/493344851.run (346 samples, 2.27%)</title><rect x="877.6" y="931.0" width="26.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.6" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (346 samples, 2.27%)</title><rect x="877.6" y="915.0" width="26.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="880.6" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (49 samples, 0.32%)</title><rect x="877.6" y="899.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="880.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (48 samples, 0.31%)</title><rect x="877.7" y="883.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="880.7" y="894.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (8 samples, 0.05%)</title><rect x="877.8" y="867.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.8" y="878.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.size (5 samples, 0.03%)</title><rect x="877.9" y="851.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="880.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (38 samples, 0.25%)</title><rect x="878.5" y="867.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="881.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.24%)</title><rect x="878.6" y="851.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.24%)</title><rect x="878.6" y="835.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (35 samples, 0.23%)</title><rect x="878.7" y="819.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="881.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (33 samples, 0.22%)</title><rect x="878.7" y="803.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="881.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (31 samples, 0.20%)</title><rect x="878.8" y="787.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (19 samples, 0.12%)</title><rect x="879.0" y="771.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="882.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.12%)</title><rect x="879.1" y="755.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.12%)</title><rect x="879.1" y="739.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="882.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.12%)</title><rect x="879.1" y="723.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.12%)</title><rect x="879.1" y="707.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="882.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.12%)</title><rect x="879.1" y="691.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.1" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.09%)</title><rect x="879.5" y="675.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="882.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.08%)</title><rect x="879.5" y="659.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="882.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.08%)</title><rect x="879.5" y="643.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="882.5" y="654.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.08%)</title><rect x="879.5" y="627.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="882.5" y="638.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.08%)</title><rect x="879.5" y="611.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="882.5" y="622.0"></text>
</g>
<g>
<title>futex_wake_op (12 samples, 0.08%)</title><rect x="879.5" y="595.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="882.5" y="606.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.07%)</title><rect x="879.7" y="579.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="882.7" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.07%)</title><rect x="879.7" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="882.7" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.07%)</title><rect x="879.7" y="547.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="882.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.04%)</title><rect x="880.5" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.03%)</title><rect x="880.5" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="883.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.03%)</title><rect x="880.5" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.03%)</title><rect x="880.5" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.03%)</title><rect x="880.9" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.03%)</title><rect x="880.9" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.03%)</title><rect x="880.9" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="883.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.03%)</title><rect x="880.9" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="883.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.03%)</title><rect x="880.9" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (10 samples, 0.07%)</title><rect x="881.6" y="899.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (7 samples, 0.05%)</title><rect x="881.8" y="883.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.04%)</title><rect x="881.8" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.04%)</title><rect x="881.8" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (5 samples, 0.03%)</title><rect x="881.9" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.03%)</title><rect x="881.9" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.03%)</title><rect x="881.9" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.03%)</title><rect x="881.9" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="884.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (285 samples, 1.87%)</title><rect x="882.3" y="899.0" width="22.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.3" y="910.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.hasRemaining (5 samples, 0.03%)</title><rect x="882.5" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (8 samples, 0.05%)</title><rect x="883.1" y="883.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="886.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$261/1758423440.get (6 samples, 0.04%)</title><rect x="883.3" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (6 samples, 0.04%)</title><rect x="883.3" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.3" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.04%)</title><rect x="883.3" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="886.3" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="883.3" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="883.3" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.3" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="883.3" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.03%)</title><rect x="883.4" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (267 samples, 1.75%)</title><rect x="883.7" y="883.0" width="20.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.7" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (264 samples, 1.73%)</title><rect x="884.0" y="867.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (264 samples, 1.73%)</title><rect x="884.0" y="851.0" width="20.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (233 samples, 1.53%)</title><rect x="884.0" y="835.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (233 samples, 1.53%)</title><rect x="884.0" y="819.0" width="18.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (233 samples, 1.53%)</title><rect x="884.0" y="803.0" width="18.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.0" y="814.0"></text>
</g>
<g>
<title>read (223 samples, 1.46%)</title><rect x="884.8" y="787.0" width="17.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="887.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (156 samples, 1.02%)</title><rect x="889.9" y="771.0" width="12.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="892.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (153 samples, 1.00%)</title><rect x="889.9" y="755.0" width="11.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="892.9" y="766.0"></text>
</g>
<g>
<title>sys_read (125 samples, 0.82%)</title><rect x="892.1" y="739.0" width="9.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="895.1" y="750.0"></text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.05%)</title><rect x="892.2" y="723.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="895.2" y="734.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.05%)</title><rect x="892.2" y="707.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="895.2" y="718.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.05%)</title><rect x="892.2" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="895.2" y="702.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.03%)</title><rect x="892.7" y="723.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="895.7" y="734.0"></text>
</g>
<g>
<title>vfs_read (112 samples, 0.73%)</title><rect x="893.1" y="723.0" width="8.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="896.1" y="734.0"></text>
</g>
<g>
<title>__vfs_read (86 samples, 0.56%)</title><rect x="893.2" y="707.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="896.2" y="718.0"></text>
</g>
<g>
<title>new_sync_read (84 samples, 0.55%)</title><rect x="893.2" y="691.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="896.2" y="702.0"></text>
</g>
<g>
<title>sock_read_iter (81 samples, 0.53%)</title><rect x="893.4" y="675.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="896.4" y="686.0"></text>
</g>
<g>
<title>inet_recvmsg (6 samples, 0.04%)</title><rect x="893.7" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="896.7" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (71 samples, 0.47%)</title><rect x="894.2" y="659.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="897.2" y="670.0"></text>
</g>
<g>
<title>inet_recvmsg (59 samples, 0.39%)</title><rect x="894.2" y="643.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="897.2" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (56 samples, 0.37%)</title><rect x="894.5" y="627.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="897.5" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.04%)</title><rect x="895.4" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="898.4" y="622.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.04%)</title><rect x="895.4" y="595.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="898.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.04%)</title><rect x="895.9" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="898.9" y="622.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (15 samples, 0.10%)</title><rect x="896.6" y="611.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="899.6" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (11 samples, 0.07%)</title><rect x="896.9" y="595.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="899.9" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.07%)</title><rect x="897.0" y="579.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="900.0" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.04%)</title><rect x="897.7" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="900.7" y="622.0"></text>
</g>
<g>
<title>tcp_send_ack (4 samples, 0.03%)</title><rect x="897.9" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="900.9" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.38 (4 samples, 0.03%)</title><rect x="897.9" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="900.9" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.03%)</title><rect x="897.9" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="900.9" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.03%)</title><rect x="897.9" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="900.9" y="558.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.03%)</title><rect x="897.9" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="900.9" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.03%)</title><rect x="898.2" y="611.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="901.2" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (10 samples, 0.07%)</title><rect x="898.8" y="643.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="901.8" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.05%)</title><rect x="899.0" y="627.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="902.0" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.05%)</title><rect x="899.0" y="611.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="902.0" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (24 samples, 0.16%)</title><rect x="899.9" y="707.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="902.9" y="718.0"></text>
</g>
<g>
<title>security_file_permission (22 samples, 0.14%)</title><rect x="900.0" y="691.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="903.0" y="702.0"></text>
</g>
<g>
<title>apparmor_file_permission (14 samples, 0.09%)</title><rect x="900.4" y="675.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="903.4" y="686.0"></text>
</g>
<g>
<title>common_file_perm (13 samples, 0.09%)</title><rect x="900.5" y="659.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="903.5" y="670.0"></text>
</g>
<g>
<title>aa_file_perm (6 samples, 0.04%)</title><rect x="901.1" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="904.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (30 samples, 0.20%)</title><rect x="902.1" y="835.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.1" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.05%)</title><rect x="902.8" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (13 samples, 0.09%)</title><rect x="903.4" y="819.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.4" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (6 samples, 0.04%)</title><rect x="903.7" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1109943227.accept (12 samples, 0.08%)</title><rect x="904.5" y="1091.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (9 samples, 0.06%)</title><rect x="904.8" y="1075.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="907.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$380/1353633883.run (9 samples, 0.06%)</title><rect x="904.8" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (9 samples, 0.06%)</title><rect x="904.8" y="1043.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (9 samples, 0.06%)</title><rect x="904.8" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.8" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (4 samples, 0.03%)</title><rect x="905.5" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.5" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (11 samples, 0.07%)</title><rect x="905.9" y="1107.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.9" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.07%)</title><rect x="905.9" y="1091.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.9" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (11 samples, 0.07%)</title><rect x="905.9" y="1075.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.9" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (11 samples, 0.07%)</title><rect x="905.9" y="1059.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.9" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.07%)</title><rect x="905.9" y="1043.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.9" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.05%)</title><rect x="906.0" y="1027.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="909.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (5 samples, 0.03%)</title><rect x="906.0" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (126 samples, 0.83%)</title><rect x="906.8" y="1107.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1068922401.run (87 samples, 0.57%)</title><rect x="906.9" y="1091.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (86 samples, 0.56%)</title><rect x="906.9" y="1075.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="909.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 0.52%)</title><rect x="907.5" y="1059.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="910.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 0.52%)</title><rect x="907.5" y="1043.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (79 samples, 0.52%)</title><rect x="907.5" y="1027.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (79 samples, 0.52%)</title><rect x="907.5" y="1011.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/493344851.run (69 samples, 0.45%)</title><rect x="907.9" y="995.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (68 samples, 0.45%)</title><rect x="907.9" y="979.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="910.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (66 samples, 0.43%)</title><rect x="907.9" y="963.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (36 samples, 0.24%)</title><rect x="908.6" y="947.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (21 samples, 0.14%)</title><rect x="908.6" y="931.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (21 samples, 0.14%)</title><rect x="908.6" y="915.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (18 samples, 0.12%)</title><rect x="908.9" y="899.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (13 samples, 0.09%)</title><rect x="908.9" y="883.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="911.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (13 samples, 0.09%)</title><rect x="908.9" y="867.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (11 samples, 0.07%)</title><rect x="908.9" y="851.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (8 samples, 0.05%)</title><rect x="909.1" y="835.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (5 samples, 0.03%)</title><rect x="909.9" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (4 samples, 0.03%)</title><rect x="910.0" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (14 samples, 0.09%)</title><rect x="910.3" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.09%)</title><rect x="910.3" y="915.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="913.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.08%)</title><rect x="910.4" y="899.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.08%)</title><rect x="910.4" y="883.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.08%)</title><rect x="910.4" y="867.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.03%)</title><rect x="910.4" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.03%)</title><rect x="910.4" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="913.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.03%)</title><rect x="910.5" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.03%)</title><rect x="910.5" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.05%)</title><rect x="910.8" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (10 samples, 0.07%)</title><rect x="911.3" y="947.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.reset (6 samples, 0.04%)</title><rect x="912.1" y="947.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.set (6 samples, 0.04%)</title><rect x="912.1" y="931.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (6 samples, 0.04%)</title><rect x="912.6" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$293/850614757.run (38 samples, 0.25%)</title><rect x="913.6" y="1091.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (38 samples, 0.25%)</title><rect x="913.6" y="1075.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (30 samples, 0.20%)</title><rect x="914.0" y="1059.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (30 samples, 0.20%)</title><rect x="914.0" y="1043.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.05%)</title><rect x="914.1" y="1027.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (7 samples, 0.05%)</title><rect x="914.1" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.04%)</title><rect x="914.1" y="995.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.04%)</title><rect x="914.1" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 0.14%)</title><rect x="914.6" y="1027.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.05%)</title><rect x="914.9" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.05%)</title><rect x="915.0" y="995.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.05%)</title><rect x="915.0" y="979.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.05%)</title><rect x="915.0" y="963.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.05%)</title><rect x="915.0" y="947.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.05%)</title><rect x="915.0" y="931.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.0" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.03%)</title><rect x="915.2" y="915.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="918.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="915.2" y="899.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="918.2" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="915.2" y="883.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="918.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.05%)</title><rect x="915.5" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.05%)</title><rect x="915.5" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="918.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.05%)</title><rect x="915.5" y="979.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.05%)</title><rect x="915.5" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.03%)</title><rect x="915.8" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.8" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.03%)</title><rect x="915.8" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.8" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.03%)</title><rect x="915.8" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (83 samples, 0.54%)</title><rect x="916.5" y="1107.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.5" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.04%)</title><rect x="916.5" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.5" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.04%)</title><rect x="916.5" y="1075.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.03%)</title><rect x="916.6" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (77 samples, 0.50%)</title><rect x="917.0" y="1091.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="920.0" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (16 samples, 0.10%)</title><rect x="917.8" y="1075.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="920.8" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (16 samples, 0.10%)</title><rect x="917.8" y="1059.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="920.8" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (16 samples, 0.10%)</title><rect x="917.8" y="1043.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="920.8" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (11 samples, 0.07%)</title><rect x="917.8" y="1027.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="920.8" y="1038.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="918.7" y="1027.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="921.7" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (4 samples, 0.03%)</title><rect x="919.2" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (44 samples, 0.29%)</title><rect x="919.5" y="1075.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="922.5" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.05%)</title><rect x="919.9" y="1059.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.9" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (10 samples, 0.07%)</title><rect x="920.5" y="1059.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="923.5" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (10 samples, 0.07%)</title><rect x="920.5" y="1043.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.5" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (22 samples, 0.14%)</title><rect x="921.3" y="1059.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="924.3" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (21 samples, 0.14%)</title><rect x="921.3" y="1043.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.3" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (13 samples, 0.09%)</title><rect x="921.8" y="1027.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (9 samples, 0.06%)</title><rect x="923.2" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.2" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.05%)</title><rect x="923.3" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.05%)</title><rect x="923.3" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.05%)</title><rect x="923.3" y="1059.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="926.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (37 samples, 0.24%)</title><rect x="924.1" y="1107.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.1" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.07%)</title><rect x="924.4" y="1091.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="927.4" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.07%)</title><rect x="924.5" y="1075.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="927.5" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (9 samples, 0.06%)</title><rect x="924.6" y="1059.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="927.6" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (7 samples, 0.05%)</title><rect x="924.6" y="1043.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="927.6" y="1054.0"></text>
</g>
<g>
<title>java/time/Instant.now (14 samples, 0.09%)</title><rect x="925.3" y="1091.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.3" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (14 samples, 0.09%)</title><rect x="925.3" y="1075.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.3" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (6 samples, 0.04%)</title><rect x="925.3" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.3" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.create (4 samples, 0.03%)</title><rect x="925.4" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.4" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="925.4" y="1027.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="928.4" y="1038.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (4 samples, 0.03%)</title><rect x="925.4" y="1011.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="928.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (8 samples, 0.05%)</title><rect x="925.7" y="1059.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.7" y="1070.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.03%)</title><rect x="926.0" y="1043.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="929.0" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (7 samples, 0.05%)</title><rect x="926.4" y="1091.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="929.4" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (6 samples, 0.04%)</title><rect x="926.4" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.4" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (6 samples, 0.04%)</title><rect x="926.4" y="1059.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.4" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (6 samples, 0.04%)</title><rect x="926.4" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="929.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (320 samples, 2.10%)</title><rect x="927.1" y="1107.0" width="24.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.1" y="1118.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (318 samples, 2.09%)</title><rect x="927.2" y="1091.0" width="24.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.2" y="1102.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (310 samples, 2.03%)</title><rect x="927.7" y="1075.0" width="24.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.7" y="1086.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (153 samples, 1.00%)</title><rect x="928.1" y="1059.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.1" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (140 samples, 0.92%)</title><rect x="929.0" y="1043.0" width="10.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="932.0" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (116 samples, 0.76%)</title><rect x="930.8" y="1027.0" width="8.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.8" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (115 samples, 0.75%)</title><rect x="930.8" y="1011.0" width="8.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="933.8" y="1022.0"></text>
</g>
<g>
<title>fput (4 samples, 0.03%)</title><rect x="931.2" y="995.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="934.2" y="1006.0"></text>
</g>
<g>
<title>sys_epoll_wait (106 samples, 0.70%)</title><rect x="931.5" y="995.0" width="8.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="934.5" y="1006.0"></text>
</g>
<g>
<title>ep_poll (99 samples, 0.65%)</title><rect x="931.9" y="979.0" width="7.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="934.9" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.06%)</title><rect x="931.9" y="963.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="934.9" y="974.0"></text>
</g>
<g>
<title>ep_scan_ready_list (44 samples, 0.29%)</title><rect x="932.7" y="963.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="935.7" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.06%)</title><rect x="932.7" y="947.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="935.7" y="958.0"></text>
</g>
<g>
<title>ep_send_events_proc (32 samples, 0.21%)</title><rect x="933.4" y="947.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.4" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (24 samples, 0.16%)</title><rect x="933.9" y="931.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.9" y="942.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.12%)</title><rect x="934.3" y="915.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="937.3" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (28 samples, 0.18%)</title><rect x="936.6" y="963.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="939.6" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (28 samples, 0.18%)</title><rect x="936.6" y="947.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="939.6" y="958.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (9 samples, 0.06%)</title><rect x="936.8" y="931.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="939.8" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.06%)</title><rect x="936.8" y="915.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="939.8" y="926.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.10%)</title><rect x="937.6" y="931.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="940.6" y="942.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.09%)</title><rect x="937.7" y="915.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.7" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.09%)</title><rect x="937.7" y="899.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="940.7" y="910.0"></text>
</g>
<g>
<title>select_estimate_accuracy (8 samples, 0.05%)</title><rect x="938.8" y="963.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.8" y="974.0"></text>
</g>
<g>
<title>select_estimate_accuracy.part.8 (7 samples, 0.05%)</title><rect x="938.9" y="947.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="941.9" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (131 samples, 0.86%)</title><rect x="939.9" y="1059.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="942.9" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.10%)</title><rect x="940.1" y="1043.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="943.1" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (16 samples, 0.10%)</title><rect x="940.1" y="1027.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.1" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (98 samples, 0.64%)</title><rect x="941.3" y="1043.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (97 samples, 0.64%)</title><rect x="941.4" y="1027.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.4" y="1038.0"></text>
</g>
<g>
<title>read (92 samples, 0.60%)</title><rect x="941.8" y="1011.0" width="7.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="944.8" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 0.45%)</title><rect x="943.5" y="995.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="946.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (69 samples, 0.45%)</title><rect x="943.5" y="979.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="946.5" y="990.0"></text>
</g>
<g>
<title>sys_read (56 samples, 0.37%)</title><rect x="944.5" y="963.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="947.5" y="974.0"></text>
</g>
<g>
<title>vfs_read (53 samples, 0.35%)</title><rect x="944.7" y="947.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="947.7" y="958.0"></text>
</g>
<g>
<title>__vfs_read (36 samples, 0.24%)</title><rect x="944.9" y="931.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="947.9" y="942.0"></text>
</g>
<g>
<title>new_sync_read (35 samples, 0.23%)</title><rect x="944.9" y="915.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="947.9" y="926.0"></text>
</g>
<g>
<title>pipe_read (28 samples, 0.18%)</title><rect x="945.3" y="899.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="948.3" y="910.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.05%)</title><rect x="945.7" y="883.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="948.7" y="894.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.05%)</title><rect x="945.7" y="867.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="948.7" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="945.7" y="851.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="948.7" y="862.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.03%)</title><rect x="946.6" y="883.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="949.6" y="894.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.04%)</title><rect x="947.0" y="883.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="950.0" y="894.0"></text>
</g>
<g>
<title>__atime_needs_update (4 samples, 0.03%)</title><rect x="947.1" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="950.1" y="878.0"></text>
</g>
<g>
<title>rw_verify_area (15 samples, 0.10%)</title><rect x="947.6" y="931.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="950.6" y="942.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.03%)</title><rect x="947.6" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="950.6" y="926.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.07%)</title><rect x="947.9" y="915.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.9" y="926.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.04%)</title><rect x="947.9" y="899.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="950.9" y="910.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.04%)</title><rect x="947.9" y="883.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="950.9" y="894.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.03%)</title><rect x="948.4" y="899.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="951.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (15 samples, 0.10%)</title><rect x="948.9" y="1043.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.04%)</title><rect x="948.9" y="1027.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.9" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.04%)</title><rect x="948.9" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.04%)</title><rect x="948.9" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.9" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (6 samples, 0.04%)</title><rect x="949.6" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (6 samples, 0.04%)</title><rect x="949.6" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.6" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (6 samples, 0.04%)</title><rect x="949.6" y="995.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.6" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="949.6" y="979.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="952.6" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (5 samples, 0.03%)</title><rect x="949.6" y="963.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="952.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (7 samples, 0.05%)</title><rect x="950.3" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.3" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (5 samples, 0.03%)</title><rect x="950.5" y="1043.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.03%)</title><rect x="950.5" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.03%)</title><rect x="950.5" y="1011.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.03%)</title><rect x="950.5" y="995.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.5" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (10 samples, 0.07%)</title><rect x="950.9" y="1059.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (48 samples, 0.31%)</title><rect x="951.8" y="1107.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (48 samples, 0.31%)</title><rect x="951.8" y="1091.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="954.8" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (47 samples, 0.31%)</title><rect x="951.9" y="1075.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (25 samples, 0.16%)</title><rect x="951.9" y="1059.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="954.9" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (24 samples, 0.16%)</title><rect x="952.0" y="1043.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="955.0" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.13%)</title><rect x="952.3" y="1027.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="955.3" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.12%)</title><rect x="952.3" y="1011.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="955.3" y="1022.0"></text>
</g>
<g>
<title>sys_epoll_wait (13 samples, 0.09%)</title><rect x="952.7" y="995.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="955.7" y="1006.0"></text>
</g>
<g>
<title>ep_poll (12 samples, 0.08%)</title><rect x="952.8" y="979.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="955.8" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list (11 samples, 0.07%)</title><rect x="952.9" y="963.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="955.9" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.07%)</title><rect x="952.9" y="947.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="955.9" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (7 samples, 0.05%)</title><rect x="953.1" y="931.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="956.1" y="942.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.04%)</title><rect x="953.1" y="915.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="956.1" y="926.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.03%)</title><rect x="953.1" y="899.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="956.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (20 samples, 0.13%)</title><rect x="953.8" y="1059.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="956.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (11 samples, 0.07%)</title><rect x="954.2" y="1043.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (10 samples, 0.07%)</title><rect x="954.3" y="1027.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="957.3" y="1038.0"></text>
</g>
<g>
<title>read (9 samples, 0.06%)</title><rect x="954.4" y="1011.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="957.4" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="954.6" y="995.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="957.6" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="954.6" y="979.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="957.6" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (4 samples, 0.03%)</title><rect x="955.1" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="958.1" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (17 samples, 0.11%)</title><rect x="955.7" y="1107.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="958.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (16 samples, 0.10%)</title><rect x="955.8" y="1091.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="958.8" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (11 samples, 0.07%)</title><rect x="956.2" y="1075.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="959.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,183 samples, 14.32%)</title><rect x="957.4" y="1123.0" width="168.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.4" y="1134.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (5 samples, 0.03%)</title><rect x="957.6" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.05%)</title><rect x="958.0" y="1107.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.05%)</title><rect x="958.0" y="1091.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (466 samples, 3.06%)</title><rect x="958.6" y="1107.0" width="36.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.6" y="1118.0">one..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.04%)</title><rect x="959.5" y="1091.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="962.5" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="959.5" y="1075.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="962.5" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="959.5" y="1059.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="962.5" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="959.5" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="962.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (14 samples, 0.09%)</title><rect x="959.9" y="1091.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="962.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (11 samples, 0.07%)</title><rect x="960.2" y="1075.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="963.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (435 samples, 2.85%)</title><rect x="961.0" y="1091.0" width="33.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="964.0" y="1102.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (6 samples, 0.04%)</title><rect x="962.3" y="1075.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="965.3" y="1086.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.03%)</title><rect x="963.0" y="1075.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="966.0" y="1086.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.04%)</title><rect x="963.3" y="1075.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="966.3" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (382 samples, 2.51%)</title><rect x="964.0" y="1075.0" width="29.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="967.0" y="1086.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (310 samples, 2.03%)</title><rect x="969.6" y="1059.0" width="24.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="972.6" y="1070.0">e..</text>
</g>
<g>
<title>do_syscall_64 (306 samples, 2.01%)</title><rect x="969.6" y="1043.0" width="23.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="972.6" y="1054.0">d..</text>
</g>
<g>
<title>fput (5 samples, 0.03%)</title><rect x="971.4" y="1027.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="974.4" y="1038.0"></text>
</g>
<g>
<title>sys_epoll_wait (278 samples, 1.82%)</title><rect x="971.8" y="1027.0" width="21.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="974.8" y="1038.0">s..</text>
</g>
<g>
<title>__fdget (9 samples, 0.06%)</title><rect x="972.1" y="1011.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="975.1" y="1022.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.06%)</title><rect x="972.1" y="995.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="975.1" y="1006.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.06%)</title><rect x="972.1" y="979.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="975.1" y="990.0"></text>
</g>
<g>
<title>ep_poll (261 samples, 1.71%)</title><rect x="973.0" y="1011.0" width="20.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="976.0" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (22 samples, 0.14%)</title><rect x="973.9" y="995.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="976.9" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list (117 samples, 0.77%)</title><rect x="975.7" y="995.0" width="9.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="978.7" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.12%)</title><rect x="976.0" y="979.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="979.0" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (78 samples, 0.51%)</title><rect x="977.9" y="979.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="980.9" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (63 samples, 0.41%)</title><rect x="978.8" y="963.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="981.8" y="974.0"></text>
</g>
<g>
<title>sock_poll (42 samples, 0.28%)</title><rect x="980.2" y="947.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="983.2" y="958.0"></text>
</g>
<g>
<title>tcp_poll (14 samples, 0.09%)</title><rect x="981.9" y="931.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="984.9" y="942.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (6 samples, 0.04%)</title><rect x="983.0" y="931.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="986.0" y="942.0"></text>
</g>
<g>
<title>mutex_lock (10 samples, 0.07%)</title><rect x="983.9" y="979.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="986.9" y="990.0"></text>
</g>
<g>
<title>_cond_resched (4 samples, 0.03%)</title><rect x="984.2" y="963.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="987.2" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.04%)</title><rect x="984.7" y="995.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="987.7" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (98 samples, 0.64%)</title><rect x="985.4" y="995.0" width="7.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="988.4" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (98 samples, 0.64%)</title><rect x="985.4" y="979.0" width="7.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="988.4" y="990.0"></text>
</g>
<g>
<title>schedule (93 samples, 0.61%)</title><rect x="985.8" y="963.0" width="7.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="988.8" y="974.0"></text>
</g>
<g>
<title>__schedule (90 samples, 0.59%)</title><rect x="986.0" y="947.0" width="7.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="989.0" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (74 samples, 0.49%)</title><rect x="987.3" y="931.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="990.3" y="942.0"></text>
</g>
<g>
<title>sys_epoll_wait (4 samples, 0.03%)</title><rect x="993.3" y="1043.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="996.3" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.03%)</title><rect x="993.6" y="1075.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="996.6" y="1086.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.03%)</title><rect x="993.6" y="1059.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="996.6" y="1070.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.03%)</title><rect x="993.6" y="1043.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="996.6" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.07%)</title><rect x="993.9" y="1075.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="996.9" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.07%)</title><rect x="993.9" y="1059.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="996.9" y="1070.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (7 samples, 0.05%)</title><rect x="994.1" y="1043.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="997.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,701 samples, 11.15%)</title><rect x="994.7" y="1107.0" width="131.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="997.7" y="1118.0">one/nio/net/Sess..</text>
</g>
<g>
<title>gettimeofday (4 samples, 0.03%)</title><rect x="995.3" y="1091.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="998.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,672 samples, 10.96%)</title><rect x="995.6" y="1091.0" width="129.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.6" y="1102.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (598 samples, 3.92%)</title><rect x="996.1" y="1075.0" width="46.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.1" y="1086.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (401 samples, 2.63%)</title><rect x="997.3" y="1059.0" width="31.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.3" y="1070.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (389 samples, 2.55%)</title><rect x="998.2" y="1043.0" width="30.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.2" y="1054.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (318 samples, 2.09%)</title><rect x="998.4" y="1027.0" width="24.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.4" y="1038.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.03%)</title><rect x="998.5" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (39 samples, 0.26%)</title><rect x="998.8" y="1011.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (33 samples, 0.22%)</title><rect x="998.8" y="995.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.06%)</title><rect x="998.8" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.06%)</title><rect x="998.8" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1001.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (8 samples, 0.05%)</title><rect x="998.9" y="947.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.10%)</title><rect x="999.6" y="979.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1002.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.09%)</title><rect x="999.8" y="963.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.8" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.03%)</title><rect x="999.9" y="947.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1002.9" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.03%)</title><rect x="999.9" y="931.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1002.9" y="942.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.03%)</title><rect x="999.9" y="915.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.9" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="999.9" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1002.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1000.2" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.2" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="1000.6" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.6" y="958.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.04%)</title><rect x="1000.9" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.9" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1000.9" y="963.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1003.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1000.9" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.9" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.04%)</title><rect x="1000.9" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1003.9" y="942.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.04%)</title><rect x="1001.3" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1004.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (274 samples, 1.80%)</title><rect x="1001.8" y="1011.0" width="21.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.8" y="1022.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/495083153.linkToTargetMethod (24 samples, 0.16%)</title><rect x="1001.9" y="995.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1004.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.16%)</title><rect x="1001.9" y="979.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.get$Lambda (24 samples, 0.16%)</title><rect x="1001.9" y="963.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.9" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.&lt;init&gt; (18 samples, 0.12%)</title><rect x="1002.3" y="947.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (249 samples, 1.63%)</title><rect x="1003.7" y="995.0" width="19.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1006.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (244 samples, 1.60%)</title><rect x="1003.9" y="979.0" width="18.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1006.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (10 samples, 0.07%)</title><rect x="1003.9" y="963.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (8 samples, 0.05%)</title><rect x="1004.1" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (8 samples, 0.05%)</title><rect x="1004.1" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (11 samples, 0.07%)</title><rect x="1004.7" y="963.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.07%)</title><rect x="1004.7" y="947.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.05%)</title><rect x="1005.0" y="931.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1008.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.05%)</title><rect x="1005.0" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1008.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (223 samples, 1.46%)</title><rect x="1005.5" y="963.0" width="17.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (223 samples, 1.46%)</title><rect x="1005.5" y="947.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1008.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (223 samples, 1.46%)</title><rect x="1005.5" y="931.0" width="17.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (223 samples, 1.46%)</title><rect x="1005.5" y="915.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1008.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (223 samples, 1.46%)</title><rect x="1005.5" y="899.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1008.5" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (25 samples, 0.16%)</title><rect x="1006.4" y="883.0" width="1.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1009.4" y="894.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.03%)</title><rect x="1007.0" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1010.0" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.03%)</title><rect x="1007.5" y="867.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1010.5" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (178 samples, 1.17%)</title><rect x="1008.3" y="883.0" width="13.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1011.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (152 samples, 1.00%)</title><rect x="1010.3" y="867.0" width="11.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1013.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (152 samples, 1.00%)</title><rect x="1010.3" y="851.0" width="11.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1013.3" y="862.0"></text>
</g>
<g>
<title>sys_futex (141 samples, 0.92%)</title><rect x="1011.2" y="835.0" width="10.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1014.2" y="846.0"></text>
</g>
<g>
<title>do_futex (138 samples, 0.90%)</title><rect x="1011.3" y="819.0" width="10.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1014.3" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.03%)</title><rect x="1011.7" y="803.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1014.7" y="814.0"></text>
</g>
<g>
<title>futex_wake_op (126 samples, 0.83%)</title><rect x="1012.1" y="803.0" width="9.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1015.1" y="814.0"></text>
</g>
<g>
<title>get_futex_key (8 samples, 0.05%)</title><rect x="1013.0" y="787.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1016.0" y="798.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.03%)</title><rect x="1013.6" y="787.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1016.6" y="798.0"></text>
</g>
<g>
<title>wake_up_q (100 samples, 0.66%)</title><rect x="1014.1" y="787.0" width="7.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1017.1" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (99 samples, 0.65%)</title><rect x="1014.2" y="771.0" width="7.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1017.2" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (98 samples, 0.64%)</title><rect x="1014.3" y="755.0" width="7.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1017.3" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.03%)</title><rect x="1022.1" y="883.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1025.1" y="894.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (5 samples, 0.03%)</title><rect x="1022.4" y="883.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1025.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (45 samples, 0.30%)</title><rect x="1023.0" y="1027.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (44 samples, 0.29%)</title><rect x="1023.1" y="1011.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1026.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (23 samples, 0.15%)</title><rect x="1023.1" y="995.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1026.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.equals (22 samples, 0.14%)</title><rect x="1023.2" y="979.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.coder (12 samples, 0.08%)</title><rect x="1023.9" y="963.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.04%)</title><rect x="1024.3" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.3" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (21 samples, 0.14%)</title><rect x="1024.9" y="995.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1027.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (21 samples, 0.14%)</title><rect x="1024.9" y="979.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (16 samples, 0.10%)</title><rect x="1025.3" y="963.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1028.3" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (23 samples, 0.15%)</title><rect x="1026.6" y="1027.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1029.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.14%)</title><rect x="1026.6" y="1011.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1029.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.09%)</title><rect x="1027.3" y="995.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.04%)</title><rect x="1027.4" y="979.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1030.4" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.04%)</title><rect x="1027.9" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.9" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (72 samples, 0.47%)</title><rect x="1028.3" y="1059.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.08%)</title><rect x="1029.7" y="1043.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1032.7" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.04%)</title><rect x="1030.0" y="1027.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1033.0" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (6 samples, 0.04%)</title><rect x="1030.0" y="1011.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1033.0" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.03%)</title><rect x="1030.1" y="995.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1033.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.22%)</title><rect x="1030.6" y="1043.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1033.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.22%)</title><rect x="1030.6" y="1027.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.6" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.05%)</title><rect x="1031.7" y="1011.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1034.7" y="1022.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.04%)</title><rect x="1031.8" y="995.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1034.8" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1031.8" y="979.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1034.8" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="1031.8" y="963.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1034.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.04%)</title><rect x="1032.7" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1035.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.04%)</title><rect x="1032.7" y="995.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.04%)</title><rect x="1032.7" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.7" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="1032.8" y="963.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1035.8" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (10 samples, 0.07%)</title><rect x="1033.1" y="1043.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1036.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="1033.6" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1036.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.13%)</title><rect x="1034.3" y="1059.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1037.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.08%)</title><rect x="1034.7" y="1043.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.08%)</title><rect x="1034.7" y="1027.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (84 samples, 0.55%)</title><rect x="1035.9" y="1059.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (82 samples, 0.54%)</title><rect x="1036.0" y="1043.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1039.0" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (13 samples, 0.09%)</title><rect x="1038.5" y="1027.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1041.5" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (12 samples, 0.08%)</title><rect x="1038.6" y="1011.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1041.6" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.07%)</title><rect x="1038.7" y="995.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1041.7" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.05%)</title><rect x="1038.7" y="979.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.7" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.05%)</title><rect x="1039.6" y="1027.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1042.6" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="1039.6" y="1011.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1042.6" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="1039.6" y="995.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1042.6" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="1039.6" y="979.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1042.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.11%)</title><rect x="1040.6" y="1027.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.11%)</title><rect x="1040.6" y="1011.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17 samples, 0.11%)</title><rect x="1040.6" y="995.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.6" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.05%)</title><rect x="1041.1" y="979.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1044.1" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.05%)</title><rect x="1041.1" y="963.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1044.1" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.05%)</title><rect x="1041.1" y="947.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1044.1" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="1041.2" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1044.2" y="942.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (5 samples, 0.03%)</title><rect x="1042.0" y="1027.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1,068 samples, 7.00%)</title><rect x="1042.4" y="1075.0" width="82.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.4" y="1086.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1,067 samples, 7.00%)</title><rect x="1042.4" y="1059.0" width="82.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.4" y="1070.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (58 samples, 0.38%)</title><rect x="1043.7" y="1043.0" width="4.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1046.7" y="1054.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.03%)</title><rect x="1044.2" y="1027.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1047.2" y="1038.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.03%)</title><rect x="1044.6" y="1027.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1047.6" y="1038.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (10 samples, 0.07%)</title><rect x="1045.1" y="1027.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1048.1" y="1038.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (23 samples, 0.15%)</title><rect x="1045.9" y="1027.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1048.9" y="1038.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (6 samples, 0.04%)</title><rect x="1046.6" y="1011.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1049.6" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (7 samples, 0.05%)</title><rect x="1047.2" y="1011.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1050.2" y="1022.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.04%)</title><rect x="1048.2" y="1043.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1051.2" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.03%)</title><rect x="1048.7" y="1043.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1051.7" y="1054.0"></text>
</g>
<g>
<title>recv (981 samples, 6.43%)</title><rect x="1049.1" y="1043.0" width="75.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1052.1" y="1054.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (900 samples, 5.90%)</title><rect x="1055.4" y="1027.0" width="69.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1058.4" y="1038.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (897 samples, 5.88%)</title><rect x="1055.4" y="1011.0" width="69.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1058.4" y="1022.0">do_sysc..</text>
</g>
<g>
<title>sys_recvfrom (846 samples, 5.55%)</title><rect x="1059.3" y="995.0" width="65.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1062.3" y="1006.0">sys_rec..</text>
</g>
<g>
<title>SYSC_recvfrom (843 samples, 5.53%)</title><rect x="1059.3" y="979.0" width="65.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1062.3" y="990.0">SYSC_re..</text>
</g>
<g>
<title>sock_recvmsg (795 samples, 5.21%)</title><rect x="1060.5" y="963.0" width="61.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1063.5" y="974.0">sock_r..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.03%)</title><rect x="1060.6" y="947.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1063.6" y="958.0"></text>
</g>
<g>
<title>inet_recvmsg (761 samples, 4.99%)</title><rect x="1060.9" y="947.0" width="58.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1063.9" y="958.0">inet_r..</text>
</g>
<g>
<title>tcp_recvmsg (756 samples, 4.96%)</title><rect x="1061.3" y="931.0" width="58.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1064.3" y="942.0">tcp_re..</text>
</g>
<g>
<title>__kfree_skb (28 samples, 0.18%)</title><rect x="1063.6" y="915.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1066.6" y="926.0"></text>
</g>
<g>
<title>skb_release_all (22 samples, 0.14%)</title><rect x="1063.9" y="899.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1066.9" y="910.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.04%)</title><rect x="1064.1" y="883.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1067.1" y="894.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.03%)</title><rect x="1064.6" y="883.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1067.6" y="894.0"></text>
</g>
<g>
<title>sock_rfree (9 samples, 0.06%)</title><rect x="1064.9" y="883.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1067.9" y="894.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (16 samples, 0.10%)</title><rect x="1066.0" y="915.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1069.0" y="926.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.03%)</title><rect x="1067.6" y="915.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1070.6" y="926.0"></text>
</g>
<g>
<title>__release_sock (4 samples, 0.03%)</title><rect x="1067.6" y="899.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1070.6" y="910.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (58 samples, 0.38%)</title><rect x="1068.0" y="915.0" width="4.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1071.0" y="926.0"></text>
</g>
<g>
<title>__check_object_size (23 samples, 0.15%)</title><rect x="1068.7" y="899.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1071.7" y="910.0"></text>
</g>
<g>
<title>__check_heap_object (4 samples, 0.03%)</title><rect x="1069.6" y="883.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1072.6" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.05%)</title><rect x="1069.9" y="883.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1072.9" y="894.0"></text>
</g>
<g>
<title>_copy_to_iter (18 samples, 0.12%)</title><rect x="1070.6" y="899.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1073.6" y="910.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (12 samples, 0.08%)</title><rect x="1070.9" y="883.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1073.9" y="894.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.03%)</title><rect x="1072.1" y="899.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1075.1" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.03%)</title><rect x="1072.1" y="883.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1075.1" y="894.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (591 samples, 3.88%)</title><rect x="1072.7" y="915.0" width="45.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1075.7" y="926.0">tcp_..</text>
</g>
<g>
<title>tcp_send_ack (582 samples, 3.82%)</title><rect x="1073.4" y="899.0" width="45.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1076.4" y="910.0">tcp_..</text>
</g>
<g>
<title>__tcp_send_ack.part.38 (581 samples, 3.81%)</title><rect x="1073.5" y="883.0" width="44.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1076.5" y="894.0">__tc..</text>
</g>
<g>
<title>__alloc_skb (21 samples, 0.14%)</title><rect x="1073.6" y="867.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1076.6" y="878.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (7 samples, 0.05%)</title><rect x="1074.2" y="851.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1077.2" y="862.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.03%)</title><rect x="1074.2" y="835.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1077.2" y="846.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.03%)</title><rect x="1074.7" y="851.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1077.7" y="862.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (550 samples, 3.61%)</title><rect x="1075.3" y="867.0" width="42.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1078.3" y="878.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (526 samples, 3.45%)</title><rect x="1076.8" y="851.0" width="40.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1079.8" y="862.0">ip_..</text>
</g>
<g>
<title>__sk_dst_check (8 samples, 0.05%)</title><rect x="1077.1" y="835.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1080.1" y="846.0"></text>
</g>
<g>
<title>ip_local_out (508 samples, 3.33%)</title><rect x="1077.8" y="835.0" width="39.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1080.8" y="846.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (131 samples, 0.86%)</title><rect x="1077.9" y="819.0" width="10.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1080.9" y="830.0"></text>
</g>
<g>
<title>nf_hook_slow (119 samples, 0.78%)</title><rect x="1078.8" y="803.0" width="9.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1081.8" y="814.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (12 samples, 0.08%)</title><rect x="1079.2" y="787.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1082.2" y="798.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.06%)</title><rect x="1079.4" y="771.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1082.4" y="782.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (9 samples, 0.06%)</title><rect x="1080.1" y="787.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1083.1" y="798.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.04%)</title><rect x="1080.3" y="771.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1083.3" y="782.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (6 samples, 0.04%)</title><rect x="1080.8" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1083.8" y="798.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (5 samples, 0.03%)</title><rect x="1080.9" y="771.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1083.9" y="782.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (86 samples, 0.56%)</title><rect x="1081.3" y="787.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1084.3" y="798.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (4 samples, 0.03%)</title><rect x="1081.5" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1084.5" y="782.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (68 samples, 0.45%)</title><rect x="1081.8" y="771.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1084.8" y="782.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (12 samples, 0.08%)</title><rect x="1082.5" y="755.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1085.5" y="766.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (31 samples, 0.20%)</title><rect x="1084.5" y="755.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1087.5" y="766.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (6 samples, 0.04%)</title><rect x="1085.2" y="739.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1088.2" y="750.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (13 samples, 0.09%)</title><rect x="1085.8" y="739.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1088.8" y="750.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (4 samples, 0.03%)</title><rect x="1087.1" y="771.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1090.1" y="782.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (4 samples, 0.03%)</title><rect x="1087.6" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1090.6" y="782.0"></text>
</g>
<g>
<title>ip_output (371 samples, 2.43%)</title><rect x="1088.2" y="819.0" width="28.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1091.2" y="830.0">ip..</text>
</g>
<g>
<title>ip_finish_output (351 samples, 2.30%)</title><rect x="1088.4" y="803.0" width="27.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1091.4" y="814.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (346 samples, 2.27%)</title><rect x="1088.7" y="787.0" width="26.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1091.7" y="798.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (296 samples, 1.94%)</title><rect x="1089.3" y="771.0" width="22.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1092.3" y="782.0">_..</text>
</g>
<g>
<title>do_softirq.part.17 (296 samples, 1.94%)</title><rect x="1089.3" y="755.0" width="22.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1092.3" y="766.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (295 samples, 1.93%)</title><rect x="1089.4" y="739.0" width="22.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1092.4" y="750.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (294 samples, 1.93%)</title><rect x="1089.4" y="723.0" width="22.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1092.4" y="734.0">_..</text>
</g>
<g>
<title>net_rx_action (280 samples, 1.84%)</title><rect x="1090.4" y="707.0" width="21.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1093.4" y="718.0">n..</text>
</g>
<g>
<title>process_backlog (269 samples, 1.76%)</title><rect x="1091.3" y="691.0" width="20.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1094.3" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb (260 samples, 1.71%)</title><rect x="1091.8" y="675.0" width="20.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1094.8" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (259 samples, 1.70%)</title><rect x="1091.8" y="659.0" width="20.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1094.8" y="670.0"></text>
</g>
<g>
<title>ip_rcv (249 samples, 1.63%)</title><rect x="1092.1" y="643.0" width="19.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1095.1" y="654.0"></text>
</g>
<g>
<title>ip_rcv_finish (222 samples, 1.46%)</title><rect x="1092.8" y="627.0" width="17.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1095.8" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver (220 samples, 1.44%)</title><rect x="1093.0" y="611.0" width="17.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1096.0" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (196 samples, 1.29%)</title><rect x="1093.0" y="595.0" width="15.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1096.0" y="606.0"></text>
</g>
<g>
<title>tcp_v4_rcv (183 samples, 1.20%)</title><rect x="1094.0" y="579.0" width="14.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1097.0" y="590.0"></text>
</g>
<g>
<title>__inet_lookup_established (21 samples, 0.14%)</title><rect x="1094.3" y="563.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1097.3" y="574.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.04%)</title><rect x="1096.1" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1099.1" y="574.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (147 samples, 0.96%)</title><rect x="1096.7" y="563.0" width="11.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1099.7" y="574.0"></text>
</g>
<g>
<title>tcp_check_space (8 samples, 0.05%)</title><rect x="1096.8" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1099.8" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_established (137 samples, 0.90%)</title><rect x="1097.5" y="547.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1100.5" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.05%)</title><rect x="1097.7" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1100.7" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.03%)</title><rect x="1097.7" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1100.7" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.03%)</title><rect x="1097.7" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1100.7" y="510.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.03%)</title><rect x="1098.0" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1101.0" y="526.0"></text>
</g>
<g>
<title>tcp_ack (123 samples, 0.81%)</title><rect x="1098.4" y="531.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1101.4" y="542.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (81 samples, 0.53%)</title><rect x="1101.2" y="515.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1104.2" y="526.0"></text>
</g>
<g>
<title>__kfree_skb (43 samples, 0.28%)</title><rect x="1102.2" y="499.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1105.2" y="510.0"></text>
</g>
<g>
<title>kfree_skbmem (10 samples, 0.07%)</title><rect x="1102.2" y="483.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1105.2" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (10 samples, 0.07%)</title><rect x="1102.2" y="467.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1105.2" y="478.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.03%)</title><rect x="1102.7" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1105.7" y="462.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (4 samples, 0.03%)</title><rect x="1102.7" y="435.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1105.7" y="446.0"></text>
</g>
<g>
<title>skb_release_all (33 samples, 0.22%)</title><rect x="1103.0" y="483.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1106.0" y="494.0"></text>
</g>
<g>
<title>skb_release_data (32 samples, 0.21%)</title><rect x="1103.0" y="467.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1106.0" y="478.0"></text>
</g>
<g>
<title>skb_free_head (25 samples, 0.16%)</title><rect x="1103.6" y="451.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1106.6" y="462.0"></text>
</g>
<g>
<title>kfree (23 samples, 0.15%)</title><rect x="1103.7" y="435.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1106.7" y="446.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.05%)</title><rect x="1104.8" y="419.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1107.8" y="430.0"></text>
</g>
<g>
<title>rb_next (8 samples, 0.05%)</title><rect x="1105.9" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1108.9" y="510.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (12 samples, 0.08%)</title><rect x="1106.5" y="499.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1109.5" y="510.0"></text>
</g>
<g>
<title>minmax_running_min (4 samples, 0.03%)</title><rect x="1107.1" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1110.1" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.12%)</title><rect x="1108.4" y="595.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1111.4" y="606.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.06%)</title><rect x="1108.5" y="579.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1111.5" y="590.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (8 samples, 0.05%)</title><rect x="1108.6" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1111.6" y="574.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (4 samples, 0.03%)</title><rect x="1109.4" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1112.4" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.03%)</title><rect x="1109.4" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1112.4" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.07%)</title><rect x="1110.6" y="627.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1113.6" y="638.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (7 samples, 0.05%)</title><rect x="1110.8" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1113.8" y="622.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.04%)</title><rect x="1110.8" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1113.8" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="1111.5" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1114.5" y="654.0"></text>
</g>
<g>
<title>dev_queue_xmit (41 samples, 0.27%)</title><rect x="1112.2" y="771.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1115.2" y="782.0"></text>
</g>
<g>
<title>__dev_queue_xmit (40 samples, 0.26%)</title><rect x="1112.2" y="755.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1115.2" y="766.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (28 samples, 0.18%)</title><rect x="1112.6" y="739.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1115.6" y="750.0"></text>
</g>
<g>
<title>__sock_wfree (4 samples, 0.03%)</title><rect x="1113.1" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1116.1" y="734.0"></text>
</g>
<g>
<title>loopback_xmit (17 samples, 0.11%)</title><rect x="1113.4" y="723.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1116.4" y="734.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.04%)</title><rect x="1113.4" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1116.4" y="718.0"></text>
</g>
<g>
<title>netif_rx (11 samples, 0.07%)</title><rect x="1113.9" y="707.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1116.9" y="718.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.06%)</title><rect x="1114.0" y="691.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1117.0" y="702.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.06%)</title><rect x="1114.0" y="675.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1117.0" y="686.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.03%)</title><rect x="1114.9" y="739.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1117.9" y="750.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (4 samples, 0.03%)</title><rect x="1115.8" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.8" y="814.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.07%)</title><rect x="1116.1" y="803.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1119.1" y="814.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (4 samples, 0.03%)</title><rect x="1116.4" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1119.4" y="798.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.03%)</title><rect x="1117.5" y="851.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1120.5" y="862.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.03%)</title><rect x="1118.1" y="867.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1121.1" y="878.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (11 samples, 0.07%)</title><rect x="1118.4" y="915.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1121.4" y="926.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.03%)</title><rect x="1119.3" y="915.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1122.3" y="926.0"></text>
</g>
<g>
<title>security_socket_recvmsg (23 samples, 0.15%)</title><rect x="1119.8" y="947.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1122.8" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (20 samples, 0.13%)</title><rect x="1120.0" y="931.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1123.0" y="942.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (19 samples, 0.12%)</title><rect x="1120.1" y="915.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1123.1" y="926.0"></text>
</g>
<g>
<title>aa_sk_perm (16 samples, 0.10%)</title><rect x="1120.4" y="899.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1123.4" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.03%)</title><rect x="1121.6" y="947.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1124.6" y="958.0"></text>
</g>
<g>
<title>sockfd_lookup_light (33 samples, 0.22%)</title><rect x="1122.0" y="963.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1125.0" y="974.0"></text>
</g>
<g>
<title>__fdget (23 samples, 0.15%)</title><rect x="1122.0" y="947.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1125.0" y="958.0"></text>
</g>
<g>
<title>__fget_light (23 samples, 0.15%)</title><rect x="1122.0" y="931.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.0" y="942.0"></text>
</g>
<g>
<title>__fget (23 samples, 0.15%)</title><rect x="1122.0" y="915.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.0" y="926.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.07%)</title><rect x="1123.8" y="947.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1126.8" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (17 samples, 0.11%)</title><rect x="1125.0" y="1091.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1128.0" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.05%)</title><rect x="1125.7" y="1075.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1128.7" y="1086.0"></text>
</g>
<g>
<title>start_thread (823 samples, 5.40%)</title><rect x="1126.3" y="1123.0" width="63.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1129.3" y="1134.0">start_t..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (823 samples, 5.40%)</title><rect x="1126.3" y="1107.0" width="63.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1129.3" y="1118.0">thread_..</text>
</g>
<g>
<title>GangWorker::loop() (738 samples, 4.84%)</title><rect x="1126.5" y="1091.0" width="57.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1129.5" y="1102.0">GangWo..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (23 samples, 0.15%)</title><rect x="1126.5" y="1075.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1129.5" y="1086.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (23 samples, 0.15%)</title><rect x="1126.5" y="1059.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1129.5" y="1070.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (19 samples, 0.12%)</title><rect x="1126.5" y="1043.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1129.5" y="1054.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (18 samples, 0.12%)</title><rect x="1126.5" y="1027.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1129.5" y="1038.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (16 samples, 0.10%)</title><rect x="1126.7" y="1011.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1129.7" y="1022.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (686 samples, 4.50%)</title><rect x="1128.3" y="1075.0" width="53.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.3" y="1086.0">G1Par..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (487 samples, 3.19%)</title><rect x="1128.3" y="1059.0" width="37.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.3" y="1070.0">G1P..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (85 samples, 0.56%)</title><rect x="1129.3" y="1043.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1132.3" y="1054.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (55 samples, 0.36%)</title><rect x="1131.4" y="1027.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1134.4" y="1038.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (20 samples, 0.13%)</title><rect x="1134.1" y="1011.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.1" y="1022.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (6 samples, 0.04%)</title><rect x="1135.8" y="1043.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1138.8" y="1054.0"></text>
</g>
<g>
<title>SpinPause (384 samples, 2.52%)</title><rect x="1136.3" y="1043.0" width="29.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1139.3" y="1054.0">Sp..</text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (133 samples, 0.87%)</title><rect x="1166.1" y="1059.0" width="10.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.1" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (133 samples, 0.87%)</title><rect x="1166.1" y="1043.0" width="10.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.1" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (133 samples, 0.87%)</title><rect x="1166.1" y="1027.0" width="10.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.1" y="1038.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (133 samples, 0.87%)</title><rect x="1166.1" y="1011.0" width="10.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.1" y="1022.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (131 samples, 0.86%)</title><rect x="1166.2" y="995.0" width="10.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.2" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (31 samples, 0.20%)</title><rect x="1166.3" y="979.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.3" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (15 samples, 0.10%)</title><rect x="1167.4" y="963.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.4" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.03%)</title><rect x="1168.2" y="947.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.2" y="958.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (98 samples, 0.64%)</title><rect x="1168.7" y="979.0" width="7.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.7" y="990.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (93 samples, 0.61%)</title><rect x="1168.8" y="963.0" width="7.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.8" y="974.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (16 samples, 0.10%)</title><rect x="1170.2" y="947.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.2" y="958.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (6 samples, 0.04%)</title><rect x="1171.6" y="947.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.6" y="958.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (22 samples, 0.14%)</title><rect x="1172.2" y="947.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.2" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (9 samples, 0.06%)</title><rect x="1173.9" y="947.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.9" y="958.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (7 samples, 0.05%)</title><rect x="1174.1" y="931.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.1" y="942.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (17 samples, 0.11%)</title><rect x="1174.6" y="947.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.6" y="958.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.03%)</title><rect x="1176.4" y="1059.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.4" y="1070.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (4 samples, 0.03%)</title><rect x="1176.4" y="1043.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.4" y="1054.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (4 samples, 0.03%)</title><rect x="1176.4" y="1027.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.4" y="1038.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (57 samples, 0.37%)</title><rect x="1176.8" y="1059.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.8" y="1070.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (39 samples, 0.26%)</title><rect x="1177.0" y="1043.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.0" y="1054.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (35 samples, 0.23%)</title><rect x="1177.3" y="1027.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.3" y="1038.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (34 samples, 0.22%)</title><rect x="1177.4" y="1011.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.4" y="1022.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (8 samples, 0.05%)</title><rect x="1177.4" y="995.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.4" y="1006.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (8 samples, 0.05%)</title><rect x="1177.4" y="979.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.4" y="990.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (11 samples, 0.07%)</title><rect x="1178.2" y="995.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.2" y="1006.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (9 samples, 0.06%)</title><rect x="1178.4" y="979.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.4" y="990.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.05%)</title><rect x="1179.2" y="995.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.2" y="1006.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (4 samples, 0.03%)</title><rect x="1179.4" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.4" y="990.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.03%)</title><rect x="1179.4" y="963.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.4" y="974.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (4 samples, 0.03%)</title><rect x="1179.7" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.7" y="1006.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.03%)</title><rect x="1180.0" y="1043.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.0" y="1054.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (10 samples, 0.07%)</title><rect x="1180.4" y="1043.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.4" y="1054.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (7 samples, 0.05%)</title><rect x="1180.6" y="1027.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.6" y="1038.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (5 samples, 0.03%)</title><rect x="1181.6" y="1075.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.6" y="1086.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (5 samples, 0.03%)</title><rect x="1181.6" y="1059.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.6" y="1070.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.03%)</title><rect x="1181.6" y="1043.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.6" y="1054.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (17 samples, 0.11%)</title><rect x="1182.0" y="1075.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.0" y="1086.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (15 samples, 0.10%)</title><rect x="1182.2" y="1059.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.2" y="1070.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.63] (5 samples, 0.03%)</title><rect x="1182.6" y="1043.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.6" y="1054.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.03%)</title><rect x="1182.6" y="1027.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.6" y="1038.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (4 samples, 0.03%)</title><rect x="1183.0" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.0" y="1054.0"></text>
</g>
<g>
<title>JavaThread::run() (49 samples, 0.32%)</title><rect x="1183.6" y="1091.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.6" y="1102.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (49 samples, 0.32%)</title><rect x="1183.6" y="1075.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.6" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (47 samples, 0.31%)</title><rect x="1183.6" y="1059.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.6" y="1070.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (47 samples, 0.31%)</title><rect x="1183.6" y="1043.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.6" y="1054.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (46 samples, 0.30%)</title><rect x="1183.6" y="1027.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.6" y="1038.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (46 samples, 0.30%)</title><rect x="1183.6" y="1011.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.6" y="1022.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (22 samples, 0.14%)</title><rect x="1183.6" y="995.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.6" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (14 samples, 0.09%)</title><rect x="1184.2" y="979.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.2" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.03%)</title><rect x="1184.3" y="963.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.3" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.03%)</title><rect x="1184.3" y="947.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.3" y="958.0"></text>
</g>
<g>
<title>Compile::Optimize() (14 samples, 0.09%)</title><rect x="1185.3" y="995.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.3" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (10 samples, 0.07%)</title><rect x="1185.4" y="979.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.4" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.05%)</title><rect x="1186.4" y="995.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.05%)</title><rect x="1186.4" y="979.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.05%)</title><rect x="1186.4" y="963.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.4" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.05%)</title><rect x="1186.4" y="947.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.05%)</title><rect x="1186.4" y="931.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.05%)</title><rect x="1186.4" y="915.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.4" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.04%)</title><rect x="1186.4" y="899.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.4" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.04%)</title><rect x="1186.4" y="883.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.04%)</title><rect x="1186.4" y="867.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.04%)</title><rect x="1186.4" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.04%)</title><rect x="1186.4" y="835.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.4" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.04%)</title><rect x="1186.4" y="819.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.4" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1186.4" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.03%)</title><rect x="1186.4" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.03%)</title><rect x="1186.4" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.03%)</title><rect x="1186.4" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.03%)</title><rect x="1186.4" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1186.4" y="723.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.4" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.03%)</title><rect x="1186.4" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.4" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.03%)</title><rect x="1186.4" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.03%)</title><rect x="1186.4" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.03%)</title><rect x="1186.4" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.03%)</title><rect x="1186.4" y="643.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.03%)</title><rect x="1186.4" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.4" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.03%)</title><rect x="1186.4" y="611.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.4" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.03%)</title><rect x="1186.4" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.03%)</title><rect x="1186.4" y="579.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.03%)</title><rect x="1186.4" y="563.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.03%)</title><rect x="1186.4" y="547.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.03%)</title><rect x="1186.4" y="531.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.4" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.03%)</title><rect x="1186.4" y="515.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.4" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.03%)</title><rect x="1186.4" y="499.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.03%)</title><rect x="1186.4" y="483.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.03%)</title><rect x="1186.4" y="467.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="478.0"></text>
</g>
<g>
<title>VMThread::run() (28 samples, 0.18%)</title><rect x="1187.4" y="1091.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="1102.0"></text>
</g>
<g>
<title>VMThread::loop() (28 samples, 0.18%)</title><rect x="1187.4" y="1075.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.4" y="1086.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.03%)</title><rect x="1187.4" y="1059.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.4" y="1070.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (4 samples, 0.03%)</title><rect x="1187.4" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="1054.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (9 samples, 0.06%)</title><rect x="1187.7" y="1059.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.7" y="1070.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (8 samples, 0.05%)</title><rect x="1188.5" y="1059.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.5" y="1070.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (8 samples, 0.05%)</title><rect x="1188.5" y="1043.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.5" y="1054.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (7 samples, 0.05%)</title><rect x="1188.5" y="1027.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.5" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (7 samples, 0.05%)</title><rect x="1188.5" y="1011.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.5" y="1022.0"></text>
</g>
<g>
<title>__GI___sched_yield (5 samples, 0.03%)</title><rect x="1189.1" y="1059.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1192.1" y="1070.0"></text>
</g>
<g>
<title>WatcherThread::run() (6 samples, 0.04%)</title><rect x="1189.5" y="1091.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="1102.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (5 samples, 0.03%)</title><rect x="1189.6" y="1075.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.6" y="1086.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.03%)</title><rect x="1189.6" y="1059.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.6" y="1070.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (5 samples, 0.03%)</title><rect x="1189.6" y="1043.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.6" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.03%)</title><rect x="1189.7" y="1027.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1192.7" y="1038.0"></text>
</g>
</g>
</svg>
