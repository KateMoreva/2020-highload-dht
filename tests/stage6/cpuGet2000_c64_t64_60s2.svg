<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1189"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1189"> </text>
<g id="frames">
<g>
<title>all (16,231 samples, 100.00%)</title><rect x="10.0" y="1155.0" width="1180.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.0" y="1166.0">all</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.04%)</title><rect x="10.4" y="1139.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.4" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.04%)</title><rect x="10.4" y="1123.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.4" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.04%)</title><rect x="10.4" y="1107.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.4" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.04%)</title><rect x="10.4" y="1091.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.4" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.04%)</title><rect x="10.4" y="1075.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.4" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (5 samples, 0.03%)</title><rect x="10.5" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.5" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (5 samples, 0.03%)</title><rect x="10.5" y="1043.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.5" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (306 samples, 1.89%)</title><rect x="10.9" y="1139.0" width="22.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.9" y="1150.0">S..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (302 samples, 1.86%)</title><rect x="11.2" y="1123.0" width="21.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.2" y="1134.0">O..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (297 samples, 1.83%)</title><rect x="11.5" y="1107.0" width="21.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.5" y="1118.0">O..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.03%)</title><rect x="12.7" y="1091.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.7" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (266 samples, 1.64%)</title><rect x="13.1" y="1091.0" width="19.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.1" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (110 samples, 0.68%)</title><rect x="14.4" y="1075.0" width="8.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="17.4" y="1086.0"></text>
</g>
<g>
<title>SpinPause (29 samples, 0.18%)</title><rect x="22.4" y="1075.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="25.4" y="1086.0"></text>
</g>
<g>
<title>__lll_unlock_wake (27 samples, 0.17%)</title><rect x="24.7" y="1075.0" width="1.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="27.7" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.09%)</title><rect x="25.5" y="1059.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="28.5" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.09%)</title><rect x="25.5" y="1043.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="28.5" y="1054.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.04%)</title><rect x="26.1" y="1027.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="29.1" y="1038.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="26.1" y="1011.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="29.1" y="1022.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="26.1" y="995.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="29.1" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (45 samples, 0.28%)</title><rect x="26.6" y="1075.0" width="3.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="29.6" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.19%)</title><rect x="27.7" y="1059.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.7" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.19%)</title><rect x="27.7" y="1043.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.7" y="1054.0"></text>
</g>
<g>
<title>sys_futex (24 samples, 0.15%)</title><rect x="28.2" y="1027.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.2" y="1038.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.14%)</title><rect x="28.2" y="1011.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="31.2" y="1022.0"></text>
</g>
<g>
<title>futex_wait (22 samples, 0.14%)</title><rect x="28.2" y="995.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="31.2" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.10%)</title><rect x="28.2" y="979.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.2" y="990.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.07%)</title><rect x="28.5" y="963.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="31.5" y="974.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.07%)</title><rect x="28.5" y="947.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.5" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.07%)</title><rect x="28.5" y="931.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="31.5" y="942.0"></text>
</g>
<g>
<title>hrtimer_cancel (4 samples, 0.02%)</title><rect x="29.5" y="979.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="32.5" y="990.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (4 samples, 0.02%)</title><rect x="29.5" y="963.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="32.5" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_wait (27 samples, 0.17%)</title><rect x="29.9" y="1075.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="32.9" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.12%)</title><rect x="30.5" y="1059.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.5" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.12%)</title><rect x="30.5" y="1043.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="33.5" y="1054.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 0.09%)</title><rect x="30.8" y="1027.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="33.8" y="1038.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.09%)</title><rect x="30.8" y="1011.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="33.8" y="1022.0"></text>
</g>
<g>
<title>futex_wait (15 samples, 0.09%)</title><rect x="30.8" y="995.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="33.8" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 0.07%)</title><rect x="30.8" y="979.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="33.8" y="990.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.05%)</title><rect x="31.1" y="963.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="34.1" y="974.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.04%)</title><rect x="31.2" y="947.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.2" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.04%)</title><rect x="31.2" y="931.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="34.2" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.03%)</title><rect x="32.5" y="1091.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="35.5" y="1102.0"></text>
</g>
<g>
<title>[no_Java_frame] (24 samples, 0.15%)</title><rect x="33.1" y="1139.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="36.1" y="1150.0"></text>
</g>
<g>
<title>[not_walkable_Java] (92 samples, 0.57%)</title><rect x="34.9" y="1139.0" width="6.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="37.9" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (64 samples, 0.39%)</title><rect x="35.2" y="1123.0" width="4.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="38.2" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (61 samples, 0.38%)</title><rect x="35.4" y="1107.0" width="4.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="38.4" y="1118.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.02%)</title><rect x="35.5" y="1091.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="38.5" y="1102.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (21 samples, 0.13%)</title><rect x="35.8" y="1091.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="38.8" y="1102.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (18 samples, 0.11%)</title><rect x="36.0" y="1075.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="39.0" y="1086.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (9 samples, 0.06%)</title><rect x="36.6" y="1059.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="39.6" y="1070.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (34 samples, 0.21%)</title><rect x="37.4" y="1091.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="40.4" y="1102.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (4 samples, 0.02%)</title><rect x="38.3" y="1075.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="41.3" y="1086.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (8 samples, 0.05%)</title><rect x="38.6" y="1075.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="41.6" y="1086.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (9 samples, 0.06%)</title><rect x="39.2" y="1075.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="42.2" y="1086.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.03%)</title><rect x="39.2" y="1059.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="42.2" y="1070.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.03%)</title><rect x="39.2" y="1043.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="42.2" y="1054.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (4 samples, 0.02%)</title><rect x="39.5" y="1059.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="42.5" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (12 samples, 0.07%)</title><rect x="39.9" y="1123.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="42.9" y="1134.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (9 samples, 0.06%)</title><rect x="40.1" y="1107.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="43.1" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="40.8" y="1123.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="43.8" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.02%)</title><rect x="41.0" y="1123.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="44.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.10%)</title><rect x="41.6" y="1139.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="44.6" y="1150.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.3 (11 samples, 0.07%)</title><rect x="41.9" y="1123.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="44.9" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.06%)</title><rect x="42.1" y="1107.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="45.1" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.06%)</title><rect x="42.1" y="1091.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="45.1" y="1102.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.06%)</title><rect x="42.1" y="1075.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="45.1" y="1086.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.06%)</title><rect x="42.1" y="1059.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="45.1" y="1070.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.05%)</title><rect x="42.1" y="1043.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="45.1" y="1054.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.04%)</title><rect x="42.1" y="1027.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="45.1" y="1038.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.02%)</title><rect x="42.3" y="1011.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="45.3" y="1022.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.02%)</title><rect x="42.3" y="995.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.3" y="1006.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.02%)</title><rect x="42.3" y="979.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="45.3" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (44 samples, 0.27%)</title><rect x="42.7" y="1139.0" width="3.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="45.7" y="1150.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (4 samples, 0.02%)</title><rect x="42.7" y="1123.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="45.7" y="1134.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (4 samples, 0.02%)</title><rect x="43.2" y="1123.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="46.2" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="43.7" y="1123.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="46.7" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (17 samples, 0.10%)</title><rect x="44.1" y="1123.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="47.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="45.3" y="1123.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="48.3" y="1134.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.02%)</title><rect x="45.3" y="1107.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="48.3" y="1118.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.02%)</title><rect x="45.6" y="1107.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="48.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10,609 samples, 65.36%)</title><rect x="46.3" y="1139.0" width="771.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.3" y="1150.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,609 samples, 65.36%)</title><rect x="46.3" y="1123.0" width="771.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.3" y="1134.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,608 samples, 65.36%)</title><rect x="46.3" y="1107.0" width="771.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.3" y="1118.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (20 samples, 0.12%)</title><rect x="47.3" y="1091.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="50.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,557 samples, 9.59%)</title><rect x="48.7" y="1091.0" width="113.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.7" y="1102.0">java/util/conc..</text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="49.2" y="1075.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="52.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,541 samples, 9.49%)</title><rect x="49.7" y="1075.0" width="112.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.7" y="1086.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,536 samples, 9.46%)</title><rect x="49.9" y="1059.0" width="111.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.9" y="1070.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$172/330952395.apply (1,516 samples, 9.34%)</title><rect x="51.3" y="1043.0" width="110.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.3" y="1054.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,512 samples, 9.32%)</title><rect x="51.6" y="1027.0" width="109.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.6" y="1038.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,512 samples, 9.32%)</title><rect x="51.6" y="1011.0" width="109.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.6" y="1022.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.04%)</title><rect x="52.0" y="995.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.04%)</title><rect x="52.0" y="979.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,255 samples, 7.73%)</title><rect x="52.5" y="995.0" width="91.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.5" y="1006.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,255 samples, 7.73%)</title><rect x="52.5" y="979.0" width="91.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.5" y="990.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,255 samples, 7.73%)</title><rect x="52.5" y="963.0" width="91.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.5" y="974.0">jdk/interna..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (670 samples, 4.13%)</title><rect x="52.5" y="947.0" width="48.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.5" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (669 samples, 4.12%)</title><rect x="52.5" y="931.0" width="48.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.5" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (7 samples, 0.04%)</title><rect x="52.5" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (7 samples, 0.04%)</title><rect x="52.5" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$325/555075840.apply (6 samples, 0.04%)</title><rect x="52.6" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (660 samples, 4.07%)</title><rect x="53.0" y="915.0" width="48.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.0" y="926.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$325/555075840.apply (660 samples, 4.07%)</title><rect x="53.0" y="899.0" width="48.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.0" y="910.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (658 samples, 4.05%)</title><rect x="53.2" y="883.0" width="47.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.2" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (658 samples, 4.05%)</title><rect x="53.2" y="867.0" width="47.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.2" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$216/483426623.apply (9 samples, 0.06%)</title><rect x="53.2" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (9 samples, 0.06%)</title><rect x="53.2" y="835.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (9 samples, 0.06%)</title><rect x="53.2" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (9 samples, 0.06%)</title><rect x="53.2" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (9 samples, 0.06%)</title><rect x="53.2" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (4 samples, 0.02%)</title><rect x="53.2" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (4 samples, 0.02%)</title><rect x="53.2" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (4 samples, 0.02%)</title><rect x="53.2" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.02%)</title><rect x="53.2" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.02%)</title><rect x="53.2" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (5 samples, 0.03%)</title><rect x="53.5" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.02%)</title><rect x="53.5" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="53.5" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="53.5" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4 samples, 0.02%)</title><rect x="53.5" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1734934037.apply (649 samples, 4.00%)</title><rect x="53.8" y="851.0" width="47.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.8" y="862.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (649 samples, 4.00%)</title><rect x="53.8" y="835.0" width="47.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.8" y="846.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5 samples, 0.03%)</title><rect x="53.8" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5 samples, 0.03%)</title><rect x="53.8" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.05%)</title><rect x="54.2" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.05%)</title><rect x="54.2" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="54.4" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="54.4" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (636 samples, 3.92%)</title><rect x="54.8" y="819.0" width="46.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.8" y="830.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (542 samples, 3.34%)</title><rect x="54.9" y="803.0" width="39.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.9" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (542 samples, 3.34%)</title><rect x="54.9" y="787.0" width="39.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.9" y="798.0">jav..</text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="55.1" y="771.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="58.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/1292913949.apply (522 samples, 3.22%)</title><rect x="55.7" y="771.0" width="37.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.7" y="782.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (519 samples, 3.20%)</title><rect x="55.9" y="755.0" width="37.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.9" y="766.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.04%)</title><rect x="56.3" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.04%)</title><rect x="56.3" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="56.5" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="56.5" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (21 samples, 0.13%)</title><rect x="56.8" y="739.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (19 samples, 0.12%)</title><rect x="57.0" y="723.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (7 samples, 0.04%)</title><rect x="57.0" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (7 samples, 0.04%)</title><rect x="57.0" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (7 samples, 0.04%)</title><rect x="57.0" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (4 samples, 0.02%)</title><rect x="57.1" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.07%)</title><rect x="57.5" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.07%)</title><rect x="57.5" y="691.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.07%)</title><rect x="57.5" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.06%)</title><rect x="57.6" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7 samples, 0.04%)</title><rect x="57.8" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (6 samples, 0.04%)</title><rect x="57.9" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (4 samples, 0.02%)</title><rect x="58.0" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (4 samples, 0.02%)</title><rect x="58.0" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (4 samples, 0.02%)</title><rect x="58.0" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (4 samples, 0.02%)</title><rect x="58.0" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (4 samples, 0.02%)</title><rect x="58.0" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.0" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (4 samples, 0.02%)</title><rect x="58.0" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (4 samples, 0.02%)</title><rect x="58.0" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.02%)</title><rect x="58.0" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.02%)</title><rect x="58.0" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (164 samples, 1.01%)</title><rect x="58.3" y="739.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (159 samples, 0.98%)</title><rect x="58.6" y="723.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (30 samples, 0.18%)</title><rect x="58.6" y="707.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (27 samples, 0.17%)</title><rect x="58.9" y="691.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (27 samples, 0.17%)</title><rect x="58.9" y="675.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (14 samples, 0.09%)</title><rect x="59.3" y="659.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (14 samples, 0.09%)</title><rect x="59.3" y="643.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (7 samples, 0.04%)</title><rect x="59.8" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.03%)</title><rect x="59.9" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.9" y="622.0"></text>
</g>
<g>
<title>__GI___write (4 samples, 0.02%)</title><rect x="59.9" y="595.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="62.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (4 samples, 0.02%)</title><rect x="60.5" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (129 samples, 0.79%)</title><rect x="60.8" y="707.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (129 samples, 0.79%)</title><rect x="60.8" y="691.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (103 samples, 0.63%)</title><rect x="60.9" y="675.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (98 samples, 0.60%)</title><rect x="60.9" y="659.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (98 samples, 0.60%)</title><rect x="60.9" y="643.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.9" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (29 samples, 0.18%)</title><rect x="62.0" y="627.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="65.0" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (28 samples, 0.17%)</title><rect x="62.1" y="611.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="65.1" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (26 samples, 0.16%)</title><rect x="62.1" y="595.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="65.1" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (18 samples, 0.11%)</title><rect x="62.3" y="579.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="65.3" y="590.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.04%)</title><rect x="63.6" y="579.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="66.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="64.2" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (47 samples, 0.29%)</title><rect x="64.6" y="627.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.6" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="64.7" y="611.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="67.7" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="64.7" y="595.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="67.7" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.02%)</title><rect x="64.7" y="579.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="67.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (40 samples, 0.25%)</title><rect x="65.1" y="611.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.1" y="622.0"></text>
</g>
<g>
<title>__GI___write (36 samples, 0.22%)</title><rect x="65.3" y="595.0" width="2.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="68.3" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.20%)</title><rect x="65.5" y="579.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="68.5" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.20%)</title><rect x="65.5" y="563.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.5" y="574.0"></text>
</g>
<g>
<title>sys_write (27 samples, 0.17%)</title><rect x="65.8" y="547.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.8" y="558.0"></text>
</g>
<g>
<title>vfs_write (24 samples, 0.15%)</title><rect x="66.1" y="531.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="69.1" y="542.0"></text>
</g>
<g>
<title>__vfs_write (19 samples, 0.12%)</title><rect x="66.3" y="515.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="69.3" y="526.0"></text>
</g>
<g>
<title>new_sync_write (19 samples, 0.12%)</title><rect x="66.3" y="499.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="69.3" y="510.0"></text>
</g>
<g>
<title>pipe_write (18 samples, 0.11%)</title><rect x="66.3" y="483.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="69.3" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.08%)</title><rect x="66.5" y="467.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="69.5" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.07%)</title><rect x="66.6" y="451.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="69.6" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="66.6" y="435.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="69.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (5 samples, 0.03%)</title><rect x="68.0" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (7 samples, 0.04%)</title><rect x="68.4" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (17 samples, 0.10%)</title><rect x="68.9" y="675.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.9" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.09%)</title><rect x="69.0" y="659.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="72.0" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (15 samples, 0.09%)</title><rect x="69.0" y="643.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="72.0" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.08%)</title><rect x="69.1" y="627.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="72.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.06%)</title><rect x="69.4" y="611.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="72.4" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.06%)</title><rect x="69.4" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="72.4" y="606.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.06%)</title><rect x="69.4" y="579.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="72.4" y="590.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.05%)</title><rect x="69.5" y="563.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="72.5" y="574.0"></text>
</g>
<g>
<title>futex_wake_op (8 samples, 0.05%)</title><rect x="69.5" y="547.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="72.5" y="558.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.05%)</title><rect x="69.5" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="72.5" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.05%)</title><rect x="69.5" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="72.5" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="69.5" y="499.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="72.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (320 samples, 1.97%)</title><rect x="70.3" y="739.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.3" y="750.0">j..</text>
</g>
<g>
<title>java/lang/Long.toString (7 samples, 0.04%)</title><rect x="70.5" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (4 samples, 0.02%)</title><rect x="70.6" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (13 samples, 0.08%)</title><rect x="71.1" y="723.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.1" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.07%)</title><rect x="71.2" y="707.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.2" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (7 samples, 0.04%)</title><rect x="71.6" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.6" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (7 samples, 0.04%)</title><rect x="71.6" y="675.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.06%)</title><rect x="72.2" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.06%)</title><rect x="72.2" y="707.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="72.3" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="72.6" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.6" y="686.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.02%)</title><rect x="73.0" y="723.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (209 samples, 1.29%)</title><rect x="73.2" y="723.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.2" y="734.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (4 samples, 0.02%)</title><rect x="73.5" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="73.5" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (4 samples, 0.02%)</title><rect x="73.8" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.8" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.02%)</title><rect x="73.8" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (93 samples, 0.57%)</title><rect x="74.1" y="707.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (37 samples, 0.23%)</title><rect x="74.2" y="691.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.2" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (36 samples, 0.22%)</title><rect x="74.3" y="675.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.3" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (28 samples, 0.17%)</title><rect x="74.7" y="659.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.7" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (28 samples, 0.17%)</title><rect x="74.7" y="643.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.7" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (11 samples, 0.07%)</title><rect x="75.9" y="627.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="78.9" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (21 samples, 0.13%)</title><rect x="77.0" y="691.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.0" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (19 samples, 0.12%)</title><rect x="77.1" y="675.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.1" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (12 samples, 0.07%)</title><rect x="77.5" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (6 samples, 0.04%)</title><rect x="77.9" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.9" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (12 samples, 0.07%)</title><rect x="78.5" y="691.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.5" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (9 samples, 0.06%)</title><rect x="78.7" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.7" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/225288726.test (21 samples, 0.13%)</title><rect x="79.4" y="691.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.4" y="702.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (19 samples, 0.12%)</title><rect x="79.5" y="675.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1810899357.test (18 samples, 0.11%)</title><rect x="79.6" y="659.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (18 samples, 0.11%)</title><rect x="79.6" y="643.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.6" y="654.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1970982267.test (18 samples, 0.11%)</title><rect x="79.6" y="627.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.6" y="638.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (18 samples, 0.11%)</title><rect x="79.6" y="611.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/73181251.test (18 samples, 0.11%)</title><rect x="79.6" y="595.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (18 samples, 0.11%)</title><rect x="79.6" y="579.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.05%)</title><rect x="79.6" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.04%)</title><rect x="79.6" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="79.8" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.06%)</title><rect x="80.2" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.06%)</title><rect x="80.2" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="80.4" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.4" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="80.5" y="515.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="83.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (14 samples, 0.09%)</title><rect x="80.9" y="707.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (14 samples, 0.09%)</title><rect x="80.9" y="691.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (14 samples, 0.09%)</title><rect x="80.9" y="675.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.09%)</title><rect x="80.9" y="659.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.09%)</title><rect x="80.9" y="643.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.03%)</title><rect x="81.2" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.03%)</title><rect x="81.5" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.03%)</title><rect x="81.5" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.5" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.02%)</title><rect x="81.6" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (90 samples, 0.55%)</title><rect x="81.9" y="707.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.9" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (90 samples, 0.55%)</title><rect x="81.9" y="691.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.9" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (89 samples, 0.55%)</title><rect x="82.0" y="675.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.0" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (12 samples, 0.07%)</title><rect x="82.0" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (12 samples, 0.07%)</title><rect x="82.0" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.0" y="654.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="82.0" y="627.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="85.0" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.04%)</title><rect x="82.4" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (8 samples, 0.05%)</title><rect x="82.9" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (68 samples, 0.42%)</title><rect x="83.5" y="659.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.5" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (66 samples, 0.41%)</title><rect x="83.6" y="643.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.6" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (65 samples, 0.40%)</title><rect x="83.7" y="627.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.03%)</title><rect x="83.8" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.03%)</title><rect x="83.8" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="84.2" y="611.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="84.2" y="595.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.2" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.get$Lambda (4 samples, 0.02%)</title><rect x="84.2" y="579.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.2" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (31 samples, 0.19%)</title><rect x="84.5" y="611.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.5" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (28 samples, 0.17%)</title><rect x="84.6" y="595.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.6" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (20 samples, 0.12%)</title><rect x="85.2" y="579.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.2" y="590.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="85.2" y="563.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="88.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="85.8" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/707161353.test (7 samples, 0.04%)</title><rect x="86.1" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.1" y="574.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4 samples, 0.02%)</title><rect x="86.8" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.8" y="622.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4 samples, 0.02%)</title><rect x="86.8" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (19 samples, 0.12%)</title><rect x="87.1" y="611.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (10 samples, 0.06%)</title><rect x="87.4" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.05%)</title><rect x="87.6" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.04%)</title><rect x="87.6" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.04%)</title><rect x="87.7" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.02%)</title><rect x="88.2" y="595.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (8 samples, 0.05%)</title><rect x="88.4" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.04%)</title><rect x="88.6" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.04%)</title><rect x="88.6" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/644345897.invoke (6 samples, 0.04%)</title><rect x="88.6" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="88.6" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (14 samples, 0.09%)</title><rect x="89.0" y="723.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equals (6 samples, 0.04%)</title><rect x="89.0" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (8 samples, 0.05%)</title><rect x="89.5" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.04%)</title><rect x="89.6" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.04%)</title><rect x="89.6" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/644345897.invoke (6 samples, 0.04%)</title><rect x="89.6" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.04%)</title><rect x="89.6" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (4 samples, 0.02%)</title><rect x="89.8" y="627.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (48 samples, 0.30%)</title><rect x="90.0" y="723.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.0" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.02%)</title><rect x="90.0" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.08%)</title><rect x="90.3" y="707.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.3" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.08%)</title><rect x="90.3" y="691.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="90.7" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.7" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="90.7" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (31 samples, 0.19%)</title><rect x="91.3" y="707.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (7 samples, 0.04%)</title><rect x="91.6" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (16 samples, 0.10%)</title><rect x="92.1" y="691.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (15 samples, 0.09%)</title><rect x="92.2" y="675.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (14 samples, 0.09%)</title><rect x="92.2" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (9 samples, 0.06%)</title><rect x="92.6" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.02%)</title><rect x="92.8" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.02%)</title><rect x="92.8" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.8" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.02%)</title><rect x="93.2" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.05%)</title><rect x="93.8" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.05%)</title><rect x="93.8" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (92 samples, 0.57%)</title><rect x="94.3" y="803.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.3" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="96.1" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="96.1" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (46 samples, 0.28%)</title><rect x="96.4" y="787.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.03%)</title><rect x="96.7" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (4 samples, 0.02%)</title><rect x="96.8" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.set (4 samples, 0.02%)</title><rect x="97.1" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (33 samples, 0.20%)</title><rect x="97.4" y="771.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (33 samples, 0.20%)</title><rect x="97.4" y="755.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (33 samples, 0.20%)</title><rect x="97.4" y="739.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (33 samples, 0.20%)</title><rect x="97.4" y="723.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (5 samples, 0.03%)</title><rect x="97.5" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (19 samples, 0.12%)</title><rect x="97.9" y="707.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (19 samples, 0.12%)</title><rect x="97.9" y="691.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (19 samples, 0.12%)</title><rect x="97.9" y="675.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (8 samples, 0.05%)</title><rect x="98.3" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.02%)</title><rect x="98.5" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (4 samples, 0.02%)</title><rect x="98.5" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5 samples, 0.03%)</title><rect x="98.9" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7 samples, 0.04%)</title><rect x="99.3" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (5 samples, 0.03%)</title><rect x="99.8" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.03%)</title><rect x="100.6" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.03%)</title><rect x="100.6" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.03%)</title><rect x="100.6" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (4 samples, 0.02%)</title><rect x="100.7" y="739.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.7" y="750.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (4 samples, 0.02%)</title><rect x="100.7" y="723.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (16 samples, 0.10%)</title><rect x="101.2" y="947.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (14 samples, 0.09%)</title><rect x="101.3" y="931.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.3" y="942.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.04%)</title><rect x="101.4" y="915.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="104.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (569 samples, 3.51%)</title><rect x="102.3" y="947.0" width="41.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.3" y="958.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (20 samples, 0.12%)</title><rect x="102.3" y="931.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (20 samples, 0.12%)</title><rect x="102.3" y="915.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (4 samples, 0.02%)</title><rect x="102.6" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.02%)</title><rect x="102.6" y="883.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$321/68142037.apply (8 samples, 0.05%)</title><rect x="102.9" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (7 samples, 0.04%)</title><rect x="103.0" y="883.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="103.5" y="899.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="103.5" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (13 samples, 0.08%)</title><rect x="103.8" y="931.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (13 samples, 0.08%)</title><rect x="103.8" y="915.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (9 samples, 0.06%)</title><rect x="103.8" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (9 samples, 0.06%)</title><rect x="103.8" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$319/1129528338.accept (5 samples, 0.03%)</title><rect x="104.1" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.02%)</title><rect x="104.4" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (536 samples, 3.30%)</title><rect x="104.7" y="931.0" width="39.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.7" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (536 samples, 3.30%)</title><rect x="104.7" y="915.0" width="39.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.7" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (535 samples, 3.30%)</title><rect x="104.7" y="899.0" width="38.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.7" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (138 samples, 0.85%)</title><rect x="105.6" y="883.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.6" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (27 samples, 0.17%)</title><rect x="110.3" y="867.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="113.3" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (26 samples, 0.16%)</title><rect x="110.3" y="851.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="113.3" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (23 samples, 0.14%)</title><rect x="110.4" y="835.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="113.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.12%)</title><rect x="110.6" y="819.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.12%)</title><rect x="110.6" y="803.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="113.6" y="814.0"></text>
</g>
<g>
<title>sys_futex (19 samples, 0.12%)</title><rect x="110.7" y="787.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="113.7" y="798.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.12%)</title><rect x="110.7" y="771.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.7" y="782.0"></text>
</g>
<g>
<title>futex_wake_op (19 samples, 0.12%)</title><rect x="110.7" y="755.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.7" y="766.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.12%)</title><rect x="110.7" y="739.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="113.7" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.11%)</title><rect x="110.8" y="723.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="113.8" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (18 samples, 0.11%)</title><rect x="110.8" y="707.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="113.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="112.3" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="112.3" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (4 samples, 0.02%)</title><rect x="113.4" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (6 samples, 0.04%)</title><rect x="114.8" y="867.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (6 samples, 0.04%)</title><rect x="114.8" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (4 samples, 0.02%)</title><rect x="115.3" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (24 samples, 0.15%)</title><rect x="115.6" y="883.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (11 samples, 0.07%)</title><rect x="116.5" y="867.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (8 samples, 0.05%)</title><rect x="116.7" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (4 samples, 0.02%)</title><rect x="117.4" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (130 samples, 0.80%)</title><rect x="117.7" y="883.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (119 samples, 0.73%)</title><rect x="117.7" y="867.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.7" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (54 samples, 0.33%)</title><rect x="118.7" y="851.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="121.7" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (53 samples, 0.33%)</title><rect x="118.8" y="835.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="121.8" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (51 samples, 0.31%)</title><rect x="118.9" y="819.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="121.9" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (47 samples, 0.29%)</title><rect x="119.1" y="803.0" width="3.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="122.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (5 samples, 0.03%)</title><rect x="122.6" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.6" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="122.7" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="125.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (46 samples, 0.28%)</title><rect x="123.0" y="851.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (41 samples, 0.25%)</title><rect x="123.3" y="835.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (39 samples, 0.24%)</title><rect x="123.3" y="819.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (39 samples, 0.24%)</title><rect x="123.3" y="803.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.3" y="814.0"></text>
</g>
<g>
<title>java/util/Objects.equals (39 samples, 0.24%)</title><rect x="123.3" y="787.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.3" y="798.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (36 samples, 0.22%)</title><rect x="123.6" y="771.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.6" y="782.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (28 samples, 0.17%)</title><rect x="124.1" y="755.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.1" y="766.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (13 samples, 0.08%)</title><rect x="125.2" y="739.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.2" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (4 samples, 0.02%)</title><rect x="125.9" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (10 samples, 0.06%)</title><rect x="126.3" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (212 samples, 1.31%)</title><rect x="127.1" y="883.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1610702581.linkToTargetMethod (4 samples, 0.02%)</title><rect x="127.1" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="127.1" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.1" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (208 samples, 1.28%)</title><rect x="127.4" y="867.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.4" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (143 samples, 0.88%)</title><rect x="127.8" y="851.0" width="10.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="130.8" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (5 samples, 0.03%)</title><rect x="128.5" y="835.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="131.5" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (7 samples, 0.04%)</title><rect x="129.2" y="835.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="132.2" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (7 samples, 0.04%)</title><rect x="129.2" y="819.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="132.2" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (36 samples, 0.22%)</title><rect x="130.0" y="835.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="133.0" y="846.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (6 samples, 0.04%)</title><rect x="131.3" y="819.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="134.3" y="830.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (4 samples, 0.02%)</title><rect x="131.9" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="134.9" y="830.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (6 samples, 0.04%)</title><rect x="132.2" y="819.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="135.2" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (8 samples, 0.05%)</title><rect x="132.9" y="835.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="135.9" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (5 samples, 0.03%)</title><rect x="133.5" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="136.5" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (37 samples, 0.23%)</title><rect x="134.0" y="835.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="137.0" y="846.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (4 samples, 0.02%)</title><rect x="134.5" y="819.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="137.5" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (24 samples, 0.15%)</title><rect x="134.8" y="819.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="137.8" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (14 samples, 0.09%)</title><rect x="134.8" y="803.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="137.8" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.02%)</title><rect x="135.6" y="787.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="138.6" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.03%)</title><rect x="135.8" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="138.8" y="814.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (4 samples, 0.02%)</title><rect x="136.2" y="803.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="139.2" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (22 samples, 0.14%)</title><rect x="136.6" y="835.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="139.6" y="846.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (7 samples, 0.04%)</title><rect x="137.0" y="819.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="140.0" y="830.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (4 samples, 0.02%)</title><rect x="137.2" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="140.2" y="814.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (9 samples, 0.06%)</title><rect x="137.6" y="819.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="140.6" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (7 samples, 0.04%)</title><rect x="137.7" y="803.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="140.7" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.02%)</title><rect x="137.7" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="140.7" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.02%)</title><rect x="137.7" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="140.7" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.03%)</title><rect x="138.5" y="851.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="141.5" y="862.0"></text>
</g>
<g>
<title>call_stub (8 samples, 0.05%)</title><rect x="139.3" y="851.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="142.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$246/1776079527.run (34 samples, 0.21%)</title><rect x="139.9" y="851.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (31 samples, 0.19%)</title><rect x="140.1" y="835.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.1" y="846.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (30 samples, 0.18%)</title><rect x="140.2" y="819.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.2" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (28 samples, 0.17%)</title><rect x="140.4" y="803.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.4" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (28 samples, 0.17%)</title><rect x="140.4" y="787.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.4" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (28 samples, 0.17%)</title><rect x="140.4" y="771.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.4" y="782.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (24 samples, 0.15%)</title><rect x="140.6" y="755.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (20 samples, 0.12%)</title><rect x="140.9" y="739.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (12 samples, 0.07%)</title><rect x="141.3" y="723.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (12 samples, 0.07%)</title><rect x="141.3" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (6 samples, 0.04%)</title><rect x="141.6" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (6 samples, 0.04%)</title><rect x="141.6" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (9 samples, 0.06%)</title><rect x="142.5" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (8 samples, 0.05%)</title><rect x="142.6" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.04%)</title><rect x="143.2" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.04%)</title><rect x="143.2" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (6 samples, 0.04%)</title><rect x="143.2" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (6 samples, 0.04%)</title><rect x="143.2" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.2" y="846.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (5 samples, 0.03%)</title><rect x="143.3" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.3" y="830.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (5 samples, 0.03%)</title><rect x="143.3" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (129 samples, 0.79%)</title><rect x="143.7" y="995.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.7" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (34 samples, 0.21%)</title><rect x="144.3" y="979.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="147.3" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (33 samples, 0.20%)</title><rect x="144.4" y="963.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="147.4" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (29 samples, 0.18%)</title><rect x="144.6" y="947.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="147.6" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (25 samples, 0.15%)</title><rect x="144.7" y="931.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="147.7" y="942.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (26 samples, 0.16%)</title><rect x="146.7" y="979.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.16%)</title><rect x="146.7" y="963.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.7" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (7 samples, 0.04%)</title><rect x="147.0" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.0" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (10 samples, 0.06%)</title><rect x="147.5" y="947.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (10 samples, 0.06%)</title><rect x="147.5" y="931.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (10 samples, 0.06%)</title><rect x="147.5" y="915.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (4 samples, 0.02%)</title><rect x="148.3" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (60 samples, 0.37%)</title><rect x="148.6" y="979.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.6" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (60 samples, 0.37%)</title><rect x="148.6" y="963.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.6" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.09%)</title><rect x="148.6" y="947.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="151.6" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 0.09%)</title><rect x="148.6" y="931.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="151.6" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.07%)</title><rect x="148.7" y="915.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="151.7" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (4 samples, 0.02%)</title><rect x="148.8" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="151.8" y="910.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.04%)</title><rect x="149.1" y="899.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="152.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (46 samples, 0.28%)</title><rect x="149.7" y="947.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.7" y="958.0"></text>
</g>
<g>
<title>__GI___write (42 samples, 0.26%)</title><rect x="149.8" y="931.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="152.8" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.22%)</title><rect x="150.2" y="915.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="153.2" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.22%)</title><rect x="150.2" y="899.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="153.2" y="910.0"></text>
</g>
<g>
<title>sys_write (33 samples, 0.20%)</title><rect x="150.5" y="883.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="153.5" y="894.0"></text>
</g>
<g>
<title>vfs_write (31 samples, 0.19%)</title><rect x="150.6" y="867.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="153.6" y="878.0"></text>
</g>
<g>
<title>__vfs_write (26 samples, 0.16%)</title><rect x="150.7" y="851.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="153.7" y="862.0"></text>
</g>
<g>
<title>new_sync_write (26 samples, 0.16%)</title><rect x="150.7" y="835.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="153.7" y="846.0"></text>
</g>
<g>
<title>pipe_write (24 samples, 0.15%)</title><rect x="150.8" y="819.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="153.8" y="830.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.09%)</title><rect x="150.8" y="803.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="153.8" y="814.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.09%)</title><rect x="150.9" y="787.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="153.9" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.09%)</title><rect x="150.9" y="771.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="153.9" y="782.0"></text>
</g>
<g>
<title>copy_page_from_iter (4 samples, 0.02%)</title><rect x="152.0" y="803.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.0" y="814.0"></text>
</g>
<g>
<title>file_update_time (4 samples, 0.02%)</title><rect x="152.3" y="803.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="155.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (85 samples, 0.52%)</title><rect x="153.1" y="995.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.1" y="1006.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (23 samples, 0.14%)</title><rect x="153.4" y="979.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.03%)</title><rect x="154.2" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (56 samples, 0.35%)</title><rect x="155.0" y="979.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (4 samples, 0.02%)</title><rect x="155.1" y="963.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (51 samples, 0.31%)</title><rect x="155.4" y="963.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.4" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.04%)</title><rect x="156.6" y="947.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="159.6" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.04%)</title><rect x="156.6" y="931.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="159.6" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.04%)</title><rect x="156.6" y="915.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="159.6" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (5 samples, 0.03%)</title><rect x="156.6" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="159.6" y="910.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (29 samples, 0.18%)</title><rect x="157.0" y="947.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.0" y="958.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (7 samples, 0.04%)</title><rect x="157.0" y="931.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.0" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (7 samples, 0.04%)</title><rect x="157.0" y="915.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.0" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (22 samples, 0.14%)</title><rect x="157.5" y="931.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (21 samples, 0.13%)</title><rect x="157.6" y="915.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.6" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.03%)</title><rect x="157.7" y="899.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="160.7" y="910.0"></text>
</g>
<g>
<title>JVM_IHashCode (10 samples, 0.06%)</title><rect x="158.1" y="899.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="161.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (31 samples, 0.19%)</title><rect x="159.3" y="995.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (29 samples, 0.18%)</title><rect x="159.4" y="979.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (26 samples, 0.16%)</title><rect x="159.6" y="963.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.6" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.now (24 samples, 0.15%)</title><rect x="159.6" y="947.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.6" y="958.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (24 samples, 0.15%)</title><rect x="159.6" y="931.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (24 samples, 0.15%)</title><rect x="159.6" y="915.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.6" y="926.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (22 samples, 0.14%)</title><rect x="159.8" y="899.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="162.8" y="910.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.04%)</title><rect x="160.3" y="883.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="163.3" y="894.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (8 samples, 0.05%)</title><rect x="160.8" y="883.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="163.8" y="894.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.04%)</title><rect x="160.9" y="867.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="163.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (678 samples, 4.18%)</title><rect x="161.9" y="1091.0" width="49.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="164.9" y="1102.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (598 samples, 3.68%)</title><rect x="162.1" y="1075.0" width="43.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.1" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.05%)</title><rect x="162.5" y="1059.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (8 samples, 0.05%)</title><rect x="162.5" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (7 samples, 0.04%)</title><rect x="163.1" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.04%)</title><rect x="163.2" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$228/1550578698.accept (577 samples, 3.55%)</title><rect x="163.6" y="1059.0" width="42.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.6" y="1070.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$executeMethod$5 (577 samples, 3.55%)</title><rect x="163.6" y="1043.0" width="42.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.6" y="1054.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.02%)</title><rect x="163.6" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (573 samples, 3.53%)</title><rect x="163.9" y="1027.0" width="41.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.9" y="1038.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (573 samples, 3.53%)</title><rect x="163.9" y="1011.0" width="41.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.9" y="1022.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.02%)</title><rect x="164.0" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.02%)</title><rect x="164.0" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.02%)</title><rect x="164.0" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.0" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (565 samples, 3.48%)</title><rect x="164.3" y="995.0" width="41.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.3" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.09%)</title><rect x="164.3" y="979.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.3" y="990.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.06%)</title><rect x="164.7" y="963.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.7" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.02%)</title><rect x="164.8" y="947.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.8" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.02%)</title><rect x="165.1" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.1" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.02%)</title><rect x="165.1" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.1" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.02%)</title><rect x="165.1" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (549 samples, 3.38%)</title><rect x="165.4" y="979.0" width="39.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.4" y="990.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (548 samples, 3.38%)</title><rect x="165.5" y="963.0" width="39.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.5" y="974.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (542 samples, 3.34%)</title><rect x="165.7" y="947.0" width="39.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.7" y="958.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (541 samples, 3.33%)</title><rect x="165.8" y="931.0" width="39.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.8" y="942.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (17 samples, 0.10%)</title><rect x="165.9" y="915.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="168.9" y="926.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.03%)</title><rect x="167.2" y="915.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="170.2" y="926.0"></text>
</g>
<g>
<title>send (516 samples, 3.18%)</title><rect x="167.5" y="915.0" width="37.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="170.5" y="926.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (504 samples, 3.11%)</title><rect x="168.4" y="899.0" width="36.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="171.4" y="910.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (504 samples, 3.11%)</title><rect x="168.4" y="883.0" width="36.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="171.4" y="894.0">do_..</text>
</g>
<g>
<title>exit_to_usermode_loop (11 samples, 0.07%)</title><rect x="169.4" y="867.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="172.4" y="878.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.06%)</title><rect x="169.4" y="851.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="172.4" y="862.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.06%)</title><rect x="169.5" y="835.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="172.5" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.05%)</title><rect x="169.6" y="819.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="172.6" y="830.0"></text>
</g>
<g>
<title>sys_sendto (479 samples, 2.95%)</title><rect x="170.2" y="867.0" width="34.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="173.2" y="878.0">sy..</text>
</g>
<g>
<title>SYSC_sendto (477 samples, 2.94%)</title><rect x="170.2" y="851.0" width="34.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="173.2" y="862.0">SY..</text>
</g>
<g>
<title>sock_sendmsg (471 samples, 2.90%)</title><rect x="170.5" y="835.0" width="34.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="173.5" y="846.0">so..</text>
</g>
<g>
<title>inet_sendmsg (462 samples, 2.85%)</title><rect x="170.6" y="819.0" width="33.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="173.6" y="830.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (460 samples, 2.83%)</title><rect x="170.7" y="803.0" width="33.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="173.7" y="814.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (443 samples, 2.73%)</title><rect x="171.7" y="787.0" width="32.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="174.7" y="798.0">tc..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.03%)</title><rect x="172.6" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="175.6" y="782.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.03%)</title><rect x="172.6" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="175.6" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (13 samples, 0.08%)</title><rect x="173.5" y="771.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="176.5" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (12 samples, 0.07%)</title><rect x="173.5" y="755.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="176.5" y="766.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (5 samples, 0.03%)</title><rect x="173.6" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="176.6" y="750.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.03%)</title><rect x="173.6" y="723.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="176.6" y="734.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.03%)</title><rect x="174.0" y="739.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="177.0" y="750.0"></text>
</g>
<g>
<title>tcp_push (392 samples, 2.42%)</title><rect x="174.7" y="771.0" width="28.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="177.7" y="782.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (390 samples, 2.40%)</title><rect x="174.7" y="755.0" width="28.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="177.7" y="766.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (386 samples, 2.38%)</title><rect x="175.0" y="739.0" width="28.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="178.0" y="750.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (365 samples, 2.25%)</title><rect x="175.3" y="723.0" width="26.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="178.3" y="734.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (352 samples, 2.17%)</title><rect x="175.9" y="707.0" width="25.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="178.9" y="718.0">i..</text>
</g>
<g>
<title>ip_local_out (348 samples, 2.14%)</title><rect x="176.0" y="691.0" width="25.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="179.0" y="702.0">i..</text>
</g>
<g>
<title>__ip_local_out (72 samples, 0.44%)</title><rect x="176.2" y="675.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="179.2" y="686.0"></text>
</g>
<g>
<title>nf_hook_slow (59 samples, 0.36%)</title><rect x="177.1" y="659.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="180.1" y="670.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.02%)</title><rect x="177.4" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="180.4" y="654.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.02%)</title><rect x="177.4" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="180.4" y="638.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (5 samples, 0.03%)</title><rect x="177.7" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="180.7" y="654.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.03%)</title><rect x="177.7" y="627.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="180.7" y="638.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (42 samples, 0.26%)</title><rect x="178.3" y="643.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="181.3" y="654.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (33 samples, 0.20%)</title><rect x="178.7" y="627.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="181.7" y="638.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (8 samples, 0.05%)</title><rect x="179.3" y="611.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="182.3" y="622.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (4 samples, 0.02%)</title><rect x="179.9" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="182.9" y="622.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (6 samples, 0.04%)</title><rect x="180.5" y="611.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="183.5" y="622.0"></text>
</g>
<g>
<title>ip_output (269 samples, 1.66%)</title><rect x="181.4" y="675.0" width="19.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="184.4" y="686.0"></text>
</g>
<g>
<title>ip_finish_output (258 samples, 1.59%)</title><rect x="181.5" y="659.0" width="18.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="184.5" y="670.0"></text>
</g>
<g>
<title>ip_finish_output2 (254 samples, 1.56%)</title><rect x="181.8" y="643.0" width="18.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="184.8" y="654.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (219 samples, 1.35%)</title><rect x="182.6" y="627.0" width="15.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="185.6" y="638.0"></text>
</g>
<g>
<title>do_softirq.part.17 (219 samples, 1.35%)</title><rect x="182.6" y="611.0" width="15.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="185.6" y="622.0"></text>
</g>
<g>
<title>do_softirq_own_stack (218 samples, 1.34%)</title><rect x="182.7" y="595.0" width="15.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="185.7" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (217 samples, 1.34%)</title><rect x="182.7" y="579.0" width="15.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="185.7" y="590.0"></text>
</g>
<g>
<title>net_rx_action (212 samples, 1.31%)</title><rect x="182.9" y="563.0" width="15.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="185.9" y="574.0"></text>
</g>
<g>
<title>process_backlog (208 samples, 1.28%)</title><rect x="183.2" y="547.0" width="15.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="186.2" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb (207 samples, 1.28%)</title><rect x="183.2" y="531.0" width="15.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="186.2" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (207 samples, 1.28%)</title><rect x="183.2" y="515.0" width="15.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="186.2" y="526.0"></text>
</g>
<g>
<title>ip_rcv (201 samples, 1.24%)</title><rect x="183.6" y="499.0" width="14.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="186.6" y="510.0"></text>
</g>
<g>
<title>ip_rcv_finish (185 samples, 1.14%)</title><rect x="183.9" y="483.0" width="13.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="186.9" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver (183 samples, 1.13%)</title><rect x="184.0" y="467.0" width="13.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.0" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (171 samples, 1.05%)</title><rect x="184.0" y="451.0" width="12.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="187.0" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (167 samples, 1.03%)</title><rect x="184.3" y="435.0" width="12.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="187.3" y="446.0"></text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.04%)</title><rect x="184.5" y="419.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.5" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (155 samples, 0.95%)</title><rect x="185.1" y="419.0" width="11.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="188.1" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (153 samples, 0.94%)</title><rect x="185.2" y="403.0" width="11.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="188.2" y="414.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (13 samples, 0.08%)</title><rect x="185.6" y="387.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="188.6" y="398.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (10 samples, 0.06%)</title><rect x="185.8" y="371.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="188.8" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.06%)</title><rect x="185.9" y="355.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="188.9" y="366.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.06%)</title><rect x="185.9" y="339.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.9" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.06%)</title><rect x="185.9" y="323.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="188.9" y="334.0"></text>
</g>
<g>
<title>tcp_ack (49 samples, 0.30%)</title><rect x="186.9" y="387.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.9" y="398.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (26 samples, 0.16%)</title><rect x="188.4" y="371.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="191.4" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.10%)</title><rect x="188.6" y="355.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="191.6" y="366.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.02%)</title><rect x="188.7" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="191.7" y="350.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.07%)</title><rect x="189.0" y="339.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="192.0" y="350.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.07%)</title><rect x="189.0" y="323.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="192.0" y="334.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.06%)</title><rect x="189.1" y="307.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.1" y="318.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.06%)</title><rect x="189.1" y="291.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="192.1" y="302.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.03%)</title><rect x="189.4" y="275.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="192.4" y="286.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (5 samples, 0.03%)</title><rect x="189.9" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="192.9" y="366.0"></text>
</g>
<g>
<title>tcp_data_queue (77 samples, 0.47%)</title><rect x="190.4" y="387.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="193.4" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (73 samples, 0.45%)</title><rect x="190.7" y="371.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.7" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (70 samples, 0.43%)</title><rect x="190.9" y="355.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="193.9" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (70 samples, 0.43%)</title><rect x="190.9" y="339.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="193.9" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (70 samples, 0.43%)</title><rect x="190.9" y="323.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="193.9" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.04%)</title><rect x="196.7" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="199.7" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="197.6" y="483.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="200.6" y="494.0"></text>
</g>
<g>
<title>dev_queue_xmit (23 samples, 0.14%)</title><rect x="198.5" y="627.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="201.5" y="638.0"></text>
</g>
<g>
<title>__dev_queue_xmit (22 samples, 0.14%)</title><rect x="198.5" y="611.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="201.5" y="622.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.06%)</title><rect x="198.9" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="201.9" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.04%)</title><rect x="199.0" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="202.0" y="590.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.04%)</title><rect x="199.7" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="202.7" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.04%)</title><rect x="200.5" y="659.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="203.5" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="201.1" y="675.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="204.1" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.07%)</title><rect x="202.0" y="723.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.0" y="734.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.06%)</title><rect x="202.1" y="707.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="205.1" y="718.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (9 samples, 0.06%)</title><rect x="202.1" y="691.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="205.1" y="702.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.06%)</title><rect x="202.1" y="675.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.1" y="686.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.06%)</title><rect x="202.1" y="659.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="205.1" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="202.2" y="643.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="205.2" y="654.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.06%)</title><rect x="203.2" y="771.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="206.2" y="782.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.06%)</title><rect x="203.2" y="755.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="206.2" y="766.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.05%)</title><rect x="204.2" y="819.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="207.2" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.05%)</title><rect x="204.2" y="803.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="207.2" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.05%)</title><rect x="204.2" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="207.2" y="798.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.03%)</title><rect x="204.4" y="771.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="207.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (77 samples, 0.47%)</title><rect x="205.6" y="1075.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (9 samples, 0.06%)</title><rect x="205.8" y="1059.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.06%)</title><rect x="205.8" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (6 samples, 0.04%)</title><rect x="206.0" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionally (4 samples, 0.02%)</title><rect x="206.1" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (4 samples, 0.02%)</title><rect x="206.1" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.02%)</title><rect x="206.1" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.1" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.02%)</title><rect x="206.1" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (65 samples, 0.40%)</title><rect x="206.4" y="1059.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (16 samples, 0.10%)</title><rect x="206.5" y="1043.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (16 samples, 0.10%)</title><rect x="206.5" y="1027.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="209.5" y="1038.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="206.8" y="1011.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="209.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$204/1048669819.accept (4 samples, 0.02%)</title><rect x="207.3" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$204/1048669819.accept (48 samples, 0.30%)</title><rect x="207.7" y="1043.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$collect$2 (47 samples, 0.29%)</title><rect x="207.7" y="1027.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.7" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.05%)</title><rect x="208.0" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.0" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.05%)</title><rect x="208.0" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.0" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.04%)</title><rect x="208.1" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.1" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="208.2" y="963.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (35 samples, 0.22%)</title><rect x="208.6" y="1011.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (35 samples, 0.22%)</title><rect x="208.6" y="995.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (32 samples, 0.20%)</title><rect x="208.8" y="979.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (32 samples, 0.20%)</title><rect x="208.8" y="963.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.03%)</title><rect x="208.8" y="947.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.03%)</title><rect x="208.8" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$221/654824253.accept (27 samples, 0.17%)</title><rect x="209.2" y="947.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$merge$0 (26 samples, 0.16%)</title><rect x="209.3" y="931.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (17 samples, 0.10%)</title><rect x="209.6" y="915.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.10%)</title><rect x="209.6" y="899.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (13 samples, 0.08%)</title><rect x="209.9" y="883.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.05%)</title><rect x="210.2" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.05%)</title><rect x="210.2" y="851.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.03%)</title><rect x="210.4" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (27 samples, 0.17%)</title><rect x="211.3" y="1091.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (27 samples, 0.17%)</title><rect x="211.3" y="1075.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (27 samples, 0.17%)</title><rect x="211.3" y="1059.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="214.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (19 samples, 0.12%)</title><rect x="211.9" y="1043.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (19 samples, 0.12%)</title><rect x="211.9" y="1027.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (19 samples, 0.12%)</title><rect x="211.9" y="1011.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.02%)</title><rect x="213.0" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (11 samples, 0.07%)</title><rect x="213.3" y="1091.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.07%)</title><rect x="213.3" y="1075.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (7 samples, 0.04%)</title><rect x="213.6" y="1059.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (7 samples, 0.04%)</title><rect x="213.6" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,799 samples, 11.08%)</title><rect x="214.1" y="1091.0" width="130.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.1" y="1102.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (788 samples, 4.85%)</title><rect x="215.7" y="1075.0" width="57.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.7" y="1086.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (644 samples, 3.97%)</title><rect x="216.7" y="1059.0" width="46.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.7" y="1070.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (44 samples, 0.27%)</title><rect x="217.1" y="1043.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.1" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (14 samples, 0.09%)</title><rect x="218.0" y="1027.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="221.0" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (12 samples, 0.07%)</title><rect x="218.1" y="1011.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="221.1" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (12 samples, 0.07%)</title><rect x="218.1" y="995.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="221.1" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (10 samples, 0.06%)</title><rect x="218.2" y="979.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="221.2" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.04%)</title><rect x="218.4" y="963.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="221.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (16 samples, 0.10%)</title><rect x="219.0" y="1027.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (16 samples, 0.10%)</title><rect x="219.0" y="1011.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (20 samples, 0.12%)</title><rect x="220.4" y="1043.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.02%)</title><rect x="220.5" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.02%)</title><rect x="220.5" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (14 samples, 0.09%)</title><rect x="220.8" y="1027.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (14 samples, 0.09%)</title><rect x="220.8" y="1011.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.03%)</title><rect x="221.5" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.03%)</title><rect x="221.5" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.03%)</title><rect x="221.5" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (124 samples, 0.76%)</title><rect x="221.8" y="1043.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (123 samples, 0.76%)</title><rect x="221.9" y="1027.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (120 samples, 0.74%)</title><rect x="222.0" y="1011.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (5 samples, 0.03%)</title><rect x="222.1" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (114 samples, 0.70%)</title><rect x="222.4" y="995.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (114 samples, 0.70%)</title><rect x="222.4" y="979.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.4" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (20 samples, 0.12%)</title><rect x="222.9" y="963.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="225.9" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.04%)</title><rect x="223.4" y="947.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="226.4" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.02%)</title><rect x="224.1" y="947.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="227.1" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (86 samples, 0.53%)</title><rect x="224.4" y="963.0" width="6.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="227.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 0.47%)</title><rect x="225.1" y="947.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="228.1" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (75 samples, 0.46%)</title><rect x="225.1" y="931.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="228.1" y="942.0"></text>
</g>
<g>
<title>sys_futex (70 samples, 0.43%)</title><rect x="225.5" y="915.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="228.5" y="926.0"></text>
</g>
<g>
<title>do_futex (69 samples, 0.43%)</title><rect x="225.5" y="899.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="228.5" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.03%)</title><rect x="225.5" y="883.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="228.5" y="894.0"></text>
</g>
<g>
<title>futex_wake_op (63 samples, 0.39%)</title><rect x="225.8" y="883.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="228.8" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.04%)</title><rect x="226.6" y="867.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="229.6" y="878.0"></text>
</g>
<g>
<title>wake_up_q (45 samples, 0.28%)</title><rect x="227.2" y="867.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="230.2" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (45 samples, 0.28%)</title><rect x="227.2" y="851.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="230.2" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (45 samples, 0.28%)</title><rect x="227.2" y="835.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="230.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (4 samples, 0.02%)</title><rect x="230.9" y="1043.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="233.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (4 samples, 0.02%)</title><rect x="230.9" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (445 samples, 2.74%)</title><rect x="231.2" y="1043.0" width="32.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.2" y="1054.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (445 samples, 2.74%)</title><rect x="231.2" y="1027.0" width="32.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.2" y="1038.0">jd..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.03%)</title><rect x="231.2" y="1011.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="234.2" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (429 samples, 2.64%)</title><rect x="231.9" y="1011.0" width="31.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="234.9" y="1022.0">Un..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.03%)</title><rect x="232.9" y="995.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="235.9" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (45 samples, 0.28%)</title><rect x="233.4" y="995.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="236.4" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (10 samples, 0.06%)</title><rect x="235.4" y="979.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="238.4" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.02%)</title><rect x="236.3" y="979.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="239.3" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.03%)</title><rect x="236.8" y="995.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="239.8" y="1006.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (5 samples, 0.03%)</title><rect x="237.3" y="995.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="240.3" y="1006.0"></text>
</g>
<g>
<title>__lll_unlock_wake (71 samples, 0.44%)</title><rect x="237.6" y="995.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="240.6" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.19%)</title><rect x="240.5" y="979.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="243.5" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.18%)</title><rect x="240.5" y="963.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="243.5" y="974.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.08%)</title><rect x="241.8" y="947.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.8" y="958.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.07%)</title><rect x="241.9" y="931.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="244.9" y="942.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.06%)</title><rect x="241.9" y="915.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="244.9" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_wait (250 samples, 1.54%)</title><rect x="242.8" y="995.0" width="18.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="245.8" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (182 samples, 1.12%)</title><rect x="247.7" y="979.0" width="13.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="250.7" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (179 samples, 1.10%)</title><rect x="247.7" y="963.0" width="13.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="250.7" y="974.0"></text>
</g>
<g>
<title>sys_futex (156 samples, 0.96%)</title><rect x="249.4" y="947.0" width="11.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="252.4" y="958.0"></text>
</g>
<g>
<title>do_futex (150 samples, 0.92%)</title><rect x="249.8" y="931.0" width="10.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="252.8" y="942.0"></text>
</g>
<g>
<title>futex_wait (141 samples, 0.87%)</title><rect x="250.3" y="915.0" width="10.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="253.3" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (109 samples, 0.67%)</title><rect x="250.6" y="899.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="253.6" y="910.0"></text>
</g>
<g>
<title>schedule (98 samples, 0.60%)</title><rect x="251.4" y="883.0" width="7.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="254.4" y="894.0"></text>
</g>
<g>
<title>__schedule (93 samples, 0.57%)</title><rect x="251.8" y="867.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="254.8" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (77 samples, 0.47%)</title><rect x="253.0" y="851.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="256.0" y="862.0"></text>
</g>
<g>
<title>futex_wait_setup (23 samples, 0.14%)</title><rect x="258.6" y="899.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="261.6" y="910.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.02%)</title><rect x="259.2" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="262.2" y="894.0"></text>
</g>
<g>
<title>get_futex_value_locked (10 samples, 0.06%)</title><rect x="259.5" y="883.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="262.5" y="894.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.02%)</title><rect x="260.2" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="263.2" y="910.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.02%)</title><rect x="261.2" y="995.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="264.2" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.02%)</title><rect x="261.7" y="995.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="264.7" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (7 samples, 0.04%)</title><rect x="262.3" y="995.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="265.3" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.03%)</title><rect x="263.1" y="1011.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="266.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (15 samples, 0.09%)</title><rect x="263.5" y="1059.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (14 samples, 0.09%)</title><rect x="263.6" y="1043.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7 samples, 0.04%)</title><rect x="263.7" y="1027.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.03%)</title><rect x="263.8" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.03%)</title><rect x="263.8" y="995.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.03%)</title><rect x="263.8" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.8" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.03%)</title><rect x="263.8" y="963.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="266.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.04%)</title><rect x="264.2" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.04%)</title><rect x="264.2" y="1011.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.03%)</title><rect x="264.2" y="995.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.03%)</title><rect x="264.2" y="979.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="267.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.03%)</title><rect x="264.2" y="963.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (115 samples, 0.71%)</title><rect x="264.6" y="1059.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (115 samples, 0.71%)</title><rect x="264.6" y="1043.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="267.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (115 samples, 0.71%)</title><rect x="264.6" y="1027.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (115 samples, 0.71%)</title><rect x="264.6" y="1011.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="267.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (114 samples, 0.70%)</title><rect x="264.7" y="995.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.7" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (23 samples, 0.14%)</title><rect x="265.1" y="979.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="268.1" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (10 samples, 0.06%)</title><rect x="265.5" y="963.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="268.5" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (85 samples, 0.52%)</title><rect x="266.8" y="979.0" width="6.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="269.8" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 0.43%)</title><rect x="267.9" y="963.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="270.9" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (69 samples, 0.43%)</title><rect x="267.9" y="947.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="270.9" y="958.0"></text>
</g>
<g>
<title>sys_futex (65 samples, 0.40%)</title><rect x="268.2" y="931.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="271.2" y="942.0"></text>
</g>
<g>
<title>do_futex (65 samples, 0.40%)</title><rect x="268.2" y="915.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="271.2" y="926.0"></text>
</g>
<g>
<title>futex_wake_op (61 samples, 0.38%)</title><rect x="268.4" y="899.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="271.4" y="910.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.03%)</title><rect x="269.0" y="883.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="272.0" y="894.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 0.30%)</title><rect x="269.3" y="883.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="272.3" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (49 samples, 0.30%)</title><rect x="269.3" y="867.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="272.3" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (49 samples, 0.30%)</title><rect x="269.3" y="851.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (988 samples, 6.09%)</title><rect x="273.0" y="1075.0" width="71.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.0" y="1086.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (588 samples, 3.62%)</title><rect x="273.4" y="1059.0" width="42.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.4" y="1070.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (85 samples, 0.52%)</title><rect x="273.6" y="1043.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (58 samples, 0.36%)</title><rect x="275.4" y="1027.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (8 samples, 0.05%)</title><rect x="277.3" y="1011.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (24 samples, 0.15%)</title><rect x="277.9" y="1011.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (24 samples, 0.15%)</title><rect x="277.9" y="995.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (23 samples, 0.14%)</title><rect x="279.8" y="1043.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.05%)</title><rect x="279.9" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.05%)</title><rect x="279.9" y="1011.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.05%)</title><rect x="279.9" y="995.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.9" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.05%)</title><rect x="279.9" y="979.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="282.9" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.03%)</title><rect x="280.1" y="963.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="283.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (12 samples, 0.07%)</title><rect x="280.6" y="1027.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (12 samples, 0.07%)</title><rect x="280.6" y="1011.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (144 samples, 0.89%)</title><rect x="281.5" y="1043.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (144 samples, 0.89%)</title><rect x="281.5" y="1027.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (134 samples, 0.83%)</title><rect x="282.0" y="1011.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (117 samples, 0.72%)</title><rect x="283.2" y="995.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (117 samples, 0.72%)</title><rect x="283.2" y="979.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.2" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (29 samples, 0.18%)</title><rect x="283.5" y="963.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="286.5" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.02%)</title><rect x="283.9" y="947.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="286.9" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.03%)</title><rect x="284.2" y="947.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="287.2" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (9 samples, 0.06%)</title><rect x="284.7" y="947.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="287.7" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.02%)</title><rect x="285.3" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="288.3" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (84 samples, 0.52%)</title><rect x="285.6" y="963.0" width="6.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="288.6" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 0.44%)</title><rect x="286.5" y="947.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="289.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 0.44%)</title><rect x="286.5" y="931.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.5" y="942.0"></text>
</g>
<g>
<title>sys_futex (64 samples, 0.39%)</title><rect x="287.1" y="915.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="290.1" y="926.0"></text>
</g>
<g>
<title>do_futex (64 samples, 0.39%)</title><rect x="287.1" y="899.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="290.1" y="910.0"></text>
</g>
<g>
<title>futex_wake_op (60 samples, 0.37%)</title><rect x="287.3" y="883.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="290.3" y="894.0"></text>
</g>
<g>
<title>wake_up_q (54 samples, 0.33%)</title><rect x="287.7" y="867.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="290.7" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (52 samples, 0.32%)</title><rect x="287.9" y="851.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.9" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (52 samples, 0.32%)</title><rect x="287.9" y="835.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="290.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (332 samples, 2.05%)</title><rect x="292.0" y="1043.0" width="24.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.0" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (332 samples, 2.05%)</title><rect x="292.0" y="1027.0" width="24.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.0" y="1038.0">j..</text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.02%)</title><rect x="292.6" y="1011.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="295.6" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (4 samples, 0.02%)</title><rect x="292.9" y="1011.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="295.9" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (309 samples, 1.90%)</title><rect x="293.2" y="1011.0" width="22.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="296.2" y="1022.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (33 samples, 0.20%)</title><rect x="294.0" y="995.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="297.0" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (8 samples, 0.05%)</title><rect x="294.9" y="979.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="297.9" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.03%)</title><rect x="295.9" y="979.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="298.9" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.03%)</title><rect x="296.5" y="995.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="299.5" y="1006.0"></text>
</g>
<g>
<title>__lll_unlock_wake (61 samples, 0.38%)</title><rect x="297.2" y="995.0" width="4.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="300.2" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.20%)</title><rect x="299.3" y="979.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="302.3" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.19%)</title><rect x="299.3" y="963.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="302.3" y="974.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.06%)</title><rect x="300.9" y="947.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="303.9" y="958.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.06%)</title><rect x="300.9" y="931.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="303.9" y="942.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="301.0" y="915.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="304.0" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_wait (176 samples, 1.08%)</title><rect x="301.7" y="995.0" width="12.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="304.7" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (119 samples, 0.73%)</title><rect x="305.7" y="979.0" width="8.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="308.7" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (118 samples, 0.73%)</title><rect x="305.7" y="963.0" width="8.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="308.7" y="974.0"></text>
</g>
<g>
<title>sys_futex (95 samples, 0.59%)</title><rect x="307.4" y="947.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="310.4" y="958.0"></text>
</g>
<g>
<title>do_futex (93 samples, 0.57%)</title><rect x="307.6" y="931.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="310.6" y="942.0"></text>
</g>
<g>
<title>futex_wait (89 samples, 0.55%)</title><rect x="307.8" y="915.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="310.8" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.02%)</title><rect x="308.5" y="899.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="311.5" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (66 samples, 0.41%)</title><rect x="308.8" y="899.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="311.8" y="910.0"></text>
</g>
<g>
<title>schedule (55 samples, 0.34%)</title><rect x="309.6" y="883.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="312.6" y="894.0"></text>
</g>
<g>
<title>__schedule (55 samples, 0.34%)</title><rect x="309.6" y="867.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="312.6" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (49 samples, 0.30%)</title><rect x="310.0" y="851.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.0" y="862.0"></text>
</g>
<g>
<title>futex_wait_setup (8 samples, 0.05%)</title><rect x="313.6" y="899.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="316.6" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (6 samples, 0.04%)</title><rect x="315.6" y="1011.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="318.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (114 samples, 0.70%)</title><rect x="316.1" y="1059.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (101 samples, 0.62%)</title><rect x="317.1" y="1043.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (12 samples, 0.07%)</title><rect x="317.1" y="1027.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (65 samples, 0.40%)</title><rect x="318.0" y="1027.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.02%)</title><rect x="318.2" y="1011.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (4 samples, 0.02%)</title><rect x="318.2" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="321.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (56 samples, 0.35%)</title><rect x="318.5" y="1011.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (56 samples, 0.35%)</title><rect x="318.5" y="995.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (55 samples, 0.34%)</title><rect x="318.5" y="979.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="321.5" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (54 samples, 0.33%)</title><rect x="318.5" y="963.0" width="4.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="321.5" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.02%)</title><rect x="318.8" y="947.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="321.8" y="958.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.05%)</title><rect x="319.3" y="947.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="322.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="319.6" y="931.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="322.6" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (24 samples, 0.15%)</title><rect x="319.8" y="947.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="322.8" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.12%)</title><rect x="320.2" y="931.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="323.2" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.12%)</title><rect x="320.2" y="915.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="323.2" y="926.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.10%)</title><rect x="320.4" y="899.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="323.4" y="910.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.10%)</title><rect x="320.4" y="883.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="323.4" y="894.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.09%)</title><rect x="320.5" y="867.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="323.5" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (13 samples, 0.08%)</title><rect x="320.5" y="851.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="323.5" y="862.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.07%)</title><rect x="320.6" y="835.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.6" y="846.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.07%)</title><rect x="320.6" y="819.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="323.6" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.06%)</title><rect x="320.8" y="803.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (24 samples, 0.15%)</title><rect x="322.7" y="1027.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (24 samples, 0.15%)</title><rect x="322.7" y="1011.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (24 samples, 0.15%)</title><rect x="322.7" y="995.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (24 samples, 0.15%)</title><rect x="322.7" y="979.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (24 samples, 0.15%)</title><rect x="322.7" y="963.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (280 samples, 1.73%)</title><rect x="324.4" y="1059.0" width="20.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (280 samples, 1.73%)</title><rect x="324.4" y="1043.0" width="20.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (280 samples, 1.73%)</title><rect x="324.4" y="1027.0" width="20.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (280 samples, 1.73%)</title><rect x="324.4" y="1011.0" width="20.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (280 samples, 1.73%)</title><rect x="324.4" y="995.0" width="20.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.4" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (49 samples, 0.30%)</title><rect x="325.0" y="979.0" width="3.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="328.0" y="990.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.02%)</title><rect x="325.2" y="963.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="328.2" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (6 samples, 0.04%)</title><rect x="325.7" y="963.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="328.7" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.04%)</title><rect x="326.2" y="963.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="329.2" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (11 samples, 0.07%)</title><rect x="326.9" y="963.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="329.9" y="974.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (9 samples, 0.06%)</title><rect x="327.8" y="963.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="330.8" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (217 samples, 1.34%)</title><rect x="328.6" y="979.0" width="15.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="331.6" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (187 samples, 1.15%)</title><rect x="330.8" y="963.0" width="13.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="333.8" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (187 samples, 1.15%)</title><rect x="330.8" y="947.0" width="13.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="333.8" y="958.0"></text>
</g>
<g>
<title>sys_futex (167 samples, 1.03%)</title><rect x="332.2" y="931.0" width="12.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="335.2" y="942.0"></text>
</g>
<g>
<title>do_futex (162 samples, 1.00%)</title><rect x="332.5" y="915.0" width="11.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="335.5" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock (8 samples, 0.05%)</title><rect x="332.6" y="899.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="335.6" y="910.0"></text>
</g>
<g>
<title>futex_wake_op (149 samples, 0.92%)</title><rect x="333.2" y="899.0" width="10.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="336.2" y="910.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.04%)</title><rect x="334.5" y="883.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="337.5" y="894.0"></text>
</g>
<g>
<title>wake_up_q (125 samples, 0.77%)</title><rect x="334.9" y="883.0" width="9.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="337.9" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (125 samples, 0.77%)</title><rect x="334.9" y="867.0" width="9.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="337.9" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (125 samples, 0.77%)</title><rect x="334.9" y="851.0" width="9.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="337.9" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (4 samples, 0.02%)</title><rect x="344.5" y="979.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="347.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$389/2097994766.run (1,526 samples, 9.40%)</title><rect x="344.9" y="1091.0" width="110.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.9" y="1102.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,521 samples, 9.37%)</title><rect x="345.2" y="1075.0" width="110.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.2" y="1086.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,517 samples, 9.35%)</title><rect x="345.4" y="1059.0" width="110.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.4" y="1070.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,488 samples, 9.17%)</title><rect x="347.1" y="1043.0" width="108.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.1" y="1054.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,485 samples, 9.15%)</title><rect x="347.3" y="1027.0" width="108.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="350.3" y="1038.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,485 samples, 9.15%)</title><rect x="347.3" y="1011.0" width="108.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.3" y="1022.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,480 samples, 9.12%)</title><rect x="347.5" y="995.0" width="107.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.5" y="1006.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,480 samples, 9.12%)</title><rect x="347.5" y="979.0" width="107.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.5" y="990.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,479 samples, 9.11%)</title><rect x="347.6" y="963.0" width="107.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.6" y="974.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,476 samples, 9.09%)</title><rect x="347.8" y="947.0" width="107.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.8" y="958.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,476 samples, 9.09%)</title><rect x="347.8" y="931.0" width="107.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.8" y="942.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (218 samples, 1.34%)</title><rect x="348.5" y="915.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="349.4" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.4" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="349.4" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (156 samples, 0.96%)</title><rect x="349.7" y="899.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (155 samples, 0.95%)</title><rect x="349.7" y="883.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.7" y="894.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.05%)</title><rect x="349.7" y="867.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="352.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (146 samples, 0.90%)</title><rect x="350.3" y="867.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (122 samples, 0.75%)</title><rect x="351.5" y="851.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (70 samples, 0.43%)</title><rect x="351.8" y="835.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.8" y="846.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.06%)</title><rect x="352.1" y="819.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="355.1" y="830.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$32/992846223.apply (4 samples, 0.02%)</title><rect x="353.0" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="356.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/434635916.apply (22 samples, 0.14%)</title><rect x="353.3" y="819.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (16 samples, 0.10%)</title><rect x="353.7" y="803.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (16 samples, 0.10%)</title><rect x="353.7" y="787.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (10 samples, 0.06%)</title><rect x="354.1" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.04%)</title><rect x="354.3" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.04%)</title><rect x="354.3" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$416/297087785.get$Lambda (7 samples, 0.04%)</title><rect x="354.3" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$416/297087785.&lt;init&gt; (6 samples, 0.04%)</title><rect x="354.4" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/283532103.apply (26 samples, 0.16%)</title><rect x="354.9" y="819.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (26 samples, 0.16%)</title><rect x="354.9" y="803.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (26 samples, 0.16%)</title><rect x="354.9" y="787.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (26 samples, 0.16%)</title><rect x="354.9" y="771.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (26 samples, 0.16%)</title><rect x="354.9" y="755.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="357.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (25 samples, 0.15%)</title><rect x="355.0" y="739.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1212401691.run (25 samples, 0.15%)</title><rect x="355.0" y="723.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (25 samples, 0.15%)</title><rect x="355.0" y="707.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (9 samples, 0.06%)</title><rect x="355.1" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.06%)</title><rect x="355.1" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.06%)</title><rect x="355.1" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 0.06%)</title><rect x="355.1" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9 samples, 0.06%)</title><rect x="355.1" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9 samples, 0.06%)</title><rect x="355.1" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (9 samples, 0.06%)</title><rect x="355.1" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (9 samples, 0.06%)</title><rect x="355.1" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (9 samples, 0.06%)</title><rect x="355.1" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (9 samples, 0.06%)</title><rect x="355.1" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (9 samples, 0.06%)</title><rect x="355.1" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (9 samples, 0.06%)</title><rect x="355.1" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (9 samples, 0.06%)</title><rect x="355.1" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (9 samples, 0.06%)</title><rect x="355.1" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1243324746.run (9 samples, 0.06%)</title><rect x="355.1" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (9 samples, 0.06%)</title><rect x="355.1" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (9 samples, 0.06%)</title><rect x="355.1" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (8 samples, 0.05%)</title><rect x="355.2" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (8 samples, 0.05%)</title><rect x="355.2" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (4 samples, 0.02%)</title><rect x="355.3" y="387.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (14 samples, 0.09%)</title><rect x="355.8" y="691.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (14 samples, 0.09%)</title><rect x="355.8" y="675.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (14 samples, 0.09%)</title><rect x="355.8" y="659.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (14 samples, 0.09%)</title><rect x="355.8" y="643.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (14 samples, 0.09%)</title><rect x="355.8" y="627.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13 samples, 0.08%)</title><rect x="355.8" y="611.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (13 samples, 0.08%)</title><rect x="355.8" y="595.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (13 samples, 0.08%)</title><rect x="355.8" y="579.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (13 samples, 0.08%)</title><rect x="355.8" y="563.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.8" y="574.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (13 samples, 0.08%)</title><rect x="355.8" y="547.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (13 samples, 0.08%)</title><rect x="355.8" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (13 samples, 0.08%)</title><rect x="355.8" y="515.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 0.07%)</title><rect x="355.9" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 0.07%)</title><rect x="355.9" y="483.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.9" y="494.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (12 samples, 0.07%)</title><rect x="355.9" y="467.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="358.9" y="478.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (12 samples, 0.07%)</title><rect x="355.9" y="451.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="358.9" y="462.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (12 samples, 0.07%)</title><rect x="355.9" y="435.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="358.9" y="446.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (12 samples, 0.07%)</title><rect x="355.9" y="419.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="358.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (40 samples, 0.25%)</title><rect x="356.9" y="835.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (36 samples, 0.22%)</title><rect x="357.1" y="819.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.03%)</title><rect x="357.1" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.03%)</title><rect x="357.1" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/733215646.apply (31 samples, 0.19%)</title><rect x="357.5" y="803.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (30 samples, 0.18%)</title><rect x="357.6" y="787.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (30 samples, 0.18%)</title><rect x="357.6" y="771.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$216/483426623.apply (29 samples, 0.18%)</title><rect x="357.6" y="755.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (29 samples, 0.18%)</title><rect x="357.6" y="739.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.04%)</title><rect x="357.7" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.04%)</title><rect x="357.7" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (21 samples, 0.13%)</title><rect x="358.2" y="723.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (19 samples, 0.12%)</title><rect x="358.3" y="707.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (18 samples, 0.11%)</title><rect x="358.4" y="691.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (10 samples, 0.06%)</title><rect x="358.4" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (10 samples, 0.06%)</title><rect x="358.4" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (10 samples, 0.06%)</title><rect x="358.4" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.06%)</title><rect x="358.4" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.06%)</title><rect x="358.4" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (8 samples, 0.05%)</title><rect x="359.1" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.05%)</title><rect x="359.1" y="659.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="362.1" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="359.1" y="643.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="359.2" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$396/1178930500.get (4 samples, 0.02%)</title><rect x="360.3" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$415/222178550.get (4 samples, 0.02%)</title><rect x="360.6" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (42 samples, 0.26%)</title><rect x="361.0" y="899.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.0" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.05%)</title><rect x="361.3" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.3" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (8 samples, 0.05%)</title><rect x="361.3" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (30 samples, 0.18%)</title><rect x="361.9" y="883.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="364.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (28 samples, 0.17%)</title><rect x="362.0" y="867.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (6 samples, 0.04%)</title><rect x="363.0" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateTail (6 samples, 0.04%)</title><rect x="363.6" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="366.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (12 samples, 0.07%)</title><rect x="364.3" y="915.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (12 samples, 0.07%)</title><rect x="364.3" y="899.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (12 samples, 0.07%)</title><rect x="364.3" y="883.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,234 samples, 7.60%)</title><rect x="365.2" y="915.0" width="89.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.2" y="926.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,232 samples, 7.59%)</title><rect x="365.4" y="899.0" width="89.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.4" y="910.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,232 samples, 7.59%)</title><rect x="365.4" y="883.0" width="89.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.4" y="894.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,228 samples, 7.57%)</title><rect x="365.7" y="867.0" width="89.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.7" y="878.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$402/472541682.run (7 samples, 0.04%)</title><rect x="365.7" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (7 samples, 0.04%)</title><rect x="365.7" y="835.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (7 samples, 0.04%)</title><rect x="365.7" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,201 samples, 7.40%)</title><rect x="366.2" y="851.0" width="87.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.2" y="862.0">jdk/intern..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1,194 samples, 7.36%)</title><rect x="366.5" y="835.0" width="86.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.5" y="846.0">java/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1,194 samples, 7.36%)</title><rect x="366.5" y="819.0" width="86.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="369.5" y="830.0">sun/nio/ch..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.04%)</title><rect x="366.5" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.04%)</title><rect x="366.5" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.04%)</title><rect x="366.5" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.04%)</title><rect x="366.5" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.04%)</title><rect x="367.0" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.04%)</title><rect x="367.0" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,182 samples, 7.28%)</title><rect x="367.4" y="803.0" width="85.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.4" y="814.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,182 samples, 7.28%)</title><rect x="367.4" y="787.0" width="85.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.4" y="798.0">sun/nio/ch..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (7 samples, 0.04%)</title><rect x="368.2" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.2" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (5 samples, 0.03%)</title><rect x="368.3" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (5 samples, 0.03%)</title><rect x="368.8" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (5 samples, 0.03%)</title><rect x="369.1" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1,141 samples, 7.03%)</title><rect x="369.5" y="771.0" width="83.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.5" y="782.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1,141 samples, 7.03%)</title><rect x="369.5" y="755.0" width="83.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.5" y="766.0">sun/nio/c..</text>
</g>
<g>
<title>__GI_writev (1,117 samples, 6.88%)</title><rect x="370.2" y="739.0" width="81.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="373.2" y="750.0">__GI_writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,070 samples, 6.59%)</title><rect x="373.6" y="723.0" width="77.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="376.6" y="734.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (1,069 samples, 6.59%)</title><rect x="373.6" y="707.0" width="77.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="376.6" y="718.0">do_syscal..</text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.04%)</title><rect x="375.2" y="691.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="378.2" y="702.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.03%)</title><rect x="375.3" y="675.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="378.3" y="686.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.03%)</title><rect x="375.3" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="378.3" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.02%)</title><rect x="375.4" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="378.4" y="654.0"></text>
</g>
<g>
<title>sys_writev (1,040 samples, 6.41%)</title><rect x="375.8" y="691.0" width="75.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="378.8" y="702.0">sys_writev</text>
</g>
<g>
<title>do_writev (1,037 samples, 6.39%)</title><rect x="375.8" y="675.0" width="75.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="378.8" y="686.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (17 samples, 0.10%)</title><rect x="376.2" y="659.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="379.2" y="670.0"></text>
</g>
<g>
<title>__fget_light (17 samples, 0.10%)</title><rect x="376.2" y="643.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="379.2" y="654.0"></text>
</g>
<g>
<title>__fget (17 samples, 0.10%)</title><rect x="376.2" y="627.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="379.2" y="638.0"></text>
</g>
<g>
<title>vfs_writev (1,012 samples, 6.23%)</title><rect x="377.6" y="659.0" width="73.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="380.6" y="670.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (994 samples, 6.12%)</title><rect x="378.1" y="643.0" width="72.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="381.1" y="654.0">do_iter_..</text>
</g>
<g>
<title>do_iter_readv_writev (963 samples, 5.93%)</title><rect x="379.1" y="627.0" width="70.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="382.1" y="638.0">do_iter_..</text>
</g>
<g>
<title>sock_write_iter (953 samples, 5.87%)</title><rect x="379.8" y="611.0" width="69.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="382.8" y="622.0">sock_wr..</text>
</g>
<g>
<title>sock_sendmsg (951 samples, 5.86%)</title><rect x="380.0" y="595.0" width="69.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="383.0" y="606.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (941 samples, 5.80%)</title><rect x="380.1" y="579.0" width="68.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="383.1" y="590.0">inet_se..</text>
</g>
<g>
<title>tcp_sendmsg (940 samples, 5.79%)</title><rect x="380.2" y="563.0" width="68.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="383.2" y="574.0">tcp_sen..</text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.02%)</title><rect x="380.4" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="383.4" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.02%)</title><rect x="380.9" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="383.9" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (917 samples, 5.65%)</title><rect x="381.7" y="547.0" width="66.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="384.7" y="558.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.03%)</title><rect x="382.9" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="385.9" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.03%)</title><rect x="382.9" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="385.9" y="526.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.05%)</title><rect x="383.5" y="531.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="386.5" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (45 samples, 0.28%)</title><rect x="384.0" y="531.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="387.0" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (39 samples, 0.24%)</title><rect x="384.3" y="515.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.3" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (21 samples, 0.13%)</title><rect x="384.8" y="499.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.8" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (18 samples, 0.11%)</title><rect x="384.8" y="483.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.8" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (8 samples, 0.05%)</title><rect x="385.4" y="467.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="388.4" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.05%)</title><rect x="386.3" y="499.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="389.3" y="510.0"></text>
</g>
<g>
<title>tcp_push (819 samples, 5.05%)</title><rect x="387.5" y="531.0" width="59.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="390.5" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (816 samples, 5.03%)</title><rect x="387.7" y="515.0" width="59.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="390.7" y="526.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (809 samples, 4.98%)</title><rect x="388.2" y="499.0" width="58.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="391.2" y="510.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (771 samples, 4.75%)</title><rect x="388.7" y="483.0" width="56.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="391.7" y="494.0">__tcp_..</text>
</g>
<g>
<title>__skb_clone (4 samples, 0.02%)</title><rect x="389.8" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="392.8" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (742 samples, 4.57%)</title><rect x="390.2" y="467.0" width="54.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="393.2" y="478.0">ip_qu..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.02%)</title><rect x="390.7" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.7" y="462.0"></text>
</g>
<g>
<title>ip_local_out (730 samples, 4.50%)</title><rect x="391.0" y="451.0" width="53.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="394.0" y="462.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (125 samples, 0.77%)</title><rect x="391.1" y="435.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="394.1" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (4 samples, 0.02%)</title><rect x="391.5" y="419.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="394.5" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (5 samples, 0.03%)</title><rect x="391.8" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="394.8" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (4 samples, 0.02%)</title><rect x="392.2" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="395.2" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (106 samples, 0.65%)</title><rect x="392.5" y="419.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="395.5" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.04%)</title><rect x="392.6" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="395.6" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.03%)</title><rect x="392.7" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="395.7" y="398.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (9 samples, 0.06%)</title><rect x="393.1" y="403.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="396.1" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.04%)</title><rect x="393.2" y="387.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="396.2" y="398.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (5 samples, 0.03%)</title><rect x="393.7" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="396.7" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (5 samples, 0.03%)</title><rect x="393.7" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="396.7" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (76 samples, 0.47%)</title><rect x="394.1" y="403.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="397.1" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (68 samples, 0.42%)</title><rect x="394.4" y="387.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.4" y="398.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (13 samples, 0.08%)</title><rect x="395.1" y="371.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="398.1" y="382.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (4 samples, 0.02%)</title><rect x="396.3" y="371.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="399.3" y="382.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (8 samples, 0.05%)</title><rect x="396.7" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="399.7" y="382.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (4 samples, 0.02%)</title><rect x="397.3" y="371.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="400.3" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (24 samples, 0.15%)</title><rect x="397.6" y="371.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="400.6" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (9 samples, 0.06%)</title><rect x="398.7" y="355.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.7" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.02%)</title><rect x="399.6" y="403.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="402.6" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (4 samples, 0.02%)</title><rect x="399.9" y="403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="402.9" y="414.0"></text>
</g>
<g>
<title>ip_output (597 samples, 3.68%)</title><rect x="400.3" y="435.0" width="43.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="403.3" y="446.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (574 samples, 3.54%)</title><rect x="400.6" y="419.0" width="41.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="403.6" y="430.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (570 samples, 3.51%)</title><rect x="400.8" y="403.0" width="41.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="403.8" y="414.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (506 samples, 3.12%)</title><rect x="401.6" y="387.0" width="36.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="404.6" y="398.0">__l..</text>
</g>
<g>
<title>do_softirq.part.17 (504 samples, 3.11%)</title><rect x="401.7" y="371.0" width="36.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="404.7" y="382.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (500 samples, 3.08%)</title><rect x="402.0" y="355.0" width="36.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="405.0" y="366.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (498 samples, 3.07%)</title><rect x="402.0" y="339.0" width="36.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="405.0" y="350.0">__s..</text>
</g>
<g>
<title>net_rx_action (484 samples, 2.98%)</title><rect x="402.7" y="323.0" width="35.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="405.7" y="334.0">net..</text>
</g>
<g>
<title>__kfree_skb_flush (4 samples, 0.02%)</title><rect x="403.0" y="307.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="406.0" y="318.0"></text>
</g>
<g>
<title>process_backlog (475 samples, 2.93%)</title><rect x="403.4" y="307.0" width="34.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="406.4" y="318.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (469 samples, 2.89%)</title><rect x="403.8" y="291.0" width="34.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="406.8" y="302.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (467 samples, 2.88%)</title><rect x="403.8" y="275.0" width="34.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="406.8" y="286.0">__..</text>
</g>
<g>
<title>ip_rcv (447 samples, 2.75%)</title><rect x="404.8" y="259.0" width="32.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="407.8" y="270.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (418 samples, 2.58%)</title><rect x="405.4" y="243.0" width="30.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="408.4" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (412 samples, 2.54%)</title><rect x="405.6" y="227.0" width="30.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="408.6" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (387 samples, 2.38%)</title><rect x="406.0" y="211.0" width="28.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.0" y="222.0">ip..</text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.03%)</title><rect x="406.5" y="195.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="409.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (373 samples, 2.30%)</title><rect x="407.0" y="195.0" width="27.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.0" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (17 samples, 0.10%)</title><rect x="407.9" y="179.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="410.9" y="190.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (5 samples, 0.03%)</title><rect x="409.3" y="179.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="412.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (336 samples, 2.07%)</title><rect x="409.7" y="179.0" width="24.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="412.7" y="190.0">t..</text>
</g>
<g>
<title>tcp_check_space (10 samples, 0.06%)</title><rect x="409.8" y="163.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="412.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (325 samples, 2.00%)</title><rect x="410.5" y="163.0" width="23.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="413.5" y="174.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (28 samples, 0.17%)</title><rect x="410.7" y="147.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="413.7" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (27 samples, 0.17%)</title><rect x="410.7" y="131.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.7" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (21 samples, 0.13%)</title><rect x="411.2" y="115.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="414.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (19 samples, 0.12%)</title><rect x="411.3" y="99.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="414.3" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.09%)</title><rect x="411.5" y="83.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="414.5" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 0.04%)</title><rect x="413.1" y="147.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="416.1" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.03%)</title><rect x="413.3" y="131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="416.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.03%)</title><rect x="413.3" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="416.3" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="413.3" y="99.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="416.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack (77 samples, 0.47%)</title><rect x="413.6" y="147.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="416.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (57 samples, 0.35%)</title><rect x="414.9" y="131.0" width="4.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="417.9" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (32 samples, 0.20%)</title><rect x="415.6" y="115.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="418.6" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (10 samples, 0.06%)</title><rect x="415.6" y="99.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="418.6" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (8 samples, 0.05%)</title><rect x="415.7" y="83.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="418.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (20 samples, 0.12%)</title><rect x="416.4" y="99.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="419.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (17 samples, 0.10%)</title><rect x="416.4" y="83.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="419.4" y="94.0"></text>
</g>
<g>
<title>skb_free_head (10 samples, 0.06%)</title><rect x="416.9" y="67.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="419.9" y="78.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.06%)</title><rect x="416.9" y="51.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="419.9" y="62.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.02%)</title><rect x="417.3" y="35.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="420.3" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (8 samples, 0.05%)</title><rect x="418.4" y="115.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="421.4" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (198 samples, 1.22%)</title><rect x="419.4" y="147.0" width="14.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="422.4" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (178 samples, 1.10%)</title><rect x="420.0" y="131.0" width="12.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="423.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (166 samples, 1.02%)</title><rect x="420.8" y="115.0" width="12.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (166 samples, 1.02%)</title><rect x="420.8" y="99.0" width="12.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="423.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (166 samples, 1.02%)</title><rect x="420.8" y="83.0" width="12.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="423.8" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (6 samples, 0.04%)</title><rect x="432.9" y="131.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="435.9" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.02%)</title><rect x="433.5" y="131.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="436.5" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.09%)</title><rect x="434.4" y="211.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="437.4" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.06%)</title><rect x="434.4" y="195.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="437.4" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (8 samples, 0.05%)</title><rect x="434.5" y="179.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="437.5" y="190.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (5 samples, 0.03%)</title><rect x="435.1" y="195.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.1" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.02%)</title><rect x="436.0" y="243.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="439.0" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (4 samples, 0.02%)</title><rect x="436.3" y="243.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="439.3" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="436.6" y="243.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="439.6" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (5 samples, 0.03%)</title><rect x="437.0" y="227.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="440.0" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.03%)</title><rect x="437.0" y="211.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="440.0" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="437.4" y="259.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="440.4" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (52 samples, 0.32%)</title><rect x="438.4" y="387.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="441.4" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (51 samples, 0.31%)</title><rect x="438.4" y="371.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (22 samples, 0.14%)</title><rect x="439.4" y="355.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="442.4" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (14 samples, 0.09%)</title><rect x="439.7" y="339.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="442.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.04%)</title><rect x="440.2" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="443.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.03%)</title><rect x="440.3" y="307.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="443.3" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.03%)</title><rect x="440.3" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.3" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.05%)</title><rect x="441.2" y="355.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="444.2" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.02%)</title><rect x="441.3" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="444.3" y="350.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (4 samples, 0.02%)</title><rect x="441.8" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.8" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.09%)</title><rect x="442.7" y="419.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="445.7" y="430.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (6 samples, 0.04%)</title><rect x="442.8" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="445.8" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.04%)</title><rect x="442.8" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="445.8" y="398.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.04%)</title><rect x="444.2" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="447.2" y="478.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.04%)</title><rect x="444.2" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="447.2" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.07%)</title><rect x="445.3" y="483.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="448.3" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.06%)</title><rect x="445.5" y="467.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="448.5" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (9 samples, 0.06%)</title><rect x="445.5" y="451.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.5" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.05%)</title><rect x="445.5" y="435.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.5" y="446.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.05%)</title><rect x="445.5" y="419.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="448.5" y="430.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="445.7" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="448.7" y="414.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.02%)</title><rect x="446.7" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="449.7" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (18 samples, 0.11%)</title><rect x="447.1" y="531.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="450.1" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (15 samples, 0.09%)</title><rect x="447.3" y="515.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="450.3" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (5 samples, 0.03%)</title><rect x="447.9" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="450.9" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.05%)</title><rect x="448.5" y="579.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="451.5" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.02%)</title><rect x="448.8" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="451.8" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.02%)</title><rect x="448.8" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="451.8" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (14 samples, 0.09%)</title><rect x="449.3" y="627.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="452.3" y="638.0"></text>
</g>
<g>
<title>security_file_permission (12 samples, 0.07%)</title><rect x="449.4" y="611.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="452.4" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (9 samples, 0.06%)</title><rect x="449.5" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="452.5" y="606.0"></text>
</g>
<g>
<title>common_file_perm (9 samples, 0.06%)</title><rect x="449.5" y="579.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="452.5" y="590.0"></text>
</g>
<g>
<title>import_iovec (10 samples, 0.06%)</title><rect x="450.3" y="643.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="453.3" y="654.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (10 samples, 0.06%)</title><rect x="450.3" y="627.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="453.3" y="638.0"></text>
</g>
<g>
<title>fdval (7 samples, 0.04%)</title><rect x="451.9" y="739.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="454.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (12 samples, 0.07%)</title><rect x="452.5" y="771.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.04%)</title><rect x="452.6" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.6" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.04%)</title><rect x="452.6" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.02%)</title><rect x="453.0" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (19 samples, 0.12%)</title><rect x="453.5" y="851.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.5" y="862.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (9 samples, 0.06%)</title><rect x="454.3" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="457.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.get (4 samples, 0.02%)</title><rect x="455.3" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,283 samples, 14.07%)</title><rect x="455.8" y="1091.0" width="166.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.8" y="1102.0">jdk/internal/net/http..</text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="457.0" y="1075.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="460.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,262 samples, 13.94%)</title><rect x="457.3" y="1075.0" width="164.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.3" y="1086.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (9 samples, 0.06%)</title><rect x="457.4" y="1059.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (8 samples, 0.05%)</title><rect x="457.5" y="1043.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (8 samples, 0.05%)</title><rect x="457.5" y="1027.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.05%)</title><rect x="457.5" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.05%)</title><rect x="457.5" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (6 samples, 0.04%)</title><rect x="457.6" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (6 samples, 0.04%)</title><rect x="457.6" y="963.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (6 samples, 0.04%)</title><rect x="457.6" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,116 samples, 6.88%)</title><rect x="458.1" y="1059.0" width="81.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.1" y="1070.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (1,116 samples, 6.88%)</title><rect x="458.1" y="1043.0" width="81.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.1" y="1054.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,114 samples, 6.86%)</title><rect x="458.1" y="1027.0" width="80.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.1" y="1038.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (4 samples, 0.02%)</title><rect x="458.5" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (171 samples, 1.05%)</title><rect x="458.8" y="1011.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (171 samples, 1.05%)</title><rect x="458.8" y="995.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (171 samples, 1.05%)</title><rect x="458.8" y="979.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (171 samples, 1.05%)</title><rect x="458.8" y="963.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (171 samples, 1.05%)</title><rect x="458.8" y="947.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (168 samples, 1.04%)</title><rect x="459.0" y="931.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (165 samples, 1.02%)</title><rect x="459.2" y="915.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (165 samples, 1.02%)</title><rect x="459.2" y="899.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.2" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.10%)</title><rect x="459.4" y="883.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="462.4" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (17 samples, 0.10%)</title><rect x="459.4" y="867.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="462.4" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.09%)</title><rect x="459.7" y="851.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="462.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.07%)</title><rect x="459.8" y="835.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.8" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.07%)</title><rect x="459.8" y="819.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="462.8" y="830.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.06%)</title><rect x="459.9" y="803.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="462.9" y="814.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.06%)</title><rect x="459.9" y="787.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="462.9" y="798.0"></text>
</g>
<g>
<title>futex_wake_op (9 samples, 0.06%)</title><rect x="459.9" y="771.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="462.9" y="782.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.04%)</title><rect x="460.1" y="755.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="463.1" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.04%)</title><rect x="460.1" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="463.1" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="460.1" y="723.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="463.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (144 samples, 0.89%)</title><rect x="460.7" y="883.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.7" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (36 samples, 0.22%)</title><rect x="462.6" y="867.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="465.6" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (33 samples, 0.20%)</title><rect x="462.8" y="851.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="465.8" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (30 samples, 0.18%)</title><rect x="462.9" y="835.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="465.9" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (22 samples, 0.14%)</title><rect x="462.9" y="819.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="465.9" y="830.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.05%)</title><rect x="464.5" y="819.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="467.5" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="465.2" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (79 samples, 0.49%)</title><rect x="465.5" y="867.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.5" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.04%)</title><rect x="465.8" y="851.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="468.8" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.04%)</title><rect x="465.8" y="835.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="468.8" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.03%)</title><rect x="465.8" y="819.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="468.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (67 samples, 0.41%)</title><rect x="466.3" y="851.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.3" y="862.0"></text>
</g>
<g>
<title>__GI___write (63 samples, 0.39%)</title><rect x="466.5" y="835.0" width="4.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="469.5" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.36%)</title><rect x="466.8" y="819.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.35%)</title><rect x="466.8" y="803.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.8" y="814.0"></text>
</g>
<g>
<title>sys_write (51 samples, 0.31%)</title><rect x="467.2" y="787.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="470.2" y="798.0"></text>
</g>
<g>
<title>vfs_write (46 samples, 0.28%)</title><rect x="467.6" y="771.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="470.6" y="782.0"></text>
</g>
<g>
<title>__vfs_write (43 samples, 0.26%)</title><rect x="467.6" y="755.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="470.6" y="766.0"></text>
</g>
<g>
<title>new_sync_write (43 samples, 0.26%)</title><rect x="467.6" y="739.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="470.6" y="750.0"></text>
</g>
<g>
<title>pipe_write (39 samples, 0.24%)</title><rect x="467.9" y="723.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="470.9" y="734.0"></text>
</g>
<g>
<title>__wake_up_sync_key (32 samples, 0.20%)</title><rect x="468.0" y="707.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="471.0" y="718.0"></text>
</g>
<g>
<title>__wake_up_common_lock (32 samples, 0.20%)</title><rect x="468.0" y="691.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="471.0" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (32 samples, 0.20%)</title><rect x="468.0" y="675.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="471.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (15 samples, 0.09%)</title><rect x="471.2" y="1011.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.06%)</title><rect x="471.2" y="995.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.06%)</title><rect x="471.2" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/629961698.get$Lambda (5 samples, 0.03%)</title><rect x="471.2" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/629961698.&lt;init&gt; (5 samples, 0.03%)</title><rect x="471.2" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.2" y="958.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.03%)</title><rect x="471.2" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$352/392108125.get$Lambda (4 samples, 0.02%)</title><rect x="471.6" y="963.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$352/392108125.&lt;init&gt; (4 samples, 0.02%)</title><rect x="471.6" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6 samples, 0.04%)</title><rect x="471.9" y="995.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (6 samples, 0.04%)</title><rect x="471.9" y="979.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="474.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (5 samples, 0.03%)</title><rect x="471.9" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (5 samples, 0.03%)</title><rect x="471.9" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (5 samples, 0.03%)</title><rect x="471.9" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (5 samples, 0.03%)</title><rect x="471.9" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.9" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (5 samples, 0.03%)</title><rect x="471.9" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (6 samples, 0.04%)</title><rect x="472.3" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (911 samples, 5.61%)</title><rect x="472.8" y="1011.0" width="66.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.8" y="1022.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (15 samples, 0.09%)</title><rect x="472.8" y="995.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (5 samples, 0.03%)</title><rect x="473.0" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.0" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="473.0" y="963.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="476.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.05%)</title><rect x="473.3" y="979.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.04%)</title><rect x="473.4" y="963.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (888 samples, 5.47%)</title><rect x="473.9" y="995.0" width="64.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.9" y="1006.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (888 samples, 5.47%)</title><rect x="473.9" y="979.0" width="64.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.9" y="990.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (888 samples, 5.47%)</title><rect x="473.9" y="963.0" width="64.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.9" y="974.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (488 samples, 3.01%)</title><rect x="474.4" y="947.0" width="35.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.4" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (485 samples, 2.99%)</title><rect x="474.6" y="931.0" width="35.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.6" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (480 samples, 2.96%)</title><rect x="474.9" y="915.0" width="34.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.9" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (478 samples, 2.94%)</title><rect x="475.1" y="899.0" width="34.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.1" y="910.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (475 samples, 2.93%)</title><rect x="475.3" y="883.0" width="34.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.3" y="894.0">jd..</text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="475.3" y="867.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="478.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (470 samples, 2.90%)</title><rect x="475.6" y="867.0" width="34.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.6" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (466 samples, 2.87%)</title><rect x="475.9" y="851.0" width="33.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.9" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (17 samples, 0.10%)</title><rect x="476.3" y="835.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (17 samples, 0.10%)</title><rect x="476.3" y="819.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (412 samples, 2.54%)</title><rect x="477.5" y="835.0" width="30.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.5" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (411 samples, 2.53%)</title><rect x="477.6" y="819.0" width="29.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.6" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (309 samples, 1.90%)</title><rect x="478.0" y="803.0" width="22.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.0" y="814.0">j..</text>
</g>
<g>
<title>itable stub (8 samples, 0.05%)</title><rect x="478.2" y="787.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="481.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.04%)</title><rect x="478.8" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.04%)</title><rect x="478.8" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/283532103.apply (212 samples, 1.31%)</title><rect x="479.4" y="787.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (209 samples, 1.29%)</title><rect x="479.6" y="771.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.04%)</title><rect x="479.6" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.04%)</title><rect x="479.6" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="482.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/1651911151.get$Lambda (6 samples, 0.04%)</title><rect x="479.6" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/1651911151.&lt;init&gt; (4 samples, 0.02%)</title><rect x="479.7" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (201 samples, 1.24%)</title><rect x="480.0" y="755.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (196 samples, 1.21%)</title><rect x="480.4" y="739.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (191 samples, 1.18%)</title><rect x="480.6" y="723.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.6" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (51 samples, 0.31%)</title><rect x="480.8" y="707.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.8" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (14 samples, 0.09%)</title><rect x="480.8" y="691.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.8" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (14 samples, 0.09%)</title><rect x="480.8" y="675.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.8" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (8 samples, 0.05%)</title><rect x="481.2" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.04%)</title><rect x="481.3" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.04%)</title><rect x="481.4" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="481.4" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="481.4" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.04%)</title><rect x="481.4" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="484.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (28 samples, 0.17%)</title><rect x="482.0" y="691.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="485.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (28 samples, 0.17%)</title><rect x="482.0" y="675.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="485.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (25 samples, 0.15%)</title><rect x="482.3" y="659.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (20 samples, 0.12%)</title><rect x="482.3" y="643.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (16 samples, 0.10%)</title><rect x="482.4" y="627.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (9 samples, 0.06%)</title><rect x="482.8" y="611.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (5 samples, 0.03%)</title><rect x="483.1" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.1" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (5 samples, 0.03%)</title><rect x="483.1" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (4 samples, 0.02%)</title><rect x="483.8" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (4 samples, 0.02%)</title><rect x="483.8" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="486.8" y="638.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (4 samples, 0.02%)</title><rect x="483.8" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (6 samples, 0.04%)</title><rect x="484.1" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (5 samples, 0.03%)</title><rect x="484.2" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (4 samples, 0.02%)</title><rect x="484.2" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (4 samples, 0.02%)</title><rect x="484.2" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.02%)</title><rect x="484.2" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (128 samples, 0.79%)</title><rect x="485.1" y="707.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1212401691.run (128 samples, 0.79%)</title><rect x="485.1" y="691.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (127 samples, 0.78%)</title><rect x="485.2" y="675.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.12%)</title><rect x="485.3" y="659.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.12%)</title><rect x="485.3" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="488.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/488176487.get$Lambda (11 samples, 0.07%)</title><rect x="485.8" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/488176487.&lt;init&gt; (11 samples, 0.07%)</title><rect x="485.8" y="611.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (15 samples, 0.09%)</title><rect x="487.1" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.set (7 samples, 0.04%)</title><rect x="487.4" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.03%)</title><rect x="487.9" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.03%)</title><rect x="487.9" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (19 samples, 0.12%)</title><rect x="488.2" y="659.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (8 samples, 0.05%)</title><rect x="489.6" y="659.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (25 samples, 0.15%)</title><rect x="490.2" y="659.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (25 samples, 0.15%)</title><rect x="490.2" y="643.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.2" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (20 samples, 0.12%)</title><rect x="490.5" y="627.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.5" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (20 samples, 0.12%)</title><rect x="490.5" y="611.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.5" y="622.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (20 samples, 0.12%)</title><rect x="490.5" y="595.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.5" y="606.0"></text>
</g>
<g>
<title>JVM_IHashCode (13 samples, 0.08%)</title><rect x="490.8" y="579.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="493.8" y="590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (4 samples, 0.02%)</title><rect x="490.8" y="563.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="493.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (19 samples, 0.12%)</title><rect x="492.0" y="659.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.08%)</title><rect x="492.4" y="643.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1546693040.invoke (13 samples, 0.08%)</title><rect x="492.4" y="627.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.08%)</title><rect x="492.4" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (5 samples, 0.03%)</title><rect x="492.4" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.03%)</title><rect x="492.4" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (5 samples, 0.03%)</title><rect x="492.9" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (14 samples, 0.09%)</title><rect x="493.4" y="659.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (10 samples, 0.06%)</title><rect x="493.7" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.04%)</title><rect x="493.7" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.02%)</title><rect x="494.1" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.02%)</title><rect x="494.1" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (4 samples, 0.02%)</title><rect x="494.1" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (4 samples, 0.02%)</title><rect x="494.1" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$374/2048942177.apply (78 samples, 0.48%)</title><rect x="494.8" y="787.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (74 samples, 0.46%)</title><rect x="495.1" y="771.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (69 samples, 0.43%)</title><rect x="495.1" y="755.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.1" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (8 samples, 0.05%)</title><rect x="495.6" y="739.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.6" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="495.6" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.6" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (8 samples, 0.05%)</title><rect x="495.6" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (52 samples, 0.32%)</title><rect x="496.1" y="739.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (50 samples, 0.31%)</title><rect x="496.3" y="723.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.3" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.09%)</title><rect x="496.9" y="707.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="499.9" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (15 samples, 0.09%)</title><rect x="496.9" y="691.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="499.9" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (15 samples, 0.09%)</title><rect x="496.9" y="675.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="499.9" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (13 samples, 0.08%)</title><rect x="496.9" y="659.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="499.9" y="670.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (27 samples, 0.17%)</title><rect x="498.0" y="707.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.0" y="718.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (6 samples, 0.04%)</title><rect x="498.0" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.0" y="702.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (6 samples, 0.04%)</title><rect x="498.0" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.0" y="686.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (19 samples, 0.12%)</title><rect x="498.5" y="691.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (18 samples, 0.11%)</title><rect x="498.5" y="675.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.5" y="686.0"></text>
</g>
<g>
<title>JVM_IHashCode (13 samples, 0.08%)</title><rect x="498.6" y="659.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="501.6" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (5 samples, 0.03%)</title><rect x="499.2" y="643.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="502.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (5 samples, 0.03%)</title><rect x="500.1" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (80 samples, 0.49%)</title><rect x="500.4" y="803.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (77 samples, 0.47%)</title><rect x="500.7" y="787.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="503.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.06%)</title><rect x="500.7" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (9 samples, 0.06%)</title><rect x="500.7" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/1325079472.apply (5 samples, 0.03%)</title><rect x="500.9" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/1325079472.apply (68 samples, 0.42%)</title><rect x="501.3" y="771.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (67 samples, 0.41%)</title><rect x="501.4" y="755.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (63 samples, 0.39%)</title><rect x="501.4" y="739.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (62 samples, 0.38%)</title><rect x="501.5" y="723.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.5" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (22 samples, 0.14%)</title><rect x="502.4" y="707.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="505.4" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (22 samples, 0.14%)</title><rect x="502.4" y="691.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="505.4" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (22 samples, 0.14%)</title><rect x="502.4" y="675.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="505.4" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (18 samples, 0.11%)</title><rect x="502.4" y="659.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="505.4" y="670.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.02%)</title><rect x="503.7" y="659.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="506.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (26 samples, 0.16%)</title><rect x="504.0" y="707.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.0" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (26 samples, 0.16%)</title><rect x="504.0" y="691.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (14 samples, 0.09%)</title><rect x="504.0" y="675.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (10 samples, 0.06%)</title><rect x="504.2" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (6 samples, 0.04%)</title><rect x="504.5" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (12 samples, 0.07%)</title><rect x="505.0" y="675.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.02%)</title><rect x="506.0" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (13 samples, 0.08%)</title><rect x="506.3" y="803.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (4 samples, 0.02%)</title><rect x="506.8" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.02%)</title><rect x="506.8" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.02%)</title><rect x="506.8" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.8" y="766.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.02%)</title><rect x="507.2" y="803.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="510.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$416/297087785.apply (31 samples, 0.19%)</title><rect x="507.5" y="835.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (31 samples, 0.19%)</title><rect x="507.5" y="819.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (17 samples, 0.10%)</title><rect x="508.5" y="803.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (14 samples, 0.09%)</title><rect x="508.5" y="787.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="511.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.04%)</title><rect x="509.0" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.04%)</title><rect x="509.1" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.02%)</title><rect x="509.2" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.02%)</title><rect x="509.2" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.2" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.02%)</title><rect x="509.2" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (390 samples, 2.40%)</title><rect x="509.9" y="947.0" width="28.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.9" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (21 samples, 0.13%)</title><rect x="510.0" y="931.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.0" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (15 samples, 0.09%)</title><rect x="510.1" y="915.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.1" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (15 samples, 0.09%)</title><rect x="510.1" y="899.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.1" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.04%)</title><rect x="510.8" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (69 samples, 0.43%)</title><rect x="511.6" y="931.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.6" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (34 samples, 0.21%)</title><rect x="513.5" y="915.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.5" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (34 samples, 0.21%)</title><rect x="513.5" y="899.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.5" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (15 samples, 0.09%)</title><rect x="514.7" y="883.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.7" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.04%)</title><rect x="516.1" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.1" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (5 samples, 0.03%)</title><rect x="516.1" y="899.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (21 samples, 0.13%)</title><rect x="516.6" y="931.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.6" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.06%)</title><rect x="516.9" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.9" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.06%)</title><rect x="516.9" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.9" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.05%)</title><rect x="517.0" y="883.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.0" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.04%)</title><rect x="517.6" y="915.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (19 samples, 0.12%)</title><rect x="518.1" y="931.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.08%)</title><rect x="518.5" y="915.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.07%)</title><rect x="518.7" y="899.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (109 samples, 0.67%)</title><rect x="519.5" y="931.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.5" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (104 samples, 0.64%)</title><rect x="519.8" y="915.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (104 samples, 0.64%)</title><rect x="519.8" y="899.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.8" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="519.9" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.9" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="519.9" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.9" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.get$Lambda (4 samples, 0.02%)</title><rect x="519.9" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.9" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (16 samples, 0.10%)</title><rect x="520.2" y="883.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.2" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (16 samples, 0.10%)</title><rect x="520.2" y="867.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.2" y="878.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="520.2" y="851.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="523.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (9 samples, 0.06%)</title><rect x="520.7" y="851.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (75 samples, 0.46%)</title><rect x="521.4" y="883.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.4" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (70 samples, 0.43%)</title><rect x="521.8" y="867.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (62 samples, 0.38%)</title><rect x="522.4" y="851.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="522.7" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.7" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="522.7" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.7" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.get$Lambda (4 samples, 0.02%)</title><rect x="522.7" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.7" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (4 samples, 0.02%)</title><rect x="523.0" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.0" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (28 samples, 0.17%)</title><rect x="523.3" y="835.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="526.3" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (26 samples, 0.16%)</title><rect x="523.3" y="819.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.3" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (23 samples, 0.14%)</title><rect x="523.6" y="803.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.6" y="814.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.07%)</title><rect x="523.6" y="787.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="526.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.04%)</title><rect x="524.4" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.02%)</title><rect x="524.5" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/707161353.test (5 samples, 0.03%)</title><rect x="524.9" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.9" y="798.0"></text>
</g>
<g>
<title>java/util/List.copyOf (7 samples, 0.04%)</title><rect x="525.3" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.3" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (7 samples, 0.04%)</title><rect x="525.3" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.3" y="830.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.02%)</title><rect x="525.5" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.09%)</title><rect x="525.8" y="835.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.8" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (6 samples, 0.04%)</title><rect x="526.9" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (146 samples, 0.90%)</title><rect x="527.6" y="931.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.6" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (16 samples, 0.10%)</title><rect x="528.4" y="915.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.09%)</title><rect x="528.4" y="899.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.07%)</title><rect x="528.5" y="883.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (119 samples, 0.73%)</title><rect x="529.6" y="915.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (24 samples, 0.15%)</title><rect x="529.9" y="899.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (24 samples, 0.15%)</title><rect x="529.9" y="883.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (24 samples, 0.15%)</title><rect x="529.9" y="867.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.06%)</title><rect x="531.8" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.06%)</title><rect x="531.8" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.8" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.04%)</title><rect x="531.9" y="867.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (19 samples, 0.12%)</title><rect x="532.4" y="899.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (19 samples, 0.12%)</title><rect x="532.4" y="883.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.trim (9 samples, 0.06%)</title><rect x="533.8" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.04%)</title><rect x="534.0" y="883.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.0" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="534.6" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.6" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (44 samples, 0.27%)</title><rect x="535.0" y="899.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.0" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (9 samples, 0.06%)</title><rect x="535.6" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.05%)</title><rect x="535.7" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.7" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.04%)</title><rect x="535.8" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.8" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (14 samples, 0.09%)</title><rect x="536.4" y="883.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.4" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="537.2" y="867.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="540.2" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (4 samples, 0.02%)</title><rect x="537.2" y="851.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="540.2" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="537.2" y="835.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="540.2" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="537.2" y="819.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="540.2" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="537.2" y="803.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="540.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$417/307390683.apply (11 samples, 0.07%)</title><rect x="537.4" y="883.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (11 samples, 0.07%)</title><rect x="537.4" y="867.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.4" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.04%)</title><rect x="537.7" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (8 samples, 0.05%)</title><rect x="538.5" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (5 samples, 0.03%)</title><rect x="538.7" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,136 samples, 7.00%)</title><rect x="539.2" y="1059.0" width="82.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.2" y="1070.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (6 samples, 0.04%)</title><rect x="539.3" y="1043.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,125 samples, 6.93%)</title><rect x="540.0" y="1043.0" width="81.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.0" y="1054.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (6 samples, 0.04%)</title><rect x="540.1" y="1027.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.03%)</title><rect x="540.1" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.03%)</title><rect x="540.1" y="995.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.03%)</title><rect x="540.1" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.03%)</title><rect x="540.1" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (4 samples, 0.02%)</title><rect x="540.2" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (4 samples, 0.02%)</title><rect x="540.2" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (4 samples, 0.02%)</title><rect x="540.2" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.2" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.02%)</title><rect x="540.2" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.weakCompareAndSet (4 samples, 0.02%)</title><rect x="540.2" y="883.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,113 samples, 6.86%)</title><rect x="540.5" y="1027.0" width="80.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.5" y="1038.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$310/1792432475.run (1,113 samples, 6.86%)</title><rect x="540.5" y="1011.0" width="80.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.5" y="1022.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,113 samples, 6.86%)</title><rect x="540.5" y="995.0" width="80.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.5" y="1006.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (16 samples, 0.10%)</title><rect x="540.8" y="979.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (4 samples, 0.02%)</title><rect x="541.0" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (4 samples, 0.02%)</title><rect x="541.0" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="544.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (7 samples, 0.04%)</title><rect x="541.3" y="963.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="544.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5 samples, 0.03%)</title><rect x="541.4" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1,077 samples, 6.64%)</title><rect x="541.9" y="979.0" width="78.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.9" y="990.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,076 samples, 6.63%)</title><rect x="542.0" y="963.0" width="78.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.0" y="974.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,074 samples, 6.62%)</title><rect x="542.2" y="947.0" width="78.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.2" y="958.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,072 samples, 6.60%)</title><rect x="542.3" y="931.0" width="77.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.3" y="942.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,071 samples, 6.60%)</title><rect x="542.4" y="915.0" width="77.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.4" y="926.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,068 samples, 6.58%)</title><rect x="542.6" y="899.0" width="77.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.6" y="910.0">jdk/inter..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="542.7" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.7" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="542.8" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1243324746.run (604 samples, 3.72%)</title><rect x="543.2" y="883.0" width="43.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.2" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (604 samples, 3.72%)</title><rect x="543.2" y="867.0" width="43.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.2" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (600 samples, 3.70%)</title><rect x="543.5" y="851.0" width="43.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.5" y="862.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (42 samples, 0.26%)</title><rect x="543.6" y="835.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.6" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (17 samples, 0.10%)</title><rect x="544.0" y="819.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.0" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (13 samples, 0.08%)</title><rect x="544.1" y="803.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.1" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (13 samples, 0.08%)</title><rect x="544.1" y="787.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.1" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (13 samples, 0.08%)</title><rect x="544.1" y="771.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.1" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (11 samples, 0.07%)</title><rect x="544.3" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (10 samples, 0.06%)</title><rect x="544.3" y="739.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.06%)</title><rect x="544.4" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (8 samples, 0.05%)</title><rect x="544.4" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.4" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.02%)</title><rect x="545.2" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.02%)</title><rect x="545.2" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.2" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (16 samples, 0.10%)</title><rect x="545.5" y="819.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (15 samples, 0.09%)</title><rect x="545.6" y="803.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.06%)</title><rect x="546.0" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.03%)</title><rect x="546.1" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.03%)</title><rect x="546.1" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.1" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.map (12 samples, 0.07%)</title><rect x="546.7" y="835.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$452/2004759184.apply (11 samples, 0.07%)</title><rect x="546.7" y="819.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="549.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (11 samples, 0.07%)</title><rect x="546.7" y="803.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (11 samples, 0.07%)</title><rect x="546.7" y="787.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (536 samples, 3.30%)</title><rect x="547.5" y="835.0" width="39.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.5" y="846.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.now (11 samples, 0.07%)</title><rect x="547.5" y="819.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.5" y="830.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (11 samples, 0.07%)</title><rect x="547.5" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (10 samples, 0.06%)</title><rect x="547.6" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.6" y="798.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (7 samples, 0.04%)</title><rect x="547.8" y="771.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="550.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (525 samples, 3.23%)</title><rect x="548.3" y="819.0" width="38.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.3" y="830.0">jdk..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (78 samples, 0.48%)</title><rect x="550.1" y="803.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="553.1" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (78 samples, 0.48%)</title><rect x="550.1" y="787.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="553.1" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (77 samples, 0.47%)</title><rect x="550.2" y="771.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="553.2" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (64 samples, 0.39%)</title><rect x="550.4" y="755.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="553.4" y="766.0"></text>
</g>
<g>
<title>SpinPause (10 samples, 0.06%)</title><rect x="555.0" y="755.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="558.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (184 samples, 1.13%)</title><rect x="555.8" y="803.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.8" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.plus (59 samples, 0.36%)</title><rect x="556.2" y="787.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.2" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (59 samples, 0.36%)</title><rect x="556.2" y="771.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.2" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.plus (59 samples, 0.36%)</title><rect x="556.2" y="755.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.2" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (11 samples, 0.07%)</title><rect x="559.7" y="739.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.7" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (9 samples, 0.06%)</title><rect x="559.8" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.8" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (9 samples, 0.06%)</title><rect x="560.5" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.5" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (7 samples, 0.04%)</title><rect x="560.6" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.6" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.plus (7 samples, 0.04%)</title><rect x="560.6" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.6" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (5 samples, 0.03%)</title><rect x="560.8" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.8" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (18 samples, 0.11%)</title><rect x="561.1" y="787.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.1" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (18 samples, 0.11%)</title><rect x="561.1" y="771.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.1" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (18 samples, 0.11%)</title><rect x="561.1" y="755.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="564.1" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (5 samples, 0.03%)</title><rect x="562.1" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.1" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.hasNext (5 samples, 0.03%)</title><rect x="562.5" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.5" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (37 samples, 0.23%)</title><rect x="562.8" y="787.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.8" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (45 samples, 0.28%)</title><rect x="565.5" y="787.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.5" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (45 samples, 0.28%)</title><rect x="565.5" y="771.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryEntry.&lt;init&gt; (5 samples, 0.03%)</title><rect x="568.8" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (19 samples, 0.12%)</title><rect x="569.1" y="803.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (15 samples, 0.09%)</title><rect x="569.1" y="787.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.05%)</title><rect x="569.1" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (7 samples, 0.04%)</title><rect x="569.2" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.2" y="766.0"></text>
</g>
<g>
<title>java/util/Objects.equals (5 samples, 0.03%)</title><rect x="569.4" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.4" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (5 samples, 0.03%)</title><rect x="569.4" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.4" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (4 samples, 0.02%)</title><rect x="569.4" y="707.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.04%)</title><rect x="569.7" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (7 samples, 0.04%)</title><rect x="569.7" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.7" y="766.0"></text>
</g>
<g>
<title>java/util/Objects.hash (7 samples, 0.04%)</title><rect x="569.7" y="739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.7" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (7 samples, 0.04%)</title><rect x="569.7" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (220 samples, 1.36%)</title><rect x="570.5" y="803.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (220 samples, 1.36%)</title><rect x="570.5" y="787.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (35 samples, 0.22%)</title><rect x="570.5" y="771.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (34 samples, 0.21%)</title><rect x="570.6" y="755.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (33 samples, 0.20%)</title><rect x="570.7" y="739.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (19 samples, 0.12%)</title><rect x="571.0" y="723.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (19 samples, 0.12%)</title><rect x="571.0" y="707.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.0" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.04%)</title><rect x="571.3" y="691.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="574.3" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.03%)</title><rect x="571.4" y="675.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="574.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.04%)</title><rect x="571.9" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.03%)</title><rect x="572.0" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.0" y="686.0"></text>
</g>
<g>
<title>__GI___write (4 samples, 0.02%)</title><rect x="572.0" y="659.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="575.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="572.0" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="575.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (6 samples, 0.04%)</title><rect x="572.3" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="575.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (4 samples, 0.02%)</title><rect x="572.8" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.8" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="572.8" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="575.8" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (4 samples, 0.02%)</title><rect x="572.8" y="691.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="575.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (185 samples, 1.14%)</title><rect x="573.1" y="771.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (184 samples, 1.13%)</title><rect x="573.1" y="755.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (145 samples, 0.89%)</title><rect x="573.2" y="739.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (144 samples, 0.89%)</title><rect x="573.2" y="723.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (141 samples, 0.87%)</title><rect x="573.4" y="707.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.4" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (26 samples, 0.16%)</title><rect x="574.8" y="691.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="577.8" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (25 samples, 0.15%)</title><rect x="574.9" y="675.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="577.9" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (22 samples, 0.14%)</title><rect x="575.1" y="659.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="578.1" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (15 samples, 0.09%)</title><rect x="575.2" y="643.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="578.2" y="654.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.04%)</title><rect x="576.3" y="643.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="579.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.04%)</title><rect x="576.8" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (87 samples, 0.54%)</title><rect x="577.3" y="691.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.3" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.04%)</title><rect x="577.5" y="675.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="580.5" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.04%)</title><rect x="577.5" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="580.5" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.03%)</title><rect x="577.6" y="643.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="580.6" y="654.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="577.6" y="627.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="580.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (78 samples, 0.48%)</title><rect x="577.9" y="675.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.9" y="686.0"></text>
</g>
<g>
<title>__GI___write (77 samples, 0.47%)</title><rect x="578.0" y="659.0" width="5.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="581.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 0.42%)</title><rect x="578.7" y="643.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="581.7" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 0.41%)</title><rect x="578.7" y="627.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="581.7" y="638.0"></text>
</g>
<g>
<title>sys_write (60 samples, 0.37%)</title><rect x="579.2" y="611.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.2" y="622.0"></text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.03%)</title><rect x="579.2" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="582.2" y="606.0"></text>
</g>
<g>
<title>vfs_write (53 samples, 0.33%)</title><rect x="579.7" y="595.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="582.7" y="606.0"></text>
</g>
<g>
<title>__vfs_write (43 samples, 0.26%)</title><rect x="579.8" y="579.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="582.8" y="590.0"></text>
</g>
<g>
<title>new_sync_write (42 samples, 0.26%)</title><rect x="579.9" y="563.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="582.9" y="574.0"></text>
</g>
<g>
<title>pipe_write (40 samples, 0.25%)</title><rect x="580.0" y="547.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="583.0" y="558.0"></text>
</g>
<g>
<title>__wake_up_sync_key (34 samples, 0.21%)</title><rect x="580.2" y="531.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="583.2" y="542.0"></text>
</g>
<g>
<title>__wake_up_common_lock (33 samples, 0.20%)</title><rect x="580.2" y="515.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.2" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (32 samples, 0.20%)</title><rect x="580.3" y="499.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="583.3" y="510.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.03%)</title><rect x="583.0" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="586.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (9 samples, 0.06%)</title><rect x="583.8" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (26 samples, 0.16%)</title><rect x="584.4" y="739.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.4" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (22 samples, 0.14%)</title><rect x="584.7" y="723.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="587.7" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (22 samples, 0.14%)</title><rect x="584.7" y="707.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="587.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.11%)</title><rect x="584.9" y="691.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="587.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.08%)</title><rect x="585.3" y="675.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="588.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.08%)</title><rect x="585.3" y="659.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="588.3" y="670.0"></text>
</g>
<g>
<title>sys_futex (11 samples, 0.07%)</title><rect x="585.4" y="643.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="588.4" y="654.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.07%)</title><rect x="585.4" y="627.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="588.4" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (11 samples, 0.07%)</title><rect x="585.4" y="611.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="588.4" y="622.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.07%)</title><rect x="585.4" y="595.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="588.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.07%)</title><rect x="585.4" y="579.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="588.4" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="585.4" y="563.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="588.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (8 samples, 0.05%)</title><rect x="586.5" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/488176487.accept (45 samples, 0.28%)</title><rect x="587.1" y="883.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (45 samples, 0.28%)</title><rect x="587.1" y="867.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (45 samples, 0.28%)</title><rect x="587.1" y="851.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (36 samples, 0.22%)</title><rect x="587.1" y="835.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36 samples, 0.22%)</title><rect x="587.1" y="819.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (36 samples, 0.22%)</title><rect x="587.1" y="803.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (35 samples, 0.22%)</title><rect x="587.2" y="787.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.09%)</title><rect x="587.2" y="771.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (15 samples, 0.09%)</title><rect x="587.2" y="755.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$439/2095621459.accept (6 samples, 0.04%)</title><rect x="587.7" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$440/162643331.accept (17 samples, 0.10%)</title><rect x="588.5" y="771.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (15 samples, 0.09%)</title><rect x="588.6" y="755.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (15 samples, 0.09%)</title><rect x="588.6" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.6" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (10 samples, 0.06%)</title><rect x="589.0" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.0" y="734.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (6 samples, 0.04%)</title><rect x="589.3" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.3" y="718.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (5 samples, 0.03%)</title><rect x="589.3" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$342/911259849.accept (9 samples, 0.06%)</title><rect x="589.7" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (9 samples, 0.06%)</title><rect x="589.7" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (5 samples, 0.03%)</title><rect x="590.0" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (380 samples, 2.34%)</title><rect x="590.4" y="883.0" width="27.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.4" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (380 samples, 2.34%)</title><rect x="590.4" y="867.0" width="27.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.4" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (380 samples, 2.34%)</title><rect x="590.4" y="851.0" width="27.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.4" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (370 samples, 2.28%)</title><rect x="590.4" y="835.0" width="26.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.4" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (370 samples, 2.28%)</title><rect x="590.4" y="819.0" width="26.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.4" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (370 samples, 2.28%)</title><rect x="590.4" y="803.0" width="26.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.4" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (370 samples, 2.28%)</title><rect x="590.4" y="787.0" width="26.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.4" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.05%)</title><rect x="590.4" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (8 samples, 0.05%)</title><rect x="590.4" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.4" y="766.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="590.5" y="739.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="593.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/460704340.accept (362 samples, 2.23%)</title><rect x="591.0" y="771.0" width="26.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.0" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (362 samples, 2.23%)</title><rect x="591.0" y="755.0" width="26.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.0" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (362 samples, 2.23%)</title><rect x="591.0" y="739.0" width="26.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.0" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (8 samples, 0.05%)</title><rect x="591.0" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.05%)</title><rect x="591.0" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (8 samples, 0.05%)</title><rect x="591.0" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (354 samples, 2.18%)</title><rect x="591.6" y="723.0" width="25.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.6" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17 samples, 0.10%)</title><rect x="592.0" y="707.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.04%)</title><rect x="592.2" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.04%)</title><rect x="592.2" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/1651911151.apply (8 samples, 0.05%)</title><rect x="592.6" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (8 samples, 0.05%)</title><rect x="592.6" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (6 samples, 0.04%)</title><rect x="592.8" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (329 samples, 2.03%)</title><rect x="593.3" y="707.0" width="23.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.3" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (325 samples, 2.00%)</title><rect x="593.6" y="691.0" width="23.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.6" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (317 samples, 1.95%)</title><rect x="593.6" y="675.0" width="23.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="596.6" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (289 samples, 1.78%)</title><rect x="593.6" y="659.0" width="21.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.6" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (289 samples, 1.78%)</title><rect x="593.6" y="643.0" width="21.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.6" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (288 samples, 1.77%)</title><rect x="593.6" y="627.0" width="21.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (6 samples, 0.04%)</title><rect x="593.9" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (277 samples, 1.71%)</title><rect x="594.4" y="611.0" width="20.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (274 samples, 1.69%)</title><rect x="594.7" y="595.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (274 samples, 1.69%)</title><rect x="594.7" y="579.0" width="19.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.7" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (35 samples, 0.22%)</title><rect x="595.0" y="563.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="598.0" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (6 samples, 0.04%)</title><rect x="595.5" y="547.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="598.5" y="558.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.06%)</title><rect x="595.9" y="547.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="598.9" y="558.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (6 samples, 0.04%)</title><rect x="596.6" y="547.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="599.6" y="558.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (5 samples, 0.03%)</title><rect x="597.2" y="547.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="600.2" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (232 samples, 1.43%)</title><rect x="597.6" y="563.0" width="16.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="600.6" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (191 samples, 1.18%)</title><rect x="600.5" y="547.0" width="13.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="603.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (190 samples, 1.17%)</title><rect x="600.5" y="531.0" width="13.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="603.5" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.02%)</title><rect x="602.1" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="605.1" y="526.0"></text>
</g>
<g>
<title>sys_futex (165 samples, 1.02%)</title><rect x="602.4" y="515.0" width="12.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="605.4" y="526.0"></text>
</g>
<g>
<title>do_futex (165 samples, 1.02%)</title><rect x="602.4" y="499.0" width="12.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="605.4" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock (9 samples, 0.06%)</title><rect x="602.5" y="483.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="605.5" y="494.0"></text>
</g>
<g>
<title>futex_wake_op (149 samples, 0.92%)</title><rect x="603.2" y="483.0" width="10.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="606.2" y="494.0"></text>
</g>
<g>
<title>get_futex_key (9 samples, 0.06%)</title><rect x="603.8" y="467.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="606.8" y="478.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.9 (5 samples, 0.03%)</title><rect x="604.1" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="607.1" y="462.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.04%)</title><rect x="604.5" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.5" y="478.0"></text>
</g>
<g>
<title>wake_up_q (124 samples, 0.76%)</title><rect x="605.0" y="467.0" width="9.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="608.0" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (121 samples, 0.75%)</title><rect x="605.2" y="451.0" width="8.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="608.2" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (121 samples, 0.75%)</title><rect x="605.2" y="435.0" width="8.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="608.2" y="446.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.03%)</title><rect x="614.0" y="483.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="617.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (28 samples, 0.17%)</title><rect x="614.6" y="659.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.6" y="670.0"></text>
</g>
<g>
<title>itable stub (12 samples, 0.07%)</title><rect x="615.1" y="643.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="618.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$193/1142862075.accept (5 samples, 0.03%)</title><rect x="616.8" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (5 samples, 0.03%)</title><rect x="616.8" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (5 samples, 0.03%)</title><rect x="616.8" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (9 samples, 0.06%)</title><rect x="617.3" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.3" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="617.3" y="819.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.3" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="617.4" y="803.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="620.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (9 samples, 0.06%)</title><rect x="618.0" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (7 samples, 0.04%)</title><rect x="618.1" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (6 samples, 0.04%)</title><rect x="618.2" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (6 samples, 0.04%)</title><rect x="618.2" y="835.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.2" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (6 samples, 0.04%)</title><rect x="618.2" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (5 samples, 0.03%)</title><rect x="618.6" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (5 samples, 0.03%)</title><rect x="618.6" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="621.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (17 samples, 0.10%)</title><rect x="619.0" y="883.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.06%)</title><rect x="619.2" y="867.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.2" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (10 samples, 0.06%)</title><rect x="619.2" y="851.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (16 samples, 0.10%)</title><rect x="620.2" y="979.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (10 samples, 0.06%)</title><rect x="620.5" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (10 samples, 0.06%)</title><rect x="620.5" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (10 samples, 0.06%)</title><rect x="620.5" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.05%)</title><rect x="620.5" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.05%)</title><rect x="620.5" y="899.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 0.05%)</title><rect x="620.5" y="883.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.05%)</title><rect x="620.5" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.05%)</title><rect x="620.5" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (8 samples, 0.05%)</title><rect x="620.5" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 0.05%)</title><rect x="620.5" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (7 samples, 0.04%)</title><rect x="620.5" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.04%)</title><rect x="620.5" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7 samples, 0.04%)</title><rect x="620.5" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$374/2048942177.apply (4 samples, 0.02%)</title><rect x="620.7" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5 samples, 0.03%)</title><rect x="621.4" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.run (2,692 samples, 16.59%)</title><rect x="621.8" y="1091.0" width="195.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.8" y="1102.0">ru/mail/polis/service/kat..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (2,682 samples, 16.52%)</title><rect x="622.5" y="1075.0" width="195.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.5" y="1086.0">ru/mail/polis/service/kat..</text>
</g>
<g>
<title>java/lang/String.getBytes (29 samples, 0.18%)</title><rect x="622.6" y="1059.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (24 samples, 0.15%)</title><rect x="622.8" y="1043.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.10%)</title><rect x="623.0" y="1027.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.0" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.07%)</title><rect x="623.4" y="1011.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.4" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="623.8" y="995.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="626.8" y="1006.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="624.2" y="1027.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="627.2" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.07%)</title><rect x="624.8" y="1059.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.07%)</title><rect x="624.8" y="1043.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.8" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.isProxied (66 samples, 0.41%)</title><rect x="625.7" y="1059.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (63 samples, 0.39%)</title><rect x="625.9" y="1043.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (25 samples, 0.15%)</title><rect x="626.4" y="1027.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.length (11 samples, 0.07%)</title><rect x="626.4" y="1011.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.coder (5 samples, 0.03%)</title><rect x="626.8" y="995.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.09%)</title><rect x="627.2" y="1011.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.20%)</title><rect x="628.2" y="1027.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.19%)</title><rect x="628.2" y="1011.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.2" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (14 samples, 0.09%)</title><rect x="628.8" y="995.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="631.8" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (13 samples, 0.08%)</title><rect x="628.8" y="979.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="631.8" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (13 samples, 0.08%)</title><rect x="628.8" y="963.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="631.8" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.05%)</title><rect x="629.0" y="947.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="632.0" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.06%)</title><rect x="629.8" y="995.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.8" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (9 samples, 0.06%)</title><rect x="629.8" y="979.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="632.8" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.04%)</title><rect x="630.0" y="963.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="633.0" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.04%)</title><rect x="630.0" y="947.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="633.0" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="630.0" y="931.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="633.0" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="630.0" y="915.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="633.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (2,572 samples, 15.85%)</title><rect x="630.5" y="1059.0" width="187.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.5" y="1070.0">ru/mail/polis/service/ka..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMethod (2,562 samples, 15.78%)</title><rect x="631.2" y="1043.0" width="186.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.2" y="1054.0">ru/mail/polis/service/ka..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAcceptAsync (8 samples, 0.05%)</title><rect x="635.5" y="1027.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (7 samples, 0.04%)</title><rect x="635.6" y="1011.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.collect (20 samples, 0.12%)</title><rect x="636.9" y="1027.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.9" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.03%)</title><rect x="637.0" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (13 samples, 0.08%)</title><rect x="637.4" y="1011.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (12 samples, 0.07%)</title><rect x="637.5" y="995.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.04%)</title><rect x="637.6" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.03%)</title><rect x="637.8" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.02%)</title><rect x="637.8" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.merge (5 samples, 0.03%)</title><rect x="638.3" y="1027.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (1,079 samples, 6.65%)</title><rect x="638.7" y="1027.0" width="78.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.7" y="1038.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,079 samples, 6.65%)</title><rect x="638.7" y="1011.0" width="78.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.7" y="1022.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.06%)</title><rect x="639.4" y="995.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.06%)</title><rect x="639.5" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.5" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.06%)</title><rect x="639.5" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.5" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,050 samples, 6.47%)</title><rect x="640.2" y="995.0" width="76.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.2" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (54 samples, 0.33%)</title><rect x="640.2" y="979.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.2" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="640.5" y="963.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="643.5" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (23 samples, 0.14%)</title><rect x="640.8" y="963.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.8" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (20 samples, 0.12%)</title><rect x="641.0" y="947.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="644.0" y="958.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (18 samples, 0.11%)</title><rect x="641.1" y="931.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="644.1" y="942.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (17 samples, 0.10%)</title><rect x="641.1" y="915.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="644.1" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (15 samples, 0.09%)</title><rect x="641.3" y="899.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="644.3" y="910.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (4 samples, 0.02%)</title><rect x="641.4" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="644.4" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (22 samples, 0.14%)</title><rect x="642.5" y="963.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.5" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (12 samples, 0.07%)</title><rect x="642.7" y="947.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.04%)</title><rect x="643.6" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.6" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.04%)</title><rect x="643.6" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.6" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.04%)</title><rect x="643.6" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (996 samples, 6.14%)</title><rect x="644.1" y="979.0" width="72.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.1" y="990.0">one/nio/..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (26 samples, 0.16%)</title><rect x="644.2" y="963.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="647.2" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (21 samples, 0.13%)</title><rect x="644.5" y="947.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="647.5" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (21 samples, 0.13%)</title><rect x="644.5" y="931.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="647.5" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (19 samples, 0.12%)</title><rect x="644.5" y="915.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="647.5" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (11 samples, 0.07%)</title><rect x="644.7" y="899.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="647.7" y="910.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (5 samples, 0.03%)</title><rect x="645.0" y="883.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="648.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (968 samples, 5.96%)</title><rect x="646.1" y="963.0" width="70.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.1" y="974.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (962 samples, 5.93%)</title><rect x="646.4" y="947.0" width="70.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.4" y="958.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (961 samples, 5.92%)</title><rect x="646.5" y="931.0" width="69.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.5" y="942.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (20 samples, 0.12%)</title><rect x="646.9" y="915.0" width="1.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="649.9" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (4 samples, 0.02%)</title><rect x="647.5" y="899.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="650.5" y="910.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.04%)</title><rect x="647.8" y="899.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="650.8" y="910.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.02%)</title><rect x="648.4" y="915.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="651.4" y="926.0"></text>
</g>
<g>
<title>send (929 samples, 5.72%)</title><rect x="648.7" y="915.0" width="67.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="651.7" y="926.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (891 samples, 5.49%)</title><rect x="651.5" y="899.0" width="64.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="654.5" y="910.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (890 samples, 5.48%)</title><rect x="651.5" y="883.0" width="64.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="654.5" y="894.0">do_sysc..</text>
</g>
<g>
<title>sys_sendto (875 samples, 5.39%)</title><rect x="652.6" y="867.0" width="63.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="655.6" y="878.0">sys_sen..</text>
</g>
<g>
<title>SYSC_sendto (872 samples, 5.37%)</title><rect x="652.6" y="851.0" width="63.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="655.6" y="862.0">SYSC_se..</text>
</g>
<g>
<title>import_single_range (4 samples, 0.02%)</title><rect x="653.2" y="835.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="656.2" y="846.0"></text>
</g>
<g>
<title>sock_sendmsg (847 samples, 5.22%)</title><rect x="653.5" y="835.0" width="61.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="656.5" y="846.0">sock_s..</text>
</g>
<g>
<title>inet_sendmsg (843 samples, 5.19%)</title><rect x="653.5" y="819.0" width="61.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="656.5" y="830.0">inet_s..</text>
</g>
<g>
<title>tcp_sendmsg (840 samples, 5.18%)</title><rect x="653.8" y="803.0" width="61.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.8" y="814.0">tcp_se..</text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.03%)</title><rect x="654.0" y="787.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="657.0" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (819 samples, 5.05%)</title><rect x="655.1" y="787.0" width="59.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="658.1" y="798.0">tcp_se..</text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.05%)</title><rect x="656.5" y="771.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="659.5" y="782.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.03%)</title><rect x="656.6" y="755.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="659.6" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (42 samples, 0.26%)</title><rect x="657.3" y="771.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="660.3" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (37 samples, 0.23%)</title><rect x="657.4" y="755.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="660.4" y="766.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (16 samples, 0.10%)</title><rect x="658.0" y="739.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="661.0" y="750.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.07%)</title><rect x="658.0" y="723.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.0" y="734.0"></text>
</g>
<g>
<title>__slab_alloc (7 samples, 0.04%)</title><rect x="658.3" y="707.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="661.3" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.07%)</title><rect x="659.1" y="739.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="662.1" y="750.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.02%)</title><rect x="659.7" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="662.7" y="734.0"></text>
</g>
<g>
<title>skb_entail (10 samples, 0.06%)</title><rect x="660.3" y="771.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="663.3" y="782.0"></text>
</g>
<g>
<title>tcp_push (708 samples, 4.36%)</title><rect x="661.2" y="771.0" width="51.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="664.2" y="782.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (705 samples, 4.34%)</title><rect x="661.3" y="755.0" width="51.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="664.3" y="766.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (698 samples, 4.30%)</title><rect x="661.8" y="739.0" width="50.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="664.8" y="750.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (643 samples, 3.96%)</title><rect x="662.9" y="723.0" width="46.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="665.9" y="734.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (616 samples, 3.80%)</title><rect x="664.4" y="707.0" width="44.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.4" y="718.0">ip_q..</text>
</g>
<g>
<title>ip_local_out (605 samples, 3.73%)</title><rect x="664.7" y="691.0" width="44.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="667.7" y="702.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (154 samples, 0.95%)</title><rect x="664.7" y="675.0" width="11.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="667.7" y="686.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.04%)</title><rect x="665.0" y="659.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="668.0" y="670.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (6 samples, 0.04%)</title><rect x="665.5" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="668.5" y="670.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (9 samples, 0.06%)</title><rect x="666.1" y="659.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="669.1" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (126 samples, 0.78%)</title><rect x="666.8" y="659.0" width="9.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="669.8" y="670.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (12 samples, 0.07%)</title><rect x="667.1" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="670.1" y="654.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (10 samples, 0.06%)</title><rect x="667.2" y="627.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="670.2" y="638.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (20 samples, 0.12%)</title><rect x="667.9" y="643.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="670.9" y="654.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (19 samples, 0.12%)</title><rect x="668.0" y="627.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="671.0" y="638.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (6 samples, 0.04%)</title><rect x="669.4" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="672.4" y="654.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (4 samples, 0.02%)</title><rect x="669.5" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="672.5" y="638.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (77 samples, 0.47%)</title><rect x="669.8" y="643.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.8" y="654.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (65 samples, 0.40%)</title><rect x="670.0" y="627.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="673.0" y="638.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (9 samples, 0.06%)</title><rect x="670.8" y="611.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="673.8" y="622.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (8 samples, 0.05%)</title><rect x="672.2" y="611.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="675.2" y="622.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (21 samples, 0.13%)</title><rect x="673.0" y="611.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="676.0" y="622.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (8 samples, 0.05%)</title><rect x="673.9" y="595.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="676.9" y="606.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (5 samples, 0.03%)</title><rect x="675.1" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="678.1" y="638.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (4 samples, 0.02%)</title><rect x="675.6" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="678.6" y="654.0"></text>
</g>
<g>
<title>ip_output (444 samples, 2.74%)</title><rect x="676.1" y="675.0" width="32.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.1" y="686.0">ip..</text>
</g>
<g>
<title>ip_finish_output (415 samples, 2.56%)</title><rect x="676.4" y="659.0" width="30.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="679.4" y="670.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (413 samples, 2.54%)</title><rect x="676.5" y="643.0" width="30.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="679.5" y="654.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (365 samples, 2.25%)</title><rect x="677.2" y="627.0" width="26.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="680.2" y="638.0">_..</text>
</g>
<g>
<title>do_softirq.part.17 (365 samples, 2.25%)</title><rect x="677.2" y="611.0" width="26.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="680.2" y="622.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (363 samples, 2.24%)</title><rect x="677.4" y="595.0" width="26.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="680.4" y="606.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (360 samples, 2.22%)</title><rect x="677.4" y="579.0" width="26.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="680.4" y="590.0">_..</text>
</g>
<g>
<title>net_rx_action (341 samples, 2.10%)</title><rect x="678.3" y="563.0" width="24.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="681.3" y="574.0">n..</text>
</g>
<g>
<title>process_backlog (335 samples, 2.06%)</title><rect x="678.7" y="547.0" width="24.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="681.7" y="558.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (331 samples, 2.04%)</title><rect x="678.9" y="531.0" width="24.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="681.9" y="542.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (326 samples, 2.01%)</title><rect x="679.1" y="515.0" width="23.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="682.1" y="526.0">_..</text>
</g>
<g>
<title>ip_rcv (303 samples, 1.87%)</title><rect x="680.6" y="499.0" width="22.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="683.6" y="510.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (260 samples, 1.60%)</title><rect x="682.0" y="483.0" width="18.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="685.0" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver (255 samples, 1.57%)</title><rect x="682.4" y="467.0" width="18.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="685.4" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (231 samples, 1.42%)</title><rect x="682.6" y="451.0" width="16.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="685.6" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (227 samples, 1.40%)</title><rect x="682.9" y="435.0" width="16.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="685.9" y="446.0"></text>
</g>
<g>
<title>__inet_lookup_established (17 samples, 0.10%)</title><rect x="683.5" y="419.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="686.5" y="430.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.05%)</title><rect x="684.8" y="419.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="687.8" y="430.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.02%)</title><rect x="685.1" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="688.1" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (191 samples, 1.18%)</title><rect x="685.5" y="419.0" width="13.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="688.5" y="430.0"></text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.04%)</title><rect x="685.8" y="403.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="688.8" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (179 samples, 1.10%)</title><rect x="686.3" y="403.0" width="13.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="689.3" y="414.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (16 samples, 0.10%)</title><rect x="686.7" y="387.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="689.7" y="398.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (14 samples, 0.09%)</title><rect x="686.8" y="371.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="689.8" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.07%)</title><rect x="687.0" y="355.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="690.0" y="366.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.06%)</title><rect x="687.1" y="339.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="690.1" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.06%)</title><rect x="687.1" y="323.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="690.1" y="334.0"></text>
</g>
<g>
<title>tcp_ack (87 samples, 0.54%)</title><rect x="688.4" y="387.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="691.4" y="398.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (66 samples, 0.41%)</title><rect x="689.8" y="371.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="692.8" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (30 samples, 0.18%)</title><rect x="690.9" y="355.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="693.9" y="366.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.06%)</title><rect x="690.9" y="339.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="693.9" y="350.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.04%)</title><rect x="691.1" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="694.1" y="334.0"></text>
</g>
<g>
<title>skb_release_all (21 samples, 0.13%)</title><rect x="691.6" y="339.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="694.6" y="350.0"></text>
</g>
<g>
<title>skb_release_data (19 samples, 0.12%)</title><rect x="691.6" y="323.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="694.6" y="334.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.05%)</title><rect x="692.4" y="307.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="695.4" y="318.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.05%)</title><rect x="692.4" y="291.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="695.4" y="302.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.02%)</title><rect x="692.7" y="275.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="695.7" y="286.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (10 samples, 0.06%)</title><rect x="693.7" y="355.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="696.7" y="366.0"></text>
</g>
<g>
<title>tcp_data_queue (54 samples, 0.33%)</title><rect x="694.9" y="387.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="697.9" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (37 samples, 0.23%)</title><rect x="695.6" y="371.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="698.6" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (33 samples, 0.20%)</title><rect x="695.9" y="355.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.9" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (32 samples, 0.20%)</title><rect x="696.0" y="339.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="699.0" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (32 samples, 0.20%)</title><rect x="696.0" y="323.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="699.0" y="334.0"></text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.03%)</title><rect x="698.3" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="701.3" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.09%)</title><rect x="699.6" y="451.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.6" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.04%)</title><rect x="699.6" y="435.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="702.6" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.04%)</title><rect x="699.7" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="702.7" y="430.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (4 samples, 0.02%)</title><rect x="700.1" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="703.1" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.02%)</title><rect x="700.1" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="703.1" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.09%)</title><rect x="701.5" y="483.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="704.5" y="494.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (5 samples, 0.03%)</title><rect x="701.7" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="704.7" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.03%)</title><rect x="701.7" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="704.7" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (6 samples, 0.04%)</title><rect x="702.2" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="705.2" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.04%)</title><rect x="702.2" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="705.2" y="462.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.03%)</title><rect x="703.1" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="706.1" y="574.0"></text>
</g>
<g>
<title>dev_queue_xmit (38 samples, 0.23%)</title><rect x="703.8" y="627.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="706.8" y="638.0"></text>
</g>
<g>
<title>__dev_queue_xmit (38 samples, 0.23%)</title><rect x="703.8" y="611.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.8" y="622.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (20 samples, 0.12%)</title><rect x="704.2" y="595.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="707.2" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (14 samples, 0.09%)</title><rect x="704.4" y="579.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="707.4" y="590.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.06%)</title><rect x="704.8" y="563.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="707.8" y="574.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.05%)</title><rect x="704.9" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.9" y="558.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.05%)</title><rect x="704.9" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="707.9" y="542.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.04%)</title><rect x="705.8" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="708.8" y="606.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.03%)</title><rect x="705.9" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="708.9" y="590.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (4 samples, 0.02%)</title><rect x="706.3" y="595.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="709.3" y="606.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (4 samples, 0.02%)</title><rect x="706.9" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="709.9" y="670.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.02%)</title><rect x="707.2" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="710.2" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.07%)</title><rect x="707.5" y="659.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="710.5" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="708.4" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="711.4" y="686.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.04%)</title><rect x="708.7" y="691.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.7" y="702.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.02%)</title><rect x="709.2" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.2" y="718.0"></text>
</g>
<g>
<title>sched_clock_cpu (4 samples, 0.02%)</title><rect x="710.0" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.0" y="734.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (19 samples, 0.12%)</title><rect x="710.3" y="723.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="713.3" y="734.0"></text>
</g>
<g>
<title>tcp_rearm_rto (12 samples, 0.07%)</title><rect x="710.8" y="707.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="713.8" y="718.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (10 samples, 0.06%)</title><rect x="711.0" y="691.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="714.0" y="702.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.06%)</title><rect x="711.0" y="675.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="714.0" y="686.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.06%)</title><rect x="711.0" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="714.0" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.06%)</title><rect x="711.0" y="643.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="714.0" y="654.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.03%)</title><rect x="712.1" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="715.1" y="734.0"></text>
</g>
<g>
<title>tcp_send_mss (23 samples, 0.14%)</title><rect x="712.8" y="771.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="715.8" y="782.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.02%)</title><rect x="712.9" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="715.9" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (18 samples, 0.11%)</title><rect x="713.2" y="755.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="716.2" y="766.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.02%)</title><rect x="714.0" y="739.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="717.0" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (13 samples, 0.08%)</title><rect x="715.0" y="835.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="718.0" y="846.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.04%)</title><rect x="715.1" y="819.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="718.1" y="830.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.04%)</title><rect x="715.1" y="803.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="718.1" y="814.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.04%)</title><rect x="715.1" y="787.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="718.1" y="798.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="715.6" y="819.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="718.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.04%)</title><rect x="716.5" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="716.6" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$460/1313189910.act (450 samples, 2.77%)</title><rect x="717.2" y="1027.0" width="32.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.2" y="1038.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$2 (450 samples, 2.77%)</title><rect x="717.2" y="1011.0" width="32.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.2" y="1022.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (450 samples, 2.77%)</title><rect x="717.2" y="995.0" width="32.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.2" y="1006.0">ru..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.05%)</title><rect x="717.5" y="979.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (437 samples, 2.69%)</title><rect x="718.1" y="979.0" width="31.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.1" y="990.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (7 samples, 0.04%)</title><rect x="718.1" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.1" y="974.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="718.1" y="947.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.15%)</title><rect x="718.6" y="963.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.6" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.11%)</title><rect x="718.6" y="947.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.6" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (18 samples, 0.11%)</title><rect x="718.6" y="931.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.11%)</title><rect x="718.6" y="915.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.6" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.07%)</title><rect x="718.6" y="899.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.6" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.04%)</title><rect x="718.6" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.6" y="894.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.04%)</title><rect x="718.6" y="867.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.6" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.04%)</title><rect x="718.6" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.04%)</title><rect x="718.6" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.6" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.03%)</title><rect x="718.6" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.6" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.02%)</title><rect x="719.1" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.02%)</title><rect x="719.1" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$519/1189393447.apply (4 samples, 0.02%)</title><rect x="719.6" y="899.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4 samples, 0.02%)</title><rect x="719.6" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.6" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="719.6" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$527/1360750443.apply (7 samples, 0.04%)</title><rect x="719.9" y="947.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (7 samples, 0.04%)</title><rect x="719.9" y="931.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.9" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="719.9" y="915.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.9" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (6 samples, 0.04%)</title><rect x="720.0" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.0" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="720.0" y="883.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="720.0" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.0" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="720.1" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.1" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="720.1" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4 samples, 0.02%)</title><rect x="720.4" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.4" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="720.4" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.4" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="720.4" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.4" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="720.4" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="720.4" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.4" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="720.4" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (401 samples, 2.47%)</title><rect x="720.7" y="963.0" width="29.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.7" y="974.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (18 samples, 0.11%)</title><rect x="722.1" y="947.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$ValueIterator.&lt;init&gt; (18 samples, 0.11%)</title><rect x="722.1" y="931.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (18 samples, 0.11%)</title><rect x="722.1" y="915.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (12 samples, 0.07%)</title><rect x="722.3" y="899.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (38 samples, 0.23%)</title><rect x="723.5" y="947.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="726.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (38 samples, 0.23%)</title><rect x="723.5" y="931.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.5" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (38 samples, 0.23%)</title><rect x="723.5" y="915.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.5" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (38 samples, 0.23%)</title><rect x="723.5" y="899.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (38 samples, 0.23%)</title><rect x="723.5" y="883.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.5" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (30 samples, 0.18%)</title><rect x="723.5" y="867.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.5" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (15 samples, 0.09%)</title><rect x="723.5" y="851.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.5" y="862.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (15 samples, 0.09%)</title><rect x="723.5" y="835.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (15 samples, 0.09%)</title><rect x="723.5" y="819.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (14 samples, 0.09%)</title><rect x="723.6" y="803.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (10 samples, 0.06%)</title><rect x="723.6" y="787.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="726.6" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (15 samples, 0.09%)</title><rect x="724.6" y="851.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.09%)</title><rect x="724.6" y="835.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$527/1360750443.apply (5 samples, 0.03%)</title><rect x="725.2" y="819.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (5 samples, 0.03%)</title><rect x="725.2" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.2" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="725.3" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$527/1360750443.apply (4 samples, 0.02%)</title><rect x="725.7" y="867.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.7" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4 samples, 0.02%)</title><rect x="725.7" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.7" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="725.7" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.7" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="725.7" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$519/1189393447.apply (4 samples, 0.02%)</title><rect x="726.0" y="867.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (4 samples, 0.02%)</title><rect x="726.0" y="851.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.0" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="726.0" y="835.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.0" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="726.0" y="819.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.0" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="726.0" y="803.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="726.0" y="787.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.0" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="726.0" y="771.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (318 samples, 1.96%)</title><rect x="726.2" y="947.0" width="23.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.2" y="958.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (35 samples, 0.22%)</title><rect x="726.2" y="931.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.2" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (35 samples, 0.22%)</title><rect x="726.2" y="915.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.2" y="926.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (34 samples, 0.21%)</title><rect x="726.3" y="899.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.3" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (34 samples, 0.21%)</title><rect x="726.3" y="883.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (31 samples, 0.19%)</title><rect x="726.5" y="867.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.5" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (18 samples, 0.11%)</title><rect x="726.5" y="851.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (11 samples, 0.07%)</title><rect x="727.0" y="835.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (11 samples, 0.07%)</title><rect x="727.0" y="819.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (11 samples, 0.07%)</title><rect x="727.0" y="803.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (10 samples, 0.06%)</title><rect x="727.0" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (10 samples, 0.06%)</title><rect x="727.0" y="771.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (10 samples, 0.06%)</title><rect x="727.0" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (9 samples, 0.06%)</title><rect x="727.1" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (11 samples, 0.07%)</title><rect x="728.0" y="851.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.04%)</title><rect x="728.3" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.04%)</title><rect x="728.3" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.05%)</title><rect x="728.9" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$ValueIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="728.9" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (7 samples, 0.04%)</title><rect x="729.0" y="899.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (5 samples, 0.03%)</title><rect x="729.2" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.04%)</title><rect x="729.5" y="931.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.04%)</title><rect x="729.5" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.03%)</title><rect x="729.7" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (27 samples, 0.17%)</title><rect x="730.1" y="931.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (27 samples, 0.17%)</title><rect x="730.1" y="915.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.1" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.17%)</title><rect x="730.1" y="899.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.1" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.06%)</title><rect x="730.1" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.1" y="894.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.06%)</title><rect x="730.1" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.06%)</title><rect x="730.1" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.06%)</title><rect x="730.1" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.06%)</title><rect x="730.1" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (9 samples, 0.06%)</title><rect x="730.1" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.06%)</title><rect x="730.1" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.06%)</title><rect x="730.1" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.04%)</title><rect x="730.1" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.04%)</title><rect x="730.1" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (4 samples, 0.02%)</title><rect x="730.2" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (18 samples, 0.11%)</title><rect x="730.8" y="883.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.11%)</title><rect x="730.8" y="867.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.8" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.09%)</title><rect x="730.8" y="851.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.8" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.05%)</title><rect x="730.8" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.8" y="846.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.05%)</title><rect x="730.8" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.8" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.05%)</title><rect x="730.8" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.8" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.04%)</title><rect x="730.8" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.8" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7 samples, 0.04%)</title><rect x="731.3" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.02%)</title><rect x="731.5" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (238 samples, 1.47%)</title><rect x="732.1" y="931.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.1" y="942.0"></text>
</g>
<g>
<title>java/util/Collection.stream (220 samples, 1.36%)</title><rect x="732.2" y="915.0" width="16.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (220 samples, 1.36%)</title><rect x="732.2" y="899.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (220 samples, 1.36%)</title><rect x="732.2" y="883.0" width="16.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (219 samples, 1.35%)</title><rect x="732.3" y="867.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (6 samples, 0.04%)</title><rect x="732.7" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (6 samples, 0.04%)</title><rect x="732.7" y="835.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.04%)</title><rect x="732.7" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.04%)</title><rect x="732.7" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.04%)</title><rect x="732.7" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.7" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.04%)</title><rect x="732.7" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (207 samples, 1.28%)</title><rect x="733.2" y="851.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (206 samples, 1.27%)</title><rect x="733.2" y="835.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (20 samples, 0.12%)</title><rect x="733.3" y="819.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.12%)</title><rect x="733.3" y="803.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.11%)</title><rect x="733.4" y="787.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.4" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 0.09%)</title><rect x="733.7" y="771.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.04%)</title><rect x="734.3" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (185 samples, 1.14%)</title><rect x="734.8" y="819.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (136 samples, 0.84%)</title><rect x="738.3" y="803.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (130 samples, 0.80%)</title><rect x="738.7" y="787.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (91 samples, 0.56%)</title><rect x="741.6" y="771.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.6" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="742.0" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.0" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (73 samples, 0.45%)</title><rect x="742.5" y="755.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (33 samples, 0.20%)</title><rect x="745.4" y="739.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (13 samples, 0.08%)</title><rect x="746.2" y="723.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (10 samples, 0.06%)</title><rect x="747.1" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="747.8" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.8" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (6 samples, 0.04%)</title><rect x="748.5" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.5" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (5 samples, 0.03%)</title><rect x="748.6" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.6" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (6 samples, 0.04%)</title><rect x="748.9" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.9" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (6 samples, 0.04%)</title><rect x="749.4" y="947.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (930 samples, 5.73%)</title><rect x="749.9" y="1027.0" width="67.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.9" y="1038.0">ru/mail..</text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.04%)</title><rect x="754.3" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (11 samples, 0.07%)</title><rect x="755.0" y="1011.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (11 samples, 0.07%)</title><rect x="755.0" y="995.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.02%)</title><rect x="755.9" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (11 samples, 0.07%)</title><rect x="756.3" y="1011.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8 samples, 0.05%)</title><rect x="756.5" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (4 samples, 0.02%)</title><rect x="756.6" y="979.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.02%)</title><rect x="756.6" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (431 samples, 2.66%)</title><rect x="757.4" y="1011.0" width="31.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.4" y="1022.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (431 samples, 2.66%)</title><rect x="757.4" y="995.0" width="31.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.4" y="1006.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (431 samples, 2.66%)</title><rect x="757.4" y="979.0" width="31.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.4" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (431 samples, 2.66%)</title><rect x="757.4" y="963.0" width="31.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.4" y="974.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.02%)</title><rect x="757.8" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="760.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (308 samples, 1.90%)</title><rect x="758.3" y="947.0" width="22.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.3" y="958.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (20 samples, 0.12%)</title><rect x="759.0" y="931.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.0" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (18 samples, 0.11%)</title><rect x="759.1" y="915.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.1" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.11%)</title><rect x="759.1" y="899.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.1" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (5 samples, 0.03%)</title><rect x="759.3" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (11 samples, 0.07%)</title><rect x="759.6" y="883.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.6" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.05%)</title><rect x="759.7" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.05%)</title><rect x="759.7" y="851.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.7" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (7 samples, 0.04%)</title><rect x="759.8" y="835.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.8" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (54 samples, 0.33%)</title><rect x="760.4" y="931.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.4" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (51 samples, 0.31%)</title><rect x="760.6" y="915.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.6" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (6 samples, 0.04%)</title><rect x="760.8" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.8" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (6 samples, 0.04%)</title><rect x="760.8" y="883.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.8" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (4 samples, 0.02%)</title><rect x="761.0" y="867.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.0" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (37 samples, 0.23%)</title><rect x="761.3" y="899.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.3" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (37 samples, 0.23%)</title><rect x="761.3" y="883.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.3" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (36 samples, 0.22%)</title><rect x="761.4" y="867.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.4" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (33 samples, 0.20%)</title><rect x="761.6" y="851.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="764.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (30 samples, 0.18%)</title><rect x="761.6" y="835.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.6" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (30 samples, 0.18%)</title><rect x="761.6" y="819.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.6" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (29 samples, 0.18%)</title><rect x="761.6" y="803.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.6" y="814.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="761.6" y="787.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="764.6" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="762.2" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.2" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="762.2" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.2" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="762.3" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.3" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="762.3" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.3" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.02%)</title><rect x="762.3" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/409962262.test (16 samples, 0.10%)</title><rect x="762.6" y="787.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (15 samples, 0.09%)</title><rect x="762.7" y="771.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1522132780.test (13 samples, 0.08%)</title><rect x="762.7" y="755.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (13 samples, 0.08%)</title><rect x="762.7" y="739.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.7" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (13 samples, 0.08%)</title><rect x="762.7" y="723.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.7" y="734.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (13 samples, 0.08%)</title><rect x="762.7" y="707.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (13 samples, 0.08%)</title><rect x="762.7" y="691.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (13 samples, 0.08%)</title><rect x="762.7" y="675.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (13 samples, 0.08%)</title><rect x="762.7" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (12 samples, 0.07%)</title><rect x="762.7" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (12 samples, 0.07%)</title><rect x="762.7" y="627.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (11 samples, 0.07%)</title><rect x="762.8" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.04%)</title><rect x="763.0" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.0" y="606.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.03%)</title><rect x="763.1" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (6 samples, 0.04%)</title><rect x="764.4" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.checkTimeout (5 samples, 0.03%)</title><rect x="764.8" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.8" y="942.0"></text>
</g>
<g>
<title>java/time/Duration.equals (5 samples, 0.03%)</title><rect x="764.8" y="915.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="767.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (201 samples, 1.24%)</title><rect x="765.2" y="931.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.2" y="942.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (201 samples, 1.24%)</title><rect x="765.2" y="915.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.2" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (193 samples, 1.19%)</title><rect x="765.8" y="899.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.8" y="910.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (109 samples, 0.67%)</title><rect x="766.2" y="883.0" width="8.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="769.2" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (14 samples, 0.09%)</title><rect x="767.3" y="867.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="770.3" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (12 samples, 0.07%)</title><rect x="767.5" y="851.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="770.5" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (20 samples, 0.12%)</title><rect x="768.6" y="867.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="771.6" y="878.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (4 samples, 0.02%)</title><rect x="768.7" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="771.7" y="862.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (8 samples, 0.05%)</title><rect x="769.2" y="851.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="772.2" y="862.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (18 samples, 0.11%)</title><rect x="770.9" y="867.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="773.9" y="878.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (14 samples, 0.09%)</title><rect x="771.1" y="851.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="774.1" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (9 samples, 0.06%)</title><rect x="771.2" y="835.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="774.2" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.03%)</title><rect x="771.5" y="819.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="774.5" y="830.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (27 samples, 0.17%)</title><rect x="772.2" y="867.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="775.2" y="878.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (14 samples, 0.09%)</title><rect x="772.6" y="851.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="775.6" y="862.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (6 samples, 0.04%)</title><rect x="773.1" y="835.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="776.1" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.05%)</title><rect x="773.6" y="851.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="776.6" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (8 samples, 0.05%)</title><rect x="773.6" y="835.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="776.6" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.04%)</title><rect x="773.7" y="819.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="776.7" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.02%)</title><rect x="773.9" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="776.9" y="814.0"></text>
</g>
<g>
<title>call_stub (8 samples, 0.05%)</title><rect x="774.5" y="883.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="777.5" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (57 samples, 0.35%)</title><rect x="775.5" y="883.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.5" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (57 samples, 0.35%)</title><rect x="775.5" y="867.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (15 samples, 0.09%)</title><rect x="775.6" y="851.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.09%)</title><rect x="775.7" y="835.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.02%)</title><rect x="775.8" y="819.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.06%)</title><rect x="776.0" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.02%)</title><rect x="776.4" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="779.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.02%)</title><rect x="776.4" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (19 samples, 0.12%)</title><rect x="776.9" y="851.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.9" y="862.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (19 samples, 0.12%)</title><rect x="776.9" y="835.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.9" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (18 samples, 0.11%)</title><rect x="777.0" y="819.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.0" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (18 samples, 0.11%)</title><rect x="777.0" y="803.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.0" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.06%)</title><rect x="777.6" y="787.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="780.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.03%)</title><rect x="778.3" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.3" y="862.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (13 samples, 0.08%)</title><rect x="778.7" y="851.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.7" y="862.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (7 samples, 0.04%)</title><rect x="778.7" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.7" y="846.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.04%)</title><rect x="778.7" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.7" y="830.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.04%)</title><rect x="778.7" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.03%)</title><rect x="778.8" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.8" y="798.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.04%)</title><rect x="779.2" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.04%)</title><rect x="779.2" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (6 samples, 0.04%)</title><rect x="779.8" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (5 samples, 0.03%)</title><rect x="780.3" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (44 samples, 0.27%)</title><rect x="780.7" y="947.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (4 samples, 0.02%)</title><rect x="781.7" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.02%)</title><rect x="781.7" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.02%)</title><rect x="781.7" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (4 samples, 0.02%)</title><rect x="781.7" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (4 samples, 0.02%)</title><rect x="781.7" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.7" y="878.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (4 samples, 0.02%)</title><rect x="781.7" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (23 samples, 0.14%)</title><rect x="782.0" y="931.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (23 samples, 0.14%)</title><rect x="782.0" y="915.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (8 samples, 0.05%)</title><rect x="782.1" y="899.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.1" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (5 samples, 0.03%)</title><rect x="782.1" y="883.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="785.1" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (9 samples, 0.06%)</title><rect x="782.7" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="785.7" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (5 samples, 0.03%)</title><rect x="782.7" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.7" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (5 samples, 0.03%)</title><rect x="782.7" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="785.7" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (5 samples, 0.03%)</title><rect x="782.7" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (5 samples, 0.03%)</title><rect x="782.7" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (4 samples, 0.02%)</title><rect x="782.7" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.7" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (4 samples, 0.02%)</title><rect x="783.3" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.3" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.02%)</title><rect x="783.3" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.3" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.02%)</title><rect x="783.3" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.3" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.02%)</title><rect x="783.3" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (66 samples, 0.41%)</title><rect x="783.9" y="947.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (54 samples, 0.33%)</title><rect x="784.0" y="931.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (5 samples, 0.03%)</title><rect x="784.0" y="915.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (48 samples, 0.30%)</title><rect x="784.4" y="915.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.06%)</title><rect x="784.4" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (9 samples, 0.06%)</title><rect x="784.4" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.04%)</title><rect x="784.5" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.04%)</title><rect x="784.6" y="851.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.02%)</title><rect x="784.8" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.02%)</title><rect x="784.8" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (38 samples, 0.23%)</title><rect x="785.1" y="899.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (21 samples, 0.13%)</title><rect x="785.6" y="883.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.11%)</title><rect x="785.8" y="867.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.11%)</title><rect x="785.8" y="851.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.11%)</title><rect x="785.8" y="835.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.11%)</title><rect x="785.8" y="819.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="788.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.11%)</title><rect x="785.8" y="803.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.8" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.10%)</title><rect x="785.9" y="787.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="788.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.09%)</title><rect x="786.0" y="771.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="789.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.09%)</title><rect x="786.0" y="755.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="789.0" y="766.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 0.09%)</title><rect x="786.0" y="739.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="789.0" y="750.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.09%)</title><rect x="786.0" y="723.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="789.0" y="734.0"></text>
</g>
<g>
<title>futex_wake_op (14 samples, 0.09%)</title><rect x="786.0" y="707.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="789.0" y="718.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.08%)</title><rect x="786.1" y="691.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="789.1" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.08%)</title><rect x="786.1" y="675.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="789.1" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.08%)</title><rect x="786.1" y="659.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="789.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.06%)</title><rect x="787.1" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="790.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.05%)</title><rect x="787.2" y="867.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (8 samples, 0.05%)</title><rect x="787.2" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (8 samples, 0.05%)</title><rect x="787.2" y="835.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.03%)</title><rect x="787.4" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.03%)</title><rect x="787.4" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.03%)</title><rect x="787.4" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (10 samples, 0.06%)</title><rect x="787.9" y="931.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.05%)</title><rect x="788.0" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.05%)</title><rect x="788.0" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.04%)</title><rect x="788.2" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.04%)</title><rect x="788.2" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="791.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (18 samples, 0.11%)</title><rect x="789.2" y="1011.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.2" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (11 samples, 0.07%)</title><rect x="789.7" y="995.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (11 samples, 0.07%)</title><rect x="789.7" y="979.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (11 samples, 0.07%)</title><rect x="789.7" y="963.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.02%)</title><rect x="790.1" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getLocalResults (143 samples, 0.88%)</title><rect x="790.5" y="1011.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (140 samples, 0.86%)</title><rect x="790.7" y="995.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (140 samples, 0.86%)</title><rect x="790.7" y="979.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (138 samples, 0.85%)</title><rect x="790.9" y="963.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (138 samples, 0.85%)</title><rect x="790.9" y="947.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (138 samples, 0.85%)</title><rect x="790.9" y="931.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="793.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (133 samples, 0.82%)</title><rect x="791.2" y="915.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (132 samples, 0.81%)</title><rect x="791.3" y="899.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (132 samples, 0.81%)</title><rect x="791.3" y="883.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.3" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.08%)</title><rect x="791.6" y="867.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="794.6" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.02%)</title><rect x="792.2" y="851.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="795.2" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (114 samples, 0.70%)</title><rect x="792.5" y="867.0" width="8.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="795.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (97 samples, 0.60%)</title><rect x="793.8" y="851.0" width="7.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="796.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (96 samples, 0.59%)</title><rect x="793.8" y="835.0" width="7.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="796.8" y="846.0"></text>
</g>
<g>
<title>sys_futex (86 samples, 0.53%)</title><rect x="794.5" y="819.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="797.5" y="830.0"></text>
</g>
<g>
<title>do_futex (85 samples, 0.52%)</title><rect x="794.6" y="803.0" width="6.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="797.6" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock (6 samples, 0.04%)</title><rect x="794.6" y="787.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="797.6" y="798.0"></text>
</g>
<g>
<title>futex_wake_op (77 samples, 0.47%)</title><rect x="795.0" y="787.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="798.0" y="798.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.02%)</title><rect x="795.5" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="798.5" y="782.0"></text>
</g>
<g>
<title>wake_up_q (66 samples, 0.41%)</title><rect x="795.8" y="771.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="798.8" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (66 samples, 0.41%)</title><rect x="795.8" y="755.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="798.8" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (66 samples, 0.41%)</title><rect x="795.8" y="739.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="798.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.requestForReplica (226 samples, 1.39%)</title><rect x="800.9" y="1011.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="803.9" y="1022.0"></text>
</g>
<g>
<title>java/net/URI.create (116 samples, 0.71%)</title><rect x="801.2" y="995.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.2" y="1006.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (115 samples, 0.71%)</title><rect x="801.3" y="979.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.3" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (113 samples, 0.70%)</title><rect x="801.3" y="963.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.3" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (5 samples, 0.03%)</title><rect x="801.9" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.9" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (97 samples, 0.60%)</title><rect x="802.3" y="947.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="802.3" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="802.3" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.3" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (8 samples, 0.05%)</title><rect x="802.8" y="931.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.8" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.05%)</title><rect x="802.8" y="915.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.8" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (70 samples, 0.43%)</title><rect x="803.4" y="931.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.4" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (31 samples, 0.19%)</title><rect x="803.8" y="915.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.8" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.03%)</title><rect x="804.1" y="899.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.1" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (10 samples, 0.06%)</title><rect x="804.7" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.7" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.05%)</title><rect x="804.8" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.04%)</title><rect x="804.9" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (4 samples, 0.02%)</title><rect x="805.0" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (4 samples, 0.02%)</title><rect x="805.0" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.0" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.04%)</title><rect x="805.6" y="899.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="808.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="805.7" y="883.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="805.7" y="867.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.7" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.03%)</title><rect x="805.7" y="851.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="808.7" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (33 samples, 0.20%)</title><rect x="806.1" y="915.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.05%)</title><rect x="807.3" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.3" y="910.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (5 samples, 0.03%)</title><rect x="807.5" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.5" y="894.0"></text>
</g>
<g>
<title>java/net/URI.match (7 samples, 0.04%)</title><rect x="808.0" y="899.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.0" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (12 samples, 0.07%)</title><rect x="808.5" y="931.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="808.8" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="811.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.04%)</title><rect x="808.8" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.8" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.03%)</title><rect x="809.8" y="995.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="809.8" y="979.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.8" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="809.8" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.8" y="974.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (5 samples, 0.03%)</title><rect x="810.2" y="995.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (63 samples, 0.39%)</title><rect x="810.6" y="995.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (63 samples, 0.39%)</title><rect x="810.6" y="979.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.6" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (60 samples, 0.37%)</title><rect x="810.6" y="963.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.6" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (60 samples, 0.37%)</title><rect x="810.6" y="947.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.6" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (13 samples, 0.08%)</title><rect x="811.1" y="931.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.1" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (13 samples, 0.08%)</title><rect x="811.1" y="915.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="814.1" y="926.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.05%)</title><rect x="811.2" y="899.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="814.2" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.02%)</title><rect x="811.7" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.7" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (5 samples, 0.03%)</title><rect x="812.0" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.0" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (35 samples, 0.22%)</title><rect x="812.4" y="931.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="815.4" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/130356434.accept (35 samples, 0.22%)</title><rect x="812.4" y="915.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.4" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (31 samples, 0.19%)</title><rect x="812.7" y="899.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.7" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (21 samples, 0.13%)</title><rect x="813.0" y="883.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/835674035.accept (19 samples, 0.12%)</title><rect x="813.1" y="867.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.1" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (19 samples, 0.12%)</title><rect x="813.1" y="851.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.1" y="862.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="813.1" y="835.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="816.1" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="813.6" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.6" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="813.6" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.6" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.03%)</title><rect x="813.7" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.7" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.03%)</title><rect x="813.7" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1522132780.test (6 samples, 0.04%)</title><rect x="814.1" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.02%)</title><rect x="814.2" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.2" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.02%)</title><rect x="814.2" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.2" y="814.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (4 samples, 0.02%)</title><rect x="814.2" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (4 samples, 0.02%)</title><rect x="814.2" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.02%)</title><rect x="814.2" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.02%)</title><rect x="814.2" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="814.2" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="814.2" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.02%)</title><rect x="814.2" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (29 samples, 0.18%)</title><rect x="815.2" y="995.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (29 samples, 0.18%)</title><rect x="815.2" y="979.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (29 samples, 0.18%)</title><rect x="815.2" y="963.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (20 samples, 0.12%)</title><rect x="815.2" y="947.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="818.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1522132780.test (14 samples, 0.09%)</title><rect x="815.2" y="931.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (13 samples, 0.08%)</title><rect x="815.2" y="915.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.2" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (13 samples, 0.08%)</title><rect x="815.2" y="899.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.2" y="910.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (13 samples, 0.08%)</title><rect x="815.2" y="883.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.2" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (13 samples, 0.08%)</title><rect x="815.2" y="867.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.2" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (13 samples, 0.08%)</title><rect x="815.2" y="851.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.2" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (13 samples, 0.08%)</title><rect x="815.2" y="835.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (11 samples, 0.07%)</title><rect x="815.4" y="819.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="815.7" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.04%)</title><rect x="815.7" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.03%)</title><rect x="815.8" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.02%)</title><rect x="815.9" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (4 samples, 0.02%)</title><rect x="816.2" y="931.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (9 samples, 0.06%)</title><rect x="816.6" y="947.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.6" y="958.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (9 samples, 0.06%)</title><rect x="816.6" y="931.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.6" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.04%)</title><rect x="816.8" y="915.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,097 samples, 6.76%)</title><rect x="817.6" y="1139.0" width="79.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.6" y="1150.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,097 samples, 6.76%)</title><rect x="817.6" y="1123.0" width="79.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.6" y="1134.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (619 samples, 3.81%)</title><rect x="819.9" y="1107.0" width="45.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.9" y="1118.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (21 samples, 0.13%)</title><rect x="821.3" y="1091.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (20 samples, 0.12%)</title><rect x="821.4" y="1075.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (536 samples, 3.30%)</title><rect x="822.9" y="1091.0" width="39.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.9" y="1102.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (535 samples, 3.30%)</title><rect x="823.0" y="1075.0" width="38.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.0" y="1086.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (334 samples, 2.06%)</title><rect x="823.0" y="1059.0" width="24.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.0" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (334 samples, 2.06%)</title><rect x="823.0" y="1043.0" width="24.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.0" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (7 samples, 0.04%)</title><rect x="823.9" y="1027.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (5 samples, 0.03%)</title><rect x="824.5" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.03%)</title><rect x="824.5" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.5" y="1022.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="824.5" y="995.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="827.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.06%)</title><rect x="824.8" y="1027.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.06%)</title><rect x="824.8" y="1011.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.06%)</title><rect x="824.8" y="995.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.06%)</title><rect x="824.9" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.04%)</title><rect x="825.0" y="963.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.02%)</title><rect x="825.3" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/1936887332.get (292 samples, 1.80%)</title><rect x="825.7" y="1027.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.7" y="1038.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getLocalResults$8 (292 samples, 1.80%)</title><rect x="825.7" y="1011.0" width="21.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.7" y="1022.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.getStatus (6 samples, 0.04%)</title><rect x="826.0" y="995.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.04%)</title><rect x="826.0" y="979.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (6 samples, 0.04%)</title><rect x="826.0" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (6 samples, 0.04%)</title><rect x="826.0" y="947.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.checkIndex (4 samples, 0.02%)</title><rect x="826.1" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getTimestamp (17 samples, 0.10%)</title><rect x="826.4" y="995.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (5 samples, 0.03%)</title><rect x="826.6" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (5 samples, 0.03%)</title><rect x="826.6" y="963.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.03%)</title><rect x="826.6" y="947.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.6" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (9 samples, 0.06%)</title><rect x="827.0" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.04%)</title><rect x="827.2" y="963.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$460/1313189910.act (265 samples, 1.63%)</title><rect x="827.7" y="995.0" width="19.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$2 (265 samples, 1.63%)</title><rect x="827.7" y="979.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (260 samples, 1.60%)</title><rect x="828.0" y="963.0" width="18.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.0" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="828.4" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="831.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (245 samples, 1.51%)</title><rect x="829.1" y="947.0" width="17.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.1" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (5 samples, 0.03%)</title><rect x="829.1" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.1" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="829.1" y="915.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.07%)</title><rect x="829.5" y="931.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.5" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.06%)</title><rect x="829.5" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.5" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (9 samples, 0.06%)</title><rect x="829.5" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.06%)</title><rect x="829.5" y="883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.5" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.04%)</title><rect x="829.5" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.5" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.02%)</title><rect x="829.5" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.5" y="862.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.02%)</title><rect x="829.5" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.02%)</title><rect x="829.5" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.02%)</title><rect x="829.5" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (229 samples, 1.41%)</title><rect x="830.3" y="931.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="833.3" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8 samples, 0.05%)</title><rect x="830.4" y="915.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="833.4" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6 samples, 0.04%)</title><rect x="830.5" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.5" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="830.5" y="883.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="833.5" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="830.5" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="833.5" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="830.5" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="833.5" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="830.5" y="835.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="833.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (15 samples, 0.09%)</title><rect x="831.4" y="915.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$ValueIterator.&lt;init&gt; (13 samples, 0.08%)</title><rect x="831.5" y="899.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (13 samples, 0.08%)</title><rect x="831.5" y="883.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (9 samples, 0.06%)</title><rect x="831.7" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.7" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.11%)</title><rect x="832.5" y="915.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (17 samples, 0.10%)</title><rect x="832.5" y="899.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.10%)</title><rect x="832.5" y="883.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.5" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (17 samples, 0.10%)</title><rect x="832.5" y="867.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (17 samples, 0.10%)</title><rect x="832.5" y="851.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.5" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.10%)</title><rect x="832.5" y="835.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.5" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.05%)</title><rect x="832.6" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.6" y="830.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.05%)</title><rect x="832.6" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.05%)</title><rect x="832.6" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.05%)</title><rect x="832.6" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.04%)</title><rect x="832.6" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.6" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7 samples, 0.04%)</title><rect x="833.2" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.04%)</title><rect x="833.2" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (181 samples, 1.12%)</title><rect x="833.8" y="915.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.8" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (19 samples, 0.12%)</title><rect x="834.3" y="899.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.3" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (18 samples, 0.11%)</title><rect x="834.3" y="883.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.3" y="894.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (17 samples, 0.10%)</title><rect x="834.4" y="867.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (16 samples, 0.10%)</title><rect x="834.5" y="851.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (16 samples, 0.10%)</title><rect x="834.5" y="835.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="837.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.05%)</title><rect x="834.5" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (7 samples, 0.04%)</title><rect x="834.6" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.04%)</title><rect x="834.6" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.04%)</title><rect x="834.6" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.02%)</title><rect x="834.6" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.02%)</title><rect x="834.6" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (4 samples, 0.02%)</title><rect x="834.6" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (7 samples, 0.04%)</title><rect x="835.1" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="838.1" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="835.7" y="899.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="838.7" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="835.7" y="883.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.7" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="835.7" y="867.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.7" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="835.7" y="851.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="838.7" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (4 samples, 0.02%)</title><rect x="835.7" y="835.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.04%)</title><rect x="836.0" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.04%)</title><rect x="836.0" y="883.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.04%)</title><rect x="836.0" y="867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (16 samples, 0.10%)</title><rect x="836.5" y="899.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="839.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.09%)</title><rect x="836.7" y="883.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.7" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.06%)</title><rect x="837.0" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.0" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.02%)</title><rect x="837.0" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.0" y="862.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.02%)</title><rect x="837.0" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.02%)</title><rect x="837.0" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.02%)</title><rect x="837.0" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.02%)</title><rect x="837.0" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$505/1462061362.getAsBoolean (4 samples, 0.02%)</title><rect x="837.0" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.02%)</title><rect x="837.0" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.02%)</title><rect x="837.0" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (6 samples, 0.04%)</title><rect x="837.3" y="851.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.04%)</title><rect x="837.3" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (127 samples, 0.78%)</title><rect x="837.7" y="899.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.7" y="910.0"></text>
</g>
<g>
<title>java/util/Collection.stream (110 samples, 0.68%)</title><rect x="837.8" y="883.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (106 samples, 0.65%)</title><rect x="837.8" y="867.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (105 samples, 0.65%)</title><rect x="837.9" y="851.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (105 samples, 0.65%)</title><rect x="837.9" y="835.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (100 samples, 0.62%)</title><rect x="838.3" y="819.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (96 samples, 0.59%)</title><rect x="838.6" y="803.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.06%)</title><rect x="838.7" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.05%)</title><rect x="838.8" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="839.0" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="842.0" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="839.0" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (85 samples, 0.52%)</title><rect x="839.4" y="787.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="842.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (61 samples, 0.38%)</title><rect x="841.1" y="771.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="844.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (54 samples, 0.33%)</title><rect x="841.6" y="755.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 0.26%)</title><rect x="842.5" y="739.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.5" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (38 samples, 0.23%)</title><rect x="842.6" y="723.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (17 samples, 0.10%)</title><rect x="844.2" y="707.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.04%)</title><rect x="844.7" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.7" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (4 samples, 0.02%)</title><rect x="845.1" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.02%)</title><rect x="845.5" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.5" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (5 samples, 0.03%)</title><rect x="846.1" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.1" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (4 samples, 0.02%)</title><rect x="846.2" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.2" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (6 samples, 0.04%)</title><rect x="846.5" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.5" y="894.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.03%)</title><rect x="846.9" y="1027.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="849.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (201 samples, 1.24%)</title><rect x="847.3" y="1059.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (200 samples, 1.23%)</title><rect x="847.4" y="1043.0" width="14.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (168 samples, 1.04%)</title><rect x="848.5" y="1027.0" width="12.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (168 samples, 1.04%)</title><rect x="848.5" y="1011.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (124 samples, 0.76%)</title><rect x="848.5" y="995.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.05%)</title><rect x="848.5" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (8 samples, 0.05%)</title><rect x="848.5" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.5" y="974.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="848.5" y="947.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="851.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$200/1317088569.apply (116 samples, 0.71%)</title><rect x="849.1" y="979.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="852.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$replication$7 (115 samples, 0.71%)</title><rect x="849.2" y="963.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.2" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (105 samples, 0.65%)</title><rect x="849.8" y="947.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.8" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (36 samples, 0.22%)</title><rect x="849.8" y="931.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.8" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (34 samples, 0.21%)</title><rect x="849.9" y="915.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.9" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (33 samples, 0.20%)</title><rect x="850.0" y="899.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.0" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (33 samples, 0.20%)</title><rect x="850.0" y="883.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.0" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (21 samples, 0.13%)</title><rect x="850.5" y="867.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (19 samples, 0.12%)</title><rect x="850.6" y="851.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (19 samples, 0.12%)</title><rect x="850.6" y="835.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (10 samples, 0.06%)</title><rect x="851.0" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.0" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (4 samples, 0.02%)</title><rect x="851.3" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.3" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="851.7" y="819.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="854.7" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.03%)</title><rect x="852.0" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.0" y="878.0"></text>
</g>
<g>
<title>java/util/Collection.stream (16 samples, 0.10%)</title><rect x="852.4" y="931.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.4" y="942.0"></text>
</g>
<g>
<title>java/util/List.spliterator (5 samples, 0.03%)</title><rect x="852.7" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.7" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="852.7" y="899.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="855.7" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="852.7" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="855.7" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="852.7" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="855.7" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="852.7" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="855.7" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.04%)</title><rect x="853.0" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="853.0" y="899.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="856.0" y="910.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (49 samples, 0.30%)</title><rect x="853.5" y="931.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (49 samples, 0.30%)</title><rect x="853.5" y="915.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.5" y="926.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (49 samples, 0.30%)</title><rect x="853.5" y="899.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (43 samples, 0.26%)</title><rect x="853.7" y="883.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (28 samples, 0.17%)</title><rect x="853.7" y="867.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (13 samples, 0.08%)</title><rect x="854.0" y="851.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="857.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (10 samples, 0.06%)</title><rect x="854.2" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.2" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (8 samples, 0.05%)</title><rect x="854.3" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (7 samples, 0.04%)</title><rect x="854.4" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.4" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$419/1083086140.applyAsLong (6 samples, 0.04%)</title><rect x="854.5" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (4 samples, 0.02%)</title><rect x="854.6" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (7 samples, 0.04%)</title><rect x="854.9" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="857.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (4 samples, 0.02%)</title><rect x="855.4" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.4" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (15 samples, 0.09%)</title><rect x="855.7" y="867.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (13 samples, 0.08%)</title><rect x="855.9" y="851.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (8 samples, 0.05%)</title><rect x="856.2" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (8 samples, 0.05%)</title><rect x="856.2" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (4 samples, 0.02%)</title><rect x="857.1" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (43 samples, 0.26%)</title><rect x="857.5" y="995.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (43 samples, 0.26%)</title><rect x="857.5" y="979.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (41 samples, 0.25%)</title><rect x="857.7" y="963.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="860.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (7 samples, 0.04%)</title><rect x="857.7" y="947.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.02%)</title><rect x="857.9" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="860.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (34 samples, 0.21%)</title><rect x="858.2" y="947.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (8 samples, 0.05%)</title><rect x="858.2" y="931.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (8 samples, 0.05%)</title><rect x="858.2" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.04%)</title><rect x="858.3" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.03%)</title><rect x="858.4" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.16%)</title><rect x="858.8" y="931.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="861.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.07%)</title><rect x="858.9" y="915.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.06%)</title><rect x="859.0" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.06%)</title><rect x="859.0" y="883.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.06%)</title><rect x="859.0" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="862.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.06%)</title><rect x="859.0" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.06%)</title><rect x="859.0" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.0" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.04%)</title><rect x="859.2" y="819.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="862.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="859.2" y="803.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="862.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="859.2" y="787.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="862.2" y="798.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.04%)</title><rect x="859.2" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="862.2" y="782.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="859.2" y="755.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="862.2" y="766.0"></text>
</g>
<g>
<title>futex_wake_op (7 samples, 0.04%)</title><rect x="859.2" y="739.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="862.2" y="750.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="859.4" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="862.4" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="859.4" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="862.4" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="859.4" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="862.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.05%)</title><rect x="859.8" y="915.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.04%)</title><rect x="859.9" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="862.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.04%)</title><rect x="859.9" y="883.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.04%)</title><rect x="859.9" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.02%)</title><rect x="860.4" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="863.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.02%)</title><rect x="860.4" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.02%)</title><rect x="860.4" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="863.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.02%)</title><rect x="860.4" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.02%)</title><rect x="860.4" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.4" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="860.4" y="835.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="863.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (17 samples, 0.10%)</title><rect x="860.7" y="1027.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (11 samples, 0.07%)</title><rect x="860.7" y="1011.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (11 samples, 0.07%)</title><rect x="860.7" y="995.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (7 samples, 0.04%)</title><rect x="861.0" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="864.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (6 samples, 0.04%)</title><rect x="861.5" y="1011.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.04%)</title><rect x="861.5" y="995.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.04%)</title><rect x="861.5" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="864.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (41 samples, 0.25%)</title><rect x="861.9" y="1091.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="864.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (7 samples, 0.04%)</title><rect x="862.1" y="1075.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="865.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (7 samples, 0.04%)</title><rect x="862.1" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (31 samples, 0.19%)</title><rect x="862.6" y="1075.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.19%)</title><rect x="862.6" y="1059.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.6" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="862.7" y="1043.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="865.7" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.15%)</title><rect x="863.1" y="1043.0" width="1.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="866.1" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.15%)</title><rect x="863.1" y="1027.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="866.1" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.15%)</title><rect x="863.1" y="1011.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="866.1" y="1022.0"></text>
</g>
<g>
<title>sys_futex (24 samples, 0.15%)</title><rect x="863.1" y="995.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="866.1" y="1006.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.14%)</title><rect x="863.1" y="979.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="866.1" y="990.0"></text>
</g>
<g>
<title>futex_wake_op (23 samples, 0.14%)</title><rect x="863.1" y="963.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="866.1" y="974.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.03%)</title><rect x="863.3" y="947.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="866.3" y="958.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.10%)</title><rect x="863.6" y="947.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="866.6" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.09%)</title><rect x="863.7" y="931.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="866.7" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.09%)</title><rect x="863.7" y="915.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="866.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (251 samples, 1.55%)</title><rect x="864.9" y="1107.0" width="18.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="867.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (4 samples, 0.02%)</title><rect x="864.9" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (247 samples, 1.52%)</title><rect x="865.2" y="1091.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.2" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (236 samples, 1.45%)</title><rect x="865.8" y="1075.0" width="17.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="868.8" y="1086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (18 samples, 0.11%)</title><rect x="866.6" y="1059.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="869.6" y="1070.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.03%)</title><rect x="867.2" y="1043.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="870.2" y="1054.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.04%)</title><rect x="867.9" y="1059.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="870.9" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (53 samples, 0.33%)</title><rect x="868.6" y="1059.0" width="3.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="871.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.15%)</title><rect x="870.6" y="1043.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="873.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.15%)</title><rect x="870.6" y="1027.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="873.6" y="1038.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.08%)</title><rect x="871.4" y="1011.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="874.4" y="1022.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.07%)</title><rect x="871.5" y="995.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="874.5" y="1006.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="871.6" y="979.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="874.6" y="990.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.02%)</title><rect x="871.9" y="963.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="874.9" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_wait (129 samples, 0.79%)</title><rect x="872.4" y="1059.0" width="9.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="875.4" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 0.54%)</title><rect x="875.4" y="1043.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="878.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (87 samples, 0.54%)</title><rect x="875.4" y="1027.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="878.4" y="1038.0"></text>
</g>
<g>
<title>sys_futex (72 samples, 0.44%)</title><rect x="876.5" y="1011.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="879.5" y="1022.0"></text>
</g>
<g>
<title>do_futex (72 samples, 0.44%)</title><rect x="876.5" y="995.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="879.5" y="1006.0"></text>
</g>
<g>
<title>futex_wait (68 samples, 0.42%)</title><rect x="876.7" y="979.0" width="5.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="879.7" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (54 samples, 0.33%)</title><rect x="876.7" y="963.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="879.7" y="974.0"></text>
</g>
<g>
<title>schedule (45 samples, 0.28%)</title><rect x="877.4" y="947.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="880.4" y="958.0"></text>
</g>
<g>
<title>__schedule (38 samples, 0.23%)</title><rect x="877.9" y="931.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="880.9" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (34 samples, 0.21%)</title><rect x="878.2" y="915.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="881.2" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (12 samples, 0.07%)</title><rect x="880.7" y="963.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="883.7" y="974.0"></text>
</g>
<g>
<title>get_futex_key (8 samples, 0.05%)</title><rect x="881.0" y="947.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="884.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (193 samples, 1.19%)</title><rect x="883.1" y="1107.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (193 samples, 1.19%)</title><rect x="883.1" y="1091.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.1" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (188 samples, 1.16%)</title><rect x="883.3" y="1075.0" width="13.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="886.3" y="1086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (17 samples, 0.10%)</title><rect x="883.8" y="1059.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="886.8" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (41 samples, 0.25%)</title><rect x="885.2" y="1059.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="888.2" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.10%)</title><rect x="887.0" y="1043.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="890.0" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.09%)</title><rect x="887.0" y="1027.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="890.0" y="1038.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.04%)</title><rect x="887.5" y="1011.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="890.5" y="1022.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.04%)</title><rect x="887.6" y="995.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="890.6" y="1006.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="887.6" y="979.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="890.6" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (109 samples, 0.67%)</title><rect x="888.2" y="1059.0" width="7.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="891.2" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 0.47%)</title><rect x="890.6" y="1043.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="893.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (75 samples, 0.46%)</title><rect x="890.6" y="1027.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="893.6" y="1038.0"></text>
</g>
<g>
<title>sys_futex (59 samples, 0.36%)</title><rect x="891.8" y="1011.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="894.8" y="1022.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.03%)</title><rect x="891.8" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="894.8" y="1006.0"></text>
</g>
<g>
<title>do_futex (54 samples, 0.33%)</title><rect x="892.1" y="995.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="895.1" y="1006.0"></text>
</g>
<g>
<title>futex_wait (50 samples, 0.31%)</title><rect x="892.3" y="979.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="895.3" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (28 samples, 0.17%)</title><rect x="892.9" y="963.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="895.9" y="974.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.02%)</title><rect x="893.1" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="896.1" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="893.1" y="931.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="896.1" y="942.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.12%)</title><rect x="893.5" y="947.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="896.5" y="958.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.12%)</title><rect x="893.5" y="931.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="896.5" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (17 samples, 0.10%)</title><rect x="893.7" y="915.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="896.7" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.03%)</title><rect x="894.9" y="963.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="897.9" y="974.0"></text>
</g>
<g>
<title>hrtimer_cancel (4 samples, 0.02%)</title><rect x="895.4" y="963.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="898.4" y="974.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (4 samples, 0.02%)</title><rect x="895.4" y="947.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="898.4" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="895.4" y="931.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="898.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,318 samples, 8.12%)</title><rect x="897.4" y="1139.0" width="95.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.4" y="1150.0">jdk/interna..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.10%)</title><rect x="901.9" y="1123.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="904.9" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.10%)</title><rect x="901.9" y="1107.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="904.9" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (14 samples, 0.09%)</title><rect x="902.1" y="1091.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="905.1" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (8 samples, 0.05%)</title><rect x="902.3" y="1075.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="905.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="903.1" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="903.1" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (10 samples, 0.06%)</title><rect x="903.4" y="1123.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="906.4" y="1134.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (8 samples, 0.05%)</title><rect x="903.6" y="1107.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.6" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.06%)</title><rect x="904.4" y="1123.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.4" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.06%)</title><rect x="904.4" y="1107.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.4" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.06%)</title><rect x="904.4" y="1091.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="907.4" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (8 samples, 0.05%)</title><rect x="904.4" y="1075.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="907.4" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.04%)</title><rect x="904.5" y="1059.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="907.5" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="904.7" y="1043.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="907.7" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="904.7" y="1027.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="907.7" y="1038.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.02%)</title><rect x="904.7" y="1011.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="907.7" y="1022.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="904.7" y="995.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="907.7" y="1006.0"></text>
</g>
<g>
<title>futex_wake_op (4 samples, 0.02%)</title><rect x="904.7" y="979.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="907.7" y="990.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="904.7" y="963.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="907.7" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="904.7" y="947.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="907.7" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="904.7" y="931.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="907.7" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (13 samples, 0.08%)</title><rect x="905.1" y="1123.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.1" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (383 samples, 2.36%)</title><rect x="906.0" y="1123.0" width="27.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.0" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$381/44958327.accept (348 samples, 2.14%)</title><rect x="907.1" y="1107.0" width="25.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.1" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (348 samples, 2.14%)</title><rect x="907.1" y="1091.0" width="25.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.1" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (348 samples, 2.14%)</title><rect x="907.1" y="1075.0" width="25.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.1" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (348 samples, 2.14%)</title><rect x="907.1" y="1059.0" width="25.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.1" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (348 samples, 2.14%)</title><rect x="907.1" y="1043.0" width="25.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="910.1" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (11 samples, 0.07%)</title><rect x="907.2" y="1027.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="910.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (11 samples, 0.07%)</title><rect x="907.2" y="1011.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (5 samples, 0.03%)</title><rect x="907.5" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.5" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.02%)</title><rect x="907.5" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="910.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.02%)</title><rect x="907.5" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.02%)</title><rect x="907.5" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (336 samples, 2.07%)</title><rect x="908.0" y="1027.0" width="24.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.0" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (335 samples, 2.06%)</title><rect x="908.1" y="1011.0" width="24.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.1" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (335 samples, 2.06%)</title><rect x="908.1" y="995.0" width="24.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.1" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (334 samples, 2.06%)</title><rect x="908.1" y="979.0" width="24.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.1" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (333 samples, 2.05%)</title><rect x="908.2" y="963.0" width="24.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.2" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/493344851.run (328 samples, 2.02%)</title><rect x="908.4" y="947.0" width="23.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.4" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (328 samples, 2.02%)</title><rect x="908.4" y="931.0" width="23.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.4" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (49 samples, 0.30%)</title><rect x="908.4" y="915.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (48 samples, 0.30%)</title><rect x="908.5" y="899.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.5" y="910.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (9 samples, 0.06%)</title><rect x="908.5" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="911.5" y="894.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (7 samples, 0.04%)</title><rect x="908.6" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (39 samples, 0.24%)</title><rect x="909.2" y="883.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.22%)</title><rect x="909.4" y="867.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.22%)</title><rect x="909.4" y="851.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="912.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (35 samples, 0.22%)</title><rect x="909.4" y="835.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 0.22%)</title><rect x="909.4" y="819.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.04%)</title><rect x="909.4" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="912.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.04%)</title><rect x="909.4" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.03%)</title><rect x="909.5" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.03%)</title><rect x="909.5" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="912.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.02%)</title><rect x="909.6" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (29 samples, 0.18%)</title><rect x="909.9" y="803.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="912.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (18 samples, 0.11%)</title><rect x="910.0" y="787.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.11%)</title><rect x="910.0" y="771.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.11%)</title><rect x="910.0" y="755.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.11%)</title><rect x="910.0" y="739.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.11%)</title><rect x="910.0" y="723.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.11%)</title><rect x="910.0" y="707.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.0" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="910.0" y="691.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="913.0" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.07%)</title><rect x="910.4" y="691.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="913.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="910.7" y="675.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="913.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="910.7" y="659.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="913.7" y="670.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.05%)</title><rect x="910.7" y="643.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="913.7" y="654.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.05%)</title><rect x="910.7" y="627.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="913.7" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (8 samples, 0.05%)</title><rect x="910.7" y="611.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="913.7" y="622.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="910.9" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="913.9" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="910.9" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="913.9" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="910.9" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="913.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.06%)</title><rect x="911.3" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.06%)</title><rect x="911.3" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.04%)</title><rect x="911.5" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.04%)</title><rect x="911.5" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.02%)</title><rect x="911.6" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.02%)</title><rect x="911.6" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.02%)</title><rect x="911.6" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (9 samples, 0.06%)</title><rect x="912.1" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (7 samples, 0.04%)</title><rect x="912.3" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="915.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (7 samples, 0.04%)</title><rect x="912.3" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.04%)</title><rect x="912.3" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (267 samples, 1.65%)</title><rect x="912.8" y="915.0" width="19.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="915.8" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.hasRemaining (5 samples, 0.03%)</title><rect x="913.0" y="899.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (8 samples, 0.05%)</title><rect x="913.4" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="916.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (12 samples, 0.07%)</title><rect x="914.0" y="899.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$261/1758423440.get (10 samples, 0.06%)</title><rect x="914.1" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (10 samples, 0.06%)</title><rect x="914.1" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.1" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (10 samples, 0.06%)</title><rect x="914.1" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.1" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="914.2" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.2" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="914.3" y="819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.3" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="914.5" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="914.5" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="914.5" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (239 samples, 1.47%)</title><rect x="914.8" y="899.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.8" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (236 samples, 1.45%)</title><rect x="915.0" y="883.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="918.0" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (236 samples, 1.45%)</title><rect x="915.0" y="867.0" width="17.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (210 samples, 1.29%)</title><rect x="915.1" y="851.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (210 samples, 1.29%)</title><rect x="915.1" y="835.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (210 samples, 1.29%)</title><rect x="915.1" y="819.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.1" y="830.0"></text>
</g>
<g>
<title>read (198 samples, 1.22%)</title><rect x="916.0" y="803.0" width="14.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="919.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (134 samples, 0.83%)</title><rect x="920.6" y="787.0" width="9.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="923.6" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (132 samples, 0.81%)</title><rect x="920.6" y="771.0" width="9.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="923.6" y="782.0"></text>
</g>
<g>
<title>sys_read (108 samples, 0.67%)</title><rect x="922.4" y="755.0" width="7.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="925.4" y="766.0"></text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.04%)</title><rect x="922.5" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="925.5" y="750.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="922.6" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="925.6" y="734.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.03%)</title><rect x="922.6" y="707.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="925.6" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="923.0" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="926.0" y="750.0"></text>
</g>
<g>
<title>vfs_read (96 samples, 0.59%)</title><rect x="923.3" y="739.0" width="6.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="926.3" y="750.0"></text>
</g>
<g>
<title>__vfs_read (79 samples, 0.49%)</title><rect x="923.3" y="723.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="926.3" y="734.0"></text>
</g>
<g>
<title>new_sync_read (78 samples, 0.48%)</title><rect x="923.3" y="707.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="926.3" y="718.0"></text>
</g>
<g>
<title>sock_read_iter (74 samples, 0.46%)</title><rect x="923.6" y="691.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="926.6" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (68 samples, 0.42%)</title><rect x="924.0" y="675.0" width="4.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="927.0" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.03%)</title><rect x="924.1" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.1" y="670.0"></text>
</g>
<g>
<title>inet_recvmsg (55 samples, 0.34%)</title><rect x="924.5" y="659.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="927.5" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (53 samples, 0.33%)</title><rect x="924.6" y="643.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="927.6" y="654.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.04%)</title><rect x="925.4" y="627.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="928.4" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.02%)</title><rect x="925.9" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="928.9" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (15 samples, 0.09%)</title><rect x="926.3" y="627.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.3" y="638.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.05%)</title><rect x="926.5" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="929.5" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.02%)</title><rect x="927.1" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="930.1" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="927.1" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.1" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (9 samples, 0.06%)</title><rect x="927.4" y="627.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.4" y="638.0"></text>
</g>
<g>
<title>tcp_send_ack (5 samples, 0.03%)</title><rect x="927.7" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.7" y="622.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.38 (5 samples, 0.03%)</title><rect x="927.7" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="930.7" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 0.03%)</title><rect x="927.7" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="930.7" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.03%)</title><rect x="927.7" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="930.7" y="574.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.03%)</title><rect x="927.7" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="930.7" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.03%)</title><rect x="928.1" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="931.1" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.03%)</title><rect x="928.5" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="931.5" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (14 samples, 0.09%)</title><rect x="929.2" y="723.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="932.2" y="734.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.07%)</title><rect x="929.4" y="707.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="932.4" y="718.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.04%)</title><rect x="929.6" y="691.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="932.6" y="702.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.04%)</title><rect x="929.6" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="932.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (25 samples, 0.15%)</title><rect x="930.4" y="851.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.4" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.03%)</title><rect x="930.7" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="933.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (16 samples, 0.10%)</title><rect x="931.0" y="835.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.0" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (7 samples, 0.04%)</title><rect x="931.4" y="819.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1109943227.accept (20 samples, 0.12%)</title><rect x="932.4" y="1107.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="935.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (20 samples, 0.12%)</title><rect x="932.4" y="1091.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$380/1353633883.run (20 samples, 0.12%)</title><rect x="932.4" y="1075.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (20 samples, 0.12%)</title><rect x="932.4" y="1059.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (20 samples, 0.12%)</title><rect x="932.4" y="1043.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.4" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (6 samples, 0.04%)</title><rect x="932.5" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.5" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (5 samples, 0.03%)</title><rect x="932.9" y="1027.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="935.9" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (5 samples, 0.03%)</title><rect x="932.9" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.04%)</title><rect x="933.3" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.04%)</title><rect x="933.4" y="1011.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="933.5" y="995.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.5" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="933.5" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.5" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (20 samples, 0.12%)</title><rect x="934.2" y="1123.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.2" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (19 samples, 0.12%)</title><rect x="934.2" y="1107.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.2" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (18 samples, 0.11%)</title><rect x="934.2" y="1091.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="937.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (18 samples, 0.11%)</title><rect x="934.2" y="1075.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (18 samples, 0.11%)</title><rect x="934.2" y="1059.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (17 samples, 0.10%)</title><rect x="934.2" y="1043.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="937.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (8 samples, 0.05%)</title><rect x="934.3" y="1027.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="937.3" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (7 samples, 0.04%)</title><rect x="934.4" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.4" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (8 samples, 0.05%)</title><rect x="934.9" y="1027.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.9" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (6 samples, 0.04%)</title><rect x="935.0" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncEvent.repeating (4 samples, 0.02%)</title><rect x="935.6" y="1123.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="938.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (121 samples, 0.75%)</title><rect x="935.9" y="1123.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1068922401.run (90 samples, 0.55%)</title><rect x="935.9" y="1107.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (89 samples, 0.55%)</title><rect x="936.0" y="1091.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (4 samples, 0.02%)</title><rect x="936.3" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (4 samples, 0.02%)</title><rect x="936.3" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="939.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.log (4 samples, 0.02%)</title><rect x="936.3" y="1043.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="939.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (80 samples, 0.49%)</title><rect x="936.6" y="1075.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (78 samples, 0.48%)</title><rect x="936.8" y="1059.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="939.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (76 samples, 0.47%)</title><rect x="936.9" y="1043.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="939.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (76 samples, 0.47%)</title><rect x="936.9" y="1027.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/493344851.run (70 samples, 0.43%)</title><rect x="937.3" y="1011.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (66 samples, 0.41%)</title><rect x="937.4" y="995.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (64 samples, 0.39%)</title><rect x="937.4" y="979.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (42 samples, 0.26%)</title><rect x="938.1" y="963.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="941.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (17 samples, 0.10%)</title><rect x="938.1" y="947.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="941.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (17 samples, 0.10%)</title><rect x="938.1" y="931.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="941.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (15 samples, 0.09%)</title><rect x="938.2" y="915.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (13 samples, 0.08%)</title><rect x="938.2" y="899.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (11 samples, 0.07%)</title><rect x="938.4" y="883.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (9 samples, 0.06%)</title><rect x="938.4" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (8 samples, 0.05%)</title><rect x="938.5" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (25 samples, 0.15%)</title><rect x="939.3" y="947.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 0.15%)</title><rect x="939.4" y="931.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.12%)</title><rect x="939.7" y="915.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.12%)</title><rect x="939.7" y="899.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.12%)</title><rect x="939.7" y="883.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.12%)</title><rect x="939.8" y="867.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.06%)</title><rect x="939.8" y="851.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.06%)</title><rect x="939.9" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.06%)</title><rect x="939.9" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.06%)</title><rect x="939.9" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.06%)</title><rect x="939.9" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="942.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.06%)</title><rect x="939.9" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="942.9" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.04%)</title><rect x="940.1" y="755.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="943.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="940.1" y="739.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="943.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="940.1" y="723.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="943.1" y="734.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.03%)</title><rect x="940.1" y="707.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="943.1" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="940.1" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.1" y="702.0"></text>
</g>
<g>
<title>futex_wake_op (5 samples, 0.03%)</title><rect x="940.1" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="943.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.05%)</title><rect x="940.6" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.05%)</title><rect x="940.6" y="835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.04%)</title><rect x="940.6" y="819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="943.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.04%)</title><rect x="940.6" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (5 samples, 0.03%)</title><rect x="941.1" y="963.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.reset (6 samples, 0.04%)</title><rect x="941.5" y="963.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.set (6 samples, 0.04%)</title><rect x="941.5" y="947.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="944.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$293/850614757.run (31 samples, 0.19%)</title><rect x="942.5" y="1107.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="945.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (30 samples, 0.18%)</title><rect x="942.5" y="1091.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27 samples, 0.17%)</title><rect x="942.6" y="1075.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.16%)</title><rect x="942.6" y="1059.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.02%)</title><rect x="942.7" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.02%)</title><rect x="942.7" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (21 samples, 0.13%)</title><rect x="943.0" y="1043.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.06%)</title><rect x="943.0" y="1027.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.04%)</title><rect x="943.2" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="946.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.04%)</title><rect x="943.2" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="946.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.04%)</title><rect x="943.2" y="979.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.04%)</title><rect x="943.2" y="963.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.04%)</title><rect x="943.2" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.2" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="943.2" y="931.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="946.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.06%)</title><rect x="943.7" y="1027.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="946.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.06%)</title><rect x="943.7" y="1011.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.04%)</title><rect x="943.8" y="995.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.04%)</title><rect x="943.8" y="979.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="946.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.02%)</title><rect x="944.1" y="963.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.1" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.02%)</title><rect x="944.1" y="947.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.1" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.02%)</title><rect x="944.1" y="931.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (88 samples, 0.54%)</title><rect x="944.7" y="1123.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.7" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.04%)</title><rect x="944.7" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.7" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.04%)</title><rect x="944.7" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="947.7" y="1102.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.02%)</title><rect x="944.7" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (81 samples, 0.50%)</title><rect x="945.2" y="1107.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="948.2" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (23 samples, 0.14%)</title><rect x="945.9" y="1091.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="948.9" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (22 samples, 0.14%)</title><rect x="946.0" y="1075.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="949.0" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (21 samples, 0.13%)</title><rect x="946.1" y="1059.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="949.1" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (19 samples, 0.12%)</title><rect x="946.1" y="1043.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="949.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (45 samples, 0.28%)</title><rect x="947.8" y="1091.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.8" y="1102.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (11 samples, 0.07%)</title><rect x="948.3" y="1075.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.3" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (11 samples, 0.07%)</title><rect x="948.3" y="1059.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.3" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (27 samples, 0.17%)</title><rect x="949.1" y="1075.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.1" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (27 samples, 0.17%)</title><rect x="949.1" y="1059.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.1" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (21 samples, 0.13%)</title><rect x="949.5" y="1043.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (10 samples, 0.06%)</title><rect x="951.3" y="1123.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.3" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.03%)</title><rect x="951.7" y="1107.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.03%)</title><rect x="951.7" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="954.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.03%)</title><rect x="951.7" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="954.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (5 samples, 0.03%)</title><rect x="952.1" y="1123.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="955.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (5 samples, 0.03%)</title><rect x="952.1" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (60 samples, 0.37%)</title><rect x="952.4" y="1123.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.4" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.10%)</title><rect x="952.9" y="1107.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="955.9" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (16 samples, 0.10%)</title><rect x="952.9" y="1091.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="955.9" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (15 samples, 0.09%)</title><rect x="953.0" y="1075.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="956.0" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (9 samples, 0.06%)</title><rect x="953.0" y="1059.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="956.0" y="1070.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.04%)</title><rect x="953.7" y="1059.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="956.7" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.now (19 samples, 0.12%)</title><rect x="954.1" y="1107.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.1" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (19 samples, 0.12%)</title><rect x="954.1" y="1091.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="957.1" y="1102.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.02%)</title><rect x="954.1" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.1" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.create (4 samples, 0.02%)</title><rect x="954.1" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="957.1" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="954.1" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="957.1" y="1054.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (4 samples, 0.02%)</title><rect x="954.1" y="1027.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="957.1" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="954.1" y="1011.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="957.1" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="954.1" y="995.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="957.1" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="954.1" y="979.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="957.1" y="990.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.02%)</title><rect x="954.1" y="963.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="957.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (15 samples, 0.09%)</title><rect x="954.4" y="1075.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.4" y="1086.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (11 samples, 0.07%)</title><rect x="954.7" y="1059.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="957.7" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (7 samples, 0.04%)</title><rect x="955.0" y="1043.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="958.0" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.02%)</title><rect x="955.2" y="1027.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="958.2" y="1038.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.02%)</title><rect x="955.2" y="1011.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="958.2" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (6 samples, 0.04%)</title><rect x="955.5" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="958.5" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (5 samples, 0.03%)</title><rect x="955.5" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="958.5" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (5 samples, 0.03%)</title><rect x="955.5" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.5" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (11 samples, 0.07%)</title><rect x="956.0" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="959.0" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (9 samples, 0.06%)</title><rect x="956.1" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.1" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (8 samples, 0.05%)</title><rect x="956.1" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="959.1" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (8 samples, 0.05%)</title><rect x="956.1" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="959.1" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (412 samples, 2.54%)</title><rect x="956.8" y="1123.0" width="29.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="959.8" y="1134.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (412 samples, 2.54%)</title><rect x="956.8" y="1107.0" width="29.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="959.8" y="1118.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (406 samples, 2.50%)</title><rect x="957.1" y="1091.0" width="29.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="960.1" y="1102.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (194 samples, 1.20%)</title><rect x="957.4" y="1075.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.4" y="1086.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.03%)</title><rect x="958.0" y="1059.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="961.0" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (178 samples, 1.10%)</title><rect x="958.4" y="1059.0" width="13.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="961.4" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (135 samples, 0.83%)</title><rect x="961.6" y="1043.0" width="9.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="964.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (133 samples, 0.82%)</title><rect x="961.6" y="1027.0" width="9.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="964.6" y="1038.0"></text>
</g>
<g>
<title>sys_epoll_wait (120 samples, 0.74%)</title><rect x="962.5" y="1011.0" width="8.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="965.5" y="1022.0"></text>
</g>
<g>
<title>ep_poll (114 samples, 0.70%)</title><rect x="962.7" y="995.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="965.7" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="963.0" y="979.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="966.0" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list (44 samples, 0.27%)</title><rect x="963.8" y="979.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="966.8" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="963.9" y="963.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="966.9" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (35 samples, 0.22%)</title><rect x="964.4" y="963.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="967.4" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (17 samples, 0.10%)</title><rect x="965.2" y="947.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.2" y="958.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.04%)</title><rect x="965.9" y="931.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="968.9" y="942.0"></text>
</g>
<g>
<title>pipe_poll (4 samples, 0.02%)</title><rect x="966.4" y="947.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="969.4" y="958.0"></text>
</g>
<g>
<title>ktime_get_ts64 (4 samples, 0.02%)</title><rect x="967.1" y="979.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="970.1" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (47 samples, 0.29%)</title><rect x="967.4" y="979.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="970.4" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (47 samples, 0.29%)</title><rect x="967.4" y="963.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="970.4" y="974.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (16 samples, 0.10%)</title><rect x="967.5" y="947.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="970.5" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.09%)</title><rect x="967.5" y="931.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="970.5" y="942.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (9 samples, 0.06%)</title><rect x="968.7" y="947.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="971.7" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="968.7" y="931.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="971.7" y="942.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.12%)</title><rect x="969.4" y="947.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="972.4" y="958.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.12%)</title><rect x="969.4" y="931.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="972.4" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (19 samples, 0.12%)</title><rect x="969.4" y="915.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="972.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (185 samples, 1.14%)</title><rect x="971.5" y="1075.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="974.5" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.04%)</title><rect x="972.0" y="1059.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.04%)</title><rect x="972.0" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="975.0" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (151 samples, 0.93%)</title><rect x="972.5" y="1059.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="975.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (147 samples, 0.91%)</title><rect x="972.8" y="1043.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="975.8" y="1054.0"></text>
</g>
<g>
<title>read (137 samples, 0.84%)</title><rect x="973.4" y="1027.0" width="10.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="976.4" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (97 samples, 0.60%)</title><rect x="976.3" y="1011.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="979.3" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (97 samples, 0.60%)</title><rect x="976.3" y="995.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="979.3" y="1006.0"></text>
</g>
<g>
<title>sys_read (83 samples, 0.51%)</title><rect x="977.3" y="979.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="980.3" y="990.0"></text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.04%)</title><rect x="977.4" y="963.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="980.4" y="974.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.04%)</title><rect x="977.4" y="947.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="980.4" y="958.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.04%)</title><rect x="977.4" y="931.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="980.4" y="942.0"></text>
</g>
<g>
<title>vfs_read (73 samples, 0.45%)</title><rect x="978.0" y="963.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="981.0" y="974.0"></text>
</g>
<g>
<title>__vfs_read (52 samples, 0.32%)</title><rect x="978.2" y="947.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="981.2" y="958.0"></text>
</g>
<g>
<title>new_sync_read (51 samples, 0.31%)</title><rect x="978.2" y="931.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="981.2" y="942.0"></text>
</g>
<g>
<title>pipe_read (42 samples, 0.26%)</title><rect x="978.9" y="915.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="981.9" y="926.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.04%)</title><rect x="979.4" y="899.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="982.4" y="910.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.04%)</title><rect x="979.4" y="883.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="982.4" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="979.4" y="867.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="982.4" y="878.0"></text>
</g>
<g>
<title>copy_page_to_iter (10 samples, 0.06%)</title><rect x="980.0" y="899.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="983.0" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.02%)</title><rect x="980.5" y="883.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="983.5" y="894.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.03%)</title><rect x="980.9" y="899.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="983.9" y="910.0"></text>
</g>
<g>
<title>touch_atime (9 samples, 0.06%)</title><rect x="981.3" y="899.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="984.3" y="910.0"></text>
</g>
<g>
<title>__atime_needs_update (7 samples, 0.04%)</title><rect x="981.3" y="883.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.3" y="894.0"></text>
</g>
<g>
<title>current_time (4 samples, 0.02%)</title><rect x="981.5" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="984.5" y="878.0"></text>
</g>
<g>
<title>rw_verify_area (16 samples, 0.10%)</title><rect x="982.1" y="947.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="985.1" y="958.0"></text>
</g>
<g>
<title>security_file_permission (12 samples, 0.07%)</title><rect x="982.4" y="931.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="985.4" y="942.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.04%)</title><rect x="982.5" y="915.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="985.5" y="926.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.04%)</title><rect x="982.5" y="899.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="985.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (20 samples, 0.12%)</title><rect x="983.5" y="1059.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (15 samples, 0.09%)</title><rect x="983.8" y="1043.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="986.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (14 samples, 0.09%)</title><rect x="983.9" y="1027.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="986.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (14 samples, 0.09%)</title><rect x="983.9" y="1011.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.9" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.09%)</title><rect x="983.9" y="995.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="986.9" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (14 samples, 0.09%)</title><rect x="983.9" y="979.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="986.9" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.07%)</title><rect x="984.0" y="963.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="987.0" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.07%)</title><rect x="984.0" y="947.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="987.0" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.07%)</title><rect x="984.0" y="931.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="987.0" y="942.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.06%)</title><rect x="984.1" y="915.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="987.1" y="926.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.06%)</title><rect x="984.1" y="899.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="987.1" y="910.0"></text>
</g>
<g>
<title>futex_wake_op (9 samples, 0.06%)</title><rect x="984.2" y="883.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="987.2" y="894.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.06%)</title><rect x="984.2" y="867.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="987.2" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.06%)</title><rect x="984.2" y="851.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="987.2" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.06%)</title><rect x="984.2" y="835.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="987.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.02%)</title><rect x="984.9" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (6 samples, 0.04%)</title><rect x="985.3" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="988.3" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (12 samples, 0.07%)</title><rect x="985.7" y="1075.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.7" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (66 samples, 0.41%)</title><rect x="986.7" y="1123.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="989.7" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (66 samples, 0.41%)</title><rect x="986.7" y="1107.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="989.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (64 samples, 0.39%)</title><rect x="986.9" y="1091.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="989.9" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (37 samples, 0.23%)</title><rect x="986.9" y="1075.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.9" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (36 samples, 0.22%)</title><rect x="987.0" y="1059.0" width="2.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="990.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.17%)</title><rect x="987.6" y="1043.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="990.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.16%)</title><rect x="987.6" y="1027.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="990.6" y="1038.0"></text>
</g>
<g>
<title>sys_epoll_wait (20 samples, 0.12%)</title><rect x="988.0" y="1011.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="991.0" y="1022.0"></text>
</g>
<g>
<title>ep_poll (17 samples, 0.10%)</title><rect x="988.3" y="995.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="991.3" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list (17 samples, 0.10%)</title><rect x="988.3" y="979.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="991.3" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (15 samples, 0.09%)</title><rect x="988.3" y="963.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="991.3" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (9 samples, 0.06%)</title><rect x="988.7" y="947.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="991.7" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (21 samples, 0.13%)</title><rect x="989.6" y="1075.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.6" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (11 samples, 0.07%)</title><rect x="989.9" y="1059.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="992.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (9 samples, 0.06%)</title><rect x="990.1" y="1043.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="993.1" y="1054.0"></text>
</g>
<g>
<title>read (9 samples, 0.06%)</title><rect x="990.1" y="1027.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="993.1" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="990.3" y="1011.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="993.3" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="990.3" y="995.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="993.3" y="1006.0"></text>
</g>
<g>
<title>sys_read (5 samples, 0.03%)</title><rect x="990.4" y="979.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="993.4" y="990.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.03%)</title><rect x="990.4" y="963.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="993.4" y="974.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.02%)</title><rect x="990.4" y="947.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="993.4" y="958.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.02%)</title><rect x="990.4" y="931.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="993.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (6 samples, 0.04%)</title><rect x="990.7" y="1059.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (4 samples, 0.02%)</title><rect x="990.9" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="993.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (4 samples, 0.02%)</title><rect x="990.9" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="993.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (4 samples, 0.02%)</title><rect x="990.9" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="993.9" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (5 samples, 0.03%)</title><rect x="991.2" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.2" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectedKeys (4 samples, 0.02%)</title><rect x="991.5" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (15 samples, 0.09%)</title><rect x="991.8" y="1123.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.8" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (13 samples, 0.08%)</title><rect x="991.9" y="1107.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.9" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (7 samples, 0.04%)</title><rect x="992.3" y="1091.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,435 samples, 8.84%)</title><rect x="993.3" y="1139.0" width="104.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="996.3" y="1150.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.04%)</title><rect x="993.4" y="1123.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="996.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.04%)</title><rect x="993.4" y="1107.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (438 samples, 2.70%)</title><rect x="994.0" y="1123.0" width="31.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.0" y="1134.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (35 samples, 0.22%)</title><rect x="994.6" y="1107.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (23 samples, 0.14%)</title><rect x="995.5" y="1091.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (395 samples, 2.43%)</title><rect x="997.1" y="1107.0" width="28.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.1" y="1118.0">on..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (11 samples, 0.07%)</title><rect x="998.6" y="1091.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1001.6" y="1102.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (10 samples, 0.06%)</title><rect x="998.6" y="1075.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1001.6" y="1086.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (8 samples, 0.05%)</title><rect x="998.6" y="1059.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1001.6" y="1070.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.02%)</title><rect x="998.6" y="1043.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1001.6" y="1054.0"></text>
</g>
<g>
<title>syscall (4 samples, 0.02%)</title><rect x="998.9" y="1043.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1001.9" y="1054.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.03%)</title><rect x="999.4" y="1091.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1002.4" y="1102.0"></text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.05%)</title><rect x="999.7" y="1091.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1002.7" y="1102.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.04%)</title><rect x="1000.3" y="1091.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1003.3" y="1102.0"></text>
</g>
<g>
<title>epoll_wait (334 samples, 2.06%)</title><rect x="1001.0" y="1091.0" width="24.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1004.0" y="1102.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (274 samples, 1.69%)</title><rect x="1005.3" y="1075.0" width="20.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1008.3" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (269 samples, 1.66%)</title><rect x="1005.3" y="1059.0" width="19.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1008.3" y="1070.0"></text>
</g>
<g>
<title>fput (8 samples, 0.05%)</title><rect x="1007.0" y="1043.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1010.0" y="1054.0"></text>
</g>
<g>
<title>sys_epoll_wait (238 samples, 1.47%)</title><rect x="1007.6" y="1043.0" width="17.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1010.6" y="1054.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.03%)</title><rect x="1007.9" y="1027.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1010.9" y="1038.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="1007.9" y="1011.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1010.9" y="1022.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.03%)</title><rect x="1007.9" y="995.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1010.9" y="1006.0"></text>
</g>
<g>
<title>ep_poll (225 samples, 1.39%)</title><rect x="1008.5" y="1027.0" width="16.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1011.5" y="1038.0"></text>
</g>
<g>
<title>__lock_text_start (18 samples, 0.11%)</title><rect x="1008.6" y="1011.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1011.6" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list (96 samples, 0.59%)</title><rect x="1010.2" y="1011.0" width="7.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1013.2" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.06%)</title><rect x="1010.4" y="995.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1013.4" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (4 samples, 0.02%)</title><rect x="1011.1" y="995.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1014.1" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (75 samples, 0.46%)</title><rect x="1011.4" y="995.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1014.4" y="1006.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (51 samples, 0.31%)</title><rect x="1012.8" y="979.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1015.8" y="990.0"></text>
</g>
<g>
<title>sock_poll (35 samples, 0.22%)</title><rect x="1013.8" y="963.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1016.8" y="974.0"></text>
</g>
<g>
<title>tcp_poll (13 samples, 0.08%)</title><rect x="1015.3" y="947.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1018.3" y="958.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.03%)</title><rect x="1016.5" y="979.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1019.5" y="990.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.02%)</title><rect x="1016.9" y="995.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1019.9" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.02%)</title><rect x="1017.2" y="1011.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1020.2" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (98 samples, 0.60%)</title><rect x="1017.7" y="1011.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1020.7" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (96 samples, 0.59%)</title><rect x="1017.8" y="995.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1020.8" y="1006.0"></text>
</g>
<g>
<title>schedule (90 samples, 0.55%)</title><rect x="1018.3" y="979.0" width="6.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1021.3" y="990.0"></text>
</g>
<g>
<title>__schedule (90 samples, 0.55%)</title><rect x="1018.3" y="963.0" width="6.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1021.3" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (79 samples, 0.49%)</title><rect x="1019.1" y="947.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1022.1" y="958.0"></text>
</g>
<g>
<title>sys_epoll_wait (5 samples, 0.03%)</title><rect x="1024.9" y="1059.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1027.9" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.02%)</title><rect x="1025.6" y="1091.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1028.6" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.02%)</title><rect x="1025.6" y="1075.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1028.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (987 samples, 6.08%)</title><rect x="1025.8" y="1123.0" width="71.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.8" y="1134.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (970 samples, 5.98%)</title><rect x="1026.6" y="1107.0" width="70.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.6" y="1118.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (564 samples, 3.47%)</title><rect x="1027.1" y="1091.0" width="41.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.1" y="1102.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (412 samples, 2.54%)</title><rect x="1028.0" y="1075.0" width="30.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1031.0" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (406 samples, 2.50%)</title><rect x="1028.5" y="1059.0" width="29.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.5" y="1070.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (308 samples, 1.90%)</title><rect x="1028.6" y="1043.0" width="22.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.6" y="1054.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.05%)</title><rect x="1029.0" y="1027.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.04%)</title><rect x="1029.0" y="1011.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.04%)</title><rect x="1029.1" y="995.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1032.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (31 samples, 0.19%)</title><rect x="1029.6" y="1027.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1032.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.17%)</title><rect x="1029.6" y="1011.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1032.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.07%)</title><rect x="1029.9" y="995.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1032.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.05%)</title><rect x="1030.1" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.1" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.04%)</title><rect x="1030.3" y="963.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.3" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.04%)</title><rect x="1030.3" y="947.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1033.3" y="958.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (12 samples, 0.07%)</title><rect x="1030.7" y="995.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="1031.0" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1034.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="1031.0" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1034.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.05%)</title><rect x="1031.0" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (264 samples, 1.63%)</title><rect x="1031.8" y="1027.0" width="19.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/495083153.linkToTargetMethod (26 samples, 0.16%)</title><rect x="1031.9" y="1011.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.15%)</title><rect x="1031.9" y="995.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1034.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.get$Lambda (25 samples, 0.15%)</title><rect x="1031.9" y="979.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1034.9" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="1032.5" y="963.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1035.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/323330697.&lt;init&gt; (14 samples, 0.09%)</title><rect x="1032.7" y="963.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (237 samples, 1.46%)</title><rect x="1033.8" y="1011.0" width="17.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1036.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (233 samples, 1.44%)</title><rect x="1033.8" y="995.0" width="17.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1036.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (11 samples, 0.07%)</title><rect x="1033.8" y="979.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1036.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (11 samples, 0.07%)</title><rect x="1033.8" y="963.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (11 samples, 0.07%)</title><rect x="1033.8" y="947.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1036.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.03%)</title><rect x="1034.3" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (5 samples, 0.03%)</title><rect x="1034.3" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1037.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.05%)</title><rect x="1034.6" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.04%)</title><rect x="1034.7" y="963.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.02%)</title><rect x="1034.9" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.02%)</title><rect x="1034.9" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (214 samples, 1.32%)</title><rect x="1035.2" y="979.0" width="15.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (214 samples, 1.32%)</title><rect x="1035.2" y="963.0" width="15.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1038.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (214 samples, 1.32%)</title><rect x="1035.2" y="947.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1038.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (212 samples, 1.31%)</title><rect x="1035.4" y="931.0" width="15.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1038.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (212 samples, 1.31%)</title><rect x="1035.4" y="915.0" width="15.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1038.4" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (33 samples, 0.20%)</title><rect x="1035.8" y="899.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1038.8" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.05%)</title><rect x="1036.9" y="883.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1039.9" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.02%)</title><rect x="1037.5" y="883.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1040.5" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (167 samples, 1.03%)</title><rect x="1038.2" y="899.0" width="12.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1041.2" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (138 samples, 0.85%)</title><rect x="1040.3" y="883.0" width="10.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1043.3" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (138 samples, 0.85%)</title><rect x="1040.3" y="867.0" width="10.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1043.3" y="878.0"></text>
</g>
<g>
<title>sys_futex (130 samples, 0.80%)</title><rect x="1040.9" y="851.0" width="9.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1043.9" y="862.0"></text>
</g>
<g>
<title>do_futex (127 samples, 0.78%)</title><rect x="1041.0" y="835.0" width="9.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1044.0" y="846.0"></text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.03%)</title><rect x="1041.1" y="819.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1044.1" y="830.0"></text>
</g>
<g>
<title>futex_wake_op (118 samples, 0.73%)</title><rect x="1041.5" y="819.0" width="8.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1044.5" y="830.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.03%)</title><rect x="1041.8" y="803.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1044.8" y="814.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.04%)</title><rect x="1042.3" y="803.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1045.3" y="814.0"></text>
</g>
<g>
<title>wake_up_q (101 samples, 0.62%)</title><rect x="1042.7" y="803.0" width="7.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1045.7" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (99 samples, 0.61%)</title><rect x="1042.9" y="787.0" width="7.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1045.9" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (99 samples, 0.61%)</title><rect x="1042.9" y="771.0" width="7.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1045.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (63 samples, 0.39%)</title><rect x="1051.0" y="1043.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (63 samples, 0.39%)</title><rect x="1051.0" y="1027.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (46 samples, 0.28%)</title><rect x="1051.0" y="1011.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.equals (44 samples, 0.27%)</title><rect x="1051.1" y="995.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1054.1" y="1006.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (17 samples, 0.10%)</title><rect x="1052.0" y="979.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.0" y="990.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="1053.3" y="979.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1056.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.coder (8 samples, 0.05%)</title><rect x="1053.8" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (17 samples, 0.10%)</title><rect x="1054.3" y="1011.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (17 samples, 0.10%)</title><rect x="1054.3" y="995.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (13 samples, 0.08%)</title><rect x="1054.6" y="979.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.6" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (31 samples, 0.19%)</title><rect x="1055.7" y="1043.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1058.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.18%)</title><rect x="1055.8" y="1027.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.12%)</title><rect x="1056.5" y="1011.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1056.7" y="995.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.7" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.07%)</title><rect x="1057.2" y="995.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.2" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="1057.7" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1060.7" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1057.7" y="963.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1060.7" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (54 samples, 0.33%)</title><rect x="1058.0" y="1075.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1061.0" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="1058.4" y="1059.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1061.4" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="1058.4" y="1043.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1061.4" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="1058.4" y="1027.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1061.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13 samples, 0.08%)</title><rect x="1058.7" y="1059.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.7" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.06%)</title><rect x="1058.7" y="1043.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1061.7" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (9 samples, 0.06%)</title><rect x="1058.7" y="1027.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1061.7" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.06%)</title><rect x="1058.7" y="1011.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.7" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.04%)</title><rect x="1058.7" y="995.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1061.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.02%)</title><rect x="1059.4" y="1043.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.02%)</title><rect x="1059.4" y="1027.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.02%)</title><rect x="1059.4" y="1011.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1062.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 0.17%)</title><rect x="1059.6" y="1059.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1062.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 0.17%)</title><rect x="1059.6" y="1043.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.6" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="1060.7" y="1027.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1063.7" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1060.7" y="1011.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1063.7" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1060.7" y="995.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1063.7" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="1060.7" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1063.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1061.1" y="1027.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1061.1" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.04%)</title><rect x="1061.1" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.1" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="1061.2" y="979.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1064.2" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1061.2" y="963.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1064.2" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1061.2" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1064.2" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.02%)</title><rect x="1061.6" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (5 samples, 0.03%)</title><rect x="1062.0" y="1075.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1065.0" y="1086.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="1062.0" y="1059.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1065.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (28 samples, 0.17%)</title><rect x="1062.3" y="1075.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.02%)</title><rect x="1062.5" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.08%)</title><rect x="1062.8" y="1059.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.08%)</title><rect x="1062.8" y="1043.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.06%)</title><rect x="1063.7" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.06%)</title><rect x="1063.7" y="1043.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.7" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.04%)</title><rect x="1063.9" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.9" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="1063.9" y="1011.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1066.9" y="1022.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1063.9" y="995.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1066.9" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1063.9" y="979.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1066.9" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="1064.0" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1067.0" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="1064.0" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1067.0" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (51 samples, 0.31%)</title><rect x="1064.4" y="1075.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (49 samples, 0.30%)</title><rect x="1064.5" y="1059.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.5" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.04%)</title><rect x="1066.1" y="1043.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1069.1" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1066.2" y="1027.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1069.2" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1066.2" y="1011.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1069.2" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="1066.2" y="995.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1069.2" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="1066.6" y="1043.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1069.6" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="1066.6" y="1027.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1069.6" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="1066.6" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1069.6" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="1066.6" y="995.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1069.6" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="1066.6" y="979.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1069.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.07%)</title><rect x="1067.0" y="1043.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.07%)</title><rect x="1067.0" y="1027.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1070.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.07%)</title><rect x="1067.0" y="1011.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1070.0" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.04%)</title><rect x="1067.2" y="995.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1070.2" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1067.4" y="979.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1070.4" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1067.4" y="963.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1070.4" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="1067.4" y="947.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1070.4" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="1067.4" y="931.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1070.4" y="942.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (4 samples, 0.02%)</title><rect x="1067.8" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1070.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (397 samples, 2.45%)</title><rect x="1068.2" y="1091.0" width="28.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.2" y="1102.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (395 samples, 2.43%)</title><rect x="1068.3" y="1075.0" width="28.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.3" y="1086.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (58 samples, 0.36%)</title><rect x="1069.8" y="1059.0" width="4.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1072.8" y="1070.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.04%)</title><rect x="1070.4" y="1043.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1073.4" y="1054.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.02%)</title><rect x="1070.8" y="1043.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1073.8" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (5 samples, 0.03%)</title><rect x="1071.1" y="1043.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1074.1" y="1054.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (13 samples, 0.08%)</title><rect x="1071.5" y="1043.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1074.5" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (16 samples, 0.10%)</title><rect x="1072.4" y="1043.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1075.4" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (8 samples, 0.05%)</title><rect x="1073.0" y="1027.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1076.0" y="1038.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.02%)</title><rect x="1073.7" y="1043.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1076.7" y="1054.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.02%)</title><rect x="1074.0" y="1059.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1077.0" y="1070.0"></text>
</g>
<g>
<title>recv (307 samples, 1.89%)</title><rect x="1074.6" y="1059.0" width="22.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1077.6" y="1070.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (250 samples, 1.54%)</title><rect x="1078.7" y="1043.0" width="18.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1081.7" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (243 samples, 1.50%)</title><rect x="1078.7" y="1027.0" width="17.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1081.7" y="1038.0"></text>
</g>
<g>
<title>sys_recvfrom (198 samples, 1.22%)</title><rect x="1082.0" y="1011.0" width="14.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1085.0" y="1022.0"></text>
</g>
<g>
<title>SYSC_recvfrom (192 samples, 1.18%)</title><rect x="1082.0" y="995.0" width="13.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1085.0" y="1006.0"></text>
</g>
<g>
<title>sock_recvmsg (151 samples, 0.93%)</title><rect x="1082.9" y="979.0" width="11.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1085.9" y="990.0"></text>
</g>
<g>
<title>inet_recvmsg (127 samples, 0.78%)</title><rect x="1083.1" y="963.0" width="9.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1086.1" y="974.0"></text>
</g>
<g>
<title>tcp_recvmsg (118 samples, 0.73%)</title><rect x="1083.8" y="947.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1086.8" y="958.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.13%)</title><rect x="1085.6" y="931.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1088.6" y="942.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.11%)</title><rect x="1085.7" y="915.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1088.7" y="926.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.06%)</title><rect x="1086.0" y="899.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1089.0" y="910.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.02%)</title><rect x="1086.8" y="899.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1089.8" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (12 samples, 0.07%)</title><rect x="1087.2" y="931.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1090.2" y="942.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (40 samples, 0.25%)</title><rect x="1088.3" y="931.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1091.3" y="942.0"></text>
</g>
<g>
<title>__check_object_size (21 samples, 0.13%)</title><rect x="1088.4" y="915.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1091.4" y="926.0"></text>
</g>
<g>
<title>__check_heap_object (4 samples, 0.02%)</title><rect x="1089.2" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1092.2" y="910.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.04%)</title><rect x="1089.5" y="899.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1092.5" y="910.0"></text>
</g>
<g>
<title>_copy_to_iter (12 samples, 0.07%)</title><rect x="1090.2" y="915.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1093.2" y="926.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.05%)</title><rect x="1090.2" y="899.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1093.2" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.02%)</title><rect x="1090.8" y="899.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1093.8" y="910.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.03%)</title><rect x="1091.3" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1094.3" y="942.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.06%)</title><rect x="1091.6" y="931.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1094.6" y="942.0"></text>
</g>
<g>
<title>security_socket_recvmsg (19 samples, 0.12%)</title><rect x="1092.4" y="963.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1095.4" y="974.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.02%)</title><rect x="1092.4" y="947.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1095.4" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (15 samples, 0.09%)</title><rect x="1092.7" y="947.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1095.7" y="958.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (14 samples, 0.09%)</title><rect x="1092.7" y="931.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1095.7" y="942.0"></text>
</g>
<g>
<title>aa_sk_perm (12 samples, 0.07%)</title><rect x="1092.9" y="915.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1095.9" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (28 samples, 0.17%)</title><rect x="1093.9" y="979.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1096.9" y="990.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.10%)</title><rect x="1093.9" y="963.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1096.9" y="974.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.10%)</title><rect x="1093.9" y="947.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1096.9" y="958.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.10%)</title><rect x="1093.9" y="931.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1096.9" y="942.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.07%)</title><rect x="1095.1" y="963.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1098.1" y="974.0"></text>
</g>
<g>
<title>sys_recvfrom (7 samples, 0.04%)</title><rect x="1096.4" y="1027.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1099.4" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.04%)</title><rect x="1097.1" y="1107.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1100.1" y="1118.0"></text>
</g>
<g>
<title>start_thread (1,271 samples, 7.83%)</title><rect x="1097.6" y="1139.0" width="92.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1100.6" y="1150.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1,271 samples, 7.83%)</title><rect x="1097.6" y="1123.0" width="92.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1100.6" y="1134.0">thread_nati..</text>
</g>
<g>
<title>GangWorker::loop() (1,179 samples, 7.26%)</title><rect x="1097.7" y="1107.0" width="85.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1100.7" y="1118.0">GangWorker..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1,143 samples, 7.04%)</title><rect x="1097.8" y="1091.0" width="83.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1100.8" y="1102.0">G1ParTask..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (812 samples, 5.00%)</title><rect x="1097.8" y="1075.0" width="59.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.8" y="1086.0">G1ParE..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (106 samples, 0.65%)</title><rect x="1098.7" y="1059.0" width="7.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1101.7" y="1070.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (54 samples, 0.33%)</title><rect x="1101.7" y="1043.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1104.7" y="1054.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (21 samples, 0.13%)</title><rect x="1104.1" y="1027.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1107.1" y="1038.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (10 samples, 0.06%)</title><rect x="1105.7" y="1043.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1108.7" y="1054.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (5 samples, 0.03%)</title><rect x="1106.4" y="1059.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1109.4" y="1070.0"></text>
</g>
<g>
<title>SpinPause (689 samples, 4.24%)</title><rect x="1106.8" y="1059.0" width="50.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1109.8" y="1070.0">SpinP..</text>
</g>
<g>
<title>apic_timer_interrupt (4 samples, 0.02%)</title><rect x="1156.6" y="1043.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1159.6" y="1054.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="1156.6" y="1027.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1159.6" y="1038.0"></text>
</g>
<g>
<title>irq_exit (4 samples, 0.02%)</title><rect x="1156.6" y="1011.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1159.6" y="1022.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="1156.6" y="995.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1159.6" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadStateSet::state_for_worker(unsigned int) (5 samples, 0.03%)</title><rect x="1156.8" y="1075.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.8" y="1086.0"></text>
</g>
<g>
<title>G1ParScanThreadState::G1ParScanThreadState(G1CollectedHeap*, unsigned int, unsigned long) (4 samples, 0.02%)</title><rect x="1156.9" y="1059.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.9" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (231 samples, 1.42%)</title><rect x="1157.2" y="1075.0" width="16.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1160.2" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (231 samples, 1.42%)</title><rect x="1157.2" y="1059.0" width="16.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.2" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (228 samples, 1.40%)</title><rect x="1157.2" y="1043.0" width="16.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.2" y="1054.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (228 samples, 1.40%)</title><rect x="1157.2" y="1027.0" width="16.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.2" y="1038.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (221 samples, 1.36%)</title><rect x="1157.4" y="1011.0" width="16.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1160.4" y="1022.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (213 samples, 1.31%)</title><rect x="1157.9" y="995.0" width="15.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.9" y="1006.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (190 samples, 1.17%)</title><rect x="1157.9" y="979.0" width="13.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.9" y="990.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (32 samples, 0.20%)</title><rect x="1160.8" y="963.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.8" y="974.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (7 samples, 0.04%)</title><rect x="1163.3" y="963.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.3" y="974.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (46 samples, 0.28%)</title><rect x="1164.2" y="963.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.2" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (23 samples, 0.14%)</title><rect x="1167.5" y="963.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.5" y="974.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (13 samples, 0.08%)</title><rect x="1168.3" y="947.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.3" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (32 samples, 0.20%)</title><rect x="1169.2" y="963.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.2" y="974.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (5 samples, 0.03%)</title><rect x="1171.2" y="947.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.2" y="958.0"></text>
</g>
<g>
<title>oopDesc::size() (4 samples, 0.02%)</title><rect x="1171.8" y="979.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.8" y="990.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (16 samples, 0.10%)</title><rect x="1172.0" y="979.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.0" y="990.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.03%)</title><rect x="1174.0" y="1075.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.0" y="1086.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (5 samples, 0.03%)</title><rect x="1174.0" y="1059.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.0" y="1070.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.03%)</title><rect x="1174.0" y="1043.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.0" y="1054.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (89 samples, 0.55%)</title><rect x="1174.4" y="1075.0" width="6.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.4" y="1086.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (72 samples, 0.44%)</title><rect x="1174.8" y="1059.0" width="5.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.8" y="1070.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (69 samples, 0.43%)</title><rect x="1175.0" y="1043.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.0" y="1054.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (65 samples, 0.40%)</title><rect x="1175.2" y="1027.0" width="4.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.2" y="1038.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (15 samples, 0.09%)</title><rect x="1175.3" y="1011.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.3" y="1022.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (12 samples, 0.07%)</title><rect x="1175.4" y="995.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.4" y="1006.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (20 samples, 0.12%)</title><rect x="1176.6" y="1011.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.6" y="1022.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (16 samples, 0.10%)</title><rect x="1176.8" y="995.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.8" y="1006.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (5 samples, 0.03%)</title><rect x="1177.1" y="979.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.1" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.02%)</title><rect x="1177.1" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.1" y="974.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (6 samples, 0.04%)</title><rect x="1178.1" y="1011.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.1" y="1022.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (9 samples, 0.06%)</title><rect x="1178.5" y="1011.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.5" y="1022.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (5 samples, 0.03%)</title><rect x="1178.8" y="995.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.8" y="1006.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (10 samples, 0.06%)</title><rect x="1179.2" y="1011.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.2" y="1022.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (9 samples, 0.06%)</title><rect x="1180.2" y="1059.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.2" y="1070.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (6 samples, 0.04%)</title><rect x="1180.3" y="1043.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.3" y="1054.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (26 samples, 0.16%)</title><rect x="1181.3" y="1091.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.3" y="1102.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (25 samples, 0.15%)</title><rect x="1181.3" y="1075.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.3" y="1086.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.63] (15 samples, 0.09%)</title><rect x="1181.6" y="1059.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.6" y="1070.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (11 samples, 0.07%)</title><rect x="1181.9" y="1043.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.9" y="1054.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (5 samples, 0.03%)</title><rect x="1182.1" y="1027.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.1" y="1038.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (4 samples, 0.02%)</title><rect x="1182.2" y="1011.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.2" y="1022.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (5 samples, 0.03%)</title><rect x="1182.7" y="1059.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.7" y="1070.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_thread_local_monitors(Thread*, DeflateMonitorCounters*) (4 samples, 0.02%)</title><rect x="1182.7" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.7" y="1054.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (4 samples, 0.02%)</title><rect x="1182.7" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.7" y="1038.0"></text>
</g>
<g>
<title>JavaThread::run() (37 samples, 0.23%)</title><rect x="1183.4" y="1107.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.4" y="1118.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (37 samples, 0.23%)</title><rect x="1183.4" y="1091.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.4" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (34 samples, 0.21%)</title><rect x="1183.4" y="1075.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.4" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (33 samples, 0.20%)</title><rect x="1183.4" y="1059.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.4" y="1070.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (32 samples, 0.20%)</title><rect x="1183.4" y="1043.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.4" y="1054.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (32 samples, 0.20%)</title><rect x="1183.4" y="1027.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.4" y="1038.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (20 samples, 0.12%)</title><rect x="1183.4" y="1011.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.4" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (15 samples, 0.09%)</title><rect x="1183.7" y="995.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.7" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.03%)</title><rect x="1184.0" y="979.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.0" y="990.0"></text>
</g>
<g>
<title>Compile::Optimize() (7 samples, 0.04%)</title><rect x="1184.8" y="1011.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.8" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (4 samples, 0.02%)</title><rect x="1184.9" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1185.3" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1185.3" y="995.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1185.3" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1185.3" y="963.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1185.3" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1185.3" y="931.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.3" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1185.3" y="915.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.3" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1185.3" y="899.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.3" y="910.0"></text>
</g>
<g>
<title>VMThread::run() (51 samples, 0.31%)</title><rect x="1186.1" y="1107.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.1" y="1118.0"></text>
</g>
<g>
<title>VMThread::loop() (50 samples, 0.31%)</title><rect x="1186.1" y="1091.0" width="3.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.1" y="1102.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (17 samples, 0.10%)</title><rect x="1186.3" y="1075.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.3" y="1086.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (5 samples, 0.03%)</title><rect x="1187.2" y="1059.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.2" y="1070.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (5 samples, 0.03%)</title><rect x="1187.2" y="1043.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.2" y="1054.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (5 samples, 0.03%)</title><rect x="1187.2" y="1027.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.2" y="1038.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (5 samples, 0.03%)</title><rect x="1187.2" y="1011.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1190.2" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1187.2" y="995.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1190.2" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1187.2" y="979.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1190.2" y="990.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (23 samples, 0.14%)</title><rect x="1187.7" y="1075.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="1086.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (23 samples, 0.14%)</title><rect x="1187.7" y="1059.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.7" y="1070.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (23 samples, 0.14%)</title><rect x="1187.7" y="1043.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.7" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (20 samples, 0.12%)</title><rect x="1187.8" y="1027.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.8" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (7 samples, 0.04%)</title><rect x="1188.3" y="1011.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.3" y="1022.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (4 samples, 0.02%)</title><rect x="1188.5" y="995.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.5" y="1006.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (4 samples, 0.02%)</title><rect x="1188.5" y="979.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.5" y="990.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (4 samples, 0.02%)</title><rect x="1188.5" y="963.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1191.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1188.5" y="947.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1191.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1188.5" y="931.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1191.5" y="942.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.02%)</title><rect x="1188.5" y="915.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.5" y="926.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="1188.5" y="899.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1191.5" y="910.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="1188.5" y="883.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.5" y="894.0"></text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.02%)</title><rect x="1189.3" y="1075.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1192.3" y="1086.0"></text>
</g>
</g>
</svg>
