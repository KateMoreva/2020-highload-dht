<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (291,736 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (138,461 samples, 47.46%)</title><rect x="10.0" y="691.0" width="560.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (138,461 samples, 47.46%)</title><rect x="10.0" y="675.0" width="560.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (138,461 samples, 47.46%)</title><rect x="10.0" y="659.0" width="560.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (17,366 samples, 5.95%)</title><rect x="10.0" y="643.0" width="70.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17,366 samples, 5.95%)</title><rect x="10.0" y="627.0" width="70.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (17,366 samples, 5.95%)</title><rect x="10.0" y="611.0" width="70.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (111 samples, 0.04%)</title><rect x="10.0" y="595.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/172879885.apply (17,254 samples, 5.91%)</title><rect x="10.4" y="595.0" width="69.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.4" y="606.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (17,254 samples, 5.91%)</title><rect x="10.4" y="579.0" width="69.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.4" y="590.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (17,254 samples, 5.91%)</title><rect x="10.4" y="563.0" width="69.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.4" y="574.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (143 samples, 0.05%)</title><rect x="10.4" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (143 samples, 0.05%)</title><rect x="10.4" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$203/1559042816.get$Lambda (70 samples, 0.02%)</title><rect x="10.4" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$203 (70 samples, 0.02%)</title><rect x="10.4" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="13.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$205/1826986094.get$Lambda (73 samples, 0.03%)</title><rect x="10.7" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$205 (73 samples, 0.03%)</title><rect x="10.7" y="499.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (263 samples, 0.09%)</title><rect x="11.0" y="547.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (263 samples, 0.09%)</title><rect x="11.0" y="531.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (154 samples, 0.05%)</title><rect x="11.0" y="515.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="14.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="11.7" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="11.7" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.04%)</title><rect x="11.7" y="483.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (440 samples, 0.15%)</title><rect x="12.1" y="547.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (440 samples, 0.15%)</title><rect x="12.1" y="531.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (251 samples, 0.09%)</title><rect x="12.1" y="515.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="15.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (189 samples, 0.06%)</title><rect x="13.1" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (189 samples, 0.06%)</title><rect x="13.1" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (189 samples, 0.06%)</title><rect x="13.1" y="483.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="16.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (15,797 samples, 5.41%)</title><rect x="13.9" y="547.0" width="63.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.9" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (15,797 samples, 5.41%)</title><rect x="13.9" y="531.0" width="63.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.9" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (15,797 samples, 5.41%)</title><rect x="13.9" y="515.0" width="63.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.9" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (247 samples, 0.08%)</title><rect x="13.9" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (247 samples, 0.08%)</title><rect x="13.9" y="483.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/1631076502.get$Lambda (108 samples, 0.04%)</title><rect x="14.1" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$133 (108 samples, 0.04%)</title><rect x="14.1" y="451.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="17.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$178/1146133693.get$Lambda (80 samples, 0.03%)</title><rect x="14.5" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$178 (80 samples, 0.03%)</title><rect x="14.5" y="451.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="17.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10,874 samples, 3.73%)</title><rect x="14.9" y="499.0" width="44.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.9" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10,874 samples, 3.73%)</title><rect x="14.9" y="483.0" width="44.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.9" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10,774 samples, 3.69%)</title><rect x="14.9" y="467.0" width="43.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.9" y="478.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$178/1146133693.apply (10,774 samples, 3.69%)</title><rect x="14.9" y="451.0" width="43.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.9" y="462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (10,774 samples, 3.69%)</title><rect x="14.9" y="435.0" width="43.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.9" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (10,774 samples, 3.69%)</title><rect x="14.9" y="419.0" width="43.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.9" y="430.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/1631076502.apply (10,774 samples, 3.69%)</title><rect x="14.9" y="403.0" width="43.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.9" y="414.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (10,774 samples, 3.69%)</title><rect x="14.9" y="387.0" width="43.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.9" y="398.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.02%)</title><rect x="14.9" y="371.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.02%)</title><rect x="14.9" y="355.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/1165932755.get$Lambda (68 samples, 0.02%)</title><rect x="14.9" y="339.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$201 (68 samples, 0.02%)</title><rect x="14.9" y="323.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="17.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (241 samples, 0.08%)</title><rect x="15.1" y="371.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (241 samples, 0.08%)</title><rect x="15.1" y="355.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (126 samples, 0.04%)</title><rect x="15.1" y="339.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="18.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.03%)</title><rect x="15.8" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.03%)</title><rect x="15.8" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (88 samples, 0.03%)</title><rect x="15.8" y="307.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="18.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (206 samples, 0.07%)</title><rect x="16.1" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (206 samples, 0.07%)</title><rect x="16.1" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (103 samples, 0.04%)</title><rect x="16.1" y="339.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="19.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.04%)</title><rect x="16.5" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.04%)</title><rect x="16.5" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.04%)</title><rect x="16.5" y="307.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="19.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (10,259 samples, 3.52%)</title><rect x="17.0" y="371.0" width="41.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.0" y="382.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (98 samples, 0.03%)</title><rect x="17.0" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (98 samples, 0.03%)</title><rect x="17.0" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8,561 samples, 2.93%)</title><rect x="17.3" y="355.0" width="34.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.3" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8,561 samples, 2.93%)</title><rect x="17.3" y="339.0" width="34.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.3" y="350.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (103 samples, 0.04%)</title><rect x="17.3" y="323.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="20.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$196/1772088528.apply (8,236 samples, 2.82%)</title><rect x="17.8" y="323.0" width="33.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.8" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (8,236 samples, 2.82%)</title><rect x="17.8" y="307.0" width="33.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.8" y="318.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (220 samples, 0.08%)</title><rect x="18.0" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (220 samples, 0.08%)</title><rect x="18.0" y="275.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.0" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (127 samples, 0.04%)</title><rect x="18.0" y="259.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="21.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.03%)</title><rect x="18.5" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.03%)</title><rect x="18.5" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (93 samples, 0.03%)</title><rect x="18.5" y="227.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="21.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.04%)</title><rect x="18.9" y="291.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="21.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (157 samples, 0.05%)</title><rect x="19.3" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (75 samples, 0.03%)</title><rect x="19.3" y="275.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (82 samples, 0.03%)</title><rect x="19.6" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (79 samples, 0.03%)</title><rect x="19.6" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (79 samples, 0.03%)</title><rect x="19.6" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (79 samples, 0.03%)</title><rect x="19.6" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (79 samples, 0.03%)</title><rect x="19.6" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (79 samples, 0.03%)</title><rect x="19.6" y="195.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="22.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (268 samples, 0.09%)</title><rect x="19.9" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (268 samples, 0.09%)</title><rect x="19.9" y="275.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (80 samples, 0.03%)</title><rect x="19.9" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (80 samples, 0.03%)</title><rect x="19.9" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (80 samples, 0.03%)</title><rect x="19.9" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (80 samples, 0.03%)</title><rect x="19.9" y="211.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="22.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (188 samples, 0.06%)</title><rect x="20.2" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (188 samples, 0.06%)</title><rect x="20.2" y="243.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (135 samples, 0.05%)</title><rect x="20.2" y="227.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="23.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (7,434 samples, 2.55%)</title><rect x="21.0" y="291.0" width="30.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.0" y="302.0">jd..</text>
</g>
<g>
<title>java/lang/String.getBytes (667 samples, 0.23%)</title><rect x="21.3" y="275.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (667 samples, 0.23%)</title><rect x="21.3" y="259.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (667 samples, 0.23%)</title><rect x="21.3" y="243.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.3" y="254.0"></text>
</g>
<g>
<title>byte[] (667 samples, 0.23%)</title><rect x="21.3" y="227.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="24.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (260 samples, 0.09%)</title><rect x="24.0" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (260 samples, 0.09%)</title><rect x="24.0" y="259.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.0" y="270.0"></text>
</g>
<g>
<title>byte[] (260 samples, 0.09%)</title><rect x="24.0" y="243.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="27.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (484 samples, 0.17%)</title><rect x="25.0" y="275.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.0" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (484 samples, 0.17%)</title><rect x="25.0" y="259.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.0" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (484 samples, 0.17%)</title><rect x="25.0" y="243.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (484 samples, 0.17%)</title><rect x="25.0" y="227.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.0" y="238.0"></text>
</g>
<g>
<title>byte[] (484 samples, 0.17%)</title><rect x="25.0" y="211.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="28.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (779 samples, 0.27%)</title><rect x="27.0" y="275.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (779 samples, 0.27%)</title><rect x="27.0" y="259.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (79 samples, 0.03%)</title><rect x="27.0" y="243.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="30.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (700 samples, 0.24%)</title><rect x="27.3" y="243.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.3" y="254.0"></text>
</g>
<g>
<title>byte[] (700 samples, 0.24%)</title><rect x="27.3" y="227.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="30.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (165 samples, 0.06%)</title><rect x="30.1" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (165 samples, 0.06%)</title><rect x="30.1" y="259.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.1" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (165 samples, 0.06%)</title><rect x="30.1" y="243.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="33.1" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (80 samples, 0.03%)</title><rect x="30.8" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.8" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (80 samples, 0.03%)</title><rect x="30.8" y="259.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="33.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (3,675 samples, 1.26%)</title><rect x="31.1" y="275.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.1" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (79 samples, 0.03%)</title><rect x="31.1" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.03%)</title><rect x="31.1" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.03%)</title><rect x="31.1" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.1" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$218/1534029083.get$Lambda (79 samples, 0.03%)</title><rect x="31.1" y="211.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.1" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$218 (79 samples, 0.03%)</title><rect x="31.1" y="195.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="34.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,855 samples, 0.64%)</title><rect x="31.4" y="259.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (928 samples, 0.32%)</title><rect x="31.4" y="243.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.4" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (928 samples, 0.32%)</title><rect x="31.4" y="227.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.4" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (928 samples, 0.32%)</title><rect x="31.4" y="211.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (928 samples, 0.32%)</title><rect x="31.4" y="195.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.4" y="206.0"></text>
</g>
<g>
<title>byte[] (928 samples, 0.32%)</title><rect x="31.4" y="179.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="34.4" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (240 samples, 0.08%)</title><rect x="35.2" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.2" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (240 samples, 0.08%)</title><rect x="35.2" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (240 samples, 0.08%)</title><rect x="35.2" y="211.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (240 samples, 0.08%)</title><rect x="35.2" y="195.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="38.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (217 samples, 0.07%)</title><rect x="36.1" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.1" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (115 samples, 0.04%)</title><rect x="36.1" y="227.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="39.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (102 samples, 0.03%)</title><rect x="36.6" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (102 samples, 0.03%)</title><rect x="36.6" y="211.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="39.6" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$218/1534029083.test (470 samples, 0.16%)</title><rect x="37.0" y="243.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.0" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (470 samples, 0.16%)</title><rect x="37.0" y="227.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1810899357.test (470 samples, 0.16%)</title><rect x="37.0" y="211.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (470 samples, 0.16%)</title><rect x="37.0" y="195.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.0" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1970982267.test (470 samples, 0.16%)</title><rect x="37.0" y="179.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.0" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (470 samples, 0.16%)</title><rect x="37.0" y="163.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/73181251.test (470 samples, 0.16%)</title><rect x="37.0" y="147.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (470 samples, 0.16%)</title><rect x="37.0" y="131.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (470 samples, 0.16%)</title><rect x="37.0" y="115.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (470 samples, 0.16%)</title><rect x="37.0" y="99.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (232 samples, 0.08%)</title><rect x="37.0" y="83.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="40.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (238 samples, 0.08%)</title><rect x="38.0" y="83.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.0" y="94.0"></text>
</g>
<g>
<title>byte[] (238 samples, 0.08%)</title><rect x="38.0" y="67.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="41.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,741 samples, 0.60%)</title><rect x="38.9" y="259.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,741 samples, 0.60%)</title><rect x="38.9" y="243.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,741 samples, 0.60%)</title><rect x="38.9" y="227.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.9" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (74 samples, 0.03%)</title><rect x="39.1" y="211.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="42.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (161 samples, 0.06%)</title><rect x="39.4" y="211.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="42.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (110 samples, 0.04%)</title><rect x="40.3" y="211.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (110 samples, 0.04%)</title><rect x="40.3" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.3" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.get$Lambda (110 samples, 0.04%)</title><rect x="40.3" y="179.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.3" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$116 (110 samples, 0.04%)</title><rect x="40.3" y="163.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="43.3" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (109 samples, 0.04%)</title><rect x="40.8" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.8" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (109 samples, 0.04%)</title><rect x="40.8" y="195.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="43.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,024 samples, 0.35%)</title><rect x="41.2" y="211.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (1,024 samples, 0.35%)</title><rect x="41.2" y="195.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,024 samples, 0.35%)</title><rect x="41.2" y="179.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (173 samples, 0.06%)</title><rect x="41.2" y="163.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.2" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (173 samples, 0.06%)</title><rect x="41.2" y="147.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.2" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (173 samples, 0.06%)</title><rect x="41.2" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (173 samples, 0.06%)</title><rect x="41.2" y="115.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (173 samples, 0.06%)</title><rect x="41.2" y="99.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.2" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (173 samples, 0.06%)</title><rect x="41.2" y="83.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.2" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (173 samples, 0.06%)</title><rect x="41.2" y="67.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.2" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (173 samples, 0.06%)</title><rect x="41.2" y="51.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.2" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (173 samples, 0.06%)</title><rect x="41.2" y="35.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="44.2" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (463 samples, 0.16%)</title><rect x="41.9" y="163.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.9" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (463 samples, 0.16%)</title><rect x="41.9" y="147.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (226 samples, 0.08%)</title><rect x="41.9" y="131.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.9" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (226 samples, 0.08%)</title><rect x="41.9" y="115.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (226 samples, 0.08%)</title><rect x="41.9" y="99.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="44.9" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (237 samples, 0.08%)</title><rect x="42.8" y="131.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (237 samples, 0.08%)</title><rect x="42.8" y="115.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="45.8" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (388 samples, 0.13%)</title><rect x="43.8" y="163.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.8" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (388 samples, 0.13%)</title><rect x="43.8" y="147.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="46.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (154 samples, 0.05%)</title><rect x="45.3" y="211.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (154 samples, 0.05%)</title><rect x="45.3" y="195.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="48.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (296 samples, 0.10%)</title><rect x="46.0" y="275.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.0" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (103 samples, 0.04%)</title><rect x="46.0" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.0" y="270.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.04%)</title><rect x="46.0" y="243.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="49.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (193 samples, 0.07%)</title><rect x="46.4" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (193 samples, 0.07%)</title><rect x="46.4" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1472682156.invoke (193 samples, 0.07%)</title><rect x="46.4" y="227.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (193 samples, 0.07%)</title><rect x="46.4" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (80 samples, 0.03%)</title><rect x="46.4" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.4" y="206.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.03%)</title><rect x="46.4" y="179.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="49.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (113 samples, 0.04%)</title><rect x="46.7" y="195.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (113 samples, 0.04%)</title><rect x="46.7" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.7" y="190.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.04%)</title><rect x="46.7" y="163.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="49.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (404 samples, 0.14%)</title><rect x="47.2" y="275.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (404 samples, 0.14%)</title><rect x="47.2" y="259.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (404 samples, 0.14%)</title><rect x="47.2" y="243.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (404 samples, 0.14%)</title><rect x="47.2" y="227.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1472682156.invoke (404 samples, 0.14%)</title><rect x="47.2" y="211.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (404 samples, 0.14%)</title><rect x="47.2" y="195.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (74 samples, 0.03%)</title><rect x="47.2" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.03%)</title><rect x="47.2" y="163.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="50.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (330 samples, 0.11%)</title><rect x="47.5" y="179.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (330 samples, 0.11%)</title><rect x="47.5" y="163.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.5" y="174.0"></text>
</g>
<g>
<title>byte[] (330 samples, 0.11%)</title><rect x="47.5" y="147.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="50.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (563 samples, 0.19%)</title><rect x="48.8" y="275.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.8" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (170 samples, 0.06%)</title><rect x="48.8" y="259.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="51.8" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (155 samples, 0.05%)</title><rect x="49.5" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (155 samples, 0.05%)</title><rect x="49.5" y="243.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="52.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (238 samples, 0.08%)</title><rect x="50.1" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (238 samples, 0.08%)</title><rect x="50.1" y="243.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="53.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (222 samples, 0.08%)</title><rect x="51.1" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (222 samples, 0.08%)</title><rect x="51.1" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (222 samples, 0.08%)</title><rect x="51.1" y="291.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="54.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (295 samples, 0.10%)</title><rect x="52.0" y="355.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="55.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (86 samples, 0.03%)</title><rect x="53.2" y="355.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="56.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1,219 samples, 0.42%)</title><rect x="53.5" y="355.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (99 samples, 0.03%)</title><rect x="53.5" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (99 samples, 0.03%)</title><rect x="53.5" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (120 samples, 0.04%)</title><rect x="53.9" y="339.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="56.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (106 samples, 0.04%)</title><rect x="54.4" y="339.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="57.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (107 samples, 0.04%)</title><rect x="54.8" y="339.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="57.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (344 samples, 0.12%)</title><rect x="55.3" y="339.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (344 samples, 0.12%)</title><rect x="55.3" y="323.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (344 samples, 0.12%)</title><rect x="55.3" y="307.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="58.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (344 samples, 0.12%)</title><rect x="55.3" y="291.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (344 samples, 0.12%)</title><rect x="55.3" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (344 samples, 0.12%)</title><rect x="55.3" y="259.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (344 samples, 0.12%)</title><rect x="55.3" y="243.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (344 samples, 0.12%)</title><rect x="55.3" y="227.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (344 samples, 0.12%)</title><rect x="55.3" y="211.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (135 samples, 0.05%)</title><rect x="55.3" y="195.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (135 samples, 0.05%)</title><rect x="55.3" y="179.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$188/136959346.get$Lambda (88 samples, 0.03%)</title><rect x="55.5" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$188 (88 samples, 0.03%)</title><rect x="55.5" y="147.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="58.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (87 samples, 0.03%)</title><rect x="55.8" y="195.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="58.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (122 samples, 0.04%)</title><rect x="56.2" y="195.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (122 samples, 0.04%)</title><rect x="56.2" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (69 samples, 0.02%)</title><rect x="56.4" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.4" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (69 samples, 0.02%)</title><rect x="56.4" y="147.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="59.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (335 samples, 0.11%)</title><rect x="56.7" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.7" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (70 samples, 0.02%)</title><rect x="56.7" y="323.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="59.7" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (156 samples, 0.05%)</title><rect x="56.9" y="323.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="59.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (109 samples, 0.04%)</title><rect x="57.6" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.6" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (109 samples, 0.04%)</title><rect x="57.6" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.6" y="318.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.04%)</title><rect x="57.6" y="291.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="60.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (108 samples, 0.04%)</title><rect x="58.0" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.04%)</title><rect x="58.0" y="323.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="61.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (100 samples, 0.03%)</title><rect x="58.4" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (100 samples, 0.03%)</title><rect x="58.4" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (100 samples, 0.03%)</title><rect x="58.4" y="435.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="61.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (205 samples, 0.07%)</title><rect x="58.9" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (205 samples, 0.07%)</title><rect x="58.9" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (96 samples, 0.03%)</title><rect x="58.9" y="467.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="61.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="59.2" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="59.2" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.04%)</title><rect x="59.2" y="435.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="62.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (4,471 samples, 1.53%)</title><rect x="59.7" y="499.0" width="18.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.04%)</title><rect x="59.7" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.04%)</title><rect x="59.7" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/2120941371.get$Lambda (64 samples, 0.02%)</title><rect x="59.7" y="451.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$174 (64 samples, 0.02%)</title><rect x="59.7" y="435.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="62.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (222 samples, 0.08%)</title><rect x="60.1" y="483.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (222 samples, 0.08%)</title><rect x="60.1" y="467.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$176/2010066271.apply (113 samples, 0.04%)</title><rect x="60.1" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (113 samples, 0.04%)</title><rect x="60.1" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (113 samples, 0.04%)</title><rect x="60.1" y="419.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (113 samples, 0.04%)</title><rect x="60.1" y="403.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="63.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="60.6" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="60.6" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.04%)</title><rect x="60.6" y="419.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="63.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (109 samples, 0.04%)</title><rect x="61.0" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (109 samples, 0.04%)</title><rect x="61.0" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="61.0" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="61.0" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.04%)</title><rect x="61.0" y="419.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="64.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (4,031 samples, 1.38%)</title><rect x="61.5" y="483.0" width="16.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (4,031 samples, 1.38%)</title><rect x="61.5" y="467.0" width="16.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (295 samples, 0.10%)</title><rect x="61.5" y="451.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="64.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (3,623 samples, 1.24%)</title><rect x="62.7" y="451.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.7" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (100 samples, 0.03%)</title><rect x="62.8" y="435.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="65.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (85 samples, 0.03%)</title><rect x="63.2" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="66.2" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (164 samples, 0.06%)</title><rect x="63.8" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.8" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (164 samples, 0.06%)</title><rect x="63.8" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.8" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (164 samples, 0.06%)</title><rect x="63.8" y="403.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="66.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (69 samples, 0.02%)</title><rect x="64.5" y="435.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (69 samples, 0.02%)</title><rect x="64.5" y="419.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="67.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (281 samples, 0.10%)</title><rect x="64.7" y="435.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="67.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (188 samples, 0.06%)</title><rect x="65.9" y="435.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="68.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (202 samples, 0.07%)</title><rect x="66.6" y="435.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="69.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (188 samples, 0.06%)</title><rect x="67.4" y="435.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="70.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1,020 samples, 0.35%)</title><rect x="68.2" y="435.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (87 samples, 0.03%)</title><rect x="68.2" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="71.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (77 samples, 0.03%)</title><rect x="68.7" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="71.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.04%)</title><rect x="69.2" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.04%)</title><rect x="69.2" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (74 samples, 0.03%)</title><rect x="69.6" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (74 samples, 0.03%)</title><rect x="69.6" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="72.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (80 samples, 0.03%)</title><rect x="69.9" y="419.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="72.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.04%)</title><rect x="70.3" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="73.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (408 samples, 0.14%)</title><rect x="70.7" y="419.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (85 samples, 0.03%)</title><rect x="70.7" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="73.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (100 samples, 0.03%)</title><rect x="71.0" y="403.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="74.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (65 samples, 0.02%)</title><rect x="71.4" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (65 samples, 0.02%)</title><rect x="71.4" y="387.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="74.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (158 samples, 0.05%)</title><rect x="71.7" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (723 samples, 0.25%)</title><rect x="72.3" y="435.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.02%)</title><rect x="72.3" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.02%)</title><rect x="72.3" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$143/1895515533.get$Lambda (63 samples, 0.02%)</title><rect x="72.3" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$$Lambda$143 (63 samples, 0.02%)</title><rect x="72.3" y="371.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="75.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (81 samples, 0.03%)</title><rect x="73.2" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (81 samples, 0.03%)</title><rect x="73.2" y="403.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="76.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (421 samples, 0.14%)</title><rect x="73.6" y="419.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (83 samples, 0.03%)</title><rect x="73.6" y="403.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="76.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (111 samples, 0.04%)</title><rect x="73.9" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="76.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (169 samples, 0.06%)</title><rect x="74.6" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (157 samples, 0.05%)</title><rect x="75.5" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (157 samples, 0.05%)</title><rect x="75.5" y="419.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (86 samples, 0.03%)</title><rect x="75.5" y="403.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="78.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (71 samples, 0.02%)</title><rect x="75.8" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.8" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (71 samples, 0.02%)</title><rect x="75.8" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.8" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (71 samples, 0.02%)</title><rect x="75.8" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (71 samples, 0.02%)</title><rect x="75.8" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (71 samples, 0.02%)</title><rect x="75.8" y="339.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="78.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (292 samples, 0.10%)</title><rect x="76.1" y="435.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1610702581.linkToTargetMethod (80 samples, 0.03%)</title><rect x="76.1" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.03%)</title><rect x="76.1" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/1445633269.get$Lambda (80 samples, 0.03%)</title><rect x="76.1" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$144 (80 samples, 0.03%)</title><rect x="76.1" y="371.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="79.1" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (212 samples, 0.07%)</title><rect x="76.5" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/1445633269.run (212 samples, 0.07%)</title><rect x="76.5" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (212 samples, 0.07%)</title><rect x="76.5" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.5" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (153 samples, 0.05%)</title><rect x="76.7" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.7" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (82 samples, 0.03%)</title><rect x="76.7" y="355.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="79.7" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (71 samples, 0.02%)</title><rect x="77.0" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.0" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (71 samples, 0.02%)</title><rect x="77.0" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.0" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (71 samples, 0.02%)</title><rect x="77.0" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.0" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (71 samples, 0.02%)</title><rect x="77.0" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.0" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (71 samples, 0.02%)</title><rect x="77.0" y="291.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="80.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (113 samples, 0.04%)</title><rect x="77.3" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (113 samples, 0.04%)</title><rect x="77.3" y="435.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="80.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (135 samples, 0.05%)</title><rect x="77.8" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (135 samples, 0.05%)</title><rect x="77.8" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (135 samples, 0.05%)</title><rect x="77.8" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (135 samples, 0.05%)</title><rect x="77.8" y="499.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="80.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (476 samples, 0.16%)</title><rect x="78.3" y="547.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (400 samples, 0.14%)</title><rect x="78.3" y="531.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="81.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (76 samples, 0.03%)</title><rect x="79.9" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (76 samples, 0.03%)</title><rect x="79.9" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.9" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (76 samples, 0.03%)</title><rect x="79.9" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.9" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (76 samples, 0.03%)</title><rect x="79.9" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.9" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (76 samples, 0.03%)</title><rect x="79.9" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.9" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (76 samples, 0.03%)</title><rect x="79.9" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.9" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (76 samples, 0.03%)</title><rect x="79.9" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.9" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (76 samples, 0.03%)</title><rect x="79.9" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.9" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (76 samples, 0.03%)</title><rect x="79.9" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.9" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (76 samples, 0.03%)</title><rect x="79.9" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.9" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (76 samples, 0.03%)</title><rect x="79.9" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="82.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,693 samples, 0.58%)</title><rect x="80.2" y="643.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,379 samples, 0.47%)</title><rect x="80.2" y="627.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,362 samples, 0.47%)</title><rect x="80.2" y="611.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,362 samples, 0.47%)</title><rect x="80.2" y="595.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,362 samples, 0.47%)</title><rect x="80.2" y="579.0" width="5.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="83.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (314 samples, 0.11%)</title><rect x="85.8" y="627.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (292 samples, 0.10%)</title><rect x="85.8" y="611.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (292 samples, 0.10%)</title><rect x="85.8" y="595.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (292 samples, 0.10%)</title><rect x="85.8" y="579.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="88.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$217/397507893.run (1,759 samples, 0.60%)</title><rect x="87.1" y="643.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,759 samples, 0.60%)</title><rect x="87.1" y="627.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,759 samples, 0.60%)</title><rect x="87.1" y="611.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,759 samples, 0.60%)</title><rect x="87.1" y="595.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,759 samples, 0.60%)</title><rect x="87.1" y="579.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,759 samples, 0.60%)</title><rect x="87.1" y="563.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,759 samples, 0.60%)</title><rect x="87.1" y="547.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,759 samples, 0.60%)</title><rect x="87.1" y="531.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,759 samples, 0.60%)</title><rect x="87.1" y="515.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,759 samples, 0.60%)</title><rect x="87.1" y="499.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,759 samples, 0.60%)</title><rect x="87.1" y="483.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,575 samples, 0.54%)</title><rect x="87.1" y="467.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (174 samples, 0.06%)</title><rect x="87.1" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (174 samples, 0.06%)</title><rect x="87.1" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$220/1307343279.get$Lambda (82 samples, 0.03%)</title><rect x="87.1" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$220 (82 samples, 0.03%)</title><rect x="87.1" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="90.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1297665885.get$Lambda (92 samples, 0.03%)</title><rect x="87.4" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$232 (92 samples, 0.03%)</title><rect x="87.4" y="403.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="90.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,401 samples, 0.48%)</title><rect x="87.8" y="451.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (159 samples, 0.05%)</title><rect x="87.8" y="435.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="90.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,242 samples, 0.43%)</title><rect x="88.4" y="435.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,242 samples, 0.43%)</title><rect x="88.4" y="419.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,242 samples, 0.43%)</title><rect x="88.4" y="403.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (624 samples, 0.21%)</title><rect x="88.4" y="387.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (210 samples, 0.07%)</title><rect x="88.4" y="371.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="91.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/1957589676.apply (337 samples, 0.12%)</title><rect x="89.3" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (337 samples, 0.12%)</title><rect x="89.3" y="355.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (337 samples, 0.12%)</title><rect x="89.3" y="339.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (77 samples, 0.03%)</title><rect x="89.3" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.3" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (77 samples, 0.03%)</title><rect x="89.3" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.3" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (77 samples, 0.03%)</title><rect x="89.3" y="291.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="92.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (260 samples, 0.09%)</title><rect x="89.6" y="323.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (208 samples, 0.07%)</title><rect x="89.8" y="307.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (208 samples, 0.07%)</title><rect x="89.8" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (117 samples, 0.04%)</title><rect x="89.8" y="275.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="92.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.03%)</title><rect x="90.3" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.03%)</title><rect x="90.3" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (88 samples, 0.03%)</title><rect x="90.3" y="243.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="93.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/887261302.apply (77 samples, 0.03%)</title><rect x="90.6" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (77 samples, 0.03%)</title><rect x="90.6" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (73 samples, 0.03%)</title><rect x="90.7" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (73 samples, 0.03%)</title><rect x="90.7" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (72 samples, 0.02%)</title><rect x="90.7" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (618 samples, 0.21%)</title><rect x="91.0" y="387.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (618 samples, 0.21%)</title><rect x="91.0" y="371.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/1165932755.apply (618 samples, 0.21%)</title><rect x="91.0" y="355.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (618 samples, 0.21%)</title><rect x="91.0" y="339.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (618 samples, 0.21%)</title><rect x="91.0" y="323.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$130/1695009006.apply (618 samples, 0.21%)</title><rect x="91.0" y="307.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (618 samples, 0.21%)</title><rect x="91.0" y="291.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (241 samples, 0.08%)</title><rect x="91.1" y="275.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (241 samples, 0.08%)</title><rect x="91.1" y="259.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (125 samples, 0.04%)</title><rect x="91.1" y="243.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="94.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.04%)</title><rect x="91.6" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.04%)</title><rect x="91.6" y="227.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (116 samples, 0.04%)</title><rect x="91.6" y="211.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="94.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (332 samples, 0.11%)</title><rect x="92.1" y="275.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (184 samples, 0.06%)</title><rect x="92.1" y="259.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (89 samples, 0.03%)</title><rect x="92.1" y="243.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="95.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (95 samples, 0.03%)</title><rect x="92.5" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (95 samples, 0.03%)</title><rect x="92.5" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (95 samples, 0.03%)</title><rect x="92.5" y="211.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="95.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (148 samples, 0.05%)</title><rect x="92.9" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (68 samples, 0.02%)</title><rect x="92.9" y="243.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="95.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (80 samples, 0.03%)</title><rect x="93.1" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (80 samples, 0.03%)</title><rect x="93.1" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (80 samples, 0.03%)</title><rect x="93.1" y="211.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (80 samples, 0.03%)</title><rect x="93.1" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (80 samples, 0.03%)</title><rect x="93.1" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (80 samples, 0.03%)</title><rect x="93.1" y="163.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="96.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (184 samples, 0.06%)</title><rect x="93.5" y="467.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (184 samples, 0.06%)</title><rect x="93.5" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (184 samples, 0.06%)</title><rect x="93.5" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (184 samples, 0.06%)</title><rect x="93.5" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (184 samples, 0.06%)</title><rect x="93.5" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.5" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (184 samples, 0.06%)</title><rect x="93.5" y="387.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (92 samples, 0.03%)</title><rect x="93.5" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.5" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (92 samples, 0.03%)</title><rect x="93.5" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="96.5" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (92 samples, 0.03%)</title><rect x="93.8" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.8" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (92 samples, 0.03%)</title><rect x="93.8" y="355.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="96.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15,423 samples, 5.29%)</title><rect x="94.2" y="643.0" width="62.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.2" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15,423 samples, 5.29%)</title><rect x="94.2" y="627.0" width="62.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.2" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12,883 samples, 4.42%)</title><rect x="94.2" y="611.0" width="52.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.2" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (12,883 samples, 4.42%)</title><rect x="94.2" y="595.0" width="52.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.2" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (12,883 samples, 4.42%)</title><rect x="94.2" y="579.0" width="52.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.2" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (242 samples, 0.08%)</title><rect x="94.2" y="563.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (242 samples, 0.08%)</title><rect x="94.2" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (242 samples, 0.08%)</title><rect x="94.2" y="531.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (242 samples, 0.08%)</title><rect x="94.2" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (137 samples, 0.05%)</title><rect x="94.2" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1311146128.invoke (137 samples, 0.05%)</title><rect x="94.2" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (137 samples, 0.05%)</title><rect x="94.2" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (137 samples, 0.05%)</title><rect x="94.2" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (137 samples, 0.05%)</title><rect x="94.2" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.2" y="446.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.05%)</title><rect x="94.2" y="419.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="97.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (105 samples, 0.04%)</title><rect x="94.8" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.04%)</title><rect x="94.8" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.04%)</title><rect x="94.8" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$216/643139202.get$Lambda (105 samples, 0.04%)</title><rect x="94.8" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$216 (105 samples, 0.04%)</title><rect x="94.8" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="97.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (12,641 samples, 4.33%)</title><rect x="95.2" y="563.0" width="51.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.2" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (12,641 samples, 4.33%)</title><rect x="95.2" y="547.0" width="51.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.2" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (12,641 samples, 4.33%)</title><rect x="95.2" y="531.0" width="51.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.2" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (12,641 samples, 4.33%)</title><rect x="95.2" y="515.0" width="51.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.2" y="526.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5,171 samples, 1.77%)</title><rect x="95.2" y="499.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,171 samples, 1.77%)</title><rect x="95.2" y="483.0" width="20.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5,171 samples, 1.77%)</title><rect x="95.2" y="467.0" width="20.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5,171 samples, 1.77%)</title><rect x="95.2" y="451.0" width="20.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5,171 samples, 1.77%)</title><rect x="95.2" y="435.0" width="20.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5,171 samples, 1.77%)</title><rect x="95.2" y="419.0" width="20.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5,171 samples, 1.77%)</title><rect x="95.2" y="403.0" width="20.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5,033 samples, 1.73%)</title><rect x="95.2" y="387.0" width="20.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,033 samples, 1.73%)</title><rect x="95.2" y="371.0" width="20.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4,927 samples, 1.69%)</title><rect x="95.2" y="355.0" width="19.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (97 samples, 0.03%)</title><rect x="95.2" y="339.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="98.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/887261302.apply (4,625 samples, 1.59%)</title><rect x="95.6" y="339.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (4,625 samples, 1.59%)</title><rect x="95.6" y="323.0" width="18.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.03%)</title><rect x="95.6" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.03%)</title><rect x="95.6" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$264/1900001683.get$Lambda (77 samples, 0.03%)</title><rect x="95.6" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$264 (77 samples, 0.03%)</title><rect x="95.6" y="259.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="98.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (238 samples, 0.08%)</title><rect x="95.9" y="307.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (238 samples, 0.08%)</title><rect x="95.9" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (127 samples, 0.04%)</title><rect x="95.9" y="275.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="98.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (111 samples, 0.04%)</title><rect x="96.4" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (111 samples, 0.04%)</title><rect x="96.4" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (111 samples, 0.04%)</title><rect x="96.4" y="243.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="99.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (4,310 samples, 1.48%)</title><rect x="96.8" y="307.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.02%)</title><rect x="96.8" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.02%)</title><rect x="96.8" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/357593672.get$Lambda (63 samples, 0.02%)</title><rect x="96.8" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$262 (63 samples, 0.02%)</title><rect x="96.8" y="243.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="99.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (241 samples, 0.08%)</title><rect x="97.1" y="291.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (241 samples, 0.08%)</title><rect x="97.1" y="275.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (125 samples, 0.04%)</title><rect x="97.1" y="259.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="100.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.04%)</title><rect x="97.6" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.04%)</title><rect x="97.6" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (116 samples, 0.04%)</title><rect x="97.6" y="227.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="100.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (4,006 samples, 1.37%)</title><rect x="98.1" y="291.0" width="16.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.1" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$118/2092636891.apply (309 samples, 0.11%)</title><rect x="98.1" y="275.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (309 samples, 0.11%)</title><rect x="98.1" y="259.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (309 samples, 0.11%)</title><rect x="98.1" y="243.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (109 samples, 0.04%)</title><rect x="98.1" y="227.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="101.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (200 samples, 0.07%)</title><rect x="98.5" y="227.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.5" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (84 samples, 0.03%)</title><rect x="98.5" y="211.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="101.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (116 samples, 0.04%)</title><rect x="98.9" y="211.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="101.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3,697 samples, 1.27%)</title><rect x="99.3" y="275.0" width="15.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (131 samples, 0.04%)</title><rect x="99.3" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (131 samples, 0.04%)</title><rect x="99.3" y="243.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$258/1828046752.get$Lambda (69 samples, 0.02%)</title><rect x="99.3" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$258 (69 samples, 0.02%)</title><rect x="99.3" y="211.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="102.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$260/339739227.get$Lambda (62 samples, 0.02%)</title><rect x="99.6" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$260 (62 samples, 0.02%)</title><rect x="99.6" y="211.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="102.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/614738386.linkToTargetMethod (122 samples, 0.04%)</title><rect x="99.9" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1913821695.invokeStatic (122 samples, 0.04%)</title><rect x="99.9" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$246/118115321.get$Lambda (122 samples, 0.04%)</title><rect x="99.9" y="227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$246 (122 samples, 0.04%)</title><rect x="99.9" y="211.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="102.9" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (750 samples, 0.26%)</title><rect x="100.4" y="259.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.4" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (305 samples, 0.10%)</title><rect x="100.4" y="243.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.4" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (117 samples, 0.04%)</title><rect x="100.4" y="227.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.4" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (117 samples, 0.04%)</title><rect x="100.4" y="211.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="103.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (188 samples, 0.06%)</title><rect x="100.8" y="227.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (188 samples, 0.06%)</title><rect x="100.8" y="211.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="103.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (232 samples, 0.08%)</title><rect x="101.6" y="243.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (232 samples, 0.08%)</title><rect x="101.6" y="227.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (232 samples, 0.08%)</title><rect x="101.6" y="211.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (70 samples, 0.02%)</title><rect x="101.6" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (70 samples, 0.02%)</title><rect x="101.6" y="179.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (70 samples, 0.02%)</title><rect x="101.6" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.6" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (70 samples, 0.02%)</title><rect x="101.6" y="147.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="104.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$243/2113026439.get (86 samples, 0.03%)</title><rect x="101.9" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (86 samples, 0.03%)</title><rect x="101.9" y="179.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="104.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (76 samples, 0.03%)</title><rect x="102.2" y="195.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (76 samples, 0.03%)</title><rect x="102.2" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="105.2" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (76 samples, 0.03%)</title><rect x="102.2" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.2" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (76 samples, 0.03%)</title><rect x="102.2" y="147.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="105.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (213 samples, 0.07%)</title><rect x="102.5" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (213 samples, 0.07%)</title><rect x="102.5" y="227.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="105.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (480 samples, 0.16%)</title><rect x="103.4" y="259.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (249 samples, 0.09%)</title><rect x="103.4" y="243.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (141 samples, 0.05%)</title><rect x="103.4" y="227.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="106.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.04%)</title><rect x="104.0" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.04%)</title><rect x="104.0" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.04%)</title><rect x="104.0" y="195.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="107.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (231 samples, 0.08%)</title><rect x="104.4" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (231 samples, 0.08%)</title><rect x="104.4" y="227.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (135 samples, 0.05%)</title><rect x="104.4" y="211.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="107.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (96 samples, 0.03%)</title><rect x="104.9" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (96 samples, 0.03%)</title><rect x="104.9" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (96 samples, 0.03%)</title><rect x="104.9" y="179.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="107.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (66 samples, 0.02%)</title><rect x="105.3" y="259.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="108.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (93 samples, 0.03%)</title><rect x="105.6" y="259.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="108.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (119 samples, 0.04%)</title><rect x="106.0" y="259.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="109.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,879 samples, 0.64%)</title><rect x="106.7" y="259.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$246/118115321.run (1,879 samples, 0.64%)</title><rect x="106.7" y="243.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,879 samples, 0.64%)</title><rect x="106.7" y="227.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (218 samples, 0.07%)</title><rect x="106.7" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (218 samples, 0.07%)</title><rect x="106.7" y="195.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1197637075.get$Lambda (72 samples, 0.02%)</title><rect x="106.9" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$250 (72 samples, 0.02%)</title><rect x="106.9" y="163.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="109.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1759647216.get$Lambda (94 samples, 0.03%)</title><rect x="107.2" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$254 (94 samples, 0.03%)</title><rect x="107.2" y="163.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="110.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (226 samples, 0.08%)</title><rect x="107.6" y="211.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (226 samples, 0.08%)</title><rect x="107.6" y="195.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (120 samples, 0.04%)</title><rect x="107.6" y="179.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="110.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.04%)</title><rect x="108.0" y="179.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.04%)</title><rect x="108.0" y="163.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.04%)</title><rect x="108.0" y="147.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="111.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (145 samples, 0.05%)</title><rect x="108.5" y="211.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="111.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (90 samples, 0.03%)</title><rect x="109.1" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (90 samples, 0.03%)</title><rect x="109.1" y="195.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="112.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (326 samples, 0.11%)</title><rect x="109.4" y="211.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (326 samples, 0.11%)</title><rect x="109.4" y="195.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.03%)</title><rect x="109.4" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.03%)</title><rect x="109.4" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$256/1351230328.get$Lambda (86 samples, 0.03%)</title><rect x="109.4" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$256 (86 samples, 0.03%)</title><rect x="109.4" y="131.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="112.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (239 samples, 0.08%)</title><rect x="109.8" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (239 samples, 0.08%)</title><rect x="109.8" y="163.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (239 samples, 0.08%)</title><rect x="109.8" y="147.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (126 samples, 0.04%)</title><rect x="109.8" y="131.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="112.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (113 samples, 0.04%)</title><rect x="110.3" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (113 samples, 0.04%)</title><rect x="110.3" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.3" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (113 samples, 0.04%)</title><rect x="110.3" y="99.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="113.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (324 samples, 0.11%)</title><rect x="110.7" y="211.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (324 samples, 0.11%)</title><rect x="110.7" y="195.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/288994035.invoke (324 samples, 0.11%)</title><rect x="110.7" y="179.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (324 samples, 0.11%)</title><rect x="110.7" y="163.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (91 samples, 0.03%)</title><rect x="110.7" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.03%)</title><rect x="110.7" y="131.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="113.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (233 samples, 0.08%)</title><rect x="111.1" y="147.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (233 samples, 0.08%)</title><rect x="111.1" y="131.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.1" y="142.0"></text>
</g>
<g>
<title>byte[] (233 samples, 0.08%)</title><rect x="111.1" y="115.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="114.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (550 samples, 0.19%)</title><rect x="112.1" y="211.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (156 samples, 0.05%)</title><rect x="112.1" y="195.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="115.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (394 samples, 0.14%)</title><rect x="112.7" y="195.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (394 samples, 0.14%)</title><rect x="112.7" y="179.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/288994035.invoke (394 samples, 0.14%)</title><rect x="112.7" y="163.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (394 samples, 0.14%)</title><rect x="112.7" y="147.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (77 samples, 0.03%)</title><rect x="112.7" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.03%)</title><rect x="112.7" y="115.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="115.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (317 samples, 0.11%)</title><rect x="113.0" y="131.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (317 samples, 0.11%)</title><rect x="113.0" y="115.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.0" y="126.0"></text>
</g>
<g>
<title>byte[] (317 samples, 0.11%)</title><rect x="113.0" y="99.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="116.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$203/1559042816.apply (205 samples, 0.07%)</title><rect x="114.3" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (205 samples, 0.07%)</title><rect x="114.3" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (101 samples, 0.03%)</title><rect x="114.3" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.3" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (101 samples, 0.03%)</title><rect x="114.3" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.3" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (101 samples, 0.03%)</title><rect x="114.3" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.3" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (101 samples, 0.03%)</title><rect x="114.3" y="259.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="117.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (104 samples, 0.04%)</title><rect x="114.7" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (104 samples, 0.04%)</title><rect x="114.7" y="291.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="117.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (106 samples, 0.04%)</title><rect x="115.1" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (106 samples, 0.04%)</title><rect x="115.1" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$205/1826986094.apply (106 samples, 0.04%)</title><rect x="115.1" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (106 samples, 0.04%)</title><rect x="115.1" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (106 samples, 0.04%)</title><rect x="115.1" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.04%)</title><rect x="115.1" y="275.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="118.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$236/1905302793.apply (138 samples, 0.05%)</title><rect x="115.5" y="387.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (138 samples, 0.05%)</title><rect x="115.5" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (138 samples, 0.05%)</title><rect x="115.5" y="355.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="118.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (7,470 samples, 2.56%)</title><rect x="116.1" y="499.0" width="30.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.1" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (545 samples, 0.19%)</title><rect x="116.1" y="483.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (545 samples, 0.19%)</title><rect x="116.1" y="467.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (545 samples, 0.19%)</title><rect x="116.1" y="451.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.1" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (545 samples, 0.19%)</title><rect x="116.1" y="435.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (545 samples, 0.19%)</title><rect x="116.1" y="419.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.1" y="430.0"></text>
</g>
<g>
<title>byte[] (545 samples, 0.19%)</title><rect x="116.1" y="403.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="119.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (493 samples, 0.17%)</title><rect x="118.3" y="483.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.3" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (70 samples, 0.02%)</title><rect x="118.3" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="121.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (69 samples, 0.02%)</title><rect x="118.6" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (69 samples, 0.02%)</title><rect x="118.6" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (69 samples, 0.02%)</title><rect x="118.6" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.6" y="446.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.02%)</title><rect x="118.6" y="419.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="121.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (105 samples, 0.04%)</title><rect x="118.9" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (105 samples, 0.04%)</title><rect x="118.9" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.9" y="462.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.04%)</title><rect x="118.9" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="121.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (249 samples, 0.09%)</title><rect x="119.3" y="467.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (249 samples, 0.09%)</title><rect x="119.3" y="451.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (133 samples, 0.05%)</title><rect x="119.3" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="122.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (116 samples, 0.04%)</title><rect x="119.8" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.8" y="446.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.04%)</title><rect x="119.8" y="419.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="122.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,701 samples, 0.58%)</title><rect x="120.3" y="483.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,701 samples, 0.58%)</title><rect x="120.3" y="467.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,701 samples, 0.58%)</title><rect x="120.3" y="451.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.3" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (64 samples, 0.02%)</title><rect x="120.5" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="123.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (167 samples, 0.06%)</title><rect x="120.8" y="435.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="123.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (93 samples, 0.03%)</title><rect x="121.7" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.03%)</title><rect x="121.7" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.get$Lambda (93 samples, 0.03%)</title><rect x="121.7" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.7" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$116 (93 samples, 0.03%)</title><rect x="121.7" y="387.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="124.7" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (128 samples, 0.04%)</title><rect x="122.0" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.0" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (128 samples, 0.04%)</title><rect x="122.0" y="419.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="125.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (990 samples, 0.34%)</title><rect x="122.5" y="435.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (990 samples, 0.34%)</title><rect x="122.5" y="419.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (990 samples, 0.34%)</title><rect x="122.5" y="403.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (168 samples, 0.06%)</title><rect x="122.5" y="387.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (168 samples, 0.06%)</title><rect x="122.5" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (168 samples, 0.06%)</title><rect x="122.5" y="355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (168 samples, 0.06%)</title><rect x="122.5" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (168 samples, 0.06%)</title><rect x="122.5" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (168 samples, 0.06%)</title><rect x="122.5" y="307.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (168 samples, 0.06%)</title><rect x="122.5" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (168 samples, 0.06%)</title><rect x="122.5" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (168 samples, 0.06%)</title><rect x="122.5" y="259.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="125.5" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (452 samples, 0.15%)</title><rect x="123.2" y="387.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.2" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (452 samples, 0.15%)</title><rect x="123.2" y="371.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (226 samples, 0.08%)</title><rect x="123.2" y="355.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (226 samples, 0.08%)</title><rect x="123.2" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (226 samples, 0.08%)</title><rect x="123.2" y="323.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="126.2" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (226 samples, 0.08%)</title><rect x="124.1" y="355.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.1" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (226 samples, 0.08%)</title><rect x="124.1" y="339.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="127.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (370 samples, 0.13%)</title><rect x="125.1" y="387.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (370 samples, 0.13%)</title><rect x="125.1" y="371.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="128.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (154 samples, 0.05%)</title><rect x="126.6" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (154 samples, 0.05%)</title><rect x="126.6" y="419.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="129.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (4,731 samples, 1.62%)</title><rect x="127.2" y="483.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.2" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (220 samples, 0.08%)</title><rect x="127.2" y="467.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="130.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (308 samples, 0.11%)</title><rect x="128.1" y="467.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (308 samples, 0.11%)</title><rect x="128.1" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.1" y="462.0"></text>
</g>
<g>
<title>byte[] (308 samples, 0.11%)</title><rect x="128.1" y="435.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="131.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (633 samples, 0.22%)</title><rect x="129.3" y="467.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (633 samples, 0.22%)</title><rect x="129.3" y="451.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (230 samples, 0.08%)</title><rect x="129.3" y="435.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="132.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (403 samples, 0.14%)</title><rect x="130.2" y="435.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.2" y="446.0"></text>
</g>
<g>
<title>byte[] (403 samples, 0.14%)</title><rect x="130.2" y="419.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="133.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (3,570 samples, 1.22%)</title><rect x="131.9" y="467.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,154 samples, 0.40%)</title><rect x="131.9" y="451.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,154 samples, 0.40%)</title><rect x="131.9" y="435.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (496 samples, 0.17%)</title><rect x="131.9" y="419.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="134.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (658 samples, 0.23%)</title><rect x="133.9" y="419.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.9" y="430.0"></text>
</g>
<g>
<title>byte[] (658 samples, 0.23%)</title><rect x="133.9" y="403.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="136.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (537 samples, 0.18%)</title><rect x="136.5" y="451.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (537 samples, 0.18%)</title><rect x="136.5" y="435.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.5" y="446.0"></text>
</g>
<g>
<title>byte[] (312 samples, 0.11%)</title><rect x="136.5" y="419.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="139.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (225 samples, 0.08%)</title><rect x="137.8" y="419.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="140.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (553 samples, 0.19%)</title><rect x="138.7" y="451.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (553 samples, 0.19%)</title><rect x="138.7" y="435.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (553 samples, 0.19%)</title><rect x="138.7" y="419.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (211 samples, 0.07%)</title><rect x="138.7" y="403.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="141.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (342 samples, 0.12%)</title><rect x="139.6" y="403.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.6" y="414.0"></text>
</g>
<g>
<title>byte[] (342 samples, 0.12%)</title><rect x="139.6" y="387.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="142.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (540 samples, 0.19%)</title><rect x="140.9" y="451.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (540 samples, 0.19%)</title><rect x="140.9" y="435.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (540 samples, 0.19%)</title><rect x="140.9" y="419.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (540 samples, 0.19%)</title><rect x="140.9" y="403.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (540 samples, 0.19%)</title><rect x="140.9" y="387.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (540 samples, 0.19%)</title><rect x="140.9" y="371.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="143.9" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (786 samples, 0.27%)</title><rect x="143.1" y="451.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (296 samples, 0.10%)</title><rect x="143.1" y="435.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (296 samples, 0.10%)</title><rect x="143.1" y="419.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="146.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (275 samples, 0.09%)</title><rect x="144.3" y="435.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (275 samples, 0.09%)</title><rect x="144.3" y="419.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="147.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$238/111502284.apply (215 samples, 0.07%)</title><rect x="145.4" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (215 samples, 0.07%)</title><rect x="145.4" y="419.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.4" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (215 samples, 0.07%)</title><rect x="145.4" y="403.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="148.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2,540 samples, 0.87%)</title><rect x="146.3" y="611.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,540 samples, 0.87%)</title><rect x="146.3" y="595.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,540 samples, 0.87%)</title><rect x="146.3" y="579.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/825246616.run (2,540 samples, 0.87%)</title><rect x="146.3" y="563.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,540 samples, 0.87%)</title><rect x="146.3" y="547.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (371 samples, 0.13%)</title><rect x="146.3" y="531.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (132 samples, 0.05%)</title><rect x="146.3" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (132 samples, 0.05%)</title><rect x="146.3" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$188/136959346.get$Lambda (77 samples, 0.03%)</title><rect x="146.5" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$188 (77 samples, 0.03%)</title><rect x="146.5" y="467.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="149.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (108 samples, 0.04%)</title><rect x="146.8" y="515.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="149.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (131 samples, 0.04%)</title><rect x="147.3" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (131 samples, 0.04%)</title><rect x="147.3" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (76 samples, 0.03%)</title><rect x="147.5" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (76 samples, 0.03%)</title><rect x="147.5" y="467.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="150.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (2,125 samples, 0.73%)</title><rect x="147.8" y="531.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,125 samples, 0.73%)</title><rect x="147.8" y="515.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (2,125 samples, 0.73%)</title><rect x="147.8" y="499.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (2,125 samples, 0.73%)</title><rect x="147.8" y="483.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2,125 samples, 0.73%)</title><rect x="147.8" y="467.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2,125 samples, 0.73%)</title><rect x="147.8" y="451.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (159 samples, 0.05%)</title><rect x="147.8" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.8" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (159 samples, 0.05%)</title><rect x="147.8" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (159 samples, 0.05%)</title><rect x="147.8" y="403.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="150.8" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (70 samples, 0.02%)</title><rect x="148.5" y="435.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.5" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (70 samples, 0.02%)</title><rect x="148.5" y="419.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="151.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/684996081.run (1,338 samples, 0.46%)</title><rect x="148.7" y="435.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,338 samples, 0.46%)</title><rect x="148.7" y="419.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,338 samples, 0.46%)</title><rect x="148.7" y="403.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (445 samples, 0.15%)</title><rect x="148.7" y="387.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.7" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (312 samples, 0.11%)</title><rect x="148.7" y="371.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (112 samples, 0.04%)</title><rect x="148.7" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.7" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (112 samples, 0.04%)</title><rect x="148.7" y="339.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="151.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (200 samples, 0.07%)</title><rect x="149.2" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.2" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (200 samples, 0.07%)</title><rect x="149.2" y="339.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="152.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (133 samples, 0.05%)</title><rect x="150.0" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (133 samples, 0.05%)</title><rect x="150.0" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (133 samples, 0.05%)</title><rect x="150.0" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/1636182655.get (73 samples, 0.03%)</title><rect x="150.0" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.0" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (73 samples, 0.03%)</title><rect x="150.0" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="153.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (893 samples, 0.31%)</title><rect x="150.5" y="387.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.5" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (70 samples, 0.02%)</title><rect x="150.5" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.5" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (70 samples, 0.02%)</title><rect x="150.5" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.5" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (70 samples, 0.02%)</title><rect x="150.5" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.5" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (70 samples, 0.02%)</title><rect x="150.5" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.5" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (70 samples, 0.02%)</title><rect x="150.5" y="307.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="153.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (823 samples, 0.28%)</title><rect x="150.8" y="371.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (301 samples, 0.10%)</title><rect x="150.8" y="355.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.8" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (65 samples, 0.02%)</title><rect x="150.8" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.8" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (65 samples, 0.02%)</title><rect x="150.8" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.8" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (65 samples, 0.02%)</title><rect x="150.8" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.8" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (65 samples, 0.02%)</title><rect x="150.8" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.8" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (65 samples, 0.02%)</title><rect x="150.8" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.8" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (65 samples, 0.02%)</title><rect x="150.8" y="259.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="153.8" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (75 samples, 0.03%)</title><rect x="151.1" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.1" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (75 samples, 0.03%)</title><rect x="151.1" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.1" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (75 samples, 0.03%)</title><rect x="151.1" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.1" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (75 samples, 0.03%)</title><rect x="151.1" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.1" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (75 samples, 0.03%)</title><rect x="151.1" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.1" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (75 samples, 0.03%)</title><rect x="151.1" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="154.1" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (71 samples, 0.02%)</title><rect x="151.4" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (71 samples, 0.02%)</title><rect x="151.4" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.4" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (71 samples, 0.02%)</title><rect x="151.4" y="307.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="154.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (87 samples, 0.03%)</title><rect x="151.7" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="154.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (187 samples, 0.06%)</title><rect x="152.0" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.0" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (98 samples, 0.03%)</title><rect x="152.0" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.0" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (98 samples, 0.03%)</title><rect x="152.0" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (98 samples, 0.03%)</title><rect x="152.0" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (98 samples, 0.03%)</title><rect x="152.0" y="291.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="155.0" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (89 samples, 0.03%)</title><rect x="152.4" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (89 samples, 0.03%)</title><rect x="152.4" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.4" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (89 samples, 0.03%)</title><rect x="152.4" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="155.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (335 samples, 0.11%)</title><rect x="152.8" y="355.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (76 samples, 0.03%)</title><rect x="152.8" y="339.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="155.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (259 samples, 0.09%)</title><rect x="153.1" y="339.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (84 samples, 0.03%)</title><rect x="153.1" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (84 samples, 0.03%)</title><rect x="153.1" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (84 samples, 0.03%)</title><rect x="153.1" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (84 samples, 0.03%)</title><rect x="153.1" y="275.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="156.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (175 samples, 0.06%)</title><rect x="153.4" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (175 samples, 0.06%)</title><rect x="153.4" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (122 samples, 0.04%)</title><rect x="153.4" y="291.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="156.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (308 samples, 0.11%)</title><rect x="154.2" y="435.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (308 samples, 0.11%)</title><rect x="154.2" y="419.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (308 samples, 0.11%)</title><rect x="154.2" y="403.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (232 samples, 0.08%)</title><rect x="154.2" y="387.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (232 samples, 0.08%)</title><rect x="154.2" y="371.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (232 samples, 0.08%)</title><rect x="154.2" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (232 samples, 0.08%)</title><rect x="154.2" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$258/1828046752.accept (232 samples, 0.08%)</title><rect x="154.2" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (232 samples, 0.08%)</title><rect x="154.2" y="307.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (232 samples, 0.08%)</title><rect x="154.2" y="291.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (232 samples, 0.08%)</title><rect x="154.2" y="275.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (232 samples, 0.08%)</title><rect x="154.2" y="259.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$264/1900001683.apply (232 samples, 0.08%)</title><rect x="154.2" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (232 samples, 0.08%)</title><rect x="154.2" y="227.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (232 samples, 0.08%)</title><rect x="154.2" y="211.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="157.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (76 samples, 0.03%)</title><rect x="155.1" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.1" y="398.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.03%)</title><rect x="155.1" y="371.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="158.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (250 samples, 0.09%)</title><rect x="155.4" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (250 samples, 0.09%)</title><rect x="155.4" y="419.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (250 samples, 0.09%)</title><rect x="155.4" y="403.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (250 samples, 0.09%)</title><rect x="155.4" y="387.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (250 samples, 0.09%)</title><rect x="155.4" y="371.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.4" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (78 samples, 0.03%)</title><rect x="155.4" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (78 samples, 0.03%)</title><rect x="155.4" y="339.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="158.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (172 samples, 0.06%)</title><rect x="155.7" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.7" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (172 samples, 0.06%)</title><rect x="155.7" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (172 samples, 0.06%)</title><rect x="155.7" y="323.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="158.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/285921815.run (102,220 samples, 35.04%)</title><rect x="156.6" y="643.0" width="413.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.6" y="654.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lam..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$entity$1 (102,220 samples, 35.04%)</title><rect x="156.6" y="627.0" width="413.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.6" y="638.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lamb..</text>
</g>
<g>
<title>java/lang/String.getBytes (904 samples, 0.31%)</title><rect x="156.6" y="611.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (904 samples, 0.31%)</title><rect x="156.6" y="595.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (904 samples, 0.31%)</title><rect x="156.6" y="579.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (904 samples, 0.31%)</title><rect x="156.6" y="563.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.6" y="574.0"></text>
</g>
<g>
<title>byte[] (904 samples, 0.31%)</title><rect x="156.6" y="547.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="159.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,045 samples, 0.36%)</title><rect x="160.2" y="611.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,045 samples, 0.36%)</title><rect x="160.2" y="595.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.2" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,045 samples, 0.36%)</title><rect x="160.2" y="579.0" width="4.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="163.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.isProxied (1,714 samples, 0.59%)</title><rect x="164.5" y="611.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,714 samples, 0.59%)</title><rect x="164.5" y="595.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,714 samples, 0.59%)</title><rect x="164.5" y="579.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,714 samples, 0.59%)</title><rect x="164.5" y="563.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (1,267 samples, 0.43%)</title><rect x="164.5" y="547.0" width="5.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="167.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (447 samples, 0.15%)</title><rect x="169.6" y="547.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.6" y="558.0"></text>
</g>
<g>
<title>byte[] (447 samples, 0.15%)</title><rect x="169.6" y="531.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="172.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.defineMethod (98,557 samples, 33.78%)</title><rect x="171.4" y="611.0" width="398.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.4" y="622.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.d..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (472 samples, 0.16%)</title><rect x="171.4" y="595.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (472 samples, 0.16%)</title><rect x="171.4" y="579.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$269/1852062420.get$Lambda (472 samples, 0.16%)</title><rect x="171.4" y="563.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.4" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$269 (472 samples, 0.16%)</title><rect x="171.4" y="547.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="174.4" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.Context (639 samples, 0.22%)</title><rect x="173.3" y="595.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="176.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.executeMethod (97,446 samples, 33.40%)</title><rect x="175.9" y="595.0" width="394.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.9" y="606.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.e..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.03%)</title><rect x="175.9" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.03%)</title><rect x="175.9" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$138/820274732.get$Lambda (92 samples, 0.03%)</title><rect x="175.9" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.9" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$138 (92 samples, 0.03%)</title><rect x="175.9" y="531.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="178.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (263 samples, 0.09%)</title><rect x="176.3" y="579.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (263 samples, 0.09%)</title><rect x="176.3" y="563.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="179.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (162 samples, 0.06%)</title><rect x="176.3" y="547.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="179.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (101 samples, 0.03%)</title><rect x="176.9" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (101 samples, 0.03%)</title><rect x="176.9" y="531.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="179.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (218 samples, 0.07%)</title><rect x="177.3" y="579.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (218 samples, 0.07%)</title><rect x="177.3" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (156 samples, 0.05%)</title><rect x="177.3" y="547.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="180.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (62 samples, 0.02%)</title><rect x="178.0" y="547.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (62 samples, 0.02%)</title><rect x="178.0" y="531.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="181.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.collect (2,039 samples, 0.70%)</title><rect x="178.2" y="579.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.2" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (88 samples, 0.03%)</title><rect x="178.2" y="563.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="181.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (97 samples, 0.03%)</title><rect x="178.6" y="563.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="181.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (62 samples, 0.02%)</title><rect x="179.0" y="563.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="182.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/83955655.linkToTargetMethod (353 samples, 0.12%)</title><rect x="179.2" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2110639609.invokeStatic (353 samples, 0.12%)</title><rect x="179.2" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$129/50164514.get$Lambda (353 samples, 0.12%)</title><rect x="179.2" y="531.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.2" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MyRequestHelper$$Lambda$129 (353 samples, 0.12%)</title><rect x="179.2" y="515.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="182.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (651 samples, 0.22%)</title><rect x="180.6" y="563.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (651 samples, 0.22%)</title><rect x="180.6" y="547.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (348 samples, 0.12%)</title><rect x="180.6" y="531.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="183.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (87 samples, 0.03%)</title><rect x="182.0" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (87 samples, 0.03%)</title><rect x="182.0" y="515.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="185.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (216 samples, 0.07%)</title><rect x="182.4" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (216 samples, 0.07%)</title><rect x="182.4" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (216 samples, 0.07%)</title><rect x="182.4" y="499.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="185.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (788 samples, 0.27%)</title><rect x="183.3" y="563.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (788 samples, 0.27%)</title><rect x="183.3" y="547.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (326 samples, 0.11%)</title><rect x="183.3" y="531.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="186.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (86 samples, 0.03%)</title><rect x="184.6" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (86 samples, 0.03%)</title><rect x="184.6" y="515.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="187.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (130 samples, 0.04%)</title><rect x="184.9" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$129/50164514.accept (130 samples, 0.04%)</title><rect x="184.9" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$collect$2 (130 samples, 0.04%)</title><rect x="184.9" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (130 samples, 0.04%)</title><rect x="184.9" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (130 samples, 0.04%)</title><rect x="184.9" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (130 samples, 0.04%)</title><rect x="184.9" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (130 samples, 0.04%)</title><rect x="184.9" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (130 samples, 0.04%)</title><rect x="184.9" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (130 samples, 0.04%)</title><rect x="184.9" y="403.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="187.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (245 samples, 0.08%)</title><rect x="185.5" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (245 samples, 0.08%)</title><rect x="185.5" y="515.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="188.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (245 samples, 0.08%)</title><rect x="185.5" y="499.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="188.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.merge (613 samples, 0.21%)</title><rect x="186.5" y="579.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (99 samples, 0.03%)</title><rect x="186.5" y="563.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="189.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (222 samples, 0.08%)</title><rect x="187.1" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (222 samples, 0.08%)</title><rect x="187.1" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (141 samples, 0.05%)</title><rect x="187.1" y="531.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="190.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (81 samples, 0.03%)</title><rect x="187.7" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (81 samples, 0.03%)</title><rect x="187.7" y="515.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="190.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (236 samples, 0.08%)</title><rect x="188.0" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (236 samples, 0.08%)</title><rect x="188.0" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (152 samples, 0.05%)</title><rect x="188.0" y="531.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="191.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (84 samples, 0.03%)</title><rect x="188.6" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (84 samples, 0.03%)</title><rect x="188.6" y="515.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="191.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (2,608 samples, 0.89%)</title><rect x="188.9" y="579.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,608 samples, 0.89%)</title><rect x="188.9" y="563.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,608 samples, 0.89%)</title><rect x="188.9" y="547.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,930 samples, 0.66%)</title><rect x="188.9" y="531.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.9" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,930 samples, 0.66%)</title><rect x="188.9" y="515.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.9" y="526.0"></text>
</g>
<g>
<title>byte[] (1,930 samples, 0.66%)</title><rect x="188.9" y="499.0" width="7.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="191.9" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (678 samples, 0.23%)</title><rect x="196.7" y="531.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.7" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (678 samples, 0.23%)</title><rect x="196.7" y="515.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="199.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$269/1852062420.act (61,719 samples, 21.16%)</title><rect x="199.5" y="579.0" width="249.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.5" y="590.0">ru/mail/polis/service/kate/moreva..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$2 (61,719 samples, 21.16%)</title><rect x="199.5" y="563.0" width="249.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.5" y="574.0">ru/mail/polis/service/kate/moreva..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (61,719 samples, 21.16%)</title><rect x="199.5" y="547.0" width="249.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.5" y="558.0">ru/mail/polis/service/kate/moreva..</text>
</g>
<g>
<title>byte[] (473 samples, 0.16%)</title><rect x="199.5" y="531.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="202.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (1,215 samples, 0.42%)</title><rect x="201.4" y="531.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1832649846.invoke (1,215 samples, 0.42%)</title><rect x="201.4" y="515.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,215 samples, 0.42%)</title><rect x="201.4" y="499.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (394 samples, 0.14%)</title><rect x="201.4" y="483.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String (394 samples, 0.14%)</title><rect x="201.4" y="467.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="204.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (821 samples, 0.28%)</title><rect x="203.0" y="483.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (821 samples, 0.28%)</title><rect x="203.0" y="467.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.0" y="478.0"></text>
</g>
<g>
<title>byte[] (821 samples, 0.28%)</title><rect x="203.0" y="451.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="206.0" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Response (400 samples, 0.14%)</title><rect x="206.3" y="531.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="209.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,595 samples, 0.55%)</title><rect x="207.9" y="531.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.9" y="542.0"></text>
</g>
<g>
<title>byte[] (671 samples, 0.23%)</title><rect x="207.9" y="515.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="210.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (516 samples, 0.18%)</title><rect x="210.6" y="515.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="213.6" y="526.0"></text>
</g>
<g>
<title>java.lang.String (408 samples, 0.14%)</title><rect x="212.7" y="515.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="215.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (30,426 samples, 10.43%)</title><rect x="214.4" y="531.0" width="123.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.4" y="542.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4,209 samples, 1.44%)</title><rect x="214.4" y="515.0" width="17.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4,209 samples, 1.44%)</title><rect x="214.4" y="499.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4,209 samples, 1.44%)</title><rect x="214.4" y="483.0" width="17.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4,209 samples, 1.44%)</title><rect x="214.4" y="467.0" width="17.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,209 samples, 1.44%)</title><rect x="214.4" y="451.0" width="17.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,522 samples, 0.86%)</title><rect x="214.4" y="435.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2,522 samples, 0.86%)</title><rect x="214.4" y="419.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,522 samples, 0.86%)</title><rect x="214.4" y="403.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (820 samples, 0.28%)</title><rect x="214.4" y="387.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (820 samples, 0.28%)</title><rect x="214.4" y="371.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.4" y="382.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (820 samples, 0.28%)</title><rect x="214.4" y="355.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (820 samples, 0.28%)</title><rect x="214.4" y="339.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (820 samples, 0.28%)</title><rect x="214.4" y="323.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (820 samples, 0.28%)</title><rect x="214.4" y="307.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (820 samples, 0.28%)</title><rect x="214.4" y="291.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (820 samples, 0.28%)</title><rect x="214.4" y="275.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (820 samples, 0.28%)</title><rect x="214.4" y="259.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (394 samples, 0.14%)</title><rect x="214.4" y="243.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (394 samples, 0.14%)</title><rect x="214.4" y="227.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.4" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (394 samples, 0.14%)</title><rect x="214.4" y="211.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="217.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (426 samples, 0.15%)</title><rect x="216.0" y="243.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (426 samples, 0.15%)</title><rect x="216.0" y="227.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (426 samples, 0.15%)</title><rect x="216.0" y="211.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.0" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (426 samples, 0.15%)</title><rect x="216.0" y="195.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="219.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$332/1010896139.apply (1,702 samples, 0.58%)</title><rect x="217.7" y="387.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (1,702 samples, 0.58%)</title><rect x="217.7" y="371.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,702 samples, 0.58%)</title><rect x="217.7" y="355.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.7" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,702 samples, 0.58%)</title><rect x="217.7" y="339.0" width="6.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="220.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$351/911484605.apply (1,687 samples, 0.58%)</title><rect x="224.6" y="435.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (1,687 samples, 0.58%)</title><rect x="224.6" y="419.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,687 samples, 0.58%)</title><rect x="224.6" y="403.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.6" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,687 samples, 0.58%)</title><rect x="224.6" y="387.0" width="6.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="227.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (744 samples, 0.26%)</title><rect x="231.4" y="515.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (744 samples, 0.26%)</title><rect x="231.4" y="499.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$363/504005016.apply (744 samples, 0.26%)</title><rect x="231.4" y="483.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (744 samples, 0.26%)</title><rect x="231.4" y="467.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (744 samples, 0.26%)</title><rect x="231.4" y="451.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (744 samples, 0.26%)</title><rect x="231.4" y="435.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (744 samples, 0.26%)</title><rect x="231.4" y="419.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="234.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (787 samples, 0.27%)</title><rect x="234.4" y="515.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (787 samples, 0.27%)</title><rect x="234.4" y="499.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (787 samples, 0.27%)</title><rect x="234.4" y="483.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.4" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (787 samples, 0.27%)</title><rect x="234.4" y="467.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="237.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (802 samples, 0.27%)</title><rect x="237.6" y="515.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (802 samples, 0.27%)</title><rect x="237.6" y="499.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (802 samples, 0.27%)</title><rect x="237.6" y="483.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.6" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (802 samples, 0.27%)</title><rect x="237.6" y="467.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="240.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (23,884 samples, 8.19%)</title><rect x="240.8" y="515.0" width="96.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.8" y="526.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (509 samples, 0.17%)</title><rect x="240.8" y="499.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.8" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (509 samples, 0.17%)</title><rect x="240.8" y="483.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="243.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,081 samples, 0.71%)</title><rect x="242.9" y="499.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.9" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (263 samples, 0.09%)</title><rect x="242.9" y="483.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="245.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,818 samples, 0.62%)</title><rect x="244.0" y="483.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.0" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (410 samples, 0.14%)</title><rect x="244.0" y="467.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="247.0" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (445 samples, 0.15%)</title><rect x="245.6" y="467.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.6" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (445 samples, 0.15%)</title><rect x="245.6" y="451.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="248.6" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (552 samples, 0.19%)</title><rect x="247.4" y="467.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="250.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (411 samples, 0.14%)</title><rect x="249.7" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (411 samples, 0.14%)</title><rect x="249.7" y="451.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="252.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (294 samples, 0.10%)</title><rect x="251.3" y="499.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (294 samples, 0.10%)</title><rect x="251.3" y="483.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (294 samples, 0.10%)</title><rect x="251.3" y="467.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.3" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (294 samples, 0.10%)</title><rect x="251.3" y="451.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.3" y="462.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (294 samples, 0.10%)</title><rect x="251.3" y="435.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="254.3" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (688 samples, 0.24%)</title><rect x="252.5" y="499.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.5" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (301 samples, 0.10%)</title><rect x="252.5" y="483.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (301 samples, 0.10%)</title><rect x="252.5" y="467.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (301 samples, 0.10%)</title><rect x="252.5" y="451.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (301 samples, 0.10%)</title><rect x="252.5" y="435.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.5" y="446.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (301 samples, 0.10%)</title><rect x="252.5" y="419.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="255.5" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (387 samples, 0.13%)</title><rect x="253.7" y="483.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (387 samples, 0.13%)</title><rect x="253.7" y="467.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (387 samples, 0.13%)</title><rect x="253.7" y="451.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$307/1536996145.get$Lambda (387 samples, 0.13%)</title><rect x="253.7" y="435.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.7" y="446.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$307 (387 samples, 0.13%)</title><rect x="253.7" y="419.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="256.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2,927 samples, 1.00%)</title><rect x="255.5" y="499.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.5" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (424 samples, 0.15%)</title><rect x="255.5" y="483.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="258.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2,503 samples, 0.86%)</title><rect x="257.2" y="483.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,503 samples, 0.86%)</title><rect x="257.2" y="467.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2,503 samples, 0.86%)</title><rect x="257.2" y="451.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,503 samples, 0.86%)</title><rect x="257.2" y="435.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (827 samples, 0.28%)</title><rect x="257.2" y="419.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (827 samples, 0.28%)</title><rect x="257.2" y="403.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.2" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (827 samples, 0.28%)</title><rect x="257.2" y="387.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (827 samples, 0.28%)</title><rect x="257.2" y="371.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (827 samples, 0.28%)</title><rect x="257.2" y="355.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (827 samples, 0.28%)</title><rect x="257.2" y="339.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (827 samples, 0.28%)</title><rect x="257.2" y="323.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (827 samples, 0.28%)</title><rect x="257.2" y="307.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (827 samples, 0.28%)</title><rect x="257.2" y="291.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (411 samples, 0.14%)</title><rect x="257.2" y="275.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (411 samples, 0.14%)</title><rect x="257.2" y="259.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.2" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (411 samples, 0.14%)</title><rect x="257.2" y="243.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="260.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (416 samples, 0.14%)</title><rect x="258.8" y="275.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (416 samples, 0.14%)</title><rect x="258.8" y="259.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (416 samples, 0.14%)</title><rect x="258.8" y="243.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.8" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (416 samples, 0.14%)</title><rect x="258.8" y="227.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="261.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$332/1010896139.apply (1,676 samples, 0.57%)</title><rect x="260.5" y="419.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="263.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (1,676 samples, 0.57%)</title><rect x="260.5" y="403.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,676 samples, 0.57%)</title><rect x="260.5" y="387.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="263.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,676 samples, 0.57%)</title><rect x="260.5" y="371.0" width="6.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="263.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (17,345 samples, 5.95%)</title><rect x="267.3" y="499.0" width="70.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.3" y="510.0">ru/mail/..</text>
</g>
<g>
<title>java.util.ArrayList (405 samples, 0.14%)</title><rect x="267.3" y="483.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="270.3" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (504 samples, 0.17%)</title><rect x="268.9" y="483.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="271.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (504 samples, 0.17%)</title><rect x="268.9" y="467.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (504 samples, 0.17%)</title><rect x="268.9" y="451.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="271.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (405 samples, 0.14%)</title><rect x="271.0" y="483.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (405 samples, 0.14%)</title><rect x="271.0" y="467.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$343/1452446314.get$Lambda (405 samples, 0.14%)</title><rect x="271.0" y="451.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="274.0" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.MyDAO$$Lambda$343 (405 samples, 0.14%)</title><rect x="271.0" y="435.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="274.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (422 samples, 0.14%)</title><rect x="272.6" y="483.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (422 samples, 0.14%)</title><rect x="272.6" y="467.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="275.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (15,609 samples, 5.35%)</title><rect x="274.3" y="483.0" width="63.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.3" y="494.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,314 samples, 2.16%)</title><rect x="274.3" y="467.0" width="25.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.3" y="478.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (288 samples, 0.10%)</title><rect x="274.3" y="451.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="277.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,026 samples, 2.07%)</title><rect x="275.5" y="451.0" width="24.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.5" y="462.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (432 samples, 0.15%)</title><rect x="275.5" y="435.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="278.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (417 samples, 0.14%)</title><rect x="277.2" y="435.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.2" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (417 samples, 0.14%)</title><rect x="277.2" y="419.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="280.2" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (596 samples, 0.20%)</title><rect x="278.9" y="435.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="281.9" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (424 samples, 0.15%)</title><rect x="281.3" y="435.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (424 samples, 0.15%)</title><rect x="281.3" y="419.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="284.3" y="430.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4,157 samples, 1.42%)</title><rect x="283.0" y="435.0" width="16.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4,157 samples, 1.42%)</title><rect x="283.0" y="419.0" width="16.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4,157 samples, 1.42%)</title><rect x="283.0" y="403.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (896 samples, 0.31%)</title><rect x="283.0" y="387.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (896 samples, 0.31%)</title><rect x="283.0" y="371.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (896 samples, 0.31%)</title><rect x="283.0" y="355.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (896 samples, 0.31%)</title><rect x="283.0" y="339.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (456 samples, 0.16%)</title><rect x="283.0" y="323.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (456 samples, 0.16%)</title><rect x="283.0" y="307.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.0" y="318.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (456 samples, 0.16%)</title><rect x="283.0" y="291.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="286.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (440 samples, 0.15%)</title><rect x="284.9" y="323.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="287.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (440 samples, 0.15%)</title><rect x="284.9" y="307.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (440 samples, 0.15%)</title><rect x="284.9" y="291.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.9" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (440 samples, 0.15%)</title><rect x="284.9" y="275.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="287.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (3,261 samples, 1.12%)</title><rect x="286.7" y="387.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.7" y="398.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (735 samples, 0.25%)</title><rect x="286.7" y="371.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="289.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (576 samples, 0.20%)</title><rect x="289.6" y="371.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="292.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (576 samples, 0.20%)</title><rect x="289.6" y="355.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$314/1939218927.get$Lambda (293 samples, 0.10%)</title><rect x="289.6" y="339.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.6" y="350.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$314 (293 samples, 0.10%)</title><rect x="289.6" y="323.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="292.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.get$Lambda (283 samples, 0.10%)</title><rect x="290.8" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$317 (283 samples, 0.10%)</title><rect x="290.8" y="323.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="293.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (437 samples, 0.15%)</title><rect x="292.0" y="371.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (437 samples, 0.15%)</title><rect x="292.0" y="355.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (437 samples, 0.15%)</title><rect x="292.0" y="339.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="295.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (1,513 samples, 0.52%)</title><rect x="293.7" y="371.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,513 samples, 0.52%)</title><rect x="293.7" y="355.0" width="6.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="296.7" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList (428 samples, 0.15%)</title><rect x="299.9" y="467.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="302.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (423 samples, 0.14%)</title><rect x="301.6" y="467.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (423 samples, 0.14%)</title><rect x="301.6" y="451.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="304.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (321 samples, 0.11%)</title><rect x="303.3" y="467.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (321 samples, 0.11%)</title><rect x="303.3" y="451.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (321 samples, 0.11%)</title><rect x="303.3" y="435.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.3" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (321 samples, 0.11%)</title><rect x="303.3" y="419.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.3" y="430.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (321 samples, 0.11%)</title><rect x="303.3" y="403.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="306.3" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (804 samples, 0.28%)</title><rect x="304.6" y="467.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="307.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (318 samples, 0.11%)</title><rect x="304.6" y="451.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="307.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (318 samples, 0.11%)</title><rect x="304.6" y="435.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (318 samples, 0.11%)</title><rect x="304.6" y="419.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (318 samples, 0.11%)</title><rect x="304.6" y="403.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="307.6" y="414.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (318 samples, 0.11%)</title><rect x="304.6" y="387.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="307.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (486 samples, 0.17%)</title><rect x="305.9" y="451.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (486 samples, 0.17%)</title><rect x="305.9" y="435.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (486 samples, 0.17%)</title><rect x="305.9" y="419.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$307/1536996145.get$Lambda (486 samples, 0.17%)</title><rect x="305.9" y="403.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.9" y="414.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$307 (486 samples, 0.17%)</title><rect x="305.9" y="387.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="308.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (569 samples, 0.20%)</title><rect x="307.8" y="467.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (569 samples, 0.20%)</title><rect x="307.8" y="451.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="310.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,326 samples, 0.45%)</title><rect x="310.3" y="467.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.3" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (460 samples, 0.16%)</title><rect x="310.3" y="451.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="313.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (866 samples, 0.30%)</title><rect x="312.1" y="451.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (866 samples, 0.30%)</title><rect x="312.1" y="435.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (866 samples, 0.30%)</title><rect x="312.1" y="419.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.1" y="430.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (866 samples, 0.30%)</title><rect x="312.1" y="403.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (866 samples, 0.30%)</title><rect x="312.1" y="387.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (866 samples, 0.30%)</title><rect x="312.1" y="371.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (866 samples, 0.30%)</title><rect x="312.1" y="355.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (866 samples, 0.30%)</title><rect x="312.1" y="339.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (866 samples, 0.30%)</title><rect x="312.1" y="323.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (866 samples, 0.30%)</title><rect x="312.1" y="307.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (426 samples, 0.15%)</title><rect x="312.1" y="291.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (426 samples, 0.15%)</title><rect x="312.1" y="275.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.1" y="286.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (426 samples, 0.15%)</title><rect x="312.1" y="259.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="315.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (440 samples, 0.15%)</title><rect x="313.9" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (440 samples, 0.15%)</title><rect x="313.9" y="275.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (440 samples, 0.15%)</title><rect x="313.9" y="259.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (440 samples, 0.15%)</title><rect x="313.9" y="243.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="316.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (5,390 samples, 1.85%)</title><rect x="315.6" y="467.0" width="21.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.6" y="478.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (1,502 samples, 0.51%)</title><rect x="315.6" y="451.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (514 samples, 0.18%)</title><rect x="315.6" y="435.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (514 samples, 0.18%)</title><rect x="315.6" y="419.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="318.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (988 samples, 0.34%)</title><rect x="317.7" y="435.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.7" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (988 samples, 0.34%)</title><rect x="317.7" y="419.0" width="4.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="320.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (296 samples, 0.10%)</title><rect x="321.7" y="451.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (296 samples, 0.10%)</title><rect x="321.7" y="435.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="324.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (876 samples, 0.30%)</title><rect x="322.9" y="451.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (876 samples, 0.30%)</title><rect x="322.9" y="435.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (876 samples, 0.30%)</title><rect x="322.9" y="419.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (876 samples, 0.30%)</title><rect x="322.9" y="403.0" width="3.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="325.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (1,579 samples, 0.54%)</title><rect x="326.5" y="451.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.5" y="462.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (438 samples, 0.15%)</title><rect x="326.5" y="435.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.5" y="446.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (438 samples, 0.15%)</title><rect x="326.5" y="419.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="329.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (1,141 samples, 0.39%)</title><rect x="328.2" y="435.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (265 samples, 0.09%)</title><rect x="328.2" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (265 samples, 0.09%)</title><rect x="328.2" y="403.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$286/582017711.get$Lambda (265 samples, 0.09%)</title><rect x="328.2" y="387.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.2" y="398.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$286 (265 samples, 0.09%)</title><rect x="328.2" y="371.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="331.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (876 samples, 0.30%)</title><rect x="329.3" y="419.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.3" y="430.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (876 samples, 0.30%)</title><rect x="329.3" y="403.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="332.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1,137 samples, 0.39%)</title><rect x="332.9" y="451.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.9" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (1,137 samples, 0.39%)</title><rect x="332.9" y="435.0" width="4.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="335.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (27,610 samples, 9.46%)</title><rect x="337.5" y="531.0" width="111.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.5" y="542.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,101 samples, 1.41%)</title><rect x="337.5" y="515.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,501 samples, 0.86%)</title><rect x="337.5" y="499.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2,501 samples, 0.86%)</title><rect x="337.5" y="483.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,501 samples, 0.86%)</title><rect x="337.5" y="467.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (864 samples, 0.30%)</title><rect x="337.5" y="451.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (864 samples, 0.30%)</title><rect x="337.5" y="435.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.5" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (864 samples, 0.30%)</title><rect x="337.5" y="419.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (864 samples, 0.30%)</title><rect x="337.5" y="403.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.5" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (864 samples, 0.30%)</title><rect x="337.5" y="387.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (864 samples, 0.30%)</title><rect x="337.5" y="371.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.5" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (864 samples, 0.30%)</title><rect x="337.5" y="355.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (864 samples, 0.30%)</title><rect x="337.5" y="339.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (864 samples, 0.30%)</title><rect x="337.5" y="323.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (418 samples, 0.14%)</title><rect x="337.5" y="307.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (418 samples, 0.14%)</title><rect x="337.5" y="291.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.5" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (418 samples, 0.14%)</title><rect x="337.5" y="275.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="340.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (446 samples, 0.15%)</title><rect x="339.1" y="307.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (446 samples, 0.15%)</title><rect x="339.1" y="291.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (446 samples, 0.15%)</title><rect x="339.1" y="275.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.1" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (446 samples, 0.15%)</title><rect x="339.1" y="259.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="342.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$332/1010896139.apply (1,637 samples, 0.56%)</title><rect x="340.9" y="451.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="343.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (1,637 samples, 0.56%)</title><rect x="340.9" y="435.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.9" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,637 samples, 0.56%)</title><rect x="340.9" y="419.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.9" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,637 samples, 0.56%)</title><rect x="340.9" y="403.0" width="6.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="343.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$340/1089963118.apply (1,600 samples, 0.55%)</title><rect x="347.6" y="499.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (1,600 samples, 0.55%)</title><rect x="347.6" y="483.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="350.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,600 samples, 0.55%)</title><rect x="347.6" y="467.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.6" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,600 samples, 0.55%)</title><rect x="347.6" y="451.0" width="6.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="350.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (831 samples, 0.28%)</title><rect x="354.0" y="515.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (831 samples, 0.28%)</title><rect x="354.0" y="499.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (831 samples, 0.28%)</title><rect x="354.0" y="483.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="357.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (22,678 samples, 7.77%)</title><rect x="357.4" y="515.0" width="91.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.4" y="526.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,026 samples, 0.69%)</title><rect x="357.4" y="499.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.4" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (267 samples, 0.09%)</title><rect x="357.4" y="483.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="360.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,759 samples, 0.60%)</title><rect x="358.5" y="483.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="361.5" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (403 samples, 0.14%)</title><rect x="358.5" y="467.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="361.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (411 samples, 0.14%)</title><rect x="360.1" y="467.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="363.1" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (411 samples, 0.14%)</title><rect x="360.1" y="451.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="363.1" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (536 samples, 0.18%)</title><rect x="361.8" y="467.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="364.8" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (409 samples, 0.14%)</title><rect x="363.9" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (409 samples, 0.14%)</title><rect x="363.9" y="451.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="366.9" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (409 samples, 0.14%)</title><rect x="365.6" y="499.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="368.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (921 samples, 0.32%)</title><rect x="367.2" y="499.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (921 samples, 0.32%)</title><rect x="367.2" y="483.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (921 samples, 0.32%)</title><rect x="367.2" y="467.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="370.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (921 samples, 0.32%)</title><rect x="367.2" y="451.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="370.2" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (921 samples, 0.32%)</title><rect x="367.2" y="435.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="370.2" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (921 samples, 0.32%)</title><rect x="367.2" y="419.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="370.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (275 samples, 0.09%)</title><rect x="371.0" y="499.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (275 samples, 0.09%)</title><rect x="371.0" y="483.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (275 samples, 0.09%)</title><rect x="371.0" y="467.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (275 samples, 0.09%)</title><rect x="371.0" y="451.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.0" y="462.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (275 samples, 0.09%)</title><rect x="371.0" y="435.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="374.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (658 samples, 0.23%)</title><rect x="372.1" y="499.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.1" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (264 samples, 0.09%)</title><rect x="372.1" y="483.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (264 samples, 0.09%)</title><rect x="372.1" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (264 samples, 0.09%)</title><rect x="372.1" y="451.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.1" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (264 samples, 0.09%)</title><rect x="372.1" y="435.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.1" y="446.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (264 samples, 0.09%)</title><rect x="372.1" y="419.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="375.1" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (394 samples, 0.14%)</title><rect x="373.2" y="483.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (394 samples, 0.14%)</title><rect x="373.2" y="467.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (394 samples, 0.14%)</title><rect x="373.2" y="451.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.2" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$307/1536996145.get$Lambda (394 samples, 0.14%)</title><rect x="373.2" y="435.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.2" y="446.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$307 (394 samples, 0.14%)</title><rect x="373.2" y="419.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="376.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (560 samples, 0.19%)</title><rect x="374.7" y="499.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (560 samples, 0.19%)</title><rect x="374.7" y="483.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="377.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2,751 samples, 0.94%)</title><rect x="377.0" y="499.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (391 samples, 0.13%)</title><rect x="377.0" y="483.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="380.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2,360 samples, 0.81%)</title><rect x="378.6" y="483.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,360 samples, 0.81%)</title><rect x="378.6" y="467.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="381.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2,360 samples, 0.81%)</title><rect x="378.6" y="451.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="381.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,360 samples, 0.81%)</title><rect x="378.6" y="435.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="381.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (782 samples, 0.27%)</title><rect x="378.6" y="419.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="381.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (782 samples, 0.27%)</title><rect x="378.6" y="403.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.6" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (782 samples, 0.27%)</title><rect x="378.6" y="387.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (782 samples, 0.27%)</title><rect x="378.6" y="371.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (782 samples, 0.27%)</title><rect x="378.6" y="355.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="381.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (782 samples, 0.27%)</title><rect x="378.6" y="339.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (782 samples, 0.27%)</title><rect x="378.6" y="323.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (782 samples, 0.27%)</title><rect x="378.6" y="307.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (782 samples, 0.27%)</title><rect x="378.6" y="291.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="381.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (353 samples, 0.12%)</title><rect x="378.6" y="275.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (353 samples, 0.12%)</title><rect x="378.6" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.6" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (353 samples, 0.12%)</title><rect x="378.6" y="243.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="381.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (429 samples, 0.15%)</title><rect x="380.0" y="275.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (429 samples, 0.15%)</title><rect x="380.0" y="259.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (429 samples, 0.15%)</title><rect x="380.0" y="243.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.0" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (429 samples, 0.15%)</title><rect x="380.0" y="227.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="383.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$332/1010896139.apply (1,578 samples, 0.54%)</title><rect x="381.8" y="419.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (1,578 samples, 0.54%)</title><rect x="381.8" y="403.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,578 samples, 0.54%)</title><rect x="381.8" y="387.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,578 samples, 0.54%)</title><rect x="381.8" y="371.0" width="6.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="384.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (15,078 samples, 5.17%)</title><rect x="388.1" y="499.0" width="61.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.1" y="510.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,116 samples, 2.10%)</title><rect x="388.1" y="483.0" width="24.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.1" y="494.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (288 samples, 0.10%)</title><rect x="388.1" y="467.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="391.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5,828 samples, 2.00%)</title><rect x="389.3" y="467.0" width="23.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.3" y="478.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (411 samples, 0.14%)</title><rect x="389.3" y="451.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="392.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (420 samples, 0.14%)</title><rect x="391.0" y="451.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.0" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (420 samples, 0.14%)</title><rect x="391.0" y="435.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="394.0" y="446.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (548 samples, 0.19%)</title><rect x="392.7" y="451.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="395.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (424 samples, 0.15%)</title><rect x="394.9" y="451.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (424 samples, 0.15%)</title><rect x="394.9" y="435.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="397.9" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4,025 samples, 1.38%)</title><rect x="396.6" y="451.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4,025 samples, 1.38%)</title><rect x="396.6" y="435.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4,025 samples, 1.38%)</title><rect x="396.6" y="419.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (831 samples, 0.28%)</title><rect x="396.6" y="403.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (831 samples, 0.28%)</title><rect x="396.6" y="387.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (831 samples, 0.28%)</title><rect x="396.6" y="371.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (831 samples, 0.28%)</title><rect x="396.6" y="355.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (419 samples, 0.14%)</title><rect x="396.6" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (419 samples, 0.14%)</title><rect x="396.6" y="323.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.6" y="334.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (419 samples, 0.14%)</title><rect x="396.6" y="307.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="399.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (412 samples, 0.14%)</title><rect x="398.3" y="339.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (412 samples, 0.14%)</title><rect x="398.3" y="323.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (412 samples, 0.14%)</title><rect x="398.3" y="307.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.3" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (412 samples, 0.14%)</title><rect x="398.3" y="291.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="401.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (3,194 samples, 1.09%)</title><rect x="400.0" y="403.0" width="12.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="403.0" y="414.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (734 samples, 0.25%)</title><rect x="400.0" y="387.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="403.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (541 samples, 0.19%)</title><rect x="402.9" y="387.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (541 samples, 0.19%)</title><rect x="402.9" y="371.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$314/1939218927.get$Lambda (273 samples, 0.09%)</title><rect x="402.9" y="355.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$314 (273 samples, 0.09%)</title><rect x="402.9" y="339.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="405.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.get$Lambda (268 samples, 0.09%)</title><rect x="404.0" y="355.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$317 (268 samples, 0.09%)</title><rect x="404.0" y="339.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="407.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (433 samples, 0.15%)</title><rect x="405.1" y="387.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (433 samples, 0.15%)</title><rect x="405.1" y="371.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.1" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (433 samples, 0.15%)</title><rect x="405.1" y="355.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="408.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (1,486 samples, 0.51%)</title><rect x="406.9" y="387.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,486 samples, 0.51%)</title><rect x="406.9" y="371.0" width="6.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="409.9" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (406 samples, 0.14%)</title><rect x="412.9" y="483.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="415.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (415 samples, 0.14%)</title><rect x="414.5" y="483.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (415 samples, 0.14%)</title><rect x="414.5" y="467.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="417.5" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (284 samples, 0.10%)</title><rect x="416.2" y="483.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (284 samples, 0.10%)</title><rect x="416.2" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (284 samples, 0.10%)</title><rect x="416.2" y="451.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.2" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (284 samples, 0.10%)</title><rect x="416.2" y="435.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.2" y="446.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (284 samples, 0.10%)</title><rect x="416.2" y="419.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="419.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (702 samples, 0.24%)</title><rect x="417.3" y="483.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.3" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (288 samples, 0.10%)</title><rect x="417.3" y="467.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (288 samples, 0.10%)</title><rect x="417.3" y="451.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (288 samples, 0.10%)</title><rect x="417.3" y="435.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.3" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (288 samples, 0.10%)</title><rect x="417.3" y="419.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.3" y="430.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (288 samples, 0.10%)</title><rect x="417.3" y="403.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="420.3" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (414 samples, 0.14%)</title><rect x="418.5" y="467.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (414 samples, 0.14%)</title><rect x="418.5" y="451.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (414 samples, 0.14%)</title><rect x="418.5" y="435.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.5" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$307/1536996145.get$Lambda (414 samples, 0.14%)</title><rect x="418.5" y="419.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.5" y="430.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$307 (414 samples, 0.14%)</title><rect x="418.5" y="403.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="421.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (592 samples, 0.20%)</title><rect x="420.2" y="483.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (592 samples, 0.20%)</title><rect x="420.2" y="467.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="423.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,228 samples, 0.42%)</title><rect x="422.7" y="483.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.7" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (422 samples, 0.14%)</title><rect x="422.7" y="467.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="425.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (806 samples, 0.28%)</title><rect x="424.4" y="467.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="427.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (806 samples, 0.28%)</title><rect x="424.4" y="451.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (806 samples, 0.28%)</title><rect x="424.4" y="435.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.4" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (806 samples, 0.28%)</title><rect x="424.4" y="419.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (806 samples, 0.28%)</title><rect x="424.4" y="403.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (806 samples, 0.28%)</title><rect x="424.4" y="387.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="427.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (806 samples, 0.28%)</title><rect x="424.4" y="371.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (806 samples, 0.28%)</title><rect x="424.4" y="355.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (806 samples, 0.28%)</title><rect x="424.4" y="339.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (806 samples, 0.28%)</title><rect x="424.4" y="323.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (391 samples, 0.13%)</title><rect x="424.4" y="307.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (391 samples, 0.13%)</title><rect x="424.4" y="291.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.4" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (391 samples, 0.13%)</title><rect x="424.4" y="275.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="427.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (415 samples, 0.14%)</title><rect x="426.0" y="307.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="429.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (415 samples, 0.14%)</title><rect x="426.0" y="291.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (415 samples, 0.14%)</title><rect x="426.0" y="275.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (415 samples, 0.14%)</title><rect x="426.0" y="259.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="429.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (5,307 samples, 1.82%)</title><rect x="427.7" y="483.0" width="21.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.7" y="494.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (1,537 samples, 0.53%)</title><rect x="427.7" y="467.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (578 samples, 0.20%)</title><rect x="427.7" y="451.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (578 samples, 0.20%)</title><rect x="427.7" y="435.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="430.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (959 samples, 0.33%)</title><rect x="430.0" y="451.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.0" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (959 samples, 0.33%)</title><rect x="430.0" y="435.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="433.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (273 samples, 0.09%)</title><rect x="433.9" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (273 samples, 0.09%)</title><rect x="433.9" y="451.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="436.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (844 samples, 0.29%)</title><rect x="435.0" y="467.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (844 samples, 0.29%)</title><rect x="435.0" y="451.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (844 samples, 0.29%)</title><rect x="435.0" y="435.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (844 samples, 0.29%)</title><rect x="435.0" y="419.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="438.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (1,542 samples, 0.53%)</title><rect x="438.4" y="467.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.4" y="478.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (396 samples, 0.14%)</title><rect x="438.4" y="451.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.4" y="462.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (396 samples, 0.14%)</title><rect x="438.4" y="435.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="441.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (1,146 samples, 0.39%)</title><rect x="440.0" y="451.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (279 samples, 0.10%)</title><rect x="440.0" y="435.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="443.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (279 samples, 0.10%)</title><rect x="440.0" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$286/582017711.get$Lambda (279 samples, 0.10%)</title><rect x="440.0" y="403.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.0" y="414.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$286 (279 samples, 0.10%)</title><rect x="440.0" y="387.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="443.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (867 samples, 0.30%)</title><rect x="441.1" y="435.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.1" y="446.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (867 samples, 0.30%)</title><rect x="441.1" y="419.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="444.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1,111 samples, 0.38%)</title><rect x="444.6" y="467.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="447.6" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (1,111 samples, 0.38%)</title><rect x="444.6" y="451.0" width="4.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="447.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.replication (29,894 samples, 10.25%)</title><rect x="449.1" y="579.0" width="120.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.1" y="590.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java.util.ArrayList (98 samples, 0.03%)</title><rect x="449.1" y="563.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="452.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (113 samples, 0.04%)</title><rect x="449.5" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 0.04%)</title><rect x="449.5" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/649285409.get$Lambda (113 samples, 0.04%)</title><rect x="449.5" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.5" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$128 (113 samples, 0.04%)</title><rect x="449.5" y="515.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="452.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (112 samples, 0.04%)</title><rect x="450.0" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.0" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (112 samples, 0.04%)</title><rect x="450.0" y="547.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="453.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (172 samples, 0.06%)</title><rect x="450.4" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (130 samples, 0.04%)</title><rect x="450.4" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (130 samples, 0.04%)</title><rect x="450.4" y="531.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="453.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (536 samples, 0.18%)</title><rect x="451.1" y="563.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (536 samples, 0.18%)</title><rect x="451.1" y="547.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="454.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (275 samples, 0.09%)</title><rect x="451.1" y="531.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="454.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (261 samples, 0.09%)</title><rect x="452.2" y="531.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (261 samples, 0.09%)</title><rect x="452.2" y="515.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (261 samples, 0.09%)</title><rect x="452.2" y="499.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="455.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (14,920 samples, 5.11%)</title><rect x="453.3" y="563.0" width="60.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.3" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (14,920 samples, 5.11%)</title><rect x="453.3" y="547.0" width="60.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.3" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (14,920 samples, 5.11%)</title><rect x="453.3" y="531.0" width="60.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.3" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (14,920 samples, 5.11%)</title><rect x="453.3" y="515.0" width="60.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.3" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (117 samples, 0.04%)</title><rect x="453.3" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (117 samples, 0.04%)</title><rect x="453.3" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$125/1575956583.get$Lambda (117 samples, 0.04%)</title><rect x="453.3" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$125 (117 samples, 0.04%)</title><rect x="453.3" y="451.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="456.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (527 samples, 0.18%)</title><rect x="453.8" y="499.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (527 samples, 0.18%)</title><rect x="453.8" y="483.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (284 samples, 0.10%)</title><rect x="453.8" y="467.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="456.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.08%)</title><rect x="454.9" y="467.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.08%)</title><rect x="454.9" y="451.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (243 samples, 0.08%)</title><rect x="454.9" y="435.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="457.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (498 samples, 0.17%)</title><rect x="455.9" y="499.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="458.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (498 samples, 0.17%)</title><rect x="455.9" y="483.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="458.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (283 samples, 0.10%)</title><rect x="455.9" y="467.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="458.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (215 samples, 0.07%)</title><rect x="457.0" y="467.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (215 samples, 0.07%)</title><rect x="457.0" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (215 samples, 0.07%)</title><rect x="457.0" y="435.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="460.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (423 samples, 0.14%)</title><rect x="457.9" y="499.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="460.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (720 samples, 0.25%)</title><rect x="459.6" y="499.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="462.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (7,366 samples, 2.52%)</title><rect x="462.5" y="499.0" width="29.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.5" y="510.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (820 samples, 0.28%)</title><rect x="462.5" y="483.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.5" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (650 samples, 0.22%)</title><rect x="462.5" y="467.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.5" y="478.0"></text>
</g>
<g>
<title>java/util/List.spliterator (216 samples, 0.07%)</title><rect x="462.5" y="451.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.5" y="462.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (216 samples, 0.07%)</title><rect x="462.5" y="435.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="465.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (434 samples, 0.15%)</title><rect x="463.4" y="451.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.4" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (434 samples, 0.15%)</title><rect x="463.4" y="435.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="466.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (170 samples, 0.06%)</title><rect x="465.2" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (170 samples, 0.06%)</title><rect x="465.2" y="451.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.2" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (170 samples, 0.06%)</title><rect x="465.2" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/1636182655.get (170 samples, 0.06%)</title><rect x="465.2" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.2" y="430.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (170 samples, 0.06%)</title><rect x="465.2" y="403.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="468.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,720 samples, 0.93%)</title><rect x="465.9" y="483.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,720 samples, 0.93%)</title><rect x="465.9" y="467.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.9" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (118 samples, 0.04%)</title><rect x="465.9" y="451.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="468.9" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (190 samples, 0.07%)</title><rect x="466.3" y="451.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="469.3" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (337 samples, 0.12%)</title><rect x="467.1" y="451.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="470.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (129 samples, 0.04%)</title><rect x="468.5" y="451.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="471.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (223 samples, 0.08%)</title><rect x="469.0" y="451.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (223 samples, 0.08%)</title><rect x="469.0" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.get$Lambda (223 samples, 0.08%)</title><rect x="469.0" y="419.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.0" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$116 (223 samples, 0.08%)</title><rect x="469.0" y="403.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="472.0" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,121 samples, 0.38%)</title><rect x="469.9" y="451.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,121 samples, 0.38%)</title><rect x="469.9" y="435.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (1,121 samples, 0.38%)</title><rect x="469.9" y="419.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,121 samples, 0.38%)</title><rect x="469.9" y="403.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.9" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (435 samples, 0.15%)</title><rect x="469.9" y="387.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (435 samples, 0.15%)</title><rect x="469.9" y="371.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (435 samples, 0.15%)</title><rect x="469.9" y="355.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (435 samples, 0.15%)</title><rect x="469.9" y="339.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (435 samples, 0.15%)</title><rect x="469.9" y="323.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (435 samples, 0.15%)</title><rect x="469.9" y="307.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (435 samples, 0.15%)</title><rect x="469.9" y="291.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (435 samples, 0.15%)</title><rect x="469.9" y="275.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (435 samples, 0.15%)</title><rect x="469.9" y="259.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="472.9" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (369 samples, 0.13%)</title><rect x="471.6" y="387.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.6" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (369 samples, 0.13%)</title><rect x="471.6" y="371.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (185 samples, 0.06%)</title><rect x="471.6" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.6" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (185 samples, 0.06%)</title><rect x="471.6" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (185 samples, 0.06%)</title><rect x="471.6" y="323.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="474.6" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (184 samples, 0.06%)</title><rect x="472.4" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.4" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (184 samples, 0.06%)</title><rect x="472.4" y="339.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="475.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (317 samples, 0.11%)</title><rect x="473.1" y="387.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (317 samples, 0.11%)</title><rect x="473.1" y="371.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="476.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (230 samples, 0.08%)</title><rect x="474.4" y="451.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.4" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (230 samples, 0.08%)</title><rect x="474.4" y="435.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="477.4" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (372 samples, 0.13%)</title><rect x="475.4" y="451.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (372 samples, 0.13%)</title><rect x="475.4" y="435.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="478.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (116 samples, 0.04%)</title><rect x="476.9" y="483.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="479.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (2,666 samples, 0.91%)</title><rect x="477.3" y="483.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.3" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (2,666 samples, 0.91%)</title><rect x="477.3" y="467.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.3" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2,427 samples, 0.83%)</title><rect x="477.3" y="451.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.3" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,427 samples, 0.83%)</title><rect x="477.3" y="435.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.3" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,427 samples, 0.83%)</title><rect x="477.3" y="419.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.3" y="430.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (525 samples, 0.18%)</title><rect x="477.3" y="403.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="480.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (774 samples, 0.27%)</title><rect x="479.5" y="403.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.5" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (774 samples, 0.27%)</title><rect x="479.5" y="387.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.5" y="398.0"></text>
</g>
<g>
<title>byte[] (774 samples, 0.27%)</title><rect x="479.5" y="371.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="482.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,128 samples, 0.39%)</title><rect x="482.6" y="403.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,128 samples, 0.39%)</title><rect x="482.6" y="387.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (441 samples, 0.15%)</title><rect x="482.6" y="371.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="485.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (687 samples, 0.24%)</title><rect x="484.4" y="371.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.4" y="382.0"></text>
</g>
<g>
<title>byte[] (687 samples, 0.24%)</title><rect x="484.4" y="355.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="487.4" y="366.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (239 samples, 0.08%)</title><rect x="487.1" y="451.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="490.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (369 samples, 0.13%)</title><rect x="488.1" y="483.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.1" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (369 samples, 0.13%)</title><rect x="488.1" y="467.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="491.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (675 samples, 0.23%)</title><rect x="489.6" y="483.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.6" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (174 samples, 0.06%)</title><rect x="489.6" y="467.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="492.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (196 samples, 0.07%)</title><rect x="490.3" y="467.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (196 samples, 0.07%)</title><rect x="490.3" y="451.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="493.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (305 samples, 0.10%)</title><rect x="491.1" y="467.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.1" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (305 samples, 0.10%)</title><rect x="491.1" y="451.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="494.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3,428 samples, 1.18%)</title><rect x="492.3" y="499.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (109 samples, 0.04%)</title><rect x="492.3" y="483.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="495.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (497 samples, 0.17%)</title><rect x="492.8" y="483.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="495.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (144 samples, 0.05%)</title><rect x="494.8" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (144 samples, 0.05%)</title><rect x="494.8" y="467.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="497.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2,678 samples, 0.92%)</title><rect x="495.4" y="483.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2,678 samples, 0.92%)</title><rect x="495.4" y="467.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Class[] (256 samples, 0.09%)</title><rect x="495.4" y="451.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="498.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (230 samples, 0.08%)</title><rect x="496.4" y="451.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="499.4" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (235 samples, 0.08%)</title><rect x="497.3" y="451.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="500.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1,178 samples, 0.40%)</title><rect x="498.3" y="451.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1,178 samples, 0.40%)</title><rect x="498.3" y="435.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.3" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1,178 samples, 0.40%)</title><rect x="498.3" y="419.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.3" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1,178 samples, 0.40%)</title><rect x="498.3" y="403.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.3" y="414.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (1,178 samples, 0.40%)</title><rect x="498.3" y="387.0" width="4.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="501.3" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (420 samples, 0.14%)</title><rect x="503.0" y="451.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (420 samples, 0.14%)</title><rect x="503.0" y="435.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (122 samples, 0.04%)</title><rect x="503.0" y="419.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (122 samples, 0.04%)</title><rect x="503.0" y="403.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="506.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (298 samples, 0.10%)</title><rect x="503.5" y="419.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (298 samples, 0.10%)</title><rect x="503.5" y="403.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="506.5" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (359 samples, 0.12%)</title><rect x="504.7" y="451.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="507.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (359 samples, 0.12%)</title><rect x="504.7" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.7" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (359 samples, 0.12%)</title><rect x="504.7" y="419.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="507.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,841 samples, 0.63%)</title><rect x="506.2" y="499.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (356 samples, 0.12%)</title><rect x="506.2" y="483.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (182 samples, 0.06%)</title><rect x="506.2" y="467.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="509.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (174 samples, 0.06%)</title><rect x="506.9" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (174 samples, 0.06%)</title><rect x="506.9" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (170 samples, 0.06%)</title><rect x="506.9" y="435.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="509.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (220 samples, 0.08%)</title><rect x="507.6" y="483.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="510.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1,265 samples, 0.43%)</title><rect x="508.5" y="483.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (237 samples, 0.08%)</title><rect x="508.5" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (237 samples, 0.08%)</title><rect x="508.5" y="451.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/172879885.get$Lambda (110 samples, 0.04%)</title><rect x="508.5" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$122 (110 samples, 0.04%)</title><rect x="508.5" y="419.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="511.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/887261302.get$Lambda (127 samples, 0.04%)</title><rect x="509.0" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$123 (127 samples, 0.04%)</title><rect x="509.0" y="419.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="512.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,028 samples, 0.35%)</title><rect x="509.5" y="467.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,028 samples, 0.35%)</title><rect x="509.5" y="451.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (575 samples, 0.20%)</title><rect x="509.5" y="435.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="512.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (453 samples, 0.16%)</title><rect x="511.8" y="435.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (453 samples, 0.16%)</title><rect x="511.8" y="419.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (453 samples, 0.16%)</title><rect x="511.8" y="403.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="514.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ModuleTopology.primaryFor (870 samples, 0.30%)</title><rect x="513.6" y="563.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (150 samples, 0.05%)</title><rect x="513.9" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (150 samples, 0.05%)</title><rect x="513.9" y="531.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="516.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.add (662 samples, 0.23%)</title><rect x="514.5" y="547.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.5" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.put (662 samples, 0.23%)</title><rect x="514.5" y="531.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (662 samples, 0.23%)</title><rect x="514.5" y="515.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (361 samples, 0.12%)</title><rect x="514.5" y="499.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.5" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (361 samples, 0.12%)</title><rect x="514.5" y="483.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="517.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (301 samples, 0.10%)</title><rect x="515.9" y="499.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.9" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (301 samples, 0.10%)</title><rect x="515.9" y="483.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="518.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getLocalResults (253 samples, 0.09%)</title><rect x="517.2" y="563.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (93 samples, 0.03%)</title><rect x="517.2" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="520.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.03%)</title><rect x="517.2" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$114/2034975849.get$Lambda (93 samples, 0.03%)</title><rect x="517.2" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.2" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$114 (93 samples, 0.03%)</title><rect x="517.2" y="499.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="520.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (160 samples, 0.05%)</title><rect x="517.5" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (160 samples, 0.05%)</title><rect x="517.5" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (88 samples, 0.03%)</title><rect x="517.5" y="515.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="520.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (72 samples, 0.02%)</title><rect x="517.9" y="515.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="520.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.requestForReplica (12,820 samples, 4.39%)</title><rect x="518.2" y="563.0" width="51.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.2" y="574.0">ru/ma..</text>
</g>
<g>
<title>java.lang.String[] (189 samples, 0.06%)</title><rect x="518.2" y="547.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="521.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.toString (2,650 samples, 0.91%)</title><rect x="519.0" y="547.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.0" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (167 samples, 0.06%)</title><rect x="519.0" y="531.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="522.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (346 samples, 0.12%)</title><rect x="519.6" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (346 samples, 0.12%)</title><rect x="519.6" y="515.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.6" y="526.0"></text>
</g>
<g>
<title>byte[] (176 samples, 0.06%)</title><rect x="519.6" y="499.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="522.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String (170 samples, 0.06%)</title><rect x="520.3" y="499.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="523.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (213 samples, 0.07%)</title><rect x="521.0" y="531.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.0" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (213 samples, 0.07%)</title><rect x="521.0" y="515.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.0" y="526.0"></text>
</g>
<g>
<title>byte[] (213 samples, 0.07%)</title><rect x="521.0" y="499.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="524.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,218 samples, 0.42%)</title><rect x="521.9" y="531.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="524.9" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,218 samples, 0.42%)</title><rect x="521.9" y="515.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.9" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,218 samples, 0.42%)</title><rect x="521.9" y="499.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,218 samples, 0.42%)</title><rect x="521.9" y="483.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.9" y="494.0"></text>
</g>
<g>
<title>byte[] (1,218 samples, 0.42%)</title><rect x="521.9" y="467.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="524.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (706 samples, 0.24%)</title><rect x="526.8" y="531.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (706 samples, 0.24%)</title><rect x="526.8" y="515.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.8" y="526.0"></text>
</g>
<g>
<title>java.lang.String (167 samples, 0.06%)</title><rect x="526.8" y="499.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="529.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (539 samples, 0.18%)</title><rect x="527.5" y="499.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.5" y="510.0"></text>
</g>
<g>
<title>byte[] (539 samples, 0.18%)</title><rect x="527.5" y="483.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="530.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,077 samples, 0.37%)</title><rect x="529.7" y="547.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2108125633.invoke (1,077 samples, 0.37%)</title><rect x="529.7" y="531.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1620157411.invoke (1,077 samples, 0.37%)</title><rect x="529.7" y="515.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,077 samples, 0.37%)</title><rect x="529.7" y="499.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (196 samples, 0.07%)</title><rect x="529.7" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String (196 samples, 0.07%)</title><rect x="529.7" y="467.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="532.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (881 samples, 0.30%)</title><rect x="530.5" y="483.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (881 samples, 0.30%)</title><rect x="530.5" y="467.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.5" y="478.0"></text>
</g>
<g>
<title>byte[] (881 samples, 0.30%)</title><rect x="530.5" y="451.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="533.5" y="462.0"></text>
</g>
<g>
<title>java/net/URI.create (3,277 samples, 1.12%)</title><rect x="534.0" y="547.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.0" y="558.0"></text>
</g>
<g>
<title>java.net.URI (559 samples, 0.19%)</title><rect x="534.0" y="531.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="537.0" y="542.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (2,718 samples, 0.93%)</title><rect x="536.3" y="531.0" width="11.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.3" y="542.0"></text>
</g>
<g>
<title>java.net.URI$Parser (247 samples, 0.08%)</title><rect x="536.3" y="515.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="539.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (2,471 samples, 0.85%)</title><rect x="537.3" y="515.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (379 samples, 0.13%)</title><rect x="537.3" y="499.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="540.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (379 samples, 0.13%)</title><rect x="537.3" y="483.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.3" y="494.0"></text>
</g>
<g>
<title>java.lang.String (178 samples, 0.06%)</title><rect x="537.3" y="467.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="540.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (201 samples, 0.07%)</title><rect x="538.0" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.0" y="478.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.07%)</title><rect x="538.0" y="451.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="541.0" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (2,092 samples, 0.72%)</title><rect x="538.8" y="499.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.8" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,292 samples, 0.44%)</title><rect x="538.8" y="483.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,292 samples, 0.44%)</title><rect x="538.8" y="467.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String (372 samples, 0.13%)</title><rect x="538.8" y="451.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="541.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (920 samples, 0.32%)</title><rect x="540.3" y="451.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.3" y="462.0"></text>
</g>
<g>
<title>byte[] (920 samples, 0.32%)</title><rect x="540.3" y="435.0" width="3.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="543.3" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (800 samples, 0.27%)</title><rect x="544.0" y="483.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (384 samples, 0.13%)</title><rect x="544.0" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (384 samples, 0.13%)</title><rect x="544.0" y="451.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (185 samples, 0.06%)</title><rect x="544.0" y="435.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="547.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (199 samples, 0.07%)</title><rect x="544.8" y="435.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.8" y="446.0"></text>
</g>
<g>
<title>byte[] (199 samples, 0.07%)</title><rect x="544.8" y="419.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="547.8" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (416 samples, 0.14%)</title><rect x="545.6" y="467.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.6" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (416 samples, 0.14%)</title><rect x="545.6" y="451.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (416 samples, 0.14%)</title><rect x="545.6" y="435.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (416 samples, 0.14%)</title><rect x="545.6" y="419.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (159 samples, 0.05%)</title><rect x="545.6" y="403.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="548.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (257 samples, 0.09%)</title><rect x="546.2" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.2" y="414.0"></text>
</g>
<g>
<title>byte[] (257 samples, 0.09%)</title><rect x="546.2" y="387.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="549.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (784 samples, 0.27%)</title><rect x="547.3" y="547.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (291 samples, 0.10%)</title><rect x="547.3" y="531.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="550.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (493 samples, 0.17%)</title><rect x="548.5" y="531.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (112 samples, 0.04%)</title><rect x="548.5" y="515.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="551.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (381 samples, 0.13%)</title><rect x="548.9" y="515.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.9" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (381 samples, 0.13%)</title><rect x="548.9" y="499.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="551.9" y="510.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (179 samples, 0.06%)</title><rect x="550.5" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (179 samples, 0.06%)</title><rect x="550.5" y="531.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (179 samples, 0.06%)</title><rect x="550.5" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="553.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (179 samples, 0.06%)</title><rect x="550.5" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (179 samples, 0.06%)</title><rect x="550.5" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.5" y="494.0"></text>
</g>
<g>
<title>byte[] (179 samples, 0.06%)</title><rect x="550.5" y="467.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="553.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (375 samples, 0.13%)</title><rect x="551.2" y="547.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (375 samples, 0.13%)</title><rect x="551.2" y="531.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="554.2" y="542.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (566 samples, 0.19%)</title><rect x="552.7" y="547.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.7" y="558.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (566 samples, 0.19%)</title><rect x="552.7" y="531.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.7" y="542.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (566 samples, 0.19%)</title><rect x="552.7" y="515.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (375 samples, 0.13%)</title><rect x="552.7" y="499.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="555.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (191 samples, 0.07%)</title><rect x="554.2" y="499.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.2" y="510.0"></text>
</g>
<g>
<title>char[] (191 samples, 0.07%)</title><rect x="554.2" y="483.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="557.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (3,096 samples, 1.06%)</title><rect x="555.0" y="547.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (268 samples, 0.09%)</title><rect x="555.0" y="531.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="558.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,828 samples, 0.97%)</title><rect x="556.1" y="531.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,708 samples, 0.93%)</title><rect x="556.1" y="515.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,708 samples, 0.93%)</title><rect x="556.1" y="499.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.1" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (128 samples, 0.04%)</title><rect x="556.1" y="483.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="559.1" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (173 samples, 0.06%)</title><rect x="556.6" y="483.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="559.6" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (344 samples, 0.12%)</title><rect x="557.3" y="483.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="560.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeSet (121 samples, 0.04%)</title><rect x="558.7" y="483.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="561.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (262 samples, 0.09%)</title><rect x="559.2" y="483.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (262 samples, 0.09%)</title><rect x="559.2" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.get$Lambda (262 samples, 0.09%)</title><rect x="559.2" y="451.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.2" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$116 (262 samples, 0.09%)</title><rect x="559.2" y="435.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="562.2" y="446.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (243 samples, 0.08%)</title><rect x="560.2" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.2" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (243 samples, 0.08%)</title><rect x="560.2" y="467.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="563.2" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,059 samples, 0.36%)</title><rect x="561.2" y="483.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/790700167.accept (1,059 samples, 0.36%)</title><rect x="561.2" y="467.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,059 samples, 0.36%)</title><rect x="561.2" y="451.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (419 samples, 0.14%)</title><rect x="561.2" y="435.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/162842768.accept (419 samples, 0.14%)</title><rect x="561.2" y="419.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (419 samples, 0.14%)</title><rect x="561.2" y="403.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (419 samples, 0.14%)</title><rect x="561.2" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.2" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (419 samples, 0.14%)</title><rect x="561.2" y="371.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (419 samples, 0.14%)</title><rect x="561.2" y="355.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (419 samples, 0.14%)</title><rect x="561.2" y="339.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.2" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (419 samples, 0.14%)</title><rect x="561.2" y="323.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.2" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (419 samples, 0.14%)</title><rect x="561.2" y="307.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="564.2" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (365 samples, 0.13%)</title><rect x="562.9" y="435.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.9" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (365 samples, 0.13%)</title><rect x="562.9" y="419.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (181 samples, 0.06%)</title><rect x="562.9" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (181 samples, 0.06%)</title><rect x="562.9" y="387.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (181 samples, 0.06%)</title><rect x="562.9" y="371.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="565.9" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (184 samples, 0.06%)</title><rect x="563.6" y="403.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.6" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (184 samples, 0.06%)</title><rect x="563.6" y="387.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="566.6" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (275 samples, 0.09%)</title><rect x="564.4" y="435.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (275 samples, 0.09%)</title><rect x="564.4" y="419.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="567.4" y="430.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (378 samples, 0.13%)</title><rect x="565.5" y="483.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.5" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (378 samples, 0.13%)</title><rect x="565.5" y="467.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="568.5" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (120 samples, 0.04%)</title><rect x="567.0" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.0" y="526.0"></text>
</g>
<g>
<title>java/util/Optional.of (120 samples, 0.04%)</title><rect x="567.0" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.0" y="510.0"></text>
</g>
<g>
<title>java.util.Optional (120 samples, 0.04%)</title><rect x="567.0" y="483.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="570.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (627 samples, 0.21%)</title><rect x="567.5" y="547.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (627 samples, 0.21%)</title><rect x="567.5" y="531.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (627 samples, 0.21%)</title><rect x="567.5" y="515.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (627 samples, 0.21%)</title><rect x="567.5" y="499.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.5" y="510.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (627 samples, 0.21%)</title><rect x="567.5" y="483.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (284 samples, 0.10%)</title><rect x="567.5" y="467.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (284 samples, 0.10%)</title><rect x="567.5" y="451.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="570.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$115/1880858300.apply (343 samples, 0.12%)</title><rect x="568.7" y="467.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (343 samples, 0.12%)</title><rect x="568.7" y="451.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.7" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (182 samples, 0.06%)</title><rect x="568.7" y="435.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="571.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (161 samples, 0.06%)</title><rect x="569.4" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (161 samples, 0.06%)</title><rect x="569.4" y="419.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="572.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (30,309 samples, 10.39%)</title><rect x="570.0" y="691.0" width="122.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.0" y="702.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (30,309 samples, 10.39%)</title><rect x="570.0" y="675.0" width="122.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.0" y="686.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (30,309 samples, 10.39%)</title><rect x="570.0" y="659.0" width="122.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.0" y="670.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (30,309 samples, 10.39%)</title><rect x="570.0" y="643.0" width="122.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.0" y="654.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (30,309 samples, 10.39%)</title><rect x="570.0" y="627.0" width="122.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.0" y="638.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (23,744 samples, 8.14%)</title><rect x="570.0" y="611.0" width="96.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.0" y="622.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (23,744 samples, 8.14%)</title><rect x="570.0" y="595.0" width="96.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.0" y="606.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (78 samples, 0.03%)</title><rect x="570.0" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (78 samples, 0.03%)</title><rect x="570.0" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (78 samples, 0.03%)</title><rect x="570.0" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$129/50164514.accept (78 samples, 0.03%)</title><rect x="570.0" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$collect$2 (78 samples, 0.03%)</title><rect x="570.0" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (78 samples, 0.03%)</title><rect x="570.0" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (78 samples, 0.03%)</title><rect x="570.0" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (78 samples, 0.03%)</title><rect x="570.0" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (78 samples, 0.03%)</title><rect x="570.0" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (78 samples, 0.03%)</title><rect x="570.0" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.0" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (78 samples, 0.03%)</title><rect x="570.0" y="419.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="573.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$114/2034975849.get (23,666 samples, 8.11%)</title><rect x="570.4" y="579.0" width="95.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.4" y="590.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$getLocalResults$8 (23,666 samples, 8.11%)</title><rect x="570.4" y="563.0" width="95.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.4" y="574.0">ru/mail/pol..</text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (186 samples, 0.06%)</title><rect x="570.4" y="547.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="573.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getTimestamp (408 samples, 0.14%)</title><rect x="571.1" y="547.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (408 samples, 0.14%)</title><rect x="571.1" y="531.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (408 samples, 0.14%)</title><rect x="571.1" y="515.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (408 samples, 0.14%)</title><rect x="571.1" y="499.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String (144 samples, 0.05%)</title><rect x="571.1" y="483.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="574.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (264 samples, 0.09%)</title><rect x="571.7" y="483.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.7" y="494.0"></text>
</g>
<g>
<title>byte[] (264 samples, 0.09%)</title><rect x="571.7" y="467.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="574.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$269/1852062420.act (22,894 samples, 7.85%)</title><rect x="572.8" y="547.0" width="92.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.8" y="558.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$defineMethod$2 (22,894 samples, 7.85%)</title><rect x="572.8" y="531.0" width="92.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.8" y="542.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.getEntity (22,894 samples, 7.85%)</title><rect x="572.8" y="515.0" width="92.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.8" y="526.0">ru/mail/pol..</text>
</g>
<g>
<title>byte[] (191 samples, 0.07%)</title><rect x="572.8" y="499.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="575.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (434 samples, 0.15%)</title><rect x="573.5" y="499.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1832649846.invoke (434 samples, 0.15%)</title><rect x="573.5" y="483.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (434 samples, 0.15%)</title><rect x="573.5" y="467.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (159 samples, 0.05%)</title><rect x="573.5" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (159 samples, 0.05%)</title><rect x="573.5" y="435.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="576.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (275 samples, 0.09%)</title><rect x="574.2" y="451.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (275 samples, 0.09%)</title><rect x="574.2" y="435.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.2" y="446.0"></text>
</g>
<g>
<title>byte[] (275 samples, 0.09%)</title><rect x="574.2" y="419.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="577.2" y="430.0"></text>
</g>
<g>
<title>one.nio.http.Response (165 samples, 0.06%)</title><rect x="575.3" y="499.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="578.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (624 samples, 0.21%)</title><rect x="576.0" y="499.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="579.0" y="510.0"></text>
</g>
<g>
<title>byte[] (259 samples, 0.09%)</title><rect x="576.0" y="483.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="579.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (210 samples, 0.07%)</title><rect x="577.0" y="483.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="580.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String (155 samples, 0.05%)</title><rect x="577.9" y="483.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="580.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (11,040 samples, 3.78%)</title><rect x="578.5" y="499.0" width="44.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.5" y="510.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,528 samples, 0.52%)</title><rect x="578.5" y="483.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,528 samples, 0.52%)</title><rect x="578.5" y="467.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,528 samples, 0.52%)</title><rect x="578.5" y="451.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,528 samples, 0.52%)</title><rect x="578.5" y="435.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,528 samples, 0.52%)</title><rect x="578.5" y="419.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (895 samples, 0.31%)</title><rect x="578.5" y="403.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (895 samples, 0.31%)</title><rect x="578.5" y="387.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (895 samples, 0.31%)</title><rect x="578.5" y="371.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (289 samples, 0.10%)</title><rect x="578.5" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (289 samples, 0.10%)</title><rect x="578.5" y="339.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.5" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (289 samples, 0.10%)</title><rect x="578.5" y="323.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (289 samples, 0.10%)</title><rect x="578.5" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (289 samples, 0.10%)</title><rect x="578.5" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (289 samples, 0.10%)</title><rect x="578.5" y="275.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (289 samples, 0.10%)</title><rect x="578.5" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (289 samples, 0.10%)</title><rect x="578.5" y="243.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="581.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (289 samples, 0.10%)</title><rect x="578.5" y="227.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (146 samples, 0.05%)</title><rect x="578.5" y="211.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (146 samples, 0.05%)</title><rect x="578.5" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.5" y="206.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (146 samples, 0.05%)</title><rect x="578.5" y="179.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="581.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (143 samples, 0.05%)</title><rect x="579.1" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (143 samples, 0.05%)</title><rect x="579.1" y="195.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (143 samples, 0.05%)</title><rect x="579.1" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (143 samples, 0.05%)</title><rect x="579.1" y="163.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="582.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$332/1010896139.apply (606 samples, 0.21%)</title><rect x="579.6" y="355.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (606 samples, 0.21%)</title><rect x="579.6" y="339.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (606 samples, 0.21%)</title><rect x="579.6" y="323.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.6" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (606 samples, 0.21%)</title><rect x="579.6" y="307.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="582.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$351/911484605.apply (633 samples, 0.22%)</title><rect x="582.1" y="403.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (633 samples, 0.22%)</title><rect x="582.1" y="387.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.1" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (633 samples, 0.22%)</title><rect x="582.1" y="371.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.1" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (633 samples, 0.22%)</title><rect x="582.1" y="355.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="585.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (308 samples, 0.11%)</title><rect x="584.7" y="483.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (308 samples, 0.11%)</title><rect x="584.7" y="467.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="587.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$363/504005016.apply (308 samples, 0.11%)</title><rect x="584.7" y="451.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (308 samples, 0.11%)</title><rect x="584.7" y="435.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (308 samples, 0.11%)</title><rect x="584.7" y="419.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (308 samples, 0.11%)</title><rect x="584.7" y="403.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="587.7" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (308 samples, 0.11%)</title><rect x="584.7" y="387.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="587.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (292 samples, 0.10%)</title><rect x="585.9" y="483.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (292 samples, 0.10%)</title><rect x="585.9" y="467.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (292 samples, 0.10%)</title><rect x="585.9" y="451.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.9" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (292 samples, 0.10%)</title><rect x="585.9" y="435.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="588.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (317 samples, 0.11%)</title><rect x="587.1" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (317 samples, 0.11%)</title><rect x="587.1" y="467.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (317 samples, 0.11%)</title><rect x="587.1" y="451.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.1" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (317 samples, 0.11%)</title><rect x="587.1" y="435.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="590.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (8,595 samples, 2.95%)</title><rect x="588.4" y="483.0" width="34.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.4" y="494.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (204 samples, 0.07%)</title><rect x="588.4" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.4" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (204 samples, 0.07%)</title><rect x="588.4" y="451.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="591.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (799 samples, 0.27%)</title><rect x="589.2" y="467.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.2" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (120 samples, 0.04%)</title><rect x="589.2" y="451.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="592.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (679 samples, 0.23%)</title><rect x="589.7" y="451.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.7" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (164 samples, 0.06%)</title><rect x="589.7" y="435.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="592.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (147 samples, 0.05%)</title><rect x="590.3" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.3" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (147 samples, 0.05%)</title><rect x="590.3" y="419.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="593.3" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (193 samples, 0.07%)</title><rect x="590.9" y="435.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="593.9" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (175 samples, 0.06%)</title><rect x="591.7" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (175 samples, 0.06%)</title><rect x="591.7" y="419.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="594.7" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (106 samples, 0.04%)</title><rect x="592.4" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.04%)</title><rect x="592.4" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.04%)</title><rect x="592.4" y="435.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (106 samples, 0.04%)</title><rect x="592.4" y="419.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.4" y="430.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (106 samples, 0.04%)</title><rect x="592.4" y="403.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="595.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (255 samples, 0.09%)</title><rect x="592.9" y="467.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.9" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (97 samples, 0.03%)</title><rect x="592.9" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (97 samples, 0.03%)</title><rect x="592.9" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (97 samples, 0.03%)</title><rect x="592.9" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (97 samples, 0.03%)</title><rect x="592.9" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.9" y="414.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (97 samples, 0.03%)</title><rect x="592.9" y="387.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="595.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (158 samples, 0.05%)</title><rect x="593.2" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (158 samples, 0.05%)</title><rect x="593.2" y="435.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (158 samples, 0.05%)</title><rect x="593.2" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$307/1536996145.get$Lambda (158 samples, 0.05%)</title><rect x="593.2" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.2" y="414.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$307 (158 samples, 0.05%)</title><rect x="593.2" y="387.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="596.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,097 samples, 0.38%)</title><rect x="593.9" y="467.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.9" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (167 samples, 0.06%)</title><rect x="593.9" y="451.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="596.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (930 samples, 0.32%)</title><rect x="594.6" y="451.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (930 samples, 0.32%)</title><rect x="594.6" y="435.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (930 samples, 0.32%)</title><rect x="594.6" y="419.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (930 samples, 0.32%)</title><rect x="594.6" y="403.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (300 samples, 0.10%)</title><rect x="594.6" y="387.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (300 samples, 0.10%)</title><rect x="594.6" y="371.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.6" y="382.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (300 samples, 0.10%)</title><rect x="594.6" y="355.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (300 samples, 0.10%)</title><rect x="594.6" y="339.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (300 samples, 0.10%)</title><rect x="594.6" y="323.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (300 samples, 0.10%)</title><rect x="594.6" y="307.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (300 samples, 0.10%)</title><rect x="594.6" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (300 samples, 0.10%)</title><rect x="594.6" y="275.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (300 samples, 0.10%)</title><rect x="594.6" y="259.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (144 samples, 0.05%)</title><rect x="594.6" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (144 samples, 0.05%)</title><rect x="594.6" y="227.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.6" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (144 samples, 0.05%)</title><rect x="594.6" y="211.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="597.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (156 samples, 0.05%)</title><rect x="595.2" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (156 samples, 0.05%)</title><rect x="595.2" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (156 samples, 0.05%)</title><rect x="595.2" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.2" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (156 samples, 0.05%)</title><rect x="595.2" y="195.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="598.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$332/1010896139.apply (630 samples, 0.22%)</title><rect x="595.8" y="387.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (630 samples, 0.22%)</title><rect x="595.8" y="371.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (630 samples, 0.22%)</title><rect x="595.8" y="355.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (630 samples, 0.22%)</title><rect x="595.8" y="339.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="598.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.cellIterator (6,119 samples, 2.10%)</title><rect x="598.4" y="467.0" width="24.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.4" y="478.0">r..</text>
</g>
<g>
<title>java.util.ArrayList (154 samples, 0.05%)</title><rect x="598.4" y="451.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="601.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (208 samples, 0.07%)</title><rect x="599.0" y="451.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (208 samples, 0.07%)</title><rect x="599.0" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (208 samples, 0.07%)</title><rect x="599.0" y="419.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="602.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (152 samples, 0.05%)</title><rect x="599.8" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (152 samples, 0.05%)</title><rect x="599.8" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$343/1452446314.get$Lambda (152 samples, 0.05%)</title><rect x="599.8" y="419.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.8" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.MyDAO$$Lambda$343 (152 samples, 0.05%)</title><rect x="599.8" y="403.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="602.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (164 samples, 0.06%)</title><rect x="600.5" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.5" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (164 samples, 0.06%)</title><rect x="600.5" y="435.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="603.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (5,441 samples, 1.87%)</title><rect x="601.1" y="451.0" width="22.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.1" y="462.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,169 samples, 0.74%)</title><rect x="601.1" y="435.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.1" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (82 samples, 0.03%)</title><rect x="601.1" y="419.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="604.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,087 samples, 0.72%)</title><rect x="601.5" y="419.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.5" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (160 samples, 0.05%)</title><rect x="601.5" y="403.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="604.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (160 samples, 0.05%)</title><rect x="602.1" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.1" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (160 samples, 0.05%)</title><rect x="602.1" y="387.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="605.1" y="398.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (185 samples, 0.06%)</title><rect x="602.8" y="403.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="605.8" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (149 samples, 0.05%)</title><rect x="603.5" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.5" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (149 samples, 0.05%)</title><rect x="603.5" y="387.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="606.5" y="398.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,433 samples, 0.49%)</title><rect x="604.1" y="403.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,433 samples, 0.49%)</title><rect x="604.1" y="387.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,433 samples, 0.49%)</title><rect x="604.1" y="371.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (307 samples, 0.11%)</title><rect x="604.1" y="355.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (307 samples, 0.11%)</title><rect x="604.1" y="339.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (307 samples, 0.11%)</title><rect x="604.1" y="323.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (307 samples, 0.11%)</title><rect x="604.1" y="307.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (143 samples, 0.05%)</title><rect x="604.1" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (143 samples, 0.05%)</title><rect x="604.1" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.1" y="286.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (143 samples, 0.05%)</title><rect x="604.1" y="259.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="607.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (164 samples, 0.06%)</title><rect x="604.7" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (164 samples, 0.06%)</title><rect x="604.7" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (164 samples, 0.06%)</title><rect x="604.7" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (164 samples, 0.06%)</title><rect x="604.7" y="243.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="607.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1,126 samples, 0.39%)</title><rect x="605.3" y="355.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (255 samples, 0.09%)</title><rect x="605.3" y="339.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="608.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (173 samples, 0.06%)</title><rect x="606.4" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (173 samples, 0.06%)</title><rect x="606.4" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$314/1939218927.get$Lambda (90 samples, 0.03%)</title><rect x="606.4" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.4" y="318.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$314 (90 samples, 0.03%)</title><rect x="606.4" y="291.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="609.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.get$Lambda (83 samples, 0.03%)</title><rect x="606.7" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$317 (83 samples, 0.03%)</title><rect x="606.7" y="291.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="609.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (149 samples, 0.05%)</title><rect x="607.1" y="339.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (149 samples, 0.05%)</title><rect x="607.1" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="610.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (149 samples, 0.05%)</title><rect x="607.1" y="307.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="610.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (549 samples, 0.19%)</title><rect x="607.7" y="339.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (549 samples, 0.19%)</title><rect x="607.7" y="323.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="610.7" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (157 samples, 0.05%)</title><rect x="609.9" y="435.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="612.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (148 samples, 0.05%)</title><rect x="610.5" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (148 samples, 0.05%)</title><rect x="610.5" y="419.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="613.5" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (91 samples, 0.03%)</title><rect x="611.1" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (91 samples, 0.03%)</title><rect x="611.1" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.03%)</title><rect x="611.1" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (91 samples, 0.03%)</title><rect x="611.1" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.1" y="398.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (91 samples, 0.03%)</title><rect x="611.1" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="614.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (245 samples, 0.08%)</title><rect x="611.5" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="614.5" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (86 samples, 0.03%)</title><rect x="611.5" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.03%)</title><rect x="611.5" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.03%)</title><rect x="611.5" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (86 samples, 0.03%)</title><rect x="611.5" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.5" y="382.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (86 samples, 0.03%)</title><rect x="611.5" y="355.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="614.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (159 samples, 0.05%)</title><rect x="611.8" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (159 samples, 0.05%)</title><rect x="611.8" y="403.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (159 samples, 0.05%)</title><rect x="611.8" y="387.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$307/1536996145.get$Lambda (159 samples, 0.05%)</title><rect x="611.8" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.8" y="382.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$307 (159 samples, 0.05%)</title><rect x="611.8" y="355.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="614.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (201 samples, 0.07%)</title><rect x="612.5" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (201 samples, 0.07%)</title><rect x="612.5" y="419.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="615.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (460 samples, 0.16%)</title><rect x="613.3" y="435.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="616.3" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (169 samples, 0.06%)</title><rect x="613.3" y="419.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="616.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (291 samples, 0.10%)</title><rect x="614.0" y="419.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (291 samples, 0.10%)</title><rect x="614.0" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (291 samples, 0.10%)</title><rect x="614.0" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.0" y="398.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (291 samples, 0.10%)</title><rect x="614.0" y="371.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (291 samples, 0.10%)</title><rect x="614.0" y="355.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (291 samples, 0.10%)</title><rect x="614.0" y="339.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (291 samples, 0.10%)</title><rect x="614.0" y="323.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (291 samples, 0.10%)</title><rect x="614.0" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (291 samples, 0.10%)</title><rect x="614.0" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (291 samples, 0.10%)</title><rect x="614.0" y="275.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (143 samples, 0.05%)</title><rect x="614.0" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (143 samples, 0.05%)</title><rect x="614.0" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.0" y="254.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (143 samples, 0.05%)</title><rect x="614.0" y="227.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="617.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (148 samples, 0.05%)</title><rect x="614.6" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (148 samples, 0.05%)</title><rect x="614.6" y="243.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (148 samples, 0.05%)</title><rect x="614.6" y="227.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.6" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (148 samples, 0.05%)</title><rect x="614.6" y="211.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="617.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (1,961 samples, 0.67%)</title><rect x="615.2" y="435.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.2" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (546 samples, 0.19%)</title><rect x="615.2" y="419.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (215 samples, 0.07%)</title><rect x="615.2" y="403.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (215 samples, 0.07%)</title><rect x="615.2" y="387.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="618.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (331 samples, 0.11%)</title><rect x="616.1" y="403.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.1" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (331 samples, 0.11%)</title><rect x="616.1" y="387.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="619.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (95 samples, 0.03%)</title><rect x="617.4" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (95 samples, 0.03%)</title><rect x="617.4" y="403.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="620.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (310 samples, 0.11%)</title><rect x="617.8" y="419.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (310 samples, 0.11%)</title><rect x="617.8" y="403.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (310 samples, 0.11%)</title><rect x="617.8" y="387.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (310 samples, 0.11%)</title><rect x="617.8" y="371.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="620.8" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (600 samples, 0.21%)</title><rect x="619.0" y="419.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.0" y="430.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (166 samples, 0.06%)</title><rect x="619.0" y="403.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.0" y="414.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (166 samples, 0.06%)</title><rect x="619.0" y="387.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="622.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (434 samples, 0.15%)</title><rect x="619.7" y="403.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="622.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.04%)</title><rect x="619.7" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.04%)</title><rect x="619.7" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$286/582017711.get$Lambda (105 samples, 0.04%)</title><rect x="619.7" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$286 (105 samples, 0.04%)</title><rect x="619.7" y="339.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="622.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (329 samples, 0.11%)</title><rect x="620.1" y="387.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.1" y="398.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (329 samples, 0.11%)</title><rect x="620.1" y="371.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="623.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (410 samples, 0.14%)</title><rect x="621.5" y="419.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.5" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (410 samples, 0.14%)</title><rect x="621.5" y="403.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="624.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getCell (10,440 samples, 3.58%)</title><rect x="623.1" y="499.0" width="42.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.1" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,489 samples, 0.51%)</title><rect x="623.1" y="483.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (904 samples, 0.31%)</title><rect x="623.1" y="467.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (904 samples, 0.31%)</title><rect x="623.1" y="451.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (904 samples, 0.31%)</title><rect x="623.1" y="435.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (317 samples, 0.11%)</title><rect x="623.1" y="419.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (317 samples, 0.11%)</title><rect x="623.1" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.1" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (317 samples, 0.11%)</title><rect x="623.1" y="387.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (317 samples, 0.11%)</title><rect x="623.1" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (317 samples, 0.11%)</title><rect x="623.1" y="355.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (317 samples, 0.11%)</title><rect x="623.1" y="339.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (317 samples, 0.11%)</title><rect x="623.1" y="323.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (317 samples, 0.11%)</title><rect x="623.1" y="307.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (317 samples, 0.11%)</title><rect x="623.1" y="291.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (154 samples, 0.05%)</title><rect x="623.1" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (154 samples, 0.05%)</title><rect x="623.1" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.1" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (154 samples, 0.05%)</title><rect x="623.1" y="243.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="626.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (163 samples, 0.06%)</title><rect x="623.8" y="275.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (163 samples, 0.06%)</title><rect x="623.8" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (163 samples, 0.06%)</title><rect x="623.8" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.8" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (163 samples, 0.06%)</title><rect x="623.8" y="227.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="626.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$332/1010896139.apply (587 samples, 0.20%)</title><rect x="624.4" y="419.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (587 samples, 0.20%)</title><rect x="624.4" y="403.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (587 samples, 0.20%)</title><rect x="624.4" y="387.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (587 samples, 0.20%)</title><rect x="624.4" y="371.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="627.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$340/1089963118.apply (585 samples, 0.20%)</title><rect x="626.8" y="467.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (585 samples, 0.20%)</title><rect x="626.8" y="451.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (585 samples, 0.20%)</title><rect x="626.8" y="435.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (585 samples, 0.20%)</title><rect x="626.8" y="419.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="629.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (315 samples, 0.11%)</title><rect x="629.2" y="483.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (315 samples, 0.11%)</title><rect x="629.2" y="467.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.2" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (315 samples, 0.11%)</title><rect x="629.2" y="451.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="632.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.getIterator (8,636 samples, 2.96%)</title><rect x="630.4" y="483.0" width="35.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.4" y="494.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (761 samples, 0.26%)</title><rect x="630.4" y="467.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.4" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (104 samples, 0.04%)</title><rect x="630.4" y="451.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="633.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (657 samples, 0.23%)</title><rect x="630.8" y="451.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.8" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (135 samples, 0.05%)</title><rect x="630.8" y="435.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="633.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (165 samples, 0.06%)</title><rect x="631.4" y="435.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.4" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (165 samples, 0.06%)</title><rect x="631.4" y="419.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="634.4" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (201 samples, 0.07%)</title><rect x="632.1" y="435.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="635.1" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (156 samples, 0.05%)</title><rect x="632.9" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (156 samples, 0.05%)</title><rect x="632.9" y="419.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="635.9" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (533 samples, 0.18%)</title><rect x="633.5" y="467.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="636.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (340 samples, 0.12%)</title><rect x="635.7" y="467.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (340 samples, 0.12%)</title><rect x="635.7" y="451.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (340 samples, 0.12%)</title><rect x="635.7" y="435.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (340 samples, 0.12%)</title><rect x="635.7" y="419.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (340 samples, 0.12%)</title><rect x="635.7" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (340 samples, 0.12%)</title><rect x="635.7" y="387.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="638.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (118 samples, 0.04%)</title><rect x="637.0" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.04%)</title><rect x="637.0" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.04%)</title><rect x="637.0" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (118 samples, 0.04%)</title><rect x="637.0" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.0" y="430.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (118 samples, 0.04%)</title><rect x="637.0" y="403.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="640.0" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (235 samples, 0.08%)</title><rect x="637.5" y="467.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.5" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (84 samples, 0.03%)</title><rect x="637.5" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.03%)</title><rect x="637.5" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.03%)</title><rect x="637.5" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.5" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (84 samples, 0.03%)</title><rect x="637.5" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.5" y="414.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (84 samples, 0.03%)</title><rect x="637.5" y="387.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="640.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (151 samples, 0.05%)</title><rect x="637.9" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (151 samples, 0.05%)</title><rect x="637.9" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (151 samples, 0.05%)</title><rect x="637.9" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$307/1536996145.get$Lambda (151 samples, 0.05%)</title><rect x="637.9" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.9" y="414.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$307 (151 samples, 0.05%)</title><rect x="637.9" y="387.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="640.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (211 samples, 0.07%)</title><rect x="638.5" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="641.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (211 samples, 0.07%)</title><rect x="638.5" y="451.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="641.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,068 samples, 0.37%)</title><rect x="639.3" y="467.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.3" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (133 samples, 0.05%)</title><rect x="639.3" y="451.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="642.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (935 samples, 0.32%)</title><rect x="639.9" y="451.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (935 samples, 0.32%)</title><rect x="639.9" y="435.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (935 samples, 0.32%)</title><rect x="639.9" y="419.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (935 samples, 0.32%)</title><rect x="639.9" y="403.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (304 samples, 0.10%)</title><rect x="639.9" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (304 samples, 0.10%)</title><rect x="639.9" y="371.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.9" y="382.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (304 samples, 0.10%)</title><rect x="639.9" y="355.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (304 samples, 0.10%)</title><rect x="639.9" y="339.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (304 samples, 0.10%)</title><rect x="639.9" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (304 samples, 0.10%)</title><rect x="639.9" y="307.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (304 samples, 0.10%)</title><rect x="639.9" y="291.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (304 samples, 0.10%)</title><rect x="639.9" y="275.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (304 samples, 0.10%)</title><rect x="639.9" y="259.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (159 samples, 0.05%)</title><rect x="639.9" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (159 samples, 0.05%)</title><rect x="639.9" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.9" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (159 samples, 0.05%)</title><rect x="639.9" y="211.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="642.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (145 samples, 0.05%)</title><rect x="640.5" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (145 samples, 0.05%)</title><rect x="640.5" y="227.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (145 samples, 0.05%)</title><rect x="640.5" y="211.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.5" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (145 samples, 0.05%)</title><rect x="640.5" y="195.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="643.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool$$Lambda$332/1010896139.apply (631 samples, 0.22%)</title><rect x="641.1" y="387.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (631 samples, 0.22%)</title><rect x="641.1" y="371.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (631 samples, 0.22%)</title><rect x="641.1" y="355.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (631 samples, 0.22%)</title><rect x="641.1" y="339.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="644.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/TablesPool.iterator (5,370 samples, 1.84%)</title><rect x="643.6" y="467.0" width="21.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.6" y="478.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,158 samples, 0.74%)</title><rect x="643.6" y="451.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.6" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (83 samples, 0.03%)</title><rect x="643.6" y="435.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="646.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,075 samples, 0.71%)</title><rect x="644.0" y="435.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.0" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (141 samples, 0.05%)</title><rect x="644.0" y="419.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="647.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (151 samples, 0.05%)</title><rect x="644.5" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.5" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (151 samples, 0.05%)</title><rect x="644.5" y="403.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="647.5" y="414.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (203 samples, 0.07%)</title><rect x="645.2" y="419.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="648.2" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (168 samples, 0.06%)</title><rect x="646.0" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.0" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (168 samples, 0.06%)</title><rect x="646.0" y="403.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="649.0" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,412 samples, 0.48%)</title><rect x="646.7" y="419.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,412 samples, 0.48%)</title><rect x="646.7" y="403.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,412 samples, 0.48%)</title><rect x="646.7" y="387.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (317 samples, 0.11%)</title><rect x="646.7" y="371.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (317 samples, 0.11%)</title><rect x="646.7" y="355.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (317 samples, 0.11%)</title><rect x="646.7" y="339.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (317 samples, 0.11%)</title><rect x="646.7" y="323.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (164 samples, 0.06%)</title><rect x="646.7" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (164 samples, 0.06%)</title><rect x="646.7" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.7" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (164 samples, 0.06%)</title><rect x="646.7" y="275.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="649.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (153 samples, 0.05%)</title><rect x="647.3" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (153 samples, 0.05%)</title><rect x="647.3" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (153 samples, 0.05%)</title><rect x="647.3" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.3" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (153 samples, 0.05%)</title><rect x="647.3" y="259.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="650.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1,095 samples, 0.38%)</title><rect x="647.9" y="371.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.9" y="382.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (247 samples, 0.08%)</title><rect x="647.9" y="355.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="650.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (180 samples, 0.06%)</title><rect x="648.9" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (180 samples, 0.06%)</title><rect x="648.9" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$314/1939218927.get$Lambda (104 samples, 0.04%)</title><rect x="648.9" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.9" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$314 (104 samples, 0.04%)</title><rect x="648.9" y="307.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="651.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.get$Lambda (76 samples, 0.03%)</title><rect x="649.4" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$317 (76 samples, 0.03%)</title><rect x="649.4" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="652.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (151 samples, 0.05%)</title><rect x="649.7" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (151 samples, 0.05%)</title><rect x="649.7" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (151 samples, 0.05%)</title><rect x="649.7" y="323.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="652.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (517 samples, 0.18%)</title><rect x="650.3" y="355.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (517 samples, 0.18%)</title><rect x="650.3" y="339.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="653.3" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (131 samples, 0.04%)</title><rect x="652.4" y="451.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="655.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (140 samples, 0.05%)</title><rect x="652.9" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (140 samples, 0.05%)</title><rect x="652.9" y="435.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="655.9" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (113 samples, 0.04%)</title><rect x="653.5" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (113 samples, 0.04%)</title><rect x="653.5" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 0.04%)</title><rect x="653.5" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.5" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (113 samples, 0.04%)</title><rect x="653.5" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.5" y="414.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (113 samples, 0.04%)</title><rect x="653.5" y="387.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="656.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (278 samples, 0.10%)</title><rect x="653.9" y="451.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (121 samples, 0.04%)</title><rect x="653.9" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (121 samples, 0.04%)</title><rect x="653.9" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (121 samples, 0.04%)</title><rect x="653.9" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$295/597470576.get$Lambda (121 samples, 0.04%)</title><rect x="653.9" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.9" y="398.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$295 (121 samples, 0.04%)</title><rect x="653.9" y="371.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="656.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (157 samples, 0.05%)</title><rect x="654.4" y="435.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (157 samples, 0.05%)</title><rect x="654.4" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (157 samples, 0.05%)</title><rect x="654.4" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$307/1536996145.get$Lambda (157 samples, 0.05%)</title><rect x="654.4" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.4" y="398.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$307 (157 samples, 0.05%)</title><rect x="654.4" y="371.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="657.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (200 samples, 0.07%)</title><rect x="655.0" y="451.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (200 samples, 0.07%)</title><rect x="655.0" y="435.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="658.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (461 samples, 0.16%)</title><rect x="655.9" y="451.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.9" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (155 samples, 0.05%)</title><rect x="655.9" y="435.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="658.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (306 samples, 0.10%)</title><rect x="656.5" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (306 samples, 0.10%)</title><rect x="656.5" y="419.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (306 samples, 0.10%)</title><rect x="656.5" y="403.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.5" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (306 samples, 0.10%)</title><rect x="656.5" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (306 samples, 0.10%)</title><rect x="656.5" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.5" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (306 samples, 0.10%)</title><rect x="656.5" y="355.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (306 samples, 0.10%)</title><rect x="656.5" y="339.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$317/915714553.getAsBoolean (306 samples, 0.10%)</title><rect x="656.5" y="323.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (306 samples, 0.10%)</title><rect x="656.5" y="307.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (306 samples, 0.10%)</title><rect x="656.5" y="291.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (178 samples, 0.06%)</title><rect x="656.5" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (178 samples, 0.06%)</title><rect x="656.5" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.5" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (178 samples, 0.06%)</title><rect x="656.5" y="243.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="659.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (128 samples, 0.04%)</title><rect x="657.3" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable$$Lambda$275/1946664737.apply (128 samples, 0.04%)</title><rect x="657.3" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.lambda$iterator$0 (128 samples, 0.04%)</title><rect x="657.3" y="243.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.3" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.kate.moreva.Cell (128 samples, 0.04%)</title><rect x="657.3" y="227.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="660.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (1,876 samples, 0.64%)</title><rect x="657.8" y="451.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.8" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (522 samples, 0.18%)</title><rect x="657.8" y="435.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (185 samples, 0.06%)</title><rect x="657.8" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (185 samples, 0.06%)</title><rect x="657.8" y="403.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="660.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (337 samples, 0.12%)</title><rect x="658.5" y="419.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.5" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (337 samples, 0.12%)</title><rect x="658.5" y="403.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="661.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (116 samples, 0.04%)</title><rect x="659.9" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (116 samples, 0.04%)</title><rect x="659.9" y="419.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="662.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (295 samples, 0.10%)</title><rect x="660.4" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (295 samples, 0.10%)</title><rect x="660.4" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (295 samples, 0.10%)</title><rect x="660.4" y="403.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (295 samples, 0.10%)</title><rect x="660.4" y="387.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="663.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (525 samples, 0.18%)</title><rect x="661.5" y="435.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.5" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (150 samples, 0.05%)</title><rect x="661.5" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.5" y="430.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (150 samples, 0.05%)</title><rect x="661.5" y="403.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="664.5" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (375 samples, 0.13%)</title><rect x="662.2" y="419.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (97 samples, 0.03%)</title><rect x="662.2" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (97 samples, 0.03%)</title><rect x="662.2" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$286/582017711.get$Lambda (97 samples, 0.03%)</title><rect x="662.2" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.2" y="382.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$286 (97 samples, 0.03%)</title><rect x="662.2" y="355.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="665.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (278 samples, 0.10%)</title><rect x="662.5" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.5" y="414.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (278 samples, 0.10%)</title><rect x="662.5" y="387.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="665.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (418 samples, 0.14%)</title><rect x="663.7" y="435.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.7" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (418 samples, 0.14%)</title><rect x="663.7" y="419.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="666.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.&lt;init&gt; (178 samples, 0.06%)</title><rect x="665.4" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.4" y="558.0"></text>
</g>
<g>
<title>byte[] (178 samples, 0.06%)</title><rect x="665.4" y="531.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="668.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (6,565 samples, 2.25%)</title><rect x="666.1" y="611.0" width="26.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.1" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6,565 samples, 2.25%)</title><rect x="666.1" y="595.0" width="26.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.1" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4,412 samples, 1.51%)</title><rect x="666.1" y="579.0" width="17.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,412 samples, 1.51%)</title><rect x="666.1" y="563.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,412 samples, 1.51%)</title><rect x="666.1" y="547.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$128/649285409.apply (4,412 samples, 1.51%)</title><rect x="666.1" y="531.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$replication$7 (4,412 samples, 1.51%)</title><rect x="666.1" y="515.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3,438 samples, 1.18%)</title><rect x="666.1" y="499.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.1" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,088 samples, 0.37%)</title><rect x="666.1" y="483.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.1" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (378 samples, 0.13%)</title><rect x="666.1" y="467.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.1" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (378 samples, 0.13%)</title><rect x="666.1" y="451.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="669.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (710 samples, 0.24%)</title><rect x="667.6" y="467.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.6" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (710 samples, 0.24%)</title><rect x="667.6" y="451.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="670.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1,534 samples, 0.53%)</title><rect x="670.5" y="483.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,534 samples, 0.53%)</title><rect x="670.5" y="467.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1,534 samples, 0.53%)</title><rect x="670.5" y="451.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (909 samples, 0.31%)</title><rect x="670.5" y="435.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (603 samples, 0.21%)</title><rect x="670.5" y="419.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (603 samples, 0.21%)</title><rect x="670.5" y="403.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.5" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (603 samples, 0.21%)</title><rect x="670.5" y="387.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.5" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (603 samples, 0.21%)</title><rect x="670.5" y="371.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="673.5" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (603 samples, 0.21%)</title><rect x="670.5" y="355.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.5" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$241/1632645541.applyAsLong (310 samples, 0.11%)</title><rect x="670.5" y="339.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (310 samples, 0.11%)</title><rect x="670.5" y="323.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.5" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (310 samples, 0.11%)</title><rect x="670.5" y="307.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Long (310 samples, 0.11%)</title><rect x="670.5" y="291.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="673.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (293 samples, 0.10%)</title><rect x="671.7" y="339.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (293 samples, 0.10%)</title><rect x="671.7" y="323.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.7" y="334.0"></text>
</g>
<g>
<title>java.lang.Long (293 samples, 0.10%)</title><rect x="671.7" y="307.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="674.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (306 samples, 0.10%)</title><rect x="672.9" y="419.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (306 samples, 0.10%)</title><rect x="672.9" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.9" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (306 samples, 0.10%)</title><rect x="672.9" y="387.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="675.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$243/2113026439.get (316 samples, 0.11%)</title><rect x="674.2" y="435.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.2" y="446.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (316 samples, 0.11%)</title><rect x="674.2" y="419.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="677.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (309 samples, 0.11%)</title><rect x="675.4" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (309 samples, 0.11%)</title><rect x="675.4" y="419.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.4" y="430.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (309 samples, 0.11%)</title><rect x="675.4" y="403.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.4" y="414.0"></text>
</g>
<g>
<title>java.util.OptionalLong (309 samples, 0.11%)</title><rect x="675.4" y="387.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="678.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (816 samples, 0.28%)</title><rect x="676.7" y="483.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.7" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (816 samples, 0.28%)</title><rect x="676.7" y="467.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="679.7" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (611 samples, 0.21%)</title><rect x="680.0" y="499.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="683.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.&lt;init&gt; (363 samples, 0.12%)</title><rect x="682.5" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.5" y="510.0"></text>
</g>
<g>
<title>byte[] (363 samples, 0.12%)</title><rect x="682.5" y="483.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="685.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,153 samples, 0.74%)</title><rect x="683.9" y="579.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper$$Lambda$135/773375883.accept (2,153 samples, 0.74%)</title><rect x="683.9" y="563.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.lambda$merge$0 (2,153 samples, 0.74%)</title><rect x="683.9" y="547.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,801 samples, 0.62%)</title><rect x="683.9" y="531.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,801 samples, 0.62%)</title><rect x="683.9" y="515.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (1,801 samples, 0.62%)</title><rect x="683.9" y="499.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$138/820274732.accept (1,801 samples, 0.62%)</title><rect x="683.9" y="483.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.lambda$executeMethod$5 (1,801 samples, 0.62%)</title><rect x="683.9" y="467.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.9" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (178 samples, 0.06%)</title><rect x="683.9" y="451.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="686.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (624 samples, 0.21%)</title><rect x="684.6" y="451.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.6" y="462.0"></text>
</g>
<g>
<title>byte[] (250 samples, 0.09%)</title><rect x="684.6" y="435.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="687.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (202 samples, 0.07%)</title><rect x="685.7" y="435.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="688.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (172 samples, 0.06%)</title><rect x="686.5" y="435.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="689.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MyRequestHelper.sendLoggedResponse (817 samples, 0.28%)</title><rect x="687.2" y="451.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (817 samples, 0.28%)</title><rect x="687.2" y="435.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (817 samples, 0.28%)</title><rect x="687.2" y="419.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (560 samples, 0.19%)</title><rect x="687.2" y="403.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (560 samples, 0.19%)</title><rect x="687.2" y="387.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.2" y="398.0"></text>
</g>
<g>
<title>byte[] (560 samples, 0.19%)</title><rect x="687.2" y="371.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="690.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (257 samples, 0.09%)</title><rect x="689.4" y="403.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.4" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (257 samples, 0.09%)</title><rect x="689.4" y="387.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="692.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.getValue (182 samples, 0.06%)</title><rect x="690.5" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.5" y="462.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.06%)</title><rect x="690.5" y="435.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="693.5" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.ResponseValue (238 samples, 0.08%)</title><rect x="691.2" y="531.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="694.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/ResponseValue.&lt;init&gt; (114 samples, 0.04%)</title><rect x="692.2" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.2" y="542.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.04%)</title><rect x="692.2" y="515.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="695.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (4,644 samples, 1.59%)</title><rect x="692.6" y="691.0" width="18.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (135 samples, 0.05%)</title><rect x="692.6" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (135 samples, 0.05%)</title><rect x="692.6" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$208/82615362.get$Lambda (80 samples, 0.03%)</title><rect x="692.6" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$208 (80 samples, 0.03%)</title><rect x="692.6" y="627.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="695.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1610702581.linkToTargetMethod (90 samples, 0.03%)</title><rect x="693.2" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.03%)</title><rect x="693.2" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$209/399872247.get$Lambda (90 samples, 0.03%)</title><rect x="693.2" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$209 (90 samples, 0.03%)</title><rect x="693.2" y="627.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="696.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,180 samples, 0.40%)</title><rect x="693.5" y="675.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$210/1173738397.accept (1,015 samples, 0.35%)</title><rect x="693.5" y="659.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,015 samples, 0.35%)</title><rect x="693.5" y="643.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,015 samples, 0.35%)</title><rect x="693.5" y="627.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,015 samples, 0.35%)</title><rect x="693.5" y="611.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,015 samples, 0.35%)</title><rect x="693.5" y="595.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,015 samples, 0.35%)</title><rect x="693.5" y="579.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,015 samples, 0.35%)</title><rect x="693.5" y="563.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,015 samples, 0.35%)</title><rect x="693.5" y="547.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,015 samples, 0.35%)</title><rect x="693.5" y="531.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="696.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,015 samples, 0.35%)</title><rect x="693.5" y="515.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/2066195330.run (1,015 samples, 0.35%)</title><rect x="693.5" y="499.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,015 samples, 0.35%)</title><rect x="693.5" y="483.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (196 samples, 0.07%)</title><rect x="693.5" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (196 samples, 0.07%)</title><rect x="693.5" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (196 samples, 0.07%)</title><rect x="693.5" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (89 samples, 0.03%)</title><rect x="693.5" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (89 samples, 0.03%)</title><rect x="693.5" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (89 samples, 0.03%)</title><rect x="693.5" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (89 samples, 0.03%)</title><rect x="693.5" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (89 samples, 0.03%)</title><rect x="693.5" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="696.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (107 samples, 0.04%)</title><rect x="693.9" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (107 samples, 0.04%)</title><rect x="693.9" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (107 samples, 0.04%)</title><rect x="693.9" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (107 samples, 0.04%)</title><rect x="693.9" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (107 samples, 0.04%)</title><rect x="693.9" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (106 samples, 0.04%)</title><rect x="693.9" y="339.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="696.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (71 samples, 0.02%)</title><rect x="694.3" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (71 samples, 0.02%)</title><rect x="694.3" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.02%)</title><rect x="694.3" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$216/643139202.get$Lambda (71 samples, 0.02%)</title><rect x="694.3" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$216 (71 samples, 0.02%)</title><rect x="694.3" y="403.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="697.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (747 samples, 0.26%)</title><rect x="694.6" y="467.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (332 samples, 0.11%)</title><rect x="694.6" y="451.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (225 samples, 0.08%)</title><rect x="694.6" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (225 samples, 0.08%)</title><rect x="694.6" y="419.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="697.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (107 samples, 0.04%)</title><rect x="695.5" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.5" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (107 samples, 0.04%)</title><rect x="695.5" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.5" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (107 samples, 0.04%)</title><rect x="695.5" y="403.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="698.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (415 samples, 0.14%)</title><rect x="696.0" y="451.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$153/1652861992.get (415 samples, 0.14%)</title><rect x="696.0" y="435.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (415 samples, 0.14%)</title><rect x="696.0" y="419.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (415 samples, 0.14%)</title><rect x="696.0" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (414 samples, 0.14%)</title><rect x="696.0" y="387.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.0" y="398.0"></text>
</g>
<g>
<title>byte[] (385 samples, 0.13%)</title><rect x="696.1" y="371.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="699.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1444997003.accept (165 samples, 0.06%)</title><rect x="697.6" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (165 samples, 0.06%)</title><rect x="697.6" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$209/399872247.run (165 samples, 0.06%)</title><rect x="697.6" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (165 samples, 0.06%)</title><rect x="697.6" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (165 samples, 0.06%)</title><rect x="697.6" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (165 samples, 0.06%)</title><rect x="697.6" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (165 samples, 0.06%)</title><rect x="697.6" y="563.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.6" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (165 samples, 0.06%)</title><rect x="697.6" y="547.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="700.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (367 samples, 0.13%)</title><rect x="698.3" y="675.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.3" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (367 samples, 0.13%)</title><rect x="698.3" y="659.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="701.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (186 samples, 0.06%)</title><rect x="699.8" y="675.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (101 samples, 0.03%)</title><rect x="699.8" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (101 samples, 0.03%)</title><rect x="699.8" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (101 samples, 0.03%)</title><rect x="699.8" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (101 samples, 0.03%)</title><rect x="699.8" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (101 samples, 0.03%)</title><rect x="699.8" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (101 samples, 0.03%)</title><rect x="699.8" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.8" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (101 samples, 0.03%)</title><rect x="699.8" y="563.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="702.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (85 samples, 0.03%)</title><rect x="700.2" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.2" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (85 samples, 0.03%)</title><rect x="700.2" y="643.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="703.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (680 samples, 0.23%)</title><rect x="700.6" y="675.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$162/747915710.run (356 samples, 0.12%)</title><rect x="700.6" y="659.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (356 samples, 0.12%)</title><rect x="700.6" y="643.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (356 samples, 0.12%)</title><rect x="700.6" y="627.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (356 samples, 0.12%)</title><rect x="700.6" y="611.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (356 samples, 0.12%)</title><rect x="700.6" y="595.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="703.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (356 samples, 0.12%)</title><rect x="700.6" y="579.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/2066195330.run (356 samples, 0.12%)</title><rect x="700.6" y="563.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (356 samples, 0.12%)</title><rect x="700.6" y="547.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="703.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (356 samples, 0.12%)</title><rect x="700.6" y="531.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (356 samples, 0.12%)</title><rect x="700.6" y="515.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (241 samples, 0.08%)</title><rect x="700.6" y="499.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (241 samples, 0.08%)</title><rect x="700.6" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (241 samples, 0.08%)</title><rect x="700.6" y="467.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/812446698.linkToTargetMethod (174 samples, 0.06%)</title><rect x="700.6" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1311146128.invoke (174 samples, 0.06%)</title><rect x="700.6" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (174 samples, 0.06%)</title><rect x="700.6" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (174 samples, 0.06%)</title><rect x="700.6" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (174 samples, 0.06%)</title><rect x="700.6" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.6" y="398.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.06%)</title><rect x="700.6" y="371.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="703.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (67 samples, 0.02%)</title><rect x="701.3" y="451.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.02%)</title><rect x="701.3" y="435.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.02%)</title><rect x="701.3" y="419.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$216/643139202.get$Lambda (67 samples, 0.02%)</title><rect x="701.3" y="403.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$216 (67 samples, 0.02%)</title><rect x="701.3" y="387.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="704.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (115 samples, 0.04%)</title><rect x="701.5" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (115 samples, 0.04%)</title><rect x="701.5" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (115 samples, 0.04%)</title><rect x="701.5" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (115 samples, 0.04%)</title><rect x="701.5" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (115 samples, 0.04%)</title><rect x="701.5" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (115 samples, 0.04%)</title><rect x="701.5" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (113 samples, 0.04%)</title><rect x="701.5" y="403.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="704.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$166/52281761.run (324 samples, 0.11%)</title><rect x="702.0" y="659.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (324 samples, 0.11%)</title><rect x="702.0" y="643.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (134 samples, 0.05%)</title><rect x="702.0" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (134 samples, 0.05%)</title><rect x="702.0" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$217/397507893.get$Lambda (134 samples, 0.05%)</title><rect x="702.0" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$217 (134 samples, 0.05%)</title><rect x="702.0" y="579.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="705.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (190 samples, 0.07%)</title><rect x="702.5" y="627.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (190 samples, 0.07%)</title><rect x="702.5" y="611.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (190 samples, 0.07%)</title><rect x="702.5" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (190 samples, 0.07%)</title><rect x="702.5" y="579.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="705.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (838 samples, 0.29%)</title><rect x="703.3" y="675.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.3" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (208 samples, 0.07%)</title><rect x="703.3" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.3" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (208 samples, 0.07%)</title><rect x="703.3" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.3" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (208 samples, 0.07%)</title><rect x="703.3" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.3" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (208 samples, 0.07%)</title><rect x="703.3" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.3" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (208 samples, 0.07%)</title><rect x="703.3" y="595.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="706.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (630 samples, 0.22%)</title><rect x="704.1" y="659.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (147 samples, 0.05%)</title><rect x="704.1" y="643.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (147 samples, 0.05%)</title><rect x="704.1" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$268/155122240.get$Lambda (147 samples, 0.05%)</title><rect x="704.1" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$268 (147 samples, 0.05%)</title><rect x="704.1" y="595.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="707.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (483 samples, 0.17%)</title><rect x="704.7" y="643.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.7" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (213 samples, 0.07%)</title><rect x="704.7" y="627.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="707.7" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (270 samples, 0.09%)</title><rect x="705.6" y="627.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.6" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (270 samples, 0.09%)</title><rect x="705.6" y="611.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.6" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (270 samples, 0.09%)</title><rect x="705.6" y="595.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="708.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (770 samples, 0.26%)</title><rect x="706.7" y="675.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.7" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (431 samples, 0.15%)</title><rect x="706.9" y="659.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (181 samples, 0.06%)</title><rect x="706.9" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.9" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (181 samples, 0.06%)</title><rect x="706.9" y="627.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="709.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (250 samples, 0.09%)</title><rect x="707.7" y="643.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.7" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (250 samples, 0.09%)</title><rect x="707.7" y="627.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="710.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (279 samples, 0.10%)</title><rect x="708.7" y="659.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (279 samples, 0.10%)</title><rect x="708.7" y="643.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="711.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (216 samples, 0.07%)</title><rect x="709.8" y="675.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (216 samples, 0.07%)</title><rect x="709.8" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (216 samples, 0.07%)</title><rect x="709.8" y="643.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (216 samples, 0.07%)</title><rect x="709.8" y="627.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (68 samples, 0.02%)</title><rect x="709.8" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.8" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (68 samples, 0.02%)</title><rect x="709.8" y="595.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="712.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (148 samples, 0.05%)</title><rect x="710.1" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (148 samples, 0.05%)</title><rect x="710.1" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (148 samples, 0.05%)</title><rect x="710.1" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (148 samples, 0.05%)</title><rect x="710.1" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (148 samples, 0.05%)</title><rect x="710.1" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (148 samples, 0.05%)</title><rect x="710.1" y="531.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="713.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (79 samples, 0.03%)</title><rect x="710.7" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (79 samples, 0.03%)</title><rect x="710.7" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (79 samples, 0.03%)</title><rect x="710.7" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (79 samples, 0.03%)</title><rect x="710.7" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (70 samples, 0.02%)</title><rect x="710.7" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (70 samples, 0.02%)</title><rect x="710.7" y="595.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="713.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (103 samples, 0.04%)</title><rect x="711.0" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (103 samples, 0.04%)</title><rect x="711.0" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (103 samples, 0.04%)</title><rect x="711.0" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (103 samples, 0.04%)</title><rect x="711.0" y="627.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="714.0" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (66 samples, 0.02%)</title><rect x="711.4" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (66 samples, 0.02%)</title><rect x="711.4" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (66 samples, 0.02%)</title><rect x="711.4" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (65 samples, 0.02%)</title><rect x="711.4" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.4" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (118,256 samples, 40.54%)</title><rect x="711.7" y="691.0" width="478.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.7" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3,295 samples, 1.13%)</title><rect x="711.7" y="675.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.7" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (3,295 samples, 1.13%)</title><rect x="711.7" y="659.0" width="13.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="714.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (114,961 samples, 39.41%)</title><rect x="725.0" y="675.0" width="465.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.0" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (114,961 samples, 39.41%)</title><rect x="725.0" y="659.0" width="465.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.0" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (114,921 samples, 39.39%)</title><rect x="725.0" y="643.0" width="464.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.0" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (20,209 samples, 6.93%)</title><rect x="725.0" y="627.0" width="81.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="728.0" y="638.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (20,209 samples, 6.93%)</title><rect x="725.0" y="611.0" width="81.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.0" y="622.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (14,158 samples, 4.85%)</title><rect x="725.0" y="595.0" width="57.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.0" y="606.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6,629 samples, 2.27%)</title><rect x="725.0" y="579.0" width="26.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.0" y="590.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (6,629 samples, 2.27%)</title><rect x="725.0" y="563.0" width="26.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.0" y="574.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,629 samples, 2.27%)</title><rect x="725.0" y="547.0" width="26.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.0" y="558.0">j..</text>
</g>
<g>
<title>java.lang.String (2,375 samples, 0.81%)</title><rect x="725.0" y="531.0" width="9.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="728.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,254 samples, 1.46%)</title><rect x="734.6" y="531.0" width="17.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.6" y="542.0"></text>
</g>
<g>
<title>byte[] (4,145 samples, 1.42%)</title><rect x="734.6" y="515.0" width="16.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="737.6" y="526.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.04%)</title><rect x="751.4" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="754.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3,435 samples, 1.18%)</title><rect x="751.8" y="579.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,435 samples, 1.18%)</title><rect x="751.8" y="563.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,435 samples, 1.18%)</title><rect x="751.8" y="547.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,435 samples, 1.18%)</title><rect x="751.8" y="531.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1,208 samples, 0.41%)</title><rect x="751.8" y="515.0" width="4.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="754.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,227 samples, 0.76%)</title><rect x="756.7" y="515.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.7" y="526.0"></text>
</g>
<g>
<title>byte[] (2,227 samples, 0.76%)</title><rect x="756.7" y="499.0" width="9.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="759.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (4,094 samples, 1.40%)</title><rect x="765.7" y="579.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/210147905.linkToTargetMethod (4,051 samples, 1.39%)</title><rect x="765.7" y="563.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,051 samples, 1.39%)</title><rect x="765.7" y="547.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer$$Lambda$112/285921815.get$Lambda (4,051 samples, 1.39%)</title><rect x="765.7" y="531.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.7" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kate.moreva.MySimpleHttpServer$$Lambda$112 (4,051 samples, 1.39%)</title><rect x="765.7" y="515.0" width="16.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="768.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6,051 samples, 2.07%)</title><rect x="782.3" y="595.0" width="24.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.3" y="606.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (6,051 samples, 2.07%)</title><rect x="782.3" y="579.0" width="24.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.3" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,051 samples, 2.07%)</title><rect x="782.3" y="563.0" width="24.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.3" y="574.0">j..</text>
</g>
<g>
<title>java.lang.String (2,871 samples, 0.98%)</title><rect x="782.3" y="547.0" width="11.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="785.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,180 samples, 1.09%)</title><rect x="793.9" y="547.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.9" y="558.0"></text>
</g>
<g>
<title>byte[] (3,180 samples, 1.09%)</title><rect x="793.9" y="531.0" width="12.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="796.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (54,237 samples, 18.59%)</title><rect x="806.8" y="627.0" width="219.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.8" y="638.0">one/nio/http/HttpSession.pars..</text>
</g>
<g>
<title>one.nio.http.Request (6,679 samples, 2.29%)</title><rect x="806.8" y="611.0" width="27.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="809.8" y="622.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12,316 samples, 4.22%)</title><rect x="833.8" y="611.0" width="49.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.8" y="622.0">one/n..</text>
</g>
<g>
<title>java.lang.String[] (9,301 samples, 3.19%)</title><rect x="833.8" y="595.0" width="37.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="836.8" y="606.0">jav..</text>
</g>
<g>
<title>java.lang.String[] (3,015 samples, 1.03%)</title><rect x="871.4" y="595.0" width="12.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="874.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35,242 samples, 12.08%)</title><rect x="883.6" y="611.0" width="142.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="886.6" y="622.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (35,242 samples, 12.08%)</title><rect x="883.6" y="595.0" width="142.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="886.6" y="606.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>char[] (10,909 samples, 3.74%)</title><rect x="883.6" y="579.0" width="44.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="886.6" y="590.0">char[]</text>
</g>
<g>
<title>char[] (7,354 samples, 2.52%)</title><rect x="927.7" y="579.0" width="29.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="930.7" y="590.0">ch..</text>
</g>
<g>
<title>java.lang.String (2,929 samples, 1.00%)</title><rect x="957.5" y="579.0" width="11.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="960.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14,050 samples, 4.82%)</title><rect x="969.3" y="579.0" width="56.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.3" y="590.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14,050 samples, 4.82%)</title><rect x="969.3" y="563.0" width="56.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.3" y="574.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14,050 samples, 4.82%)</title><rect x="969.3" y="547.0" width="56.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.3" y="558.0">java/l..</text>
</g>
<g>
<title>byte[] (12,039 samples, 4.13%)</title><rect x="969.3" y="531.0" width="48.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="972.3" y="542.0">byte[]</text>
</g>
<g>
<title>byte[] (2,011 samples, 0.69%)</title><rect x="1018.0" y="531.0" width="8.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1021.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (396 samples, 0.14%)</title><rect x="1026.1" y="627.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.1" y="638.0"></text>
</g>
<g>
<title>byte[] (396 samples, 0.14%)</title><rect x="1026.1" y="611.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1029.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,561 samples, 0.54%)</title><rect x="1027.7" y="627.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,561 samples, 0.54%)</title><rect x="1027.7" y="611.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,561 samples, 0.54%)</title><rect x="1027.7" y="595.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1030.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (836 samples, 0.29%)</title><rect x="1027.7" y="579.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1030.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (725 samples, 0.25%)</title><rect x="1031.1" y="579.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.1" y="590.0"></text>
</g>
<g>
<title>byte[] (725 samples, 0.25%)</title><rect x="1031.1" y="563.0" width="2.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1034.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38,518 samples, 13.20%)</title><rect x="1034.0" y="627.0" width="155.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1037.0" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (38,518 samples, 13.20%)</title><rect x="1034.0" y="611.0" width="155.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.0" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (15,610 samples, 5.35%)</title><rect x="1034.0" y="595.0" width="63.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1037.0" y="606.0">char[]</text>
</g>
<g>
<title>char[] (2,334 samples, 0.80%)</title><rect x="1097.2" y="595.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1100.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (7,203 samples, 2.47%)</title><rect x="1106.6" y="595.0" width="29.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1109.6" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13,371 samples, 4.58%)</title><rect x="1135.8" y="595.0" width="54.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.8" y="606.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13,371 samples, 4.58%)</title><rect x="1135.8" y="579.0" width="54.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.8" y="590.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13,371 samples, 4.58%)</title><rect x="1135.8" y="563.0" width="54.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.8" y="574.0">java/..</text>
</g>
<g>
<title>byte[] (13,371 samples, 4.58%)</title><rect x="1135.8" y="547.0" width="54.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1138.8" y="558.0">byte[]</text>
</g>
</g>
</svg>
