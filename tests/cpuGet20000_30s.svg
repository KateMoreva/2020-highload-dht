<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (2,778 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=30052] (1 samples, 0.04%)</title><rect x="10.0" y="899.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="10.0" y="883.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="10.0" y="867.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.04%)</title><rect x="10.0" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.04%)</title><rect x="10.0" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.04%)</title><rect x="10.0" y="819.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.04%)</title><rect x="10.0" y="803.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.04%)</title><rect x="10.0" y="787.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (1 samples, 0.04%)</title><rect x="10.0" y="771.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.04%)</title><rect x="10.0" y="755.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.04%)</title><rect x="10.0" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.04%)</title><rect x="10.0" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.04%)</title><rect x="10.0" y="707.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>[G1 Conc#0 tid=30045] (102 samples, 3.67%)</title><rect x="10.4" y="899.0" width="43.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.4" y="910.0">[G1 ..</text>
</g>
<g>
<title>start_thread (102 samples, 3.67%)</title><rect x="10.4" y="883.0" width="43.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.4" y="894.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (102 samples, 3.67%)</title><rect x="10.4" y="867.0" width="43.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.4" y="878.0">thre..</text>
</g>
<g>
<title>GangWorker::loop() (102 samples, 3.67%)</title><rect x="10.4" y="851.0" width="43.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.4" y="862.0">Gang..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (59 samples, 2.12%)</title><rect x="10.4" y="835.0" width="25.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.4" y="846.0">G..</text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (59 samples, 2.12%)</title><rect x="10.4" y="819.0" width="25.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.4" y="830.0">G..</text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.394] (1 samples, 0.04%)</title><rect x="10.4" y="803.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.4" y="814.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (58 samples, 2.09%)</title><rect x="10.8" y="803.0" width="24.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.8" y="814.0">G..</text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (44 samples, 1.58%)</title><rect x="16.8" y="787.0" width="18.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="19.8" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (34 samples, 1.22%)</title><rect x="21.0" y="771.0" width="14.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.0" y="782.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (43 samples, 1.55%)</title><rect x="35.5" y="835.0" width="18.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="38.5" y="846.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (43 samples, 1.55%)</title><rect x="35.5" y="819.0" width="18.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="38.5" y="830.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (41 samples, 1.48%)</title><rect x="35.5" y="803.0" width="17.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="38.5" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (13 samples, 0.47%)</title><rect x="47.4" y="787.0" width="5.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="50.4" y="798.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (1 samples, 0.04%)</title><rect x="50.8" y="771.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="53.8" y="782.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (4 samples, 0.14%)</title><rect x="51.2" y="771.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="54.2" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;TypeArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.07%)</title><rect x="52.9" y="803.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="55.9" y="814.0"></text>
</g>
<g>
<title>[G1 Conc#1 tid=27718] (102 samples, 3.67%)</title><rect x="53.8" y="899.0" width="43.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="56.8" y="910.0">[G1 ..</text>
</g>
<g>
<title>start_thread (102 samples, 3.67%)</title><rect x="53.8" y="883.0" width="43.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="56.8" y="894.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (102 samples, 3.67%)</title><rect x="53.8" y="867.0" width="43.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="56.8" y="878.0">thre..</text>
</g>
<g>
<title>GangWorker::loop() (102 samples, 3.67%)</title><rect x="53.8" y="851.0" width="43.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="56.8" y="862.0">Gang..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (60 samples, 2.16%)</title><rect x="53.8" y="835.0" width="25.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="56.8" y="846.0">G..</text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (59 samples, 2.12%)</title><rect x="53.8" y="819.0" width="25.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="56.8" y="830.0">G..</text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.394] (1 samples, 0.04%)</title><rect x="53.8" y="803.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="56.8" y="814.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (52 samples, 1.87%)</title><rect x="54.2" y="803.0" width="22.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="57.2" y="814.0">G..</text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (1 samples, 0.04%)</title><rect x="57.6" y="787.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="60.6" y="798.0"></text>
</g>
<g>
<title>__getrusage (1 samples, 0.04%)</title><rect x="57.6" y="771.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="60.6" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="57.6" y="755.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="60.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="57.6" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="60.6" y="750.0"></text>
</g>
<g>
<title>sys_getrusage (1 samples, 0.04%)</title><rect x="57.6" y="723.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="60.6" y="734.0"></text>
</g>
<g>
<title>SYSC_getrusage (1 samples, 0.04%)</title><rect x="57.6" y="707.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="60.6" y="718.0"></text>
</g>
<g>
<title>getrusage (1 samples, 0.04%)</title><rect x="57.6" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.6" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="57.6" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="60.6" y="686.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.07%)</title><rect x="58.0" y="787.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="61.0" y="798.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (41 samples, 1.48%)</title><rect x="58.8" y="787.0" width="17.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="61.8" y="798.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.04%)</title><rect x="61.8" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="64.8" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (33 samples, 1.19%)</title><rect x="62.2" y="771.0" width="14.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="65.2" y="782.0"></text>
</g>
<g>
<title>G1CMTask::drain_satb_buffers() [clone .part.94] (1 samples, 0.04%)</title><rect x="76.3" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="79.3" y="814.0"></text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (1 samples, 0.04%)</title><rect x="76.3" y="787.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="79.3" y="798.0"></text>
</g>
<g>
<title>os::elapsedVTime() (1 samples, 0.04%)</title><rect x="76.3" y="771.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="79.3" y="782.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (5 samples, 0.18%)</title><rect x="76.7" y="803.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="79.7" y="814.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (1 samples, 0.04%)</title><rect x="78.8" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="81.8" y="830.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="79.2" y="835.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="82.2" y="846.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (1 samples, 0.04%)</title><rect x="79.2" y="819.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="82.2" y="830.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (41 samples, 1.48%)</title><rect x="79.7" y="835.0" width="17.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="82.7" y="846.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (41 samples, 1.48%)</title><rect x="79.7" y="819.0" width="17.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="82.7" y="830.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (38 samples, 1.37%)</title><rect x="79.7" y="803.0" width="16.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="82.7" y="814.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.04%)</title><rect x="90.7" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="93.7" y="798.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.04%)</title><rect x="91.1" y="787.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="94.1" y="798.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (1 samples, 0.04%)</title><rect x="91.6" y="787.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="94.6" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (9 samples, 0.32%)</title><rect x="92.0" y="787.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="95.0" y="798.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (3 samples, 0.11%)</title><rect x="94.5" y="771.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="97.5" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.07%)</title><rect x="95.8" y="803.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="98.8" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;TypeArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="96.7" y="803.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="99.7" y="814.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=30043] (3 samples, 0.11%)</title><rect x="97.1" y="899.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="100.1" y="910.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.11%)</title><rect x="97.1" y="883.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="100.1" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.11%)</title><rect x="97.1" y="867.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="100.1" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.11%)</title><rect x="97.1" y="851.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="100.1" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.07%)</title><rect x="97.1" y="835.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="100.1" y="846.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="97.1" y="819.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="100.1" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.04%)</title><rect x="97.1" y="803.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="100.1" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="97.1" y="787.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="100.1" y="798.0"></text>
</g>
<g>
<title>G1EvacPhaseWithTrimTimeTracker::~G1EvacPhaseWithTrimTimeTracker() (1 samples, 0.04%)</title><rect x="97.1" y="771.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="100.1" y="782.0"></text>
</g>
<g>
<title>CompositeElapsedCounterSource::now() (1 samples, 0.04%)</title><rect x="97.1" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="100.1" y="766.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="97.5" y="819.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="100.5" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.04%)</title><rect x="97.5" y="803.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="100.5" y="814.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.04%)</title><rect x="97.5" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="100.5" y="798.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.04%)</title><rect x="97.5" y="771.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="100.5" y="782.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (1 samples, 0.04%)</title><rect x="97.5" y="755.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="100.5" y="766.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)1, (G1Mark)1&gt;::do_oop(oopDesc**) (1 samples, 0.04%)</title><rect x="97.5" y="739.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="100.5" y="750.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="97.9" y="835.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="100.9" y="846.0"></text>
</g>
<g>
<title>CompiledMethod::do_unloading_parallel(BoolObjectClosure*, bool) (1 samples, 0.04%)</title><rect x="97.9" y="819.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="100.9" y="830.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (1 samples, 0.04%)</title><rect x="97.9" y="803.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="100.9" y="814.0"></text>
</g>
<g>
<title>RelocIterator::advance_over_prefix() (1 samples, 0.04%)</title><rect x="97.9" y="787.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="100.9" y="798.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=31238] (3 samples, 0.11%)</title><rect x="98.4" y="899.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="101.4" y="910.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.04%)</title><rect x="98.4" y="883.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="101.4" y="894.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.07%)</title><rect x="98.8" y="883.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="101.8" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.07%)</title><rect x="98.8" y="867.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="101.8" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.07%)</title><rect x="98.8" y="851.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="101.8" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="98.8" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="101.8" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="98.8" y="819.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="101.8" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="98.8" y="803.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="101.8" y="814.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="99.2" y="835.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="102.2" y="846.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (1 samples, 0.04%)</title><rect x="99.2" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="102.2" y="830.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=31239] (3 samples, 0.11%)</title><rect x="99.6" y="899.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="102.6" y="910.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.11%)</title><rect x="99.6" y="883.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="102.6" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.11%)</title><rect x="99.6" y="867.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="102.6" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.11%)</title><rect x="99.6" y="851.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="102.6" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.07%)</title><rect x="99.6" y="835.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="102.6" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.07%)</title><rect x="99.6" y="819.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="102.6" y="830.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.07%)</title><rect x="99.6" y="803.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="102.6" y="814.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="100.5" y="835.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="103.5" y="846.0"></text>
</g>
<g>
<title>CompiledMethod::do_unloading_parallel(BoolObjectClosure*, bool) (1 samples, 0.04%)</title><rect x="100.5" y="819.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="103.5" y="830.0"></text>
</g>
<g>
<title>nmethod::do_unloading_oops(unsigned char*, BoolObjectClosure*) (1 samples, 0.04%)</title><rect x="100.5" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="103.5" y="814.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=31240] (3 samples, 0.11%)</title><rect x="100.9" y="899.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="103.9" y="910.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.11%)</title><rect x="100.9" y="883.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="103.9" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.11%)</title><rect x="100.9" y="867.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="103.9" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.11%)</title><rect x="100.9" y="851.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="103.9" y="862.0"></text>
</g>
<g>
<title>G1CMRemarkTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="100.9" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="103.9" y="846.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (1 samples, 0.04%)</title><rect x="100.9" y="819.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="103.9" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="100.9" y="803.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="103.9" y="814.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="101.3" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="104.3" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="101.3" y="819.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="104.3" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="101.3" y="803.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="104.3" y="814.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="101.7" y="835.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="104.7" y="846.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (1 samples, 0.04%)</title><rect x="101.7" y="819.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="104.7" y="830.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=31241] (3 samples, 0.11%)</title><rect x="102.2" y="899.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="105.2" y="910.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.11%)</title><rect x="102.2" y="883.0" width="1.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="105.2" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.11%)</title><rect x="102.2" y="867.0" width="1.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="105.2" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.11%)</title><rect x="102.2" y="851.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="105.2" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.07%)</title><rect x="102.2" y="835.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="105.2" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.07%)</title><rect x="102.2" y="819.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="105.2" y="830.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.07%)</title><rect x="102.2" y="803.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="105.2" y="814.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="103.0" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="106.0" y="846.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (1 samples, 0.04%)</title><rect x="103.0" y="819.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="106.0" y="830.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=31242] (3 samples, 0.11%)</title><rect x="103.4" y="899.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="106.4" y="910.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.11%)</title><rect x="103.4" y="883.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="106.4" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.11%)</title><rect x="103.4" y="867.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="106.4" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.11%)</title><rect x="103.4" y="851.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="106.4" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="103.4" y="835.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="106.4" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="103.4" y="819.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="106.4" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="103.4" y="803.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="106.4" y="814.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.07%)</title><rect x="103.9" y="835.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="106.9" y="846.0"></text>
</g>
<g>
<title>CompiledMethod::do_unloading_parallel(BoolObjectClosure*, bool) (1 samples, 0.04%)</title><rect x="103.9" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="106.9" y="830.0"></text>
</g>
<g>
<title>nmethod::do_unloading_oops(unsigned char*, BoolObjectClosure*) (1 samples, 0.04%)</title><rect x="103.9" y="803.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="106.9" y="814.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (1 samples, 0.04%)</title><rect x="104.3" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="107.3" y="830.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=31243] (3 samples, 0.11%)</title><rect x="104.7" y="899.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="107.7" y="910.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.11%)</title><rect x="104.7" y="883.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="107.7" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.11%)</title><rect x="104.7" y="867.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="107.7" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.11%)</title><rect x="104.7" y="851.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="107.7" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.11%)</title><rect x="104.7" y="835.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="107.7" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="104.7" y="819.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="107.7" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="104.7" y="803.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="107.7" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.07%)</title><rect x="105.1" y="819.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="108.1" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.07%)</title><rect x="105.1" y="803.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="108.1" y="814.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.04%)</title><rect x="105.1" y="787.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="108.1" y="798.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.04%)</title><rect x="105.1" y="771.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="108.1" y="782.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (1 samples, 0.04%)</title><rect x="105.1" y="755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="108.1" y="766.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)1, (G1Mark)1&gt;::do_oop(oopDesc**) (1 samples, 0.04%)</title><rect x="105.1" y="739.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="108.1" y="750.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="105.6" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="108.6" y="798.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="105.6" y="771.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="108.6" y="782.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (1 samples, 0.04%)</title><rect x="105.6" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="108.6" y="766.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (1 samples, 0.04%)</title><rect x="105.6" y="739.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="108.6" y="750.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=31244] (3 samples, 0.11%)</title><rect x="106.0" y="899.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="109.0" y="910.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.11%)</title><rect x="106.0" y="883.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="109.0" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.11%)</title><rect x="106.0" y="867.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="109.0" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.11%)</title><rect x="106.0" y="851.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="109.0" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="106.0" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="109.0" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="106.0" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="109.0" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="106.0" y="803.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="109.0" y="814.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="106.4" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="109.4" y="846.0"></text>
</g>
<g>
<title>CompiledMethod::do_unloading_parallel(BoolObjectClosure*, bool) (1 samples, 0.04%)</title><rect x="106.4" y="819.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="109.4" y="830.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (1 samples, 0.04%)</title><rect x="106.4" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="109.4" y="814.0"></text>
</g>
<g>
<title>bool clean_if_nmethod_is_unloaded&lt;CompiledIC&gt;(CompiledIC*, unsigned char*, CompiledMethod*, bool, bool) (1 samples, 0.04%)</title><rect x="106.4" y="787.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="109.4" y="798.0"></text>
</g>
<g>
<title>nmethod::is_alive() const (1 samples, 0.04%)</title><rect x="106.8" y="835.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="109.8" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=30150] (2,547 samples, 91.68%)</title><rect x="107.3" y="899.0" width="1081.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="110.3" y="910.0">[NIO Selector #6 tid=30150]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,547 samples, 91.68%)</title><rect x="107.3" y="883.0" width="1081.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.3" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (15 samples, 0.54%)</title><rect x="107.7" y="867.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.22%)</title><rect x="107.7" y="851.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.18%)</title><rect x="108.1" y="835.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.32%)</title><rect x="110.2" y="851.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.2" y="862.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.29%)</title><rect x="110.7" y="835.0" width="3.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="113.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.25%)</title><rect x="111.1" y="819.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.25%)</title><rect x="111.1" y="803.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="114.1" y="814.0"></text>
</g>
<g>
<title>sys_epoll_wait (6 samples, 0.22%)</title><rect x="111.5" y="787.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="114.5" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="111.5" y="771.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="114.5" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="111.5" y="755.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="114.5" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="111.5" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="114.5" y="750.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 0.18%)</title><rect x="111.9" y="771.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="114.9" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list (4 samples, 0.14%)</title><rect x="112.4" y="755.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="115.4" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.14%)</title><rect x="112.4" y="739.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="115.4" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (3 samples, 0.11%)</title><rect x="112.8" y="723.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="115.8" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.07%)</title><rect x="113.2" y="707.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="116.2" y="718.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="113.6" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,531 samples, 91.11%)</title><rect x="114.1" y="867.0" width="1075.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.1" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,530 samples, 91.07%)</title><rect x="114.5" y="851.0" width="1074.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.5" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,502 samples, 90.06%)</title><rect x="114.9" y="835.0" width="1062.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.9" y="846.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,501 samples, 90.03%)</title><rect x="114.9" y="819.0" width="1062.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.9" y="830.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,501 samples, 90.03%)</title><rect x="114.9" y="803.0" width="1062.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.9" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2,499 samples, 89.96%)</title><rect x="114.9" y="787.0" width="1061.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.9" y="798.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (116 samples, 4.18%)</title><rect x="114.9" y="771.0" width="49.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.9" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (115 samples, 4.14%)</title><rect x="115.3" y="755.0" width="48.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.3" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.11%)</title><rect x="115.3" y="739.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.07%)</title><rect x="115.8" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="115.8" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="116.2" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="116.2" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="116.2" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="116.2" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="116.2" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (112 samples, 4.03%)</title><rect x="116.6" y="739.0" width="47.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.6" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (111 samples, 4.00%)</title><rect x="117.0" y="723.0" width="47.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.0" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (110 samples, 3.96%)</title><rect x="117.0" y="707.0" width="46.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.0" y="718.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (110 samples, 3.96%)</title><rect x="117.0" y="691.0" width="46.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.0" y="702.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="117.0" y="675.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="120.0" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="117.0" y="659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="120.0" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.07%)</title><rect x="117.5" y="675.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="120.5" y="686.0"></text>
</g>
<g>
<title>send (107 samples, 3.85%)</title><rect x="118.3" y="675.0" width="45.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="121.3" y="686.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 3.60%)</title><rect x="121.3" y="659.0" width="42.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="124.3" y="670.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (100 samples, 3.60%)</title><rect x="121.3" y="643.0" width="42.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="124.3" y="654.0">do_s..</text>
</g>
<g>
<title>sys_sendto (96 samples, 3.46%)</title><rect x="123.0" y="627.0" width="40.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.0" y="638.0">sys..</text>
</g>
<g>
<title>SYSC_sendto (96 samples, 3.46%)</title><rect x="123.0" y="611.0" width="40.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.0" y="622.0">SYS..</text>
</g>
<g>
<title>sock_sendmsg (95 samples, 3.42%)</title><rect x="123.0" y="595.0" width="40.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="126.0" y="606.0">soc..</text>
</g>
<g>
<title>inet_sendmsg (95 samples, 3.42%)</title><rect x="123.0" y="579.0" width="40.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="126.0" y="590.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (95 samples, 3.42%)</title><rect x="123.0" y="563.0" width="40.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="126.0" y="574.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (95 samples, 3.42%)</title><rect x="123.0" y="547.0" width="40.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="126.0" y="558.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="123.4" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="126.4" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="123.4" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="126.4" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.07%)</title><rect x="123.8" y="531.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="126.8" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.07%)</title><rect x="123.8" y="515.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="126.8" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (1 samples, 0.04%)</title><rect x="124.3" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="127.3" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="124.3" y="483.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="127.3" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="124.3" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="127.3" y="478.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.07%)</title><rect x="124.7" y="531.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="127.7" y="542.0"></text>
</g>
<g>
<title>tcp_push (87 samples, 3.13%)</title><rect x="125.5" y="531.0" width="37.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="128.5" y="542.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (87 samples, 3.13%)</title><rect x="125.5" y="515.0" width="37.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="128.5" y="526.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (87 samples, 3.13%)</title><rect x="125.5" y="499.0" width="37.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="128.5" y="510.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (85 samples, 3.06%)</title><rect x="126.0" y="483.0" width="36.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="129.0" y="494.0">__t..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="126.8" y="467.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="129.8" y="478.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="127.2" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="130.2" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (79 samples, 2.84%)</title><rect x="127.7" y="467.0" width="33.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="130.7" y="478.0">ip..</text>
</g>
<g>
<title>ip_local_out (78 samples, 2.81%)</title><rect x="128.1" y="451.0" width="33.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.1" y="462.0">ip..</text>
</g>
<g>
<title>__ip_local_out (15 samples, 0.54%)</title><rect x="128.1" y="435.0" width="6.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.1" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="128.5" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="131.5" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.04%)</title><rect x="128.9" y="419.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="131.9" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.43%)</title><rect x="129.4" y="419.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="132.4" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.07%)</title><rect x="129.4" y="403.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="132.4" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="129.8" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="132.8" y="398.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="130.2" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="133.2" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="130.2" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="133.2" y="398.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (2 samples, 0.07%)</title><rect x="130.6" y="403.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="133.6" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.07%)</title><rect x="130.6" y="387.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="133.6" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="130.6" y="371.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="133.6" y="382.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.04%)</title><rect x="130.6" y="355.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="133.6" y="366.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.04%)</title><rect x="131.1" y="371.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="134.1" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (7 samples, 0.25%)</title><rect x="131.5" y="403.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.5" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.04%)</title><rect x="131.5" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="134.5" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.14%)</title><rect x="131.9" y="387.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="134.9" y="398.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (1 samples, 0.04%)</title><rect x="131.9" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="134.9" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.11%)</title><rect x="132.3" y="371.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="135.3" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.04%)</title><rect x="132.3" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="135.3" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.07%)</title><rect x="132.8" y="355.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="135.8" y="366.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (1 samples, 0.04%)</title><rect x="133.6" y="387.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="136.6" y="398.0"></text>
</g>
<g>
<title>tcp_get_timeouts?[nf_conntrack] (1 samples, 0.04%)</title><rect x="134.0" y="387.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="137.0" y="398.0"></text>
</g>
<g>
<title>ip_output (63 samples, 2.27%)</title><rect x="134.5" y="435.0" width="26.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="137.5" y="446.0">i..</text>
</g>
<g>
<title>ip_finish_output (60 samples, 2.16%)</title><rect x="134.5" y="419.0" width="25.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="137.5" y="430.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (60 samples, 2.16%)</title><rect x="134.5" y="403.0" width="25.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="137.5" y="414.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (51 samples, 1.84%)</title><rect x="135.7" y="387.0" width="21.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="138.7" y="398.0">_..</text>
</g>
<g>
<title>do_softirq.part.17 (51 samples, 1.84%)</title><rect x="135.7" y="371.0" width="21.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="138.7" y="382.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (51 samples, 1.84%)</title><rect x="135.7" y="355.0" width="21.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="138.7" y="366.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (51 samples, 1.84%)</title><rect x="135.7" y="339.0" width="21.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="138.7" y="350.0">_..</text>
</g>
<g>
<title>net_rx_action (51 samples, 1.84%)</title><rect x="135.7" y="323.0" width="21.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.7" y="334.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="136.2" y="307.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="139.2" y="318.0"></text>
</g>
<g>
<title>process_backlog (49 samples, 1.76%)</title><rect x="136.6" y="307.0" width="20.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="139.6" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (49 samples, 1.76%)</title><rect x="136.6" y="291.0" width="20.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="139.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (49 samples, 1.76%)</title><rect x="136.6" y="275.0" width="20.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="139.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (47 samples, 1.69%)</title><rect x="137.4" y="259.0" width="20.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="140.4" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="137.4" y="243.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (44 samples, 1.58%)</title><rect x="137.9" y="243.0" width="18.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="140.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (44 samples, 1.58%)</title><rect x="137.9" y="227.0" width="18.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="140.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (36 samples, 1.30%)</title><rect x="137.9" y="211.0" width="15.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="140.9" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="137.9" y="195.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (35 samples, 1.26%)</title><rect x="138.3" y="195.0" width="14.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="141.3" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.07%)</title><rect x="138.7" y="179.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="141.7" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.07%)</title><rect x="138.7" y="163.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="141.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (32 samples, 1.15%)</title><rect x="139.6" y="179.0" width="13.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.6" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (32 samples, 1.15%)</title><rect x="139.6" y="163.0" width="13.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="142.6" y="174.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.40%)</title><rect x="139.6" y="147.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="142.6" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="140.4" y="131.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="143.4" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.29%)</title><rect x="140.8" y="131.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="143.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="141.7" y="115.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="144.7" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="141.7" y="99.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.7" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="141.7" y="83.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="144.7" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.07%)</title><rect x="141.7" y="67.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.7" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="142.1" y="51.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="145.1" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="142.1" y="35.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="145.1" y="46.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="142.5" y="115.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="145.5" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="143.0" y="115.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="146.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (2 samples, 0.07%)</title><rect x="143.4" y="115.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="146.4" y="126.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.04%)</title><rect x="143.8" y="99.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="146.8" y="110.0"></text>
</g>
<g>
<title>minmax_subwin_update (1 samples, 0.04%)</title><rect x="143.8" y="83.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="146.8" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (17 samples, 0.61%)</title><rect x="144.2" y="147.0" width="7.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="147.2" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.54%)</title><rect x="145.1" y="131.0" width="6.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="148.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.54%)</title><rect x="145.1" y="115.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="148.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.50%)</title><rect x="145.1" y="99.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="148.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.50%)</title><rect x="145.1" y="83.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="148.1" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="151.0" y="99.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="154.0" y="110.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="151.4" y="147.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="154.4" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="151.9" y="147.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.9" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.07%)</title><rect x="152.3" y="147.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="155.3" y="158.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (2 samples, 0.07%)</title><rect x="153.1" y="211.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="156.1" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.18%)</title><rect x="154.0" y="211.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="157.0" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.07%)</title><rect x="154.0" y="195.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="157.0" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="154.0" y="179.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="157.0" y="190.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="154.8" y="195.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="157.8" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="154.8" y="179.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="157.8" y="190.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (1 samples, 0.04%)</title><rect x="155.3" y="195.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="158.3" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="155.3" y="179.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="158.3" y="190.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="155.7" y="195.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="158.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="156.1" y="211.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="159.1" y="222.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (1 samples, 0.04%)</title><rect x="156.5" y="243.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="159.5" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="157.0" y="243.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.0" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="157.0" y="227.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="160.0" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.22%)</title><rect x="157.4" y="387.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="160.4" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.22%)</title><rect x="157.4" y="371.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="160.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.18%)</title><rect x="157.8" y="355.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="160.8" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.14%)</title><rect x="157.8" y="339.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="160.8" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="158.2" y="323.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="161.2" y="334.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.07%)</title><rect x="158.7" y="323.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="161.7" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="159.5" y="339.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="162.5" y="350.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (1 samples, 0.04%)</title><rect x="159.9" y="419.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.9" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.07%)</title><rect x="160.4" y="419.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="163.4" y="430.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="160.8" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="163.8" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="160.8" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="163.8" y="398.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.07%)</title><rect x="161.2" y="467.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="164.2" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.07%)</title><rect x="161.2" y="451.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="164.2" y="462.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.04%)</title><rect x="162.1" y="483.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="165.1" y="494.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="162.5" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="165.5" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="162.9" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="165.9" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="163.3" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="166.3" y="606.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="163.3" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="166.3" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="163.3" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="166.3" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="163.3" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="166.3" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="163.8" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="166.8" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="163.8" y="691.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="166.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.04%)</title><rect x="164.2" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="164.2" y="755.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="164.2" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity (2,382 samples, 85.75%)</title><rect x="164.6" y="771.0" width="1011.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.6" y="782.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.entity</text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity (2,382 samples, 85.75%)</title><rect x="164.6" y="755.0" width="1011.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="167.6" y="766.0">ru/mail/polis/service/kate/moreva/MySimpleHttpServer.getEntity</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (2,382 samples, 85.75%)</title><rect x="164.6" y="739.0" width="1011.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.6" y="750.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (142 samples, 5.11%)</title><rect x="164.6" y="723.0" width="60.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.6" y="734.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (142 samples, 5.11%)</title><rect x="164.6" y="707.0" width="60.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.6" y="718.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (142 samples, 5.11%)</title><rect x="164.6" y="691.0" width="60.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.6" y="702.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (139 samples, 5.00%)</title><rect x="165.0" y="675.0" width="59.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.0" y="686.0">com/go..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (139 samples, 5.00%)</title><rect x="165.0" y="659.0" width="59.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.0" y="670.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (138 samples, 4.97%)</title><rect x="165.0" y="643.0" width="58.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.0" y="654.0">com/go..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.18%)</title><rect x="165.0" y="627.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.0" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.18%)</title><rect x="165.0" y="611.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.0" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.18%)</title><rect x="165.0" y="595.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.18%)</title><rect x="165.0" y="579.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.18%)</title><rect x="165.0" y="563.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.0" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/296787515.compare (4 samples, 0.14%)</title><rect x="165.5" y="547.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.5" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.14%)</title><rect x="165.5" y="531.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.5" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/419500242.compare (4 samples, 0.14%)</title><rect x="165.5" y="515.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.5" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.14%)</title><rect x="165.5" y="499.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="165.5" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="165.5" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.5" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="165.5" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.5" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="165.9" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.9" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="165.9" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$63/1307179279.apply (2 samples, 0.07%)</title><rect x="166.3" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (2 samples, 0.07%)</title><rect x="166.3" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.3" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.07%)</title><rect x="166.3" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.3" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.07%)</title><rect x="166.3" y="435.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.3" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="166.3" y="419.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="166.3" y="403.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.3" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="166.7" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="166.7" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="166.7" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (133 samples, 4.79%)</title><rect x="167.2" y="627.0" width="56.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.2" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (133 samples, 4.79%)</title><rect x="167.2" y="611.0" width="56.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.2" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (133 samples, 4.79%)</title><rect x="167.2" y="595.0" width="56.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.2" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (133 samples, 4.79%)</title><rect x="167.2" y="579.0" width="56.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.2" y="590.0">java/u..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (133 samples, 4.79%)</title><rect x="167.2" y="563.0" width="56.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.2" y="574.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (133 samples, 4.79%)</title><rect x="167.2" y="547.0" width="56.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.2" y="558.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (132 samples, 4.75%)</title><rect x="167.2" y="531.0" width="56.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.2" y="542.0">com/go..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable$1.next (132 samples, 4.75%)</title><rect x="167.2" y="515.0" width="56.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.2" y="526.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable$1.next (132 samples, 4.75%)</title><rect x="167.2" y="499.0" width="56.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.2" y="510.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable.getCell (132 samples, 4.75%)</title><rect x="167.2" y="483.0" width="56.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.2" y="494.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable.getOffset (41 samples, 1.48%)</title><rect x="167.2" y="467.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (41 samples, 1.48%)</title><rect x="167.2" y="451.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (41 samples, 1.48%)</title><rect x="167.2" y="435.0" width="17.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (41 samples, 1.48%)</title><rect x="167.2" y="419.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.07%)</title><rect x="167.2" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.07%)</title><rect x="167.2" y="387.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.07%)</title><rect x="167.2" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (39 samples, 1.40%)</title><rect x="168.0" y="403.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (39 samples, 1.40%)</title><rect x="168.0" y="387.0" width="16.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (39 samples, 1.40%)</title><rect x="168.0" y="371.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="171.0" y="382.0"></text>
</g>
<g>
<title>__pread64 (36 samples, 1.30%)</title><rect x="168.4" y="355.0" width="15.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="171.4" y="366.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.65%)</title><rect x="176.1" y="339.0" width="7.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="179.1" y="350.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.61%)</title><rect x="176.1" y="323.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="179.1" y="334.0"></text>
</g>
<g>
<title>sys_pread64 (13 samples, 0.47%)</title><rect x="177.8" y="307.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="180.8" y="318.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.07%)</title><rect x="177.8" y="291.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="180.8" y="302.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="177.8" y="275.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="180.8" y="286.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="177.8" y="259.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="180.8" y="270.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.40%)</title><rect x="178.6" y="291.0" width="4.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="181.6" y="302.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.36%)</title><rect x="178.6" y="275.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="181.6" y="286.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.32%)</title><rect x="179.1" y="259.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="182.1" y="270.0"></text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.29%)</title><rect x="179.5" y="243.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="182.5" y="254.0"></text>
</g>
<g>
<title>generic_file_read_iter (8 samples, 0.29%)</title><rect x="179.5" y="227.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="182.5" y="238.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.14%)</title><rect x="179.9" y="211.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="182.9" y="222.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="181.2" y="195.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="184.2" y="206.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.11%)</title><rect x="181.6" y="211.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="184.6" y="222.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.11%)</title><rect x="181.6" y="195.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="184.6" y="206.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (2 samples, 0.07%)</title><rect x="182.0" y="179.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="185.0" y="190.0"></text>
</g>
<g>
<title>__radix_tree_lookup (2 samples, 0.07%)</title><rect x="182.0" y="163.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="185.0" y="174.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="182.9" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="185.9" y="286.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="182.9" y="259.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="185.9" y="270.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="182.9" y="243.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="185.9" y="254.0"></text>
</g>
<g>
<title>sys_pread64 (1 samples, 0.04%)</title><rect x="183.3" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="186.3" y="334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.07%)</title><rect x="183.7" y="355.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="186.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (91 samples, 3.28%)</title><rect x="184.6" y="467.0" width="38.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.6" y="478.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (91 samples, 3.28%)</title><rect x="184.6" y="451.0" width="38.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.6" y="462.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="185.4" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.4" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="185.4" y="419.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.4" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="185.4" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.4" y="414.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="185.4" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.04%)</title><rect x="185.4" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.4" y="382.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="185.4" y="355.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="188.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (87 samples, 3.13%)</title><rect x="185.9" y="435.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.9" y="446.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.18%)</title><rect x="186.3" y="419.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.14%)</title><rect x="186.7" y="403.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.7" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.14%)</title><rect x="186.7" y="387.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (79 samples, 2.84%)</title><rect x="188.4" y="419.0" width="33.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.4" y="430.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (79 samples, 2.84%)</title><rect x="188.4" y="403.0" width="33.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.4" y="414.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (79 samples, 2.84%)</title><rect x="188.4" y="387.0" width="33.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.4" y="398.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.04%)</title><rect x="189.7" y="371.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="192.7" y="382.0"></text>
</g>
<g>
<title>__pread64 (74 samples, 2.66%)</title><rect x="190.1" y="371.0" width="31.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="193.1" y="382.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 1.48%)</title><rect x="204.1" y="355.0" width="17.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="207.1" y="366.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 1.48%)</title><rect x="204.1" y="339.0" width="17.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="207.1" y="350.0"></text>
</g>
<g>
<title>sys_pread64 (21 samples, 0.76%)</title><rect x="212.6" y="323.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="215.6" y="334.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.07%)</title><rect x="213.0" y="307.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="216.0" y="318.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="213.0" y="291.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="216.0" y="302.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="213.0" y="275.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="216.0" y="286.0"></text>
</g>
<g>
<title>vfs_read (18 samples, 0.65%)</title><rect x="213.9" y="307.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="216.9" y="318.0"></text>
</g>
<g>
<title>__vfs_read (17 samples, 0.61%)</title><rect x="213.9" y="291.0" width="7.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="216.9" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.04%)</title><rect x="213.9" y="275.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="216.9" y="286.0"></text>
</g>
<g>
<title>new_sync_read (16 samples, 0.58%)</title><rect x="214.3" y="275.0" width="6.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="217.3" y="286.0"></text>
</g>
<g>
<title>ext4_file_read_iter (16 samples, 0.58%)</title><rect x="214.3" y="259.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="217.3" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (16 samples, 0.58%)</title><rect x="214.3" y="243.0" width="6.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="217.3" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.18%)</title><rect x="216.0" y="227.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="219.0" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.11%)</title><rect x="216.9" y="211.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="219.9" y="222.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.18%)</title><rect x="218.1" y="227.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.1" y="238.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.18%)</title><rect x="218.1" y="211.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="221.1" y="222.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (3 samples, 0.11%)</title><rect x="219.0" y="195.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="222.0" y="206.0"></text>
</g>
<g>
<title>__radix_tree_lookup (2 samples, 0.07%)</title><rect x="219.4" y="179.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="222.4" y="190.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.07%)</title><rect x="220.3" y="227.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="223.3" y="238.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="221.1" y="291.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.1" y="302.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="221.1" y="275.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="224.1" y="286.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="221.1" y="259.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="224.1" y="270.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="221.5" y="371.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="224.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="222.0" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.0" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="222.0" y="403.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="222.4" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.04%)</title><rect x="222.4" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.04%)</title><rect x="222.8" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.8" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/296787515.compare (1 samples, 0.04%)</title><rect x="223.2" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.2" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.04%)</title><rect x="223.2" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.2" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/419500242.compare (1 samples, 0.04%)</title><rect x="223.2" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.2" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1 samples, 0.04%)</title><rect x="223.2" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.2" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="223.2" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="223.2" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.2" y="462.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="223.2" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.2" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="223.2" y="419.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.04%)</title><rect x="223.2" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$67/1047569234.apply (1 samples, 0.04%)</title><rect x="223.7" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (1 samples, 0.04%)</title><rect x="223.7" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="223.7" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.7" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="223.7" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.7" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="223.7" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="223.7" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.7" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="223.7" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="223.7" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="226.7" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="224.1" y="675.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.11%)</title><rect x="224.9" y="723.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="224.9" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.04%)</title><rect x="225.4" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="225.4" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.04%)</title><rect x="225.8" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$69/1458291170.apply (1 samples, 0.04%)</title><rect x="225.8" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$4 (1 samples, 0.04%)</title><rect x="225.8" y="675.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (1 samples, 0.04%)</title><rect x="225.8" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.8" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="225.8" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="228.8" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="225.8" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="225.8" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="225.8" y="595.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.8" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="225.8" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="225.8" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.iterator (2,237 samples, 80.53%)</title><rect x="226.2" y="723.0" width="950.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.2" y="734.0">ru/mail/polis/dao/kate/moreva/MyDAO.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (241 samples, 8.68%)</title><rect x="226.2" y="707.0" width="102.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.2" y="718.0">com/google/c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (241 samples, 8.68%)</title><rect x="226.2" y="691.0" width="102.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.2" y="702.0">com/google/c..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (236 samples, 8.50%)</title><rect x="227.1" y="675.0" width="100.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.1" y="686.0">java/util/Pr..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (236 samples, 8.50%)</title><rect x="227.1" y="659.0" width="100.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.1" y="670.0">java/util/Pr..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (1 samples, 0.04%)</title><rect x="227.1" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (235 samples, 8.46%)</title><rect x="227.5" y="643.0" width="99.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.5" y="654.0">java/util/Pr..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (235 samples, 8.46%)</title><rect x="227.5" y="627.0" width="99.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.5" y="638.0">java/util/Pr..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (235 samples, 8.46%)</title><rect x="227.5" y="611.0" width="99.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.5" y="622.0">com/google/c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (235 samples, 8.46%)</title><rect x="227.5" y="595.0" width="99.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.5" y="606.0">com/google/c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (230 samples, 8.28%)</title><rect x="227.5" y="579.0" width="97.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.5" y="590.0">com/google/..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable$1.next (229 samples, 8.24%)</title><rect x="227.9" y="563.0" width="97.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.9" y="574.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable$1.next (229 samples, 8.24%)</title><rect x="227.9" y="547.0" width="97.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.9" y="558.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable.getCell (228 samples, 8.21%)</title><rect x="228.3" y="531.0" width="96.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="231.3" y="542.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable.getOffset (90 samples, 3.24%)</title><rect x="228.8" y="515.0" width="38.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.8" y="526.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="228.8" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="228.8" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.8" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="228.8" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.8" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="228.8" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="228.8" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="228.8" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.8" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="228.8" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.04%)</title><rect x="229.2" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (1 samples, 0.04%)</title><rect x="229.2" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (88 samples, 3.17%)</title><rect x="229.6" y="499.0" width="37.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.6" y="510.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (88 samples, 3.17%)</title><rect x="229.6" y="483.0" width="37.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.6" y="494.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.22%)</title><rect x="230.0" y="467.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.0" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.22%)</title><rect x="230.0" y="451.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="231.7" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.7" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="232.2" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.2" y="446.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="232.2" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.04%)</title><rect x="232.2" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (78 samples, 2.81%)</title><rect x="232.6" y="467.0" width="33.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.6" y="478.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.07%)</title><rect x="233.0" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="233.4" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.04%)</title><rect x="233.4" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.04%)</title><rect x="233.4" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.04%)</title><rect x="233.4" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.04%)</title><rect x="233.4" y="371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (72 samples, 2.59%)</title><rect x="233.9" y="451.0" width="30.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.9" y="462.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (72 samples, 2.59%)</title><rect x="233.9" y="435.0" width="30.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.9" y="446.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (72 samples, 2.59%)</title><rect x="233.9" y="419.0" width="30.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.9" y="430.0">su..</text>
</g>
<g>
<title>__pread64 (69 samples, 2.48%)</title><rect x="234.7" y="403.0" width="29.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="237.7" y="414.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 1.15%)</title><rect x="250.4" y="387.0" width="13.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="253.4" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 1.15%)</title><rect x="250.4" y="371.0" width="13.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="253.4" y="382.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="253.8" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="256.8" y="366.0"></text>
</g>
<g>
<title>sys_pread64 (23 samples, 0.83%)</title><rect x="254.2" y="355.0" width="9.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="257.2" y="366.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.14%)</title><rect x="255.1" y="339.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="258.1" y="350.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.14%)</title><rect x="255.1" y="323.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="258.1" y="334.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.14%)</title><rect x="255.1" y="307.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="258.1" y="318.0"></text>
</g>
<g>
<title>vfs_read (17 samples, 0.61%)</title><rect x="256.8" y="339.0" width="7.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="259.8" y="350.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="256.8" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="259.8" y="334.0"></text>
</g>
<g>
<title>__vfs_read (13 samples, 0.47%)</title><rect x="257.2" y="323.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="260.2" y="334.0"></text>
</g>
<g>
<title>new_sync_read (13 samples, 0.47%)</title><rect x="257.2" y="307.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="260.2" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.43%)</title><rect x="257.6" y="291.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.6" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (11 samples, 0.40%)</title><rect x="258.1" y="275.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="261.1" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.22%)</title><rect x="258.9" y="259.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="261.9" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.14%)</title><rect x="259.3" y="243.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="262.3" y="254.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="261.0" y="243.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="264.0" y="254.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="261.5" y="259.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="264.5" y="270.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.07%)</title><rect x="261.9" y="259.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="264.9" y="270.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.07%)</title><rect x="261.9" y="243.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="264.9" y="254.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.11%)</title><rect x="262.7" y="323.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="265.7" y="334.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.11%)</title><rect x="262.7" y="307.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="265.7" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="263.2" y="291.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="266.2" y="302.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.07%)</title><rect x="263.2" y="275.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="266.2" y="286.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.04%)</title><rect x="263.6" y="259.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.6" y="270.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="264.0" y="403.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="267.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="264.4" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.4" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="264.4" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.4" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.04%)</title><rect x="264.4" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.07%)</title><rect x="264.9" y="451.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="267.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (2 samples, 0.07%)</title><rect x="264.9" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.11%)</title><rect x="265.7" y="467.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.11%)</title><rect x="265.7" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (137 samples, 4.93%)</title><rect x="267.0" y="515.0" width="58.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.0" y="526.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (137 samples, 4.93%)</title><rect x="267.0" y="499.0" width="58.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.0" y="510.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (8 samples, 0.29%)</title><rect x="268.7" y="483.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.7" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.29%)</title><rect x="268.7" y="467.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.7" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="270.4" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.4" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.11%)</title><rect x="270.8" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.8" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="271.7" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.04%)</title><rect x="271.7" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (120 samples, 4.32%)</title><rect x="272.1" y="483.0" width="51.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.1" y="494.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.18%)</title><rect x="273.4" y="467.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.07%)</title><rect x="274.6" y="451.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.6" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.07%)</title><rect x="274.6" y="435.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (110 samples, 3.96%)</title><rect x="275.5" y="467.0" width="46.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.5" y="478.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (110 samples, 3.96%)</title><rect x="275.5" y="451.0" width="46.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.5" y="462.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (110 samples, 3.96%)</title><rect x="275.5" y="435.0" width="46.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.5" y="446.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.04%)</title><rect x="275.9" y="419.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="278.9" y="430.0"></text>
</g>
<g>
<title>__pread64 (105 samples, 3.78%)</title><rect x="276.3" y="419.0" width="44.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="279.3" y="430.0">__pr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 1.66%)</title><rect x="301.4" y="403.0" width="19.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="304.4" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 1.66%)</title><rect x="301.4" y="387.0" width="19.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="304.4" y="398.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="308.2" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="311.2" y="382.0"></text>
</g>
<g>
<title>sys_pread64 (29 samples, 1.04%)</title><rect x="308.6" y="371.0" width="12.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="311.6" y="382.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.18%)</title><rect x="308.6" y="355.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="311.6" y="366.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="308.6" y="339.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="311.6" y="350.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.14%)</title><rect x="309.0" y="339.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="312.0" y="350.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.14%)</title><rect x="309.0" y="323.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="312.0" y="334.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="310.7" y="355.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.7" y="366.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.79%)</title><rect x="311.6" y="355.0" width="9.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="314.6" y="366.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="312.4" y="339.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="315.4" y="350.0"></text>
</g>
<g>
<title>__vfs_read (14 samples, 0.50%)</title><rect x="312.9" y="339.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="315.9" y="350.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.50%)</title><rect x="312.9" y="323.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="315.9" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (13 samples, 0.47%)</title><rect x="313.3" y="307.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="316.3" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.43%)</title><rect x="313.7" y="291.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="316.7" y="302.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="314.1" y="275.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="317.1" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.18%)</title><rect x="314.6" y="275.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="317.6" y="286.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="315.0" y="259.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="318.0" y="270.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="315.4" y="259.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="318.4" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.07%)</title><rect x="315.8" y="259.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="318.8" y="270.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.11%)</title><rect x="316.7" y="275.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="319.7" y="286.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.11%)</title><rect x="316.7" y="259.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="319.7" y="270.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (2 samples, 0.07%)</title><rect x="317.1" y="243.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="320.1" y="254.0"></text>
</g>
<g>
<title>__radix_tree_lookup (2 samples, 0.07%)</title><rect x="317.1" y="227.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="320.1" y="238.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.07%)</title><rect x="318.0" y="275.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="321.0" y="286.0"></text>
</g>
<g>
<title>__atime_needs_update (2 samples, 0.07%)</title><rect x="318.0" y="259.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="321.0" y="270.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.04%)</title><rect x="318.0" y="243.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="321.0" y="254.0"></text>
</g>
<g>
<title>timespec_trunc (1 samples, 0.04%)</title><rect x="318.4" y="243.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="321.4" y="254.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="318.8" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.8" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.14%)</title><rect x="319.2" y="339.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="322.2" y="350.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.14%)</title><rect x="319.2" y="323.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="322.2" y="334.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="319.2" y="307.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="322.2" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.11%)</title><rect x="319.7" y="307.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="322.7" y="318.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.04%)</title><rect x="319.7" y="291.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="322.7" y="302.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.07%)</title><rect x="320.1" y="291.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.1" y="302.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.07%)</title><rect x="320.1" y="275.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="323.1" y="286.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="320.9" y="419.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="323.9" y="430.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.07%)</title><rect x="321.4" y="419.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="324.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="322.2" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.04%)</title><rect x="322.2" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="322.6" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.04%)</title><rect x="322.6" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.18%)</title><rect x="323.1" y="483.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="324.8" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.8" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/296787515.compare (5 samples, 0.18%)</title><rect x="325.2" y="579.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.2" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.18%)</title><rect x="325.2" y="563.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="328.2" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/419500242.compare (5 samples, 0.18%)</title><rect x="325.2" y="547.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.2" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.14%)</title><rect x="325.6" y="531.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="326.0" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="326.0" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.0" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="326.0" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$63/1307179279.apply (2 samples, 0.07%)</title><rect x="326.5" y="515.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/Cell.getKey (2 samples, 0.07%)</title><rect x="326.5" y="499.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.07%)</title><rect x="326.5" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.07%)</title><rect x="326.5" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="326.5" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="326.5" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.5" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="326.9" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="326.9" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="326.9" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.9" y="398.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.11%)</title><rect x="327.3" y="675.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.11%)</title><rect x="327.3" y="659.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.11%)</title><rect x="327.3" y="643.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.11%)</title><rect x="327.3" y="627.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$60/427347478.getAsBoolean (3 samples, 0.11%)</title><rect x="327.3" y="611.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.11%)</title><rect x="327.3" y="595.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.11%)</title><rect x="327.3" y="579.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.07%)</title><rect x="327.3" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.07%)</title><rect x="327.3" y="547.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.07%)</title><rect x="327.3" y="531.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.04%)</title><rect x="327.7" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="328.1" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.1" y="574.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,903 samples, 68.50%)</title><rect x="328.6" y="707.0" width="808.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.6" y="718.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (2 samples, 0.07%)</title><rect x="328.6" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.07%)</title><rect x="328.6" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (2 samples, 0.07%)</title><rect x="328.6" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.04%)</title><rect x="329.0" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.04%)</title><rect x="329.0" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.14%)</title><rect x="329.4" y="691.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="329.8" y="675.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.07%)</title><rect x="330.3" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (1 samples, 0.04%)</title><rect x="330.7" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (1 samples, 0.04%)</title><rect x="330.7" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$62/962444348.accept (1,897 samples, 68.29%)</title><rect x="331.1" y="691.0" width="805.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.1" y="702.0">ru/mail/polis/dao/kate/moreva/MyDAO$$Lambda$62/962444348.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$2 (1,897 samples, 68.29%)</title><rect x="331.1" y="675.0" width="805.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.1" y="686.0">ru/mail/polis/dao/kate/moreva/MyDAO.lambda$iterator$2</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable.iterator (1,897 samples, 68.29%)</title><rect x="331.1" y="659.0" width="805.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.1" y="670.0">ru/mail/polis/dao/kate/moreva/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable$1.&lt;init&gt; (1,897 samples, 68.29%)</title><rect x="331.1" y="643.0" width="805.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.1" y="654.0">ru/mail/polis/dao/kate/moreva/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable.getKeyPosition (1,897 samples, 68.29%)</title><rect x="331.1" y="627.0" width="805.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.1" y="638.0">ru/mail/polis/dao/kate/moreva/SSTable.getKeyPosition</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.47%)</title><rect x="332.0" y="611.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.07%)</title><rect x="332.4" y="595.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.4" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.07%)</title><rect x="332.4" y="579.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="335.4" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.07%)</title><rect x="333.2" y="595.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.2" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.25%)</title><rect x="334.1" y="595.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.11%)</title><rect x="335.8" y="579.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.8" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="336.2" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="339.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.04%)</title><rect x="336.6" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="337.1" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.04%)</title><rect x="337.1" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable.getKey (1,882 samples, 67.75%)</title><rect x="337.5" y="611.0" width="799.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.5" y="622.0">ru/mail/polis/dao/kate/moreva/SSTable.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.14%)</title><rect x="337.9" y="595.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.9" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="338.3" y="579.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="338.8" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.8" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="338.8" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.04%)</title><rect x="339.6" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.04%)</title><rect x="340.0" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.0" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.04%)</title><rect x="340.0" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable.getOffset (619 samples, 22.28%)</title><rect x="340.5" y="595.0" width="262.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.5" y="606.0">ru/mail/polis/dao/kate/moreva/SSTab..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.14%)</title><rect x="340.5" y="579.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.14%)</title><rect x="340.5" y="563.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.14%)</title><rect x="340.5" y="547.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.5" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="341.7" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="341.7" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="341.7" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.7" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="341.7" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (615 samples, 22.14%)</title><rect x="342.2" y="579.0" width="261.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.2" y="590.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.04%)</title><rect x="345.1" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (606 samples, 21.81%)</title><rect x="345.6" y="563.0" width="257.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="348.6" y="574.0">sun/nio/ch/FileChannelImpl.readInt..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (46 samples, 1.66%)</title><rect x="346.0" y="547.0" width="19.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.0" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (46 samples, 1.66%)</title><rect x="346.0" y="531.0" width="19.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.0" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (44 samples, 1.58%)</title><rect x="346.4" y="515.0" width="18.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.4" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (28 samples, 1.01%)</title><rect x="353.2" y="499.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (28 samples, 1.01%)</title><rect x="353.2" y="483.0" width="11.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="365.1" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.04%)</title><rect x="365.5" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.5" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.04%)</title><rect x="365.5" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.5" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="365.5" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.5" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="365.5" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (547 samples, 19.69%)</title><rect x="366.0" y="547.0" width="232.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.0" y="558.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.36%)</title><rect x="371.1" y="531.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.1" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.36%)</title><rect x="371.1" y="515.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="374.1" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (2 samples, 0.07%)</title><rect x="371.1" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.29%)</title><rect x="371.9" y="499.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.9" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="374.9" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.04%)</title><rect x="374.9" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (501 samples, 18.03%)</title><rect x="375.3" y="531.0" width="212.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.3" y="542.0">sun/nio/ch/IOUtil.readIntoNa..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (498 samples, 17.93%)</title><rect x="376.1" y="515.0" width="211.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.1" y="526.0">sun/nio/ch/FileDispatcherImp..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (497 samples, 17.89%)</title><rect x="376.6" y="499.0" width="211.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.6" y="510.0">sun/nio/ch/FileDispatcherImp..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.07%)</title><rect x="380.4" y="483.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="383.4" y="494.0"></text>
</g>
<g>
<title>__pread64 (478 samples, 17.21%)</title><rect x="381.2" y="483.0" width="203.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="384.2" y="494.0">__pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (255 samples, 9.18%)</title><rect x="476.0" y="467.0" width="108.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="479.0" y="478.0">entry_SYSCALL..</text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.04%)</title><rect x="476.0" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="479.0" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (250 samples, 9.00%)</title><rect x="476.4" y="451.0" width="106.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="479.4" y="462.0">do_syscall_64</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="509.9" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="512.9" y="446.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="510.4" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="513.4" y="446.0"></text>
</g>
<g>
<title>sys_pread64 (168 samples, 6.05%)</title><rect x="510.8" y="435.0" width="71.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="513.8" y="446.0">sys_prea..</text>
</g>
<g>
<title>__fdget (17 samples, 0.61%)</title><rect x="512.1" y="419.0" width="7.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="515.1" y="430.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="512.1" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="515.1" y="414.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.58%)</title><rect x="512.5" y="403.0" width="6.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="515.5" y="414.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.58%)</title><rect x="512.5" y="387.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.5" y="398.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.18%)</title><rect x="519.3" y="419.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="522.3" y="430.0"></text>
</g>
<g>
<title>vfs_read (143 samples, 5.15%)</title><rect x="521.4" y="419.0" width="60.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="524.4" y="430.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.14%)</title><rect x="524.8" y="403.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="527.8" y="414.0"></text>
</g>
<g>
<title>__vfs_read (108 samples, 3.89%)</title><rect x="526.5" y="403.0" width="45.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="529.5" y="414.0">__vf..</text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.04%)</title><rect x="527.4" y="387.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="530.4" y="398.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.07%)</title><rect x="527.8" y="387.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="530.8" y="398.0"></text>
</g>
<g>
<title>new_sync_read (103 samples, 3.71%)</title><rect x="528.6" y="387.0" width="43.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="531.6" y="398.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter (98 samples, 3.53%)</title><rect x="530.8" y="371.0" width="41.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="533.8" y="382.0">ext..</text>
</g>
<g>
<title>generic_file_read_iter (91 samples, 3.28%)</title><rect x="533.7" y="355.0" width="38.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="536.7" y="366.0">gen..</text>
</g>
<g>
<title>copy_page_to_iter (26 samples, 0.94%)</title><rect x="542.2" y="339.0" width="11.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="545.2" y="350.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="544.4" y="323.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="547.4" y="334.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="544.8" y="323.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="547.8" y="334.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (16 samples, 0.58%)</title><rect x="545.2" y="323.0" width="6.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="548.2" y="334.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.07%)</title><rect x="552.0" y="323.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="555.0" y="334.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="552.9" y="323.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="555.9" y="334.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="553.3" y="339.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="556.3" y="350.0"></text>
</g>
<g>
<title>pagecache_get_page (34 samples, 1.22%)</title><rect x="553.7" y="339.0" width="14.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="556.7" y="350.0"></text>
</g>
<g>
<title>find_get_entry (29 samples, 1.04%)</title><rect x="555.4" y="323.0" width="12.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="558.4" y="334.0"></text>
</g>
<g>
<title>__radix_tree_lookup (1 samples, 0.04%)</title><rect x="560.5" y="307.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="563.5" y="318.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (16 samples, 0.58%)</title><rect x="560.9" y="307.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="563.9" y="318.0"></text>
</g>
<g>
<title>__radix_tree_lookup (15 samples, 0.54%)</title><rect x="561.3" y="291.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="564.3" y="302.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.04%)</title><rect x="567.7" y="323.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="570.7" y="334.0"></text>
</g>
<g>
<title>touch_atime (10 samples, 0.36%)</title><rect x="568.1" y="339.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="571.1" y="350.0"></text>
</g>
<g>
<title>__atime_needs_update (9 samples, 0.32%)</title><rect x="568.6" y="323.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="571.6" y="334.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.07%)</title><rect x="571.5" y="307.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="574.5" y="318.0"></text>
</g>
<g>
<title>timespec_trunc (1 samples, 0.04%)</title><rect x="572.0" y="291.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="575.0" y="302.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.11%)</title><rect x="572.4" y="403.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.4" y="414.0"></text>
</g>
<g>
<title>rw_verify_area (20 samples, 0.72%)</title><rect x="573.7" y="403.0" width="8.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.7" y="414.0"></text>
</g>
<g>
<title>security_file_permission (18 samples, 0.65%)</title><rect x="574.5" y="387.0" width="7.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="577.5" y="398.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.07%)</title><rect x="575.8" y="371.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="578.8" y="382.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.25%)</title><rect x="576.6" y="371.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="579.6" y="382.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.25%)</title><rect x="576.6" y="355.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="579.6" y="366.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.07%)</title><rect x="578.8" y="339.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="581.8" y="350.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="579.6" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="582.6" y="382.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.18%)</title><rect x="580.0" y="371.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="583.0" y="382.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="582.2" y="435.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="585.2" y="446.0"></text>
</g>
<g>
<title>sys_pread64 (4 samples, 0.14%)</title><rect x="582.6" y="451.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="585.6" y="462.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.11%)</title><rect x="584.3" y="483.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="587.3" y="494.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.14%)</title><rect x="585.6" y="483.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="588.6" y="494.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="587.3" y="483.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="590.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="587.7" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (16 samples, 0.58%)</title><rect x="588.1" y="531.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.1" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.32%)</title><rect x="589.4" y="515.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.4" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.14%)</title><rect x="591.5" y="499.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.14%)</title><rect x="593.2" y="515.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.2" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.04%)</title><rect x="594.5" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.5" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.04%)</title><rect x="594.5" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.04%)</title><rect x="594.5" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.5" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (1 samples, 0.04%)</title><rect x="594.5" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (8 samples, 0.29%)</title><rect x="594.9" y="531.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.9" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.22%)</title><rect x="595.3" y="515.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.3" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.11%)</title><rect x="596.6" y="499.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.04%)</title><rect x="597.9" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (10 samples, 0.36%)</title><rect x="598.3" y="547.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (8 samples, 0.29%)</title><rect x="599.2" y="531.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.2" y="542.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.07%)</title><rect x="601.7" y="515.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="604.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.04%)</title><rect x="602.5" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="603.0" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,256 samples, 45.21%)</title><rect x="603.4" y="595.0" width="533.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.4" y="606.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,251 samples, 45.03%)</title><rect x="605.5" y="579.0" width="531.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.5" y="590.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (7 samples, 0.25%)</title><rect x="612.3" y="563.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (24 samples, 0.86%)</title><rect x="615.3" y="563.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.3" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (24 samples, 0.86%)</title><rect x="615.3" y="547.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="618.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (7 samples, 0.25%)</title><rect x="615.3" y="531.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.3" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (17 samples, 0.61%)</title><rect x="618.3" y="531.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.3" y="542.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (17 samples, 0.61%)</title><rect x="618.3" y="515.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="621.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (17 samples, 0.61%)</title><rect x="618.3" y="499.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="621.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (24 samples, 0.86%)</title><rect x="625.5" y="563.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.5" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (24 samples, 0.86%)</title><rect x="625.5" y="547.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.5" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (14 samples, 0.50%)</title><rect x="629.7" y="531.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.7" y="542.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (14 samples, 0.50%)</title><rect x="629.7" y="515.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (14 samples, 0.50%)</title><rect x="629.7" y="499.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (3 samples, 0.11%)</title><rect x="635.7" y="563.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,146 samples, 41.25%)</title><rect x="637.0" y="563.0" width="486.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.0" y="574.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.07%)</title><rect x="644.6" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.6" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (19 samples, 0.68%)</title><rect x="645.4" y="547.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.4" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (18 samples, 0.65%)</title><rect x="645.9" y="531.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (13 samples, 0.47%)</title><rect x="646.3" y="515.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.3" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.04%)</title><rect x="650.5" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.07%)</title><rect x="651.0" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (2 samples, 0.07%)</title><rect x="651.0" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (2 samples, 0.07%)</title><rect x="651.8" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.8" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.07%)</title><rect x="652.7" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.07%)</title><rect x="652.7" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.7" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.07%)</title><rect x="652.7" y="483.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.7" y="494.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="652.7" y="467.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="655.7" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="653.1" y="467.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="656.1" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.04%)</title><rect x="653.5" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.5" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.04%)</title><rect x="653.5" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (1 samples, 0.04%)</title><rect x="653.5" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.5" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (1 samples, 0.04%)</title><rect x="653.5" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,069 samples, 38.48%)</title><rect x="653.9" y="547.0" width="454.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.9" y="558.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="654.8" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.8" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.11%)</title><rect x="655.2" y="531.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.11%)</title><rect x="655.2" y="515.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="658.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,060 samples, 38.16%)</title><rect x="656.5" y="531.0" width="450.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.5" y="542.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,060 samples, 38.16%)</title><rect x="656.5" y="515.0" width="450.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.5" y="526.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (4 samples, 0.14%)</title><rect x="665.8" y="499.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="668.8" y="510.0"></text>
</g>
<g>
<title>__pread64 (1,008 samples, 36.29%)</title><rect x="667.5" y="499.0" width="428.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="670.5" y="510.0">__pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (526 samples, 18.93%)</title><rect x="872.3" y="483.0" width="223.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="875.3" y="494.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (514 samples, 18.50%)</title><rect x="872.3" y="467.0" width="218.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="875.3" y="478.0">do_syscall_64</text>
</g>
<g>
<title>fput (7 samples, 0.25%)</title><rect x="945.3" y="451.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="948.3" y="462.0"></text>
</g>
<g>
<title>sys_pread64 (334 samples, 12.02%)</title><rect x="948.3" y="451.0" width="141.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="951.3" y="462.0">sys_pread64</text>
</g>
<g>
<title>__fdget (44 samples, 1.58%)</title><rect x="950.0" y="435.0" width="18.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="953.0" y="446.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="950.0" y="419.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="953.0" y="430.0"></text>
</g>
<g>
<title>__fget_light (42 samples, 1.51%)</title><rect x="950.9" y="419.0" width="17.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="953.9" y="430.0"></text>
</g>
<g>
<title>__fget (42 samples, 1.51%)</title><rect x="950.9" y="403.0" width="17.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="953.9" y="414.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.47%)</title><rect x="968.7" y="435.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="971.7" y="446.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.07%)</title><rect x="974.2" y="435.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="977.2" y="446.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="975.1" y="435.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="978.1" y="446.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="975.5" y="435.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="978.5" y="446.0"></text>
</g>
<g>
<title>vfs_read (268 samples, 9.65%)</title><rect x="976.3" y="435.0" width="113.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="979.3" y="446.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (9 samples, 0.32%)</title><rect x="978.0" y="419.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="981.0" y="430.0"></text>
</g>
<g>
<title>__vfs_read (209 samples, 7.52%)</title><rect x="981.9" y="419.0" width="88.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.9" y="430.0">__vfs_read</text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.04%)</title><rect x="982.3" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="985.3" y="414.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.07%)</title><rect x="982.7" y="403.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="985.7" y="414.0"></text>
</g>
<g>
<title>new_sync_read (205 samples, 7.38%)</title><rect x="983.6" y="403.0" width="87.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="986.6" y="414.0">new_sync_r..</text>
</g>
<g>
<title>ext4_file_read_iter (195 samples, 7.02%)</title><rect x="987.4" y="387.0" width="82.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="990.4" y="398.0">ext4_file..</text>
</g>
<g>
<title>generic_file_read_iter (173 samples, 6.23%)</title><rect x="995.5" y="371.0" width="73.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="998.5" y="382.0">generic_..</text>
</g>
<g>
<title>__atime_needs_update (1 samples, 0.04%)</title><rect x="1006.9" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1009.9" y="366.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="1007.4" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1010.4" y="366.0"></text>
</g>
<g>
<title>copy_page_to_iter (52 samples, 1.87%)</title><rect x="1007.8" y="355.0" width="22.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1010.8" y="366.0">c..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="1014.1" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1017.1" y="350.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.18%)</title><rect x="1014.6" y="339.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1017.6" y="350.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (29 samples, 1.04%)</title><rect x="1016.7" y="339.0" width="12.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1019.7" y="350.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.07%)</title><rect x="1029.0" y="339.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1032.0" y="350.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="1029.9" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1032.9" y="366.0"></text>
</g>
<g>
<title>pagecache_get_page (64 samples, 2.30%)</title><rect x="1030.3" y="355.0" width="27.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1033.3" y="366.0">p..</text>
</g>
<g>
<title>find_get_entry (58 samples, 2.09%)</title><rect x="1032.4" y="339.0" width="24.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1035.4" y="350.0">f..</text>
</g>
<g>
<title>radix_tree_lookup_slot (33 samples, 1.19%)</title><rect x="1043.0" y="323.0" width="14.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1046.0" y="334.0"></text>
</g>
<g>
<title>__radix_tree_lookup (33 samples, 1.19%)</title><rect x="1043.0" y="307.0" width="14.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1046.0" y="318.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.04%)</title><rect x="1057.0" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1060.0" y="350.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="1057.5" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1060.5" y="366.0"></text>
</g>
<g>
<title>touch_atime (26 samples, 0.94%)</title><rect x="1057.9" y="355.0" width="11.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1060.9" y="366.0"></text>
</g>
<g>
<title>__atime_needs_update (20 samples, 0.72%)</title><rect x="1060.0" y="339.0" width="8.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1063.0" y="350.0"></text>
</g>
<g>
<title>current_kernel_time64 (2 samples, 0.07%)</title><rect x="1063.0" y="323.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1066.0" y="334.0"></text>
</g>
<g>
<title>current_time (9 samples, 0.32%)</title><rect x="1063.8" y="323.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1066.8" y="334.0"></text>
</g>
<g>
<title>current_kernel_time64 (3 samples, 0.11%)</title><rect x="1065.1" y="307.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1068.1" y="318.0"></text>
</g>
<g>
<title>timespec_trunc (3 samples, 0.11%)</title><rect x="1066.4" y="307.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1069.4" y="318.0"></text>
</g>
<g>
<title>timespec_trunc (2 samples, 0.07%)</title><rect x="1067.7" y="323.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1070.7" y="334.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.04%)</title><rect x="1068.5" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1071.5" y="350.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.07%)</title><rect x="1068.9" y="371.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1071.9" y="382.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.04%)</title><rect x="1069.8" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1072.8" y="382.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.04%)</title><rect x="1070.2" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1073.2" y="398.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.25%)</title><rect x="1070.6" y="419.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1073.6" y="430.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.04%)</title><rect x="1073.6" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1076.6" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (38 samples, 1.37%)</title><rect x="1074.0" y="419.0" width="16.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1077.0" y="430.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="1074.9" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1077.9" y="414.0"></text>
</g>
<g>
<title>security_file_permission (35 samples, 1.26%)</title><rect x="1075.3" y="403.0" width="14.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1078.3" y="414.0"></text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.25%)</title><rect x="1077.9" y="387.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1080.9" y="398.0"></text>
</g>
<g>
<title>apparmor_file_permission (12 samples, 0.43%)</title><rect x="1080.8" y="387.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1083.8" y="398.0"></text>
</g>
<g>
<title>common_file_perm (12 samples, 0.43%)</title><rect x="1080.8" y="371.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1083.8" y="382.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.07%)</title><rect x="1085.1" y="355.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1088.1" y="366.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="1085.9" y="387.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1088.9" y="398.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.32%)</title><rect x="1086.4" y="387.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1089.4" y="398.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="1090.2" y="451.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1093.2" y="462.0"></text>
</g>
<g>
<title>sys_pread64 (12 samples, 0.43%)</title><rect x="1090.6" y="467.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1093.6" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (10 samples, 0.36%)</title><rect x="1095.7" y="499.0" width="4.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1098.7" y="510.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (14 samples, 0.50%)</title><rect x="1099.9" y="499.0" width="6.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1102.9" y="510.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.04%)</title><rect x="1105.9" y="499.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1108.9" y="510.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="1106.3" y="499.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1109.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.11%)</title><rect x="1106.7" y="531.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1109.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (21 samples, 0.76%)</title><rect x="1108.0" y="547.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1111.0" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.25%)</title><rect x="1108.4" y="531.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1111.4" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.14%)</title><rect x="1109.7" y="515.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (13 samples, 0.47%)</title><rect x="1111.4" y="531.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.4" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.04%)</title><rect x="1116.1" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.1" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.04%)</title><rect x="1116.1" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="1116.1" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.1" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="1116.1" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.1" y="478.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.04%)</title><rect x="1116.1" y="451.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1119.1" y="462.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (1 samples, 0.04%)</title><rect x="1116.1" y="435.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1119.1" y="446.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (1 samples, 0.04%)</title><rect x="1116.1" y="419.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1119.1" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.04%)</title><rect x="1116.5" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1119.5" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.04%)</title><rect x="1116.5" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.04%)</title><rect x="1116.5" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.5" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (1 samples, 0.04%)</title><rect x="1116.5" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (16 samples, 0.58%)</title><rect x="1116.9" y="547.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.9" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.18%)</title><rect x="1119.1" y="531.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.1" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.11%)</title><rect x="1119.9" y="515.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (6 samples, 0.22%)</title><rect x="1121.2" y="531.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1124.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (22 samples, 0.79%)</title><rect x="1123.7" y="563.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (19 samples, 0.68%)</title><rect x="1125.0" y="547.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.0" y="558.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.07%)</title><rect x="1132.2" y="531.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1135.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (9 samples, 0.32%)</title><rect x="1133.1" y="563.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1136.9" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (78 samples, 2.81%)</title><rect x="1137.3" y="707.0" width="33.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1140.3" y="718.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (78 samples, 2.81%)</title><rect x="1137.3" y="691.0" width="33.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.3" y="702.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (78 samples, 2.81%)</title><rect x="1137.3" y="675.0" width="33.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1140.3" y="686.0">co..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.07%)</title><rect x="1137.3" y="659.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.07%)</title><rect x="1137.3" y="643.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.3" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.07%)</title><rect x="1137.3" y="627.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.07%)</title><rect x="1137.3" y="611.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="1137.8" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.8" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (76 samples, 2.74%)</title><rect x="1138.2" y="659.0" width="32.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.2" y="670.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (76 samples, 2.74%)</title><rect x="1138.2" y="643.0" width="32.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.2" y="654.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (76 samples, 2.74%)</title><rect x="1138.2" y="627.0" width="32.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.2" y="638.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (76 samples, 2.74%)</title><rect x="1138.2" y="611.0" width="32.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.2" y="622.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (76 samples, 2.74%)</title><rect x="1138.2" y="595.0" width="32.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.2" y="606.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (76 samples, 2.74%)</title><rect x="1138.2" y="579.0" width="32.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.2" y="590.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (75 samples, 2.70%)</title><rect x="1138.2" y="563.0" width="31.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.2" y="574.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable$1.next (74 samples, 2.66%)</title><rect x="1138.6" y="547.0" width="31.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.6" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable$1.next (74 samples, 2.66%)</title><rect x="1138.6" y="531.0" width="31.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.6" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable.getCell (74 samples, 2.66%)</title><rect x="1138.6" y="515.0" width="31.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.6" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/SSTable.getOffset (23 samples, 0.83%)</title><rect x="1138.6" y="499.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1141.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (23 samples, 0.83%)</title><rect x="1138.6" y="483.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (23 samples, 0.83%)</title><rect x="1138.6" y="467.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.07%)</title><rect x="1138.6" y="451.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.6" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.07%)</title><rect x="1138.6" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.76%)</title><rect x="1139.5" y="451.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (21 samples, 0.76%)</title><rect x="1139.5" y="435.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (21 samples, 0.76%)</title><rect x="1139.5" y="419.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (21 samples, 0.76%)</title><rect x="1139.5" y="403.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.5" y="414.0"></text>
</g>
<g>
<title>__pread64 (18 samples, 0.65%)</title><rect x="1139.9" y="387.0" width="7.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1142.9" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.40%)</title><rect x="1142.9" y="371.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.9" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.40%)</title><rect x="1142.9" y="355.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1145.9" y="366.0"></text>
</g>
<g>
<title>sys_pread64 (5 samples, 0.18%)</title><rect x="1145.4" y="339.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1148.4" y="350.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1145.4" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1148.4" y="334.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1145.4" y="307.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1148.4" y="318.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1145.4" y="291.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1148.4" y="302.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1145.8" y="323.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1148.8" y="334.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.11%)</title><rect x="1146.2" y="323.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1149.2" y="334.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.07%)</title><rect x="1146.2" y="307.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1149.2" y="318.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.07%)</title><rect x="1146.2" y="291.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1149.2" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.07%)</title><rect x="1146.2" y="275.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.2" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.07%)</title><rect x="1146.2" y="259.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1149.2" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.04%)</title><rect x="1146.2" y="243.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1149.2" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="1146.2" y="227.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1149.2" y="238.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.04%)</title><rect x="1146.7" y="243.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1149.7" y="254.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.04%)</title><rect x="1146.7" y="227.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1149.7" y="238.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.04%)</title><rect x="1146.7" y="211.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1149.7" y="222.0"></text>
</g>
<g>
<title>__radix_tree_lookup (1 samples, 0.04%)</title><rect x="1146.7" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1149.7" y="206.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="1147.1" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.1" y="318.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="1147.1" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1150.1" y="302.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.07%)</title><rect x="1147.5" y="387.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1150.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (51 samples, 1.84%)</title><rect x="1148.4" y="499.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1151.4" y="510.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (50 samples, 1.80%)</title><rect x="1148.8" y="483.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.8" y="494.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.14%)</title><rect x="1149.6" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1152.6" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.14%)</title><rect x="1149.6" y="451.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1152.6" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.11%)</title><rect x="1150.1" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1153.1" y="446.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.07%)</title><rect x="1150.5" y="419.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1153.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.07%)</title><rect x="1150.5" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (43 samples, 1.55%)</title><rect x="1151.3" y="467.0" width="18.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.3" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.07%)</title><rect x="1151.3" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1154.3" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="1151.8" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1154.8" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="1151.8" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (40 samples, 1.44%)</title><rect x="1152.2" y="451.0" width="17.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (40 samples, 1.44%)</title><rect x="1152.2" y="435.0" width="17.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (40 samples, 1.44%)</title><rect x="1152.2" y="419.0" width="17.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.2" y="430.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.04%)</title><rect x="1152.6" y="403.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1155.6" y="414.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="1152.6" y="387.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1155.6" y="398.0"></text>
</g>
<g>
<title>__pread64 (38 samples, 1.37%)</title><rect x="1153.0" y="403.0" width="16.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1156.0" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.68%)</title><rect x="1161.1" y="387.0" width="8.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1164.1" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.61%)</title><rect x="1161.1" y="371.0" width="7.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1164.1" y="382.0"></text>
</g>
<g>
<title>sys_pread64 (9 samples, 0.32%)</title><rect x="1164.5" y="355.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1167.5" y="366.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1164.9" y="339.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1167.9" y="350.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1164.9" y="323.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1167.9" y="334.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1164.9" y="307.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.9" y="318.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.25%)</title><rect x="1165.4" y="339.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1168.4" y="350.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.18%)</title><rect x="1165.4" y="323.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1168.4" y="334.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.18%)</title><rect x="1165.4" y="307.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1168.4" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.18%)</title><rect x="1165.4" y="291.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1168.4" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.14%)</title><rect x="1165.8" y="275.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1168.8" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.04%)</title><rect x="1166.6" y="259.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1169.6" y="270.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="1166.6" y="243.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1169.6" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.04%)</title><rect x="1167.1" y="259.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1170.1" y="270.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.04%)</title><rect x="1167.1" y="243.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1170.1" y="254.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.04%)</title><rect x="1167.1" y="227.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1170.1" y="238.0"></text>
</g>
<g>
<title>__radix_tree_lookup (1 samples, 0.04%)</title><rect x="1167.1" y="211.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1170.1" y="222.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="1167.5" y="323.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1170.5" y="334.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.07%)</title><rect x="1167.5" y="307.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1170.5" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="1167.5" y="291.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1170.5" y="302.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.07%)</title><rect x="1167.5" y="275.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1170.5" y="286.0"></text>
</g>
<g>
<title>sys_pread64 (2 samples, 0.07%)</title><rect x="1168.3" y="371.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1171.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="1169.2" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.04%)</title><rect x="1169.2" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1172.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.04%)</title><rect x="1169.6" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1172.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/296787515.compare (1 samples, 0.04%)</title><rect x="1170.0" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1173.0" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.04%)</title><rect x="1170.0" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.0" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/419500242.compare (1 samples, 0.04%)</title><rect x="1170.0" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.0" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1 samples, 0.04%)</title><rect x="1170.0" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1173.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="1170.0" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1173.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="1170.0" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1173.0" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="1170.0" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.0" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="1170.0" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1173.0" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="1170.0" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kate/moreva/MemTable.iterator (14 samples, 0.50%)</title><rect x="1170.5" y="707.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.5" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (12 samples, 0.43%)</title><rect x="1170.9" y="691.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (11 samples, 0.40%)</title><rect x="1170.9" y="675.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (11 samples, 0.40%)</title><rect x="1170.9" y="659.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1173.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (11 samples, 0.40%)</title><rect x="1170.9" y="643.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.9" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="1170.9" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1173.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (10 samples, 0.36%)</title><rect x="1171.3" y="627.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1174.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (10 samples, 0.36%)</title><rect x="1171.3" y="611.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1174.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.36%)</title><rect x="1171.3" y="595.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1174.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.25%)</title><rect x="1172.6" y="579.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.07%)</title><rect x="1172.6" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.18%)</title><rect x="1173.4" y="563.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.18%)</title><rect x="1173.4" y="547.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.4" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.14%)</title><rect x="1173.4" y="531.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.4" y="542.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.14%)</title><rect x="1173.4" y="515.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1176.4" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="1175.1" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (1 samples, 0.04%)</title><rect x="1175.1" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="1175.6" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1 samples, 0.04%)</title><rect x="1176.0" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1176.0" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1179.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1176.0" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1176.0" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.07%)</title><rect x="1176.4" y="787.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="1176.4" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="1176.4" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1176.8" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1179.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1176.8" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="1177.3" y="819.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1177.3" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1177.3" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (27 samples, 0.97%)</title><rect x="1177.7" y="835.0" width="11.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1180.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (26 samples, 0.94%)</title><rect x="1178.1" y="819.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.1" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.11%)</title><rect x="1180.2" y="803.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1183.2" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="1180.7" y="787.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.7" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="1181.1" y="787.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1184.1" y="798.0"></text>
</g>
<g>
<title>recv (18 samples, 0.65%)</title><rect x="1181.5" y="803.0" width="7.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1184.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.36%)</title><rect x="1184.9" y="787.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1187.9" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.36%)</title><rect x="1184.9" y="771.0" width="4.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1187.9" y="782.0"></text>
</g>
<g>
<title>sys_recvfrom (8 samples, 0.29%)</title><rect x="1185.8" y="755.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1188.8" y="766.0"></text>
</g>
<g>
<title>SYSC_recvfrom (8 samples, 0.29%)</title><rect x="1185.8" y="739.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1188.8" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (7 samples, 0.25%)</title><rect x="1185.8" y="723.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1188.8" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (6 samples, 0.22%)</title><rect x="1185.8" y="707.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1188.8" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.22%)</title><rect x="1185.8" y="691.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1188.8" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1186.2" y="675.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1189.2" y="686.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1186.2" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1189.2" y="670.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1186.2" y="643.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1189.2" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.14%)</title><rect x="1186.6" y="675.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1189.6" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="1186.6" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1189.6" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1186.6" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1189.6" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.07%)</title><rect x="1187.0" y="659.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.0" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.07%)</title><rect x="1187.0" y="643.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1190.0" y="654.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="1187.9" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.9" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="1188.3" y="707.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1191.3" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1188.3" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1191.3" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="1188.3" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.3" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="1188.3" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1191.3" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="1188.7" y="723.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1188.7" y="707.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1188.7" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1188.7" y="675.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=30056] (1 samples, 0.04%)</title><rect x="1189.2" y="899.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1192.2" y="910.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1189.2" y="883.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1192.2" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1189.2" y="867.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.2" y="878.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.04%)</title><rect x="1189.2" y="851.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.2" y="862.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.04%)</title><rect x="1189.2" y="835.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.2" y="846.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.04%)</title><rect x="1189.2" y="819.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.2" y="830.0"></text>
</g>
<g>
<title>[VM Thread tid=30048] (1 samples, 0.04%)</title><rect x="1189.6" y="899.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.6" y="910.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1189.6" y="883.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.6" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1189.6" y="867.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1192.6" y="878.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.04%)</title><rect x="1189.6" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.04%)</title><rect x="1189.6" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.6" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (1 samples, 0.04%)</title><rect x="1189.6" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.04%)</title><rect x="1189.6" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.6" y="814.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.04%)</title><rect x="1189.6" y="787.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.6" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.04%)</title><rect x="1189.6" y="771.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.6" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.04%)</title><rect x="1189.6" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.6" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadStateSet::flush() (1 samples, 0.04%)</title><rect x="1189.6" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.6" y="750.0"></text>
</g>
</g>
</svg>
