<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="341"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="341"> </text>
<g id="frames">
<g>
<title>all (378 samples, 100.00%)</title><rect x="10.0" y="307.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="318.0">all</text>
</g>
<g>
<title>[NIO Selector #3 tid=30366] (377 samples, 99.74%)</title><rect x="10.0" y="291.0" width="1176.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="302.0">[NIO Selector #3 tid=30366]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (377 samples, 99.74%)</title><rect x="10.0" y="275.0" width="1176.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="286.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (96 samples, 25.40%)</title><rect x="10.0" y="259.0" width="299.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="270.0">one/nio/net/NativeSelector.select</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (11 samples, 2.91%)</title><rect x="16.2" y="243.0" width="34.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.2" y="254.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 1.59%)</title><rect x="31.9" y="227.0" width="18.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.9" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$000 (1 samples, 0.26%)</title><rect x="47.5" y="211.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.5" y="222.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (83 samples, 21.96%)</title><rect x="50.6" y="243.0" width="259.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.6" y="254.0">one/nio/net/NativeSelector.epollWait</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.79%)</title><rect x="66.2" y="227.0" width="9.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="69.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="75.6" y="227.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="78.6" y="238.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.26%)</title><rect x="75.6" y="211.0" width="3.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="78.6" y="222.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.26%)</title><rect x="75.6" y="195.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="78.6" y="206.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.79%)</title><rect x="78.7" y="227.0" width="9.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="81.7" y="238.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 1.32%)</title><rect x="88.0" y="227.0" width="15.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="91.0" y="238.0"></text>
</g>
<g>
<title>epoll_wait (59 samples, 15.61%)</title><rect x="103.7" y="227.0" width="184.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="106.7" y="238.0">epoll_wait</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.79%)</title><rect x="287.8" y="227.0" width="9.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="290.8" y="238.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.79%)</title><rect x="287.8" y="211.0" width="9.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="290.8" y="222.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.79%)</title><rect x="287.8" y="195.0" width="9.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="290.8" y="206.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.79%)</title><rect x="287.8" y="179.0" width="9.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="290.8" y="190.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 1.06%)</title><rect x="297.2" y="227.0" width="12.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="300.2" y="238.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 1.06%)</title><rect x="297.2" y="211.0" width="12.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="300.2" y="222.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.26%)</title><rect x="297.2" y="195.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="300.2" y="206.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.79%)</title><rect x="300.3" y="195.0" width="9.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="303.3" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (281 samples, 74.34%)</title><rect x="309.7" y="259.0" width="877.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.7" y="270.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (276 samples, 73.02%)</title><rect x="315.9" y="243.0" width="861.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.9" y="254.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (192 samples, 50.79%)</title><rect x="315.9" y="227.0" width="599.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.9" y="238.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (137 samples, 36.24%)</title><rect x="340.9" y="211.0" width="427.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.9" y="222.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (137 samples, 36.24%)</title><rect x="340.9" y="195.0" width="427.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.9" y="206.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (121 samples, 32.01%)</title><rect x="340.9" y="179.0" width="377.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.9" y="190.0">RequestHandler0_status.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (115 samples, 30.42%)</title><rect x="340.9" y="163.0" width="359.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.9" y="174.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 1.32%)</title><rect x="340.9" y="147.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.53%)</title><rect x="340.9" y="131.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.79%)</title><rect x="347.1" y="131.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.79%)</title><rect x="347.1" y="115.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="350.1" y="126.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.79%)</title><rect x="347.1" y="99.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.1" y="110.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.79%)</title><rect x="347.1" y="83.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.1" y="94.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.26%)</title><rect x="347.1" y="67.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.1" y="78.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.53%)</title><rect x="350.3" y="67.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.3" y="78.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.53%)</title><rect x="350.3" y="51.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.3" y="62.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (94 samples, 24.87%)</title><rect x="356.5" y="147.0" width="293.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.5" y="158.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (25 samples, 6.61%)</title><rect x="356.5" y="131.0" width="78.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.5" y="142.0">one/nio/h..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.26%)</title><rect x="381.5" y="115.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="384.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.53%)</title><rect x="384.6" y="115.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.6" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (14 samples, 3.70%)</title><rect x="390.8" y="115.0" width="43.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.8" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.26%)</title><rect x="397.1" y="99.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.1" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.26%)</title><rect x="397.1" y="83.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.1" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.26%)</title><rect x="400.2" y="99.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.2" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.26%)</title><rect x="403.3" y="99.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.3" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 2.38%)</title><rect x="406.5" y="99.0" width="28.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.5" y="110.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 2.38%)</title><rect x="406.5" y="83.0" width="28.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.5" y="94.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 2.38%)</title><rect x="406.5" y="67.0" width="28.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.5" y="78.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (69 samples, 18.25%)</title><rect x="434.6" y="131.0" width="215.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.6" y="142.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (69 samples, 18.25%)</title><rect x="434.6" y="115.0" width="215.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.6" y="126.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (69 samples, 18.25%)</title><rect x="434.6" y="99.0" width="215.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="437.6" y="110.0">one/nio/net/Session$ArrayQue..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (69 samples, 18.25%)</title><rect x="434.6" y="83.0" width="215.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.6" y="94.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (11 samples, 2.91%)</title><rect x="450.2" y="67.0" width="34.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="453.2" y="78.0">Ja..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (11 samples, 2.91%)</title><rect x="450.2" y="51.0" width="34.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="453.2" y="62.0">jn..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.26%)</title><rect x="453.3" y="35.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="456.3" y="46.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.26%)</title><rect x="456.4" y="35.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="459.4" y="46.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (8 samples, 2.12%)</title><rect x="459.5" y="35.0" width="25.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="462.5" y="46.0">T..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 1.06%)</title><rect x="484.5" y="67.0" width="12.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="487.5" y="78.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.26%)</title><rect x="497.0" y="67.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="500.0" y="78.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.26%)</title><rect x="500.1" y="67.0" width="3.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="503.1" y="78.0"></text>
</g>
<g>
<title>send (47 samples, 12.43%)</title><rect x="503.2" y="67.0" width="146.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="506.2" y="78.0">send</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 3.97%)</title><rect x="649.9" y="147.0" width="46.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.9" y="158.0">one/..</text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 1.06%)</title><rect x="656.2" y="131.0" width="12.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.79%)</title><rect x="659.3" y="115.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 2.38%)</title><rect x="668.7" y="131.0" width="28.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.7" y="142.0">ja..</text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.53%)</title><rect x="671.8" y="115.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 1.32%)</title><rect x="678.0" y="115.0" width="15.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.0" y="126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="684.3" y="99.0" width="3.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="687.3" y="110.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.26%)</title><rect x="684.3" y="83.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="687.3" y="94.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.53%)</title><rect x="687.4" y="99.0" width="6.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="690.4" y="110.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.53%)</title><rect x="687.4" y="83.0" width="6.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="690.4" y="94.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.26%)</title><rect x="690.5" y="67.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="693.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.26%)</title><rect x="693.7" y="115.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.7" y="126.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.26%)</title><rect x="696.8" y="147.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.status (6 samples, 1.59%)</title><rect x="699.9" y="163.0" width="18.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 1.06%)</title><rect x="706.1" y="147.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.1" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.26%)</title><rect x="712.4" y="131.0" width="3.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="715.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.26%)</title><rect x="715.5" y="131.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 2.38%)</title><rect x="718.6" y="179.0" width="28.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.6" y="190.0">on..</text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 2.38%)</title><rect x="718.6" y="163.0" width="28.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.6" y="174.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 2.12%)</title><rect x="718.6" y="147.0" width="25.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.6" y="158.0">j..</text>
</g>
<g>
<title>java/lang/String.equals (8 samples, 2.12%)</title><rect x="718.6" y="131.0" width="25.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.6" y="142.0">j..</text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.79%)</title><rect x="734.2" y="115.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.2" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.26%)</title><rect x="743.6" y="147.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.26%)</title><rect x="743.6" y="131.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.26%)</title><rect x="743.6" y="115.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kate/moreva/MySimpleHttpServer.handleDefault (7 samples, 1.85%)</title><rect x="746.7" y="179.0" width="21.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.7" y="190.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 1.32%)</title><rect x="746.7" y="163.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 1.32%)</title><rect x="746.7" y="147.0" width="15.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.79%)</title><rect x="749.8" y="131.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.79%)</title><rect x="749.8" y="115.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.26%)</title><rect x="759.2" y="131.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="759.2" y="115.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.26%)</title><rect x="759.2" y="99.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.53%)</title><rect x="762.3" y="163.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.3" y="174.0"></text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (1 samples, 0.26%)</title><rect x="765.4" y="147.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (29 samples, 7.67%)</title><rect x="768.6" y="211.0" width="90.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.6" y="222.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 2.12%)</title><rect x="802.9" y="195.0" width="25.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.9" y="206.0">o..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.26%)</title><rect x="809.2" y="179.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.2" y="190.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 1.32%)</title><rect x="812.3" y="179.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.3" y="190.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 1.32%)</title><rect x="812.3" y="163.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 1.32%)</title><rect x="812.3" y="147.0" width="15.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="815.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 2.38%)</title><rect x="827.9" y="195.0" width="28.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.9" y="206.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 2.12%)</title><rect x="831.0" y="179.0" width="25.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.0" y="190.0">o..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.26%)</title><rect x="852.9" y="163.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.26%)</title><rect x="852.9" y="147.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.26%)</title><rect x="852.9" y="131.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.9" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.26%)</title><rect x="856.0" y="195.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.26%)</title><rect x="859.1" y="211.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 1.85%)</title><rect x="862.2" y="211.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.2" y="222.0">o..</text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.53%)</title><rect x="874.7" y="195.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="877.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.53%)</title><rect x="874.7" y="179.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.7" y="190.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.26%)</title><rect x="877.8" y="163.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.8" y="174.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.26%)</title><rect x="877.8" y="147.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.8" y="158.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.26%)</title><rect x="877.8" y="131.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="880.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.26%)</title><rect x="881.0" y="195.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="884.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.26%)</title><rect x="881.0" y="179.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.26%)</title><rect x="881.0" y="163.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 2.65%)</title><rect x="884.1" y="211.0" width="31.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.1" y="222.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 2.65%)</title><rect x="884.1" y="195.0" width="31.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.1" y="206.0">on..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.53%)</title><rect x="905.9" y="179.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="908.9" y="190.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.53%)</title><rect x="905.9" y="163.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.9" y="174.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.53%)</title><rect x="905.9" y="147.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.9" y="158.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.26%)</title><rect x="912.2" y="179.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.2" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (84 samples, 22.22%)</title><rect x="915.3" y="227.0" width="262.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.3" y="238.0">one/nio/net/Session.read</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (84 samples, 22.22%)</title><rect x="915.3" y="211.0" width="262.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.3" y="222.0">one/nio/net/NativeSocket.read</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 4.76%)</title><rect x="962.1" y="195.0" width="56.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="965.1" y="206.0">Java_o..</text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.26%)</title><rect x="984.0" y="179.0" width="3.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="987.0" y="190.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 2.38%)</title><rect x="987.1" y="179.0" width="28.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="990.1" y="190.0">jn..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.53%)</title><rect x="993.3" y="163.0" width="6.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="996.3" y="174.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (5 samples, 1.32%)</title><rect x="999.6" y="163.0" width="15.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1002.6" y="174.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.26%)</title><rect x="1015.2" y="179.0" width="3.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1018.2" y="190.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.26%)</title><rect x="1018.3" y="195.0" width="3.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1021.3" y="206.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 1.06%)</title><rect x="1021.4" y="195.0" width="12.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1024.4" y="206.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 1.06%)</title><rect x="1033.9" y="195.0" width="12.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1036.9" y="206.0"></text>
</g>
<g>
<title>recv (42 samples, 11.11%)</title><rect x="1046.4" y="195.0" width="131.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1049.4" y="206.0">recv</text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.79%)</title><rect x="1177.5" y="243.0" width="9.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.5" y="254.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.79%)</title><rect x="1177.5" y="227.0" width="9.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1180.5" y="238.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.53%)</title><rect x="1180.6" y="211.0" width="6.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1183.6" y="222.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=30359] (1 samples, 0.26%)</title><rect x="1186.9" y="291.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1189.9" y="302.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.26%)</title><rect x="1186.9" y="275.0" width="3.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1189.9" y="286.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.26%)</title><rect x="1186.9" y="259.0" width="3.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1189.9" y="270.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.26%)</title><rect x="1186.9" y="243.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.9" y="254.0"></text>
</g>
</g>
</svg>
